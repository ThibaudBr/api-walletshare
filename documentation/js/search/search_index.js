var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AddressEntity.html",[0,1.876,1,3.61]],["body/entities/AddressEntity.html",[0,1.737,1,3.341,2,1.47,3,0.023,4,0.027,5,0.027,6,4.78,7,3.146,8,0.095,9,0.596,10,6.85,11,4.445,12,6.85,13,2.624,14,2.823,15,1.105,16,6.137,17,7.578,18,7.578,19,7.578,20,7.578,21,2.661,22,1.63,23,6.137,24,0.361,25,0.003,26,1.19,27,3.637,28,6.324,29,7.773,30,5.891,31,7.084,32,0.22,33,3.146,34,4.967,35,2.981,36,4.958,37,4.725,38,3.841,39,4.416,40,4.297,41,3.146,42,3.146,43,3.541,44,2.844,45,4.168,46,6.084,47,3.146,48,2.844,49,4.168,50,3.146,51,2.476,52,3.146,53,3.747,54,4.958,55,1.68,56,3.146,57,3.146,58,3.146,59,3.146,60,3.146,61,2.844,62,4.168,63,3.146,64,2.989,65,4.958,66,3.146,67,4.482,68,3.146,69,0.515,70,4.487,71,2.476,72,2.52,73,3.601,74,1.544,75,2.476,76,0.868,77,2.496,78,1.629,79,5.701,80,6.928,81,0.318,82,1.518,83,0.345,84,2.377,85,0.027,86,6.686,87,0.002,88,0.002]],["title/controllers/ApiLandingPageController.html",[89,2.723,90,4.503]],["body/controllers/ApiLandingPageController.html",[3,0.037,4,0.044,5,0.044,8,0.157,24,0.274,25,0.003,26,0.982,27,2.669,32,0.162,69,0.716,81,0.333,83,0.188,85,0.044,87,0.002,88,0.002,89,2.638,90,6.045,91,2.505,92,3.738,93,5.961,94,6.547,95,5.191,96,3.498,97,2.463,98,6.547,99,1.353,100,2.063,101,6.5,102,8.052,103,4.692,104,7.191,105,5.191,106,3.299,107,5.191,108,7.191,109,5.191,110,0.311,111,0.281,112,3.862,113,1.353,114,1.882,115,5.191,116,5.191,117,5.191,118,1.95,119,3.292,120,2.687,121,3.62,122,1.447,123,6.235,124,4.692,125,8.251,126,8.251,127,3.389,128,2.85,129,6.547,130,4.692,131,3.498,132,3.76,133,2.687,134,3.76,135,2.793,136,4.692,137,5.191,138,1.666,139,0.432,140,5.191,141,7.191,142,5.191,143,5.015,144,2.308,145,5.191,146,5.191,147,5.191,148,5.191]],["title/modules/ApiLandingPageModule.html",[149,1.238,150,4.048]],["body/modules/ApiLandingPageModule.html",[3,0.033,4,0.038,5,0.038,25,0.004,69,0.777,81,0.291,83,0.277,85,0.038,87,0.002,88,0.002,90,6.441,91,3.153,92,2.053,93,4.808,94,3.596,97,3.045,122,1.263,123,6.997,124,4.097,149,1.51,150,7.944,151,2.542,152,3.664,153,4.097,154,4.097,155,4.097,156,5.568,157,6.457,158,3.318,159,5.713,160,3.929,161,2.725,162,2.725,163,4.532,164,3.929,165,3.929,166,2.959,167,5.475,168,2.542,169,4.143,170,0.957,171,2.397,172,2.959,173,4.532,174,4.732,175,1.965,176,1.911,177,1.938,178,3.554,179,5.493,180,3.425,181,3.054,182,5.493,183,3.425,184,3.283,185,5.493,186,3.425,187,3.81,188,4.143,189,3.054,190,2.874,191,1.682,192,4.097,193,3.425,194,2.959,195,2.959,196,5.002,197,5.002,198,4.858,199,3.596,200,3.596,201,3.596,202,3.81,203,3.81,204,4.532,205,4.097,206,4.097]],["title/injectables/ApiLandingPageService.html",[123,4.048,207,1.965]],["body/injectables/ApiLandingPageService.html",[3,0.04,4,0.047,5,0.047,8,0.168,24,0.25,25,0.003,26,1.016,32,0.192,69,0.708,81,0.356,83,0.272,85,0.047,87,0.002,88,0.002,92,4.149,93,5.891,94,7.266,99,1.416,100,2.104,101,6.801,102,8.278,103,6.801,110,0.451,111,0.407,112,3.703,113,1.416,114,1.935,122,1.545,123,5.685,129,4.399,130,5.012,138,1.78,139,0.627,144,1.78,170,1.171,181,3.736,187,4.661,207,2.76,208,2.721,209,5.544,210,0.314,211,3.866,212,6.653,213,6.804,214,5.544,215,5.544,216,5.544,217,5.449,218,4.19,219,5.969,220,4.19,221,1.639,222,1.692,223,3.866,224,1.607,225,4.016]],["title/modules/ApiLogModule.html",[149,1.238,156,3.221]],["body/modules/ApiLogModule.html",[3,0.044,4,0.052,5,0.052,25,0.003,69,0.75,81,0.391,83,0.22,85,0.052,87,0.002,88,0.002,91,2.94,92,2.76,97,2.087,122,1.698,149,1.852,151,3.417,152,4.494,156,6.492,158,3.635,160,4.818,161,3.663,162,3.663,164,4.818,165,4.818,166,3.977,167,5.231,168,3.417,169,5.08,170,1.287,171,2.235,174,5.803,175,2.641,176,2.569,177,2.604,178,3.203,188,5.08,190,3.863,191,2.261,194,3.977,195,3.977,196,3.977,197,3.977,198,3.863,199,4.833,200,4.833,226,6.092,227,6.092,228,6.092,229,6.092,230,4.603]],["title/injectables/ApiLogService.html",[158,1.92,207,1.965]],["body/injectables/ApiLogService.html",[3,0.039,4,0.046,5,0.046,8,0.164,24,0.28,25,0.003,32,0.19,69,0.702,81,0.347,83,0.305,85,0.046,87,0.002,88,0.002,92,4.107,99,1.392,100,2.089,110,0.505,111,0.456,113,1.392,114,1.915,118,2.033,122,1.508,138,1.737,139,0.451,149,1.251,158,2.652,170,1.143,171,3.326,172,3.533,190,3.431,207,2.715,208,2.656,210,0.306,211,3.774,212,6.605,222,1.665,223,5.161,224,2.445,231,5.412,232,7.4,233,7.4,234,5.412,235,7.4,236,7.124,237,5.412,238,5.881,239,7.4,240,7.622,241,5.412,242,4.987,243,5.592,244,6.691,245,4.089,246,2.188,247,2.058,248,5.412,249,5.412]],["title/controllers/ApiMailController.html",[89,2.723,250,4.503]],["body/controllers/ApiMailController.html",[3,0.044,4,0.052,5,0.052,8,0.187,24,0.205,25,0.003,27,2.289,32,0.139,69,0.753,81,0.395,83,0.223,85,0.052,87,0.002,88,0.002,89,3.134,91,2.976,92,3.659,96,4.154,97,2.766,99,1.519,100,1.919,110,0.369,111,0.334,112,3.501,113,1.16,114,1.706,118,2.316,119,3.909,121,4.3,122,1.718,127,4.026,128,3.385,131,4.154,132,4.465,133,3.192,134,4.465,135,3.317,136,5.573,138,1.979,139,0.513,143,4.3,222,1.387,250,6.789,251,6.407,252,6.165,253,7.3,254,5.573,255,8.075,256,6.165,257,6.165,258,5.632,259,6.805,260,5.573,261,5.573,262,6.165,263,4.659,264,6.165,265,6.165]],["title/modules/ApiMailModule.html",[149,1.238,266,4.048]],["body/modules/ApiMailModule.html",[3,0.034,4,0.04,5,0.04,25,0.004,64,1.74,69,0.787,78,2.427,81,0.301,83,0.242,85,0.04,87,0.002,88,0.002,91,3.231,92,2.124,97,3.085,122,1.307,149,1.548,151,2.63,152,3.755,156,5.632,157,6.531,158,3.356,159,5.779,160,4.026,161,2.819,162,2.819,164,4.026,165,4.026,166,3.061,167,5.098,168,2.63,169,4.245,170,0.99,171,2.456,172,3.061,174,4.849,175,2.033,176,1.977,177,2.005,178,3.122,181,3.159,184,3.396,188,4.245,189,3.159,190,2.973,191,1.74,192,4.238,193,3.543,194,3.061,195,3.061,196,4.371,197,4.371,198,4.245,199,3.72,200,3.72,201,3.72,202,3.942,203,3.942,250,6.564,251,3.72,259,7.078,260,4.238,266,7.988,267,4.238,268,4.689,269,4.238,270,4.689,271,5.628,272,4.689,273,5.628,274,4.689,275,4.689,276,3.061,277,1.489,278,3.396]],["title/injectables/ApiMailService.html",[207,1.965,259,4.048]],["body/injectables/ApiMailService.html",[3,0.044,4,0.052,5,0.052,8,0.186,24,0.267,25,0.003,32,0.181,69,0.706,81,0.394,83,0.291,85,0.052,87,0.002,88,0.002,92,4.074,99,1.516,100,1.917,110,0.483,111,0.436,113,1.157,114,1.703,122,1.713,138,1.973,139,0.671,170,1.298,181,4.142,207,2.956,208,3.017,210,0.348,211,4.287,212,6.852,213,6.983,221,1.818,222,1.383,223,4.287,224,1.782,251,7.134,253,7.285,254,7.285,255,8.068,259,6.09,261,5.556,279,6.147,280,6.147,281,6.147,282,6.395,283,6.147]],["title/controllers/AppController.html",[89,2.723,284,4.503]],["body/controllers/AppController.html",[3,0.041,4,0.048,5,0.048,8,0.173,25,0.003,26,1.031,27,2.116,32,0.128,69,0.64,81,0.365,85,0.048,87,0.002,88,0.002,89,3.896,91,2.751,97,1.952,99,1.442,113,1.072,119,3.614,122,1.589,127,3.721,128,3.13,138,1.83,139,0.475,144,1.83,263,4.307,284,6.444,285,5.699,286,8.736,287,5.699,288,7.786,289,4.609,290,9.346,291,9.346,292,5.792,293,3.197,294,5.699,295,7.665,296,7.665,297,6.273,298,5.152,299,6.444,300,5.699,301,5.699,302,4.307,303,4.791,304,5.699,305,4.307,306,4.791,307,4.791,308,5.152,309,7.829,310,5.699,311,5.699,312,3.614,313,3.427,314,4.522,315,5.699]],["title/modules/AppModule.html",[149,1.238,316,4.048]],["body/modules/AppModule.html",[3,0.026,4,0.03,5,0.03,24,0.181,25,0.003,32,0.08,38,1.562,69,0.784,81,0.228,83,0.24,85,0.03,87,0.002,88,0.002,91,2.63,93,3.125,94,2.818,99,0.668,110,0.213,111,0.192,113,0.668,122,0.99,144,1.14,149,1.854,150,6.396,151,1.992,152,3.056,156,5.089,157,5.902,158,3.033,160,3.277,161,2.136,162,2.136,164,3.277,165,3.277,166,2.319,167,4.329,168,1.992,169,3.455,170,0.75,171,1.999,172,2.319,191,1.318,194,2.319,195,2.319,196,3.558,197,3.558,198,3.455,201,2.818,251,2.818,266,6.396,276,2.319,277,1.128,284,5.574,297,6.13,298,3.211,316,8.172,317,3.211,318,3.211,319,3.211,320,6.396,321,6.396,322,6.396,323,6.396,324,6.396,325,6.396,326,3.552,327,3.552,328,5.449,329,7.435,330,3.552,331,3.552,332,2.319,333,5.449,334,3.552,335,4.581,336,3.552,337,3.552,338,3.211,339,3.552,340,2.986,341,3.552,342,3.211,343,3.211,344,3.552,345,3.552,346,5.619,347,2.986,348,3.552,349,6.63,350,4.581,351,3.552,352,2.986,353,3.552,354,3.552,355,3.552,356,3.552,357,3.552,358,3.552,359,3.211,360,2.818,361,3.552,362,3.552,363,3.552,364,3.552,365,3.552,366,3.552,367,3.552,368,6.251,369,3.552,370,0.844,371,2.477,372,2.572,373,2.572,374,2.572,375,2.572,376,4.581,377,2.986,378,2.986,379,2.818,380,3.552,381,3.552]],["title/injectables/AppService.html",[207,1.965,297,3.88]],["body/injectables/AppService.html",[3,0.055,4,0.065,5,0.065,8,0.231,25,0.003,26,1.098,32,0.171,69,0.563,81,0.489,85,0.065,87,0.003,88,0.003,99,1.736,113,1.434,122,2.124,144,2.446,207,3.385,208,3.739,286,9.327,290,6.887,291,6.887,297,6.684,382,7.619,383,7.619]],["title/controllers/AppTestE2eController.html",[89,2.723,384,4.503]],["body/controllers/AppTestE2eController.html",[3,0.031,4,0.037,5,0.037,8,0.132,22,2.427,24,0.249,25,0.003,26,0.892,27,3.248,32,0.197,64,1.618,69,0.676,81,0.279,83,0.271,85,0.037,87,0.002,88,0.002,89,3.228,91,2.103,99,1.195,106,1.742,110,0.449,111,0.405,113,1.647,114,2.115,118,1.637,119,2.763,122,1.215,138,1.399,139,0.363,144,2.809,258,3.039,297,3.156,384,5.338,385,7.679,386,7.679,387,7.749,388,4.358,389,7.441,390,5.74,391,6.35,392,8.232,393,6.35,394,9.855,395,4.358,396,5.038,397,4.358,398,3.939,399,6.155,400,4.358,401,4.358,402,4.358,403,7.248,404,4.358,405,4.358,406,4.358,407,6.35,408,5.338,409,4.358,410,4.358,411,4.358,412,2.641,413,4.358,414,4.799,415,3.939,416,3.939,417,7.679,418,3.939,419,4.358,420,3.663,421,3.039,422,3.663,423,3.663,424,3.939,425,4.358,426,4.358,427,4.358,428,4.358,429,4.358,430,3.156,431,4.358,432,4.358,433,4.358,434,6.35,435,4.358,436,4.358,437,4.358]],["title/modules/AppTestE2eModule.html",[149,1.238,438,4.25]],["body/modules/AppTestE2eModule.html",[1,4.259,3,0.031,4,0.037,5,0.037,6,5.159,25,0.003,34,3.9,64,2.346,69,0.814,81,0.278,85,0.037,87,0.002,88,0.002,91,3.05,122,1.207,149,1.461,151,2.428,152,3.545,160,3.801,161,2.604,162,2.604,164,3.801,165,3.801,276,2.827,277,1.375,316,6.887,384,6.275,385,3.64,386,3.64,387,5.406,414,6.887,415,5.713,416,3.914,422,3.64,438,7.654,439,3.914,440,3.914,441,4.33,442,4.33,443,4.33,444,4.33,445,3.709,446,3.136,447,3.272,448,4.259,449,3.272,450,3.136,451,4.259,452,3.435,453,2.746,454,3.9,455,3.64,456,4.408,457,3.435,458,4.578,459,4.127,460,3.64,461,4.259,462,3.435,463,3.136,464,4.408,465,3.64,466,4.259,467,3.272,468,2.671,469,4.008,470,3.435,471,4.259,472,3.64,473,3.156,474,3.914,475,4.408,476,3.64,477,2.908,478,3.914,479,3.471,480,1.709,481,3.136,482,2.483,483,4.578,484,3.435,485,3.435,486,3.9,487,3.435,488,4.127,489,3.272,490,4.408,491,3.272,492,3.435,493,3.914]],["title/injectables/AppTestE2eService.html",[207,1.965,414,4.048]],["body/injectables/AppTestE2eService.html",[1,1.641,3,0.018,4,0.021,5,0.021,6,4.661,8,0.074,11,1.763,15,0.725,22,0.647,24,0.199,25,0.003,26,0.852,32,0.161,34,1.502,38,1.071,64,0.904,69,0.758,76,0.672,81,0.156,83,0.217,84,1.84,85,0.021,87,0.001,88,0.001,99,0.758,100,1.989,110,0.359,111,0.324,112,1.056,113,1.25,114,1.79,122,0.679,139,0.831,144,1.925,207,1.479,208,1.195,210,0.228,221,2.949,222,2.296,277,0.773,385,6.372,386,6.372,387,5.49,389,5.42,390,3.643,398,3.643,399,4.477,412,2.494,414,3.046,420,2.047,421,1.698,422,2.047,445,1.429,446,1.763,447,1.84,448,1.641,449,1.84,450,1.763,451,1.641,452,1.932,453,1.544,454,1.502,455,2.047,456,1.698,457,1.932,458,2.919,459,1.59,460,2.047,461,1.641,462,1.932,463,1.763,464,1.698,465,2.047,466,1.641,467,1.84,468,1.502,469,1.544,470,1.932,471,1.641,472,2.047,473,1.216,474,2.201,475,1.698,476,2.047,477,1.12,478,2.201,479,1.337,480,0.961,481,1.763,482,1.396,483,1.763,484,1.932,485,1.932,486,1.502,487,1.932,488,1.59,489,1.84,490,1.698,491,1.84,492,1.932,494,2.435,495,5.996,496,4.031,497,4.031,498,1.285,499,3.968,500,5.158,501,5.158,502,5.158,503,5.158,504,5.158,505,5.158,506,5.158,507,5.158,508,5.158,509,5.158,510,5.158,511,5.158,512,3.182,513,5.158,514,3.101,515,3.367,516,5.158,517,5.158,518,5.158,519,5.158,520,5.158,521,2.435,522,2.013,523,2.435,524,2.435,525,2.435,526,4.031,527,2.435,528,4.031,529,2.435,530,0.873,531,2.811,532,1.216,533,2.435,534,2.435,535,2.435,536,2.435,537,2.435,538,2.435,539,2.435,540,2.435,541,2.435,542,2.435,543,2.435,544,2.435,545,1.502,546,2.435,547,1.464,548,1.59,549,2.435,550,2.435,551,2.435,552,2.435,553,2.435,554,2.435,555,2.435,556,1.84,557,2.435,558,2.435,559,2.435,560,2.435,561,2.201,562,2.435,563,1.698,564,2.435,565,2.201,566,2.435,567,1.641,568,2.435,569,2.201,570,2.435,571,2.201,572,2.435,573,2.201,574,2.435,575,1.763,576,2.435,577,1.502,578,2.435,579,1.056,580,2.435,581,2.047,582,2.435,583,0.904,584,2.435,585,2.047,586,2.435,587,2.201,588,2.435,589,1.84,590,2.435,591,1.763,592,2.435,593,2.435,594,2.435,595,2.435,596,1.103,597,2.435,598,2.435,599,1.175,600,2.435,601,1.763,602,1.26,603,2.435,604,2.201,605,1.698,606,2.435,607,1.641]],["title/controllers/AuthController.html",[89,2.723,608,4.503]],["body/controllers/AuthController.html",[3,0.023,4,0.027,5,0.027,8,0.095,22,0.837,24,0.28,25,0.003,26,0.731,27,2.99,32,0.181,64,2.815,69,0.733,78,1.631,81,0.202,83,0.291,85,0.027,87,0.002,88,0.002,89,1.601,91,1.52,96,2.123,99,0.934,100,2.034,110,0.483,111,0.436,113,1.516,114,1.846,118,1.184,119,1.998,120,1.631,121,2.197,122,0.878,127,2.057,128,1.73,131,2.123,133,1.631,134,2.282,135,1.695,138,1.011,139,0.413,143,2.197,144,2.586,159,3.79,168,1.767,193,2.381,221,0.932,222,1.568,224,2.021,247,2.651,258,2.197,263,2.381,312,6.138,430,2.282,608,4.173,609,3.151,610,2.197,611,4.964,612,4.964,613,3.241,614,4.964,615,4.487,616,4.964,617,3.151,618,6.75,619,3.151,620,3.151,621,5.546,622,3.151,623,3.151,624,3.151,625,3.151,626,3.151,627,3.151,628,3.151,629,3.151,630,3.151,631,2.848,632,6.392,633,3.151,634,3.151,635,4.964,636,3.151,637,2.985,638,3.523,639,3.151,640,2.848,641,2.848,642,2.848,643,4.449,644,2.649,645,2.32,646,2.282,647,4.874,648,2.649,649,3.151,650,2.848,651,2.381,652,2.057,653,2.5,654,3.151,655,3.151,656,3.151,657,4.964,658,2.5,659,2.848,660,2.848,661,2.057,662,2.848,663,3.151,664,3.151,665,3.151,666,3.151,667,1.865,668,3.151,669,1.759,670,1.577,671,2.286,672,3.151,673,3.151,674,3.151,675,3.151,676,3.151,677,3.151,678,4.964,679,3.151,680,3.151,681,3.151,682,3.151,683,3.151,684,4.964,685,4.964,686,3.939,687,4.964,688,4.964,689,5.553,690,3.151,691,3.151,692,3.151,693,3.151,694,3.151,695,4.964,696,2.848,697,3.151,698,6.143,699,3.151,700,3.151,701,3.151,702,3.151,703,3.151,704,3.151,705,3.151,706,3.151,707,3.151,708,4.964,709,3.151,710,3.151,711,3.151,712,3.151,713,2.649,714,3.151,715,2.123,716,2.649,717,2.5,718,1.894]],["title/modules/AuthModule.html",[149,1.238,320,4.048]],["body/modules/AuthModule.html",[3,0.028,4,0.033,5,0.033,22,1.038,25,0.004,64,1.45,69,0.793,78,2.022,81,0.25,83,0.254,85,0.033,87,0.002,88,0.002,91,2.827,97,2.407,122,1.089,149,1.354,151,2.191,152,3.285,156,5.28,158,3.147,159,5.417,160,3.522,161,2.349,162,2.349,164,3.522,165,3.522,166,2.55,167,5.097,168,2.191,169,3.714,170,0.825,171,2.148,172,2.55,174,4.242,175,1.694,176,1.647,177,1.67,178,3.121,188,3.714,189,2.632,190,2.477,191,1.45,193,2.952,194,2.55,195,2.55,196,4.588,197,4.588,198,4.456,199,3.099,200,3.099,201,3.099,202,3.284,203,3.284,205,3.531,206,3.531,276,2.55,277,1.241,278,2.829,320,8.001,608,5.907,613,2.061,643,7.266,644,3.284,719,3.531,720,3.531,721,3.531,722,3.906,723,6.966,724,6.966,725,6.966,726,3.906,727,5.857,728,5.857,729,2.632,730,3.906,731,3.906,732,3.906,733,3.906,734,3.284,735,4.924,736,3.284,737,4.924,738,3.906,739,3.906,740,3.906,741,3.906,742,4.647,743,3.906,744,3.099,745,4.924,746,3.906,747,3.531,748,4.647,749,3.906,750,3.531,751,3.531,752,3.906,753,3.531,754,3.906,755,3.906]],["title/injectables/AuthService.html",[207,1.965,643,3.88]],["body/injectables/AuthService.html",[3,0.024,4,0.028,5,0.028,8,0.101,22,0.888,24,0.296,25,0.003,26,1.244,32,0.194,64,1.241,69,0.705,78,1.73,81,0.214,83,0.298,85,0.028,87,0.002,88,0.002,99,0.978,100,1.951,110,0.495,111,0.447,113,1.554,114,1.744,120,1.73,122,0.931,138,1.073,144,2.651,170,0.706,207,1.907,208,1.64,210,0.189,212,5.808,213,5.808,221,1.537,222,1.17,224,1.85,225,3.765,247,3.14,412,2.994,596,1.514,610,3.625,613,1.763,615,4.699,631,4.699,632,6.188,638,5.111,641,3.021,642,3.021,643,3.765,645,1.562,658,2.652,659,3.021,660,3.021,661,3.394,662,3.021,667,1.255,669,1.184,670,1.062,671,1.705,689,5.768,716,2.809,717,2.652,734,2.809,744,2.652,750,5.768,753,4.699,756,3.342,757,1.562,758,7.199,759,5.199,760,5.199,761,5.199,762,3.929,763,3.342,764,8.258,765,3.342,766,3.342,767,5.199,768,3.342,769,5.199,770,5.199,771,3.342,772,5.199,773,3.342,774,3.342,775,5.199,776,5.712,777,3.342,778,3.342,779,5.44,780,2.809,781,2.809,782,2.652,783,3.342,784,2.525,785,5.199,786,2.652,787,2.652,788,3.021,789,3.342,790,3.342,791,3.342,792,3.342,793,3.021,794,3.021,795,5.364,796,5.199,797,3.342,798,3.342,799,3.342,800,7.199,801,5.712,802,7.199,803,3.342,804,4.699,805,3.342,806,3.342,807,3.342,808,3.342,809,5.199,810,3.342,811,2.809,812,3.342,813,3.021]],["title/entities/CardEntity.html",[0,1.876,445,3.144]],["body/entities/CardEntity.html",[0,1.118,2,0.863,3,0.013,4,0.016,5,0.016,6,4.818,8,0.056,9,0.506,13,1.801,14,1.937,15,0.758,21,1.826,24,0.333,25,0.003,26,1.099,27,3.687,32,0.223,35,1.919,37,4.119,38,4.498,39,5.372,40,4.708,43,3.088,51,1.593,53,1.717,55,3.095,69,0.627,70,3.81,71,2.103,72,2.141,73,2.472,74,0.907,75,2.103,76,0.51,81,0.205,82,0.891,83,0.067,85,0.016,87,0.001,88,0.001,111,0.488,293,3.474,313,1.111,445,1.872,451,4.474,453,1.171,461,3.378,463,1.338,469,3.179,471,3.378,473,2.504,477,3.055,479,2.753,481,1.338,482,1.059,556,2.411,567,1.245,575,4.1,577,1.969,579,2.454,583,1.861,814,1.847,815,4.212,816,3.807,817,4.212,818,4.212,819,4.212,820,4.212,821,4.212,822,4.212,823,4.212,824,3.807,825,4.212,826,4.212,827,2.472,828,2.937,829,4.212,830,4.212,831,4.212,832,3.175,833,5.599,834,6.345,835,4.212,836,4.212,837,4.212,838,4.212,839,4.914,840,1.847,841,5.661,842,1.847,843,3.274,844,4.532,845,3.191,846,5.709,847,5.785,848,1.847,849,3.191,850,1.847,851,1.847,852,1.847,853,6.962,854,6.722,855,1.847,856,5.014,857,1.847,858,1.847,859,2.884,860,3.191,861,1.847,862,1.847,863,1.67,864,2.15,865,1.847,866,1.847,867,1.288,868,3.191,869,1.847,870,3.191,871,1.847,872,1.847,873,2.083,874,2.531,875,3.191,876,1.969,877,1.847,878,1.847,879,2.311,880,3.191,881,1.847,882,1.847,883,3.191,884,1.847,885,1.847,886,3.191,887,1.847,888,1.847,889,3.191,890,1.847,891,1.847,892,3.948,893,1.847,894,1.847,895,1.847,896,1.847,897,3.807,898,1.847,899,3.807,900,1.847,901,3.807,902,1.847,903,2.531,904,3.05,905,3.696,906,2.15,907,1.206,908,1.553,909,4.212,910,1.553,911,4.212,912,1.67,913,1.847,914,1.847,915,2.411,916,3.191,917,1.466,918,1.288,919,1.67,920,1.847,921,1.466,922,1.553,923,1.847,924,0.739,925,3.568,926,5.661,927,1.847,928,0.939,929,1.847,930,1.847,931,1.847,932,1.847,933,0.956]],["title/classes/CommandErrorException.html",[81,0.344,934,4.503]],["body/classes/CommandErrorException.html",[3,0.053,4,0.063,5,0.063,25,0.003,32,0.166,69,0.545,81,0.473,85,0.063,87,0.003,88,0.003,122,2.054,210,0.553,313,4.432,577,4.548,645,4.572,934,7.603,935,0.423,936,4.682,937,4.037,938,8.175,939,6.663,940,3.866,941,6.663,942,4.548,943,7.603,944,2.985,945,7.371,946,6.196]],["title/entities/CompanyEmployeeEntity.html",[0,1.876,448,3.61]],["body/entities/CompanyEmployeeEntity.html",[0,1.646,2,2.196,3,0.034,4,0.04,5,0.04,6,4.76,8,0.142,9,0.939,11,6.789,13,3.342,14,3.596,15,1.407,21,3.39,24,0.32,25,0.003,26,0.798,27,3.581,32,0.217,34,5.26,35,4.032,38,2.95,43,4.123,51,3.348,55,2.272,69,0.63,70,2.347,71,3.904,72,3.974,73,4.588,74,2.306,75,3.904,76,1.297,77,3.729,81,0.301,85,0.04,87,0.002,88,0.002,293,2.636,448,4.518,449,7.454,477,3.922,583,3.346,602,4.047,853,5.32,854,5.32,907,3.068,925,4.764,928,2.389,933,2.433,947,4.7,948,6.706,949,4.7,950,4.7,951,4.7,952,4.7,953,6.706,954,4.7,955,7.067,956,4.7,957,4.7,958,2.98,959,4.7,960,4.7,961,1.096,962,1.824,963,1.404,964,4.7]],["title/entities/CompanyEntity.html",[0,1.876,34,3.305]],["body/entities/CompanyEntity.html",[0,1.522,1,4.27,2,1.246,3,0.019,4,0.023,5,0.023,6,4.893,8,0.081,9,0.661,10,4.968,11,3.147,12,4.968,13,2.35,14,2.528,15,0.989,21,2.383,24,0.334,25,0.003,26,1.22,27,3.74,32,0.227,34,2.681,35,1.604,37,5.25,38,4.591,39,4.018,40,4.615,43,3.29,51,2.169,55,0.904,67,4.968,69,0.553,70,4.556,71,2.745,72,2.794,73,2.55,74,1.309,75,2.745,76,0.736,81,0.171,83,0.229,84,5.272,85,0.023,87,0.001,88,0.001,111,0.56,289,3.305,448,5.04,450,1.932,469,5,473,3.735,477,3.441,575,4.589,827,3.226,839,7.098,843,2.837,846,4.27,847,4.419,867,3.03,879,1.932,903,3.447,904,3.147,905,3.589,906,3.704,907,1.742,918,1.86,921,2.117,925,3.802,928,1.356,933,1.381,961,0.622,962,1.282,963,0.797,965,2.668,966,4.968,967,5.496,968,4.621,969,3.226,970,5.496,971,5.496,972,5.496,973,4.968,974,5.496,975,4.968,976,2.668,977,4.345,978,2.668,979,2.668,980,3.927,981,2.668,982,2.668,983,2.668,984,2.668,985,2.668,986,2.668,987,2.668,988,4.345,989,2.668,990,2.668,991,2.668,992,2.668,993,2.668,994,4.345,995,2.668,996,2.668,997,3.927,998,2.668,999,2.668,1000,2.668,1001,2.668,1002,2.668,1003,2.411,1004,2.668]],["title/entities/ConnectedCardEntity.html",[0,1.876,451,3.61]],["body/entities/ConnectedCardEntity.html",[0,2.289,2,2.118,3,0.033,4,0.038,5,0.038,6,4.714,8,0.137,9,0.921,13,3.275,14,3.524,15,1.379,21,3.322,24,0.317,25,0.003,26,0.778,27,3.543,32,0.215,35,3.929,38,1.994,39,5.317,40,5.713,43,4.073,51,3.262,69,0.567,71,3.825,72,3.894,73,4.496,74,2.224,75,3.825,76,1.251,81,0.291,83,0.164,85,0.038,87,0.002,88,0.002,445,6.003,451,4.402,452,7.751,453,2.874,454,5.173,468,2.796,561,4.097,563,6.655,867,3.161,906,4.402,925,4.706,928,2.304,933,2.346,961,1.057,962,1.787,963,1.354,1005,4.532,1006,7.661,1007,7.661,1008,6.533,1009,4.532,1010,6.533,1011,4.532,1012,4.097,1013,4.532,1014,4.532,1015,4.532,1016,4.532,1017,4.532,1018,5.184]],["title/entities/ConversationEntity.html",[0,1.876,454,3.305]],["body/entities/ConversationEntity.html",[0,2.128,2,1.917,3,0.03,4,0.035,5,0.035,6,4.833,8,0.124,9,0.869,13,3.093,14,3.328,15,1.302,21,3.137,24,0.328,25,0.003,26,0.952,27,3.664,32,0.222,37,3.565,38,2.672,43,3.933,51,3.034,69,0.661,70,3.613,71,3.613,72,3.677,74,2.014,75,3.613,76,1.133,81,0.263,83,0.148,85,0.035,87,0.002,88,0.002,292,5.467,451,6.025,453,2.602,454,3.748,459,5.838,466,6.025,468,2.531,471,5.389,488,5.222,563,2.861,567,4.875,577,3.748,591,4.4,824,6.54,843,5.222,844,6.54,867,2.861,905,5.575,906,4.094,908,3.449,922,3.449,925,4.545,928,2.085,933,2.124,1019,4.103,1020,7.235,1021,6.082,1022,6.075,1023,4.103,1024,4.103,1025,4.103,1026,4.103,1027,6.075,1028,4.103,1029,4.103,1030,6.075,1031,4.103,1032,6.075,1033,4.103,1034,6.075,1035,4.103,1036,4.103,1037,3.255,1038,3.709,1039,3.709]],["title/classes/CreateLogCommand.html",[81,0.344,244,4.25]],["body/classes/CreateLogCommand.html",[3,0.024,4,0.028,5,0.028,8,0.101,9,0.625,24,0.349,25,0.003,26,1.223,27,3.756,32,0.229,37,5.885,38,4.574,69,0.472,81,0.214,83,0.121,85,0.028,87,0.002,88,0.002,92,4.654,110,0.2,111,0.566,118,2.397,128,1.835,210,0.189,244,4.125,246,1.887,302,4.822,305,4.822,313,3.837,670,2.027,686,7.072,873,3.394,892,2.331,935,0.192,961,1.213,962,1.819,963,0.998,1040,10.273,1041,3.342,1042,5.768,1043,5.768,1044,5.768,1045,5.768,1046,4.822,1047,5.768,1048,5.768,1049,5.768,1050,5.768,1051,5.063,1052,3.342,1053,7.609,1054,3.342,1055,5.649,1056,3.021,1057,3.342,1058,3.342,1059,6.556,1060,8.057,1061,3.342,1062,4.699,1063,3.342,1064,3.342,1065,7.05,1066,3.342,1067,4.45,1068,3.342,1069,3.342,1070,3.342,1071,3.342,1072,3.342,1073,3.342,1074,3.342,1075,3.342,1076,3.342,1077,3.342,1078,3.625,1079,3.021]],["title/classes/CreateLogCommandHandler.html",[81,0.344,188,3.397]],["body/classes/CreateLogCommandHandler.html",[3,0.033,4,0.039,5,0.039,8,0.138,9,0.789,24,0.308,25,0.003,26,1.001,32,0.209,69,0.707,81,0.293,83,0.278,85,0.039,87,0.002,88,0.002,92,4.333,99,1.235,100,1.639,110,0.393,111,0.355,113,0.858,114,1.387,122,1.272,139,0.862,144,1.465,168,2.559,170,0.964,188,4.163,189,6.444,190,6.205,210,0.258,221,3.088,238,3.182,244,6.673,370,1.56,748,5.209,935,0.262,944,3.115,1055,5.57,1078,3.182,1079,4.124,1080,1.178,1081,3.334,1082,6.951,1083,6.951,1084,6.951,1085,5.811,1086,2.2,1087,3.62,1088,6.673,1089,4.424,1090,5.209,1091,3.62,1092,3.305,1093,3.62,1094,6.356,1095,2.847,1096,4.124,1097,1.978,1098,3.448,1099,4.563,1100,3.62,1101,3.62,1102,4.563,1103,4.124,1104,5.811,1105,4.563,1106,5.519,1107,4.124,1108,4.124,1109,4.124,1110,4.124,1111,3.836,1112,4.124,1113,3.836,1114,4.124,1115,4.563,1116,4.563]],["title/classes/CreateLogDto.html",[81,0.344,236,3.736]],["body/classes/CreateLogDto.html",[3,0.023,4,0.027,5,0.027,8,0.098,9,0.608,24,0.348,25,0.003,26,1.231,27,3.763,32,0.23,37,5.844,38,4.55,69,0.462,81,0.207,83,0.117,85,0.027,87,0.002,88,0.002,92,4.658,110,0.194,111,0.577,118,2.346,128,1.774,149,1.443,210,0.183,236,3.531,246,1.846,302,4.718,305,4.718,313,3.754,670,1.983,686,6.992,873,3.306,892,2.253,935,0.185,961,1.181,962,1.79,963,0.965,1042,5.644,1043,5.644,1044,5.644,1045,5.644,1046,4.718,1047,5.644,1048,5.644,1049,5.644,1050,5.644,1051,4.954,1053,7.639,1055,5.559,1056,2.92,1059,6.453,1060,7.966,1062,4.577,1065,6.938,1067,4.354,1078,3.531,1117,7.446,1118,2.92,1119,2.92,1120,3.231,1121,3.231,1122,3.231,1123,3.231,1124,3.231,1125,3.231,1126,3.231,1127,3.231,1128,3.231,1129,3.231,1130,3.231,1131,3.231,1132,3.231,1133,3.231,1134,3.231,1135,3.231,1136,3.231,1137,3.231,1138,3.231]],["title/classes/CreateMethodLogDto.html",[81,0.344,240,4.503]],["body/classes/CreateMethodLogDto.html",[3,0.048,4,0.056,5,0.056,8,0.201,9,1.019,24,0.326,25,0.003,26,1.236,32,0.221,81,0.426,83,0.24,85,0.056,87,0.003,88,0.003,92,4.601,110,0.398,111,0.36,118,3.507,149,2.158,210,0.376,240,7.128,246,3.16,935,0.382,961,1.978,962,2.369,963,1.986,1117,7.356,1118,6.01,1119,6.01,1139,6.649,1140,6.649,1141,6.649]],["title/classes/CreateOccupationCommand.html",[81,0.344,1142,4.25]],["body/classes/CreateOccupationCommand.html",[3,0.051,4,0.06,5,0.06,8,0.215,9,1.061,24,0.293,25,0.003,32,0.199,69,0.524,81,0.455,83,0.256,85,0.06,87,0.003,88,0.003,110,0.425,111,0.383,139,0.801,210,0.401,242,4.776,757,1.64,935,0.407,961,2.059,962,2.347,1142,7.005,1143,9.615,1144,5.357,1145,8.375,1146,6.408,1147,6.408,1148,5.959,1149,3.261]],["title/classes/CreateOccupationCommandHandler.html",[81,0.344,1150,4.503]],["body/classes/CreateOccupationCommandHandler.html",[3,0.032,4,0.038,5,0.038,8,0.134,24,0.213,25,0.004,32,0.144,69,0.743,76,1.221,81,0.412,82,2.135,83,0.273,85,0.038,87,0.002,88,0.002,99,1.208,100,1.611,110,0.385,111,0.347,113,0.832,114,1.356,139,0.535,144,2.061,170,0.935,175,1.918,176,1.865,177,1.891,178,1.769,210,0.363,221,1.898,222,1.444,224,2.746,247,2.874,277,1.405,370,1.525,473,4.396,499,2.971,512,3.961,530,1.585,545,2.729,579,1.918,637,3.861,667,1.662,669,2.275,670,1.405,671,2.719,715,4.326,876,3.961,935,0.254,944,1.792,1080,1.142,1081,3.277,1086,2.151,1092,3.204,1095,2.784,1097,1.918,1098,3.343,1142,6.578,1150,6.353,1151,7.557,1152,5.782,1153,2.981,1154,3.559,1155,3.719,1156,2.888,1157,4.477,1158,3.343,1159,3.204,1160,3.204,1161,3.204,1162,2.824,1163,5.094,1164,3.085,1165,2.888,1166,4.424,1167,3.999,1168,3.999,1169,3.999,1170,3.999,1171,3.999,1172,4.424,1173,3.719,1174,4.424,1175,4.424,1176,3.085,1177,4.424,1178,3.085,1179,3.51,1180,2.888,1181,4.424,1182,3.999,1183,2.707,1184,2.334,1185,4.424,1186,2.981,1187,3.085,1188,2.004,1189,3.204]],["title/classes/CreateOccupationDto.html",[81,0.344,1145,4.25]],["body/classes/CreateOccupationDto.html",[3,0.052,4,0.061,5,0.061,8,0.219,9,1.075,24,0.297,25,0.003,26,1.064,32,0.201,81,0.464,83,0.366,85,0.061,87,0.003,88,0.003,110,0.434,111,0.392,139,0.808,210,0.41,757,1.656,935,0.416,961,2.087,962,2.365,1145,7.097,1149,3.33,1190,9.707,1191,6.544,1192,6.544,1193,6.544]],["title/classes/CreateOccupationEvent.html",[81,0.344,1163,4.25]],["body/classes/CreateOccupationEvent.html",[3,0.045,4,0.053,5,0.053,8,0.188,9,0.976,24,0.318,25,0.003,26,1.214,32,0.216,55,2.752,81,0.399,83,0.225,85,0.053,87,0.002,88,0.002,110,0.373,111,0.337,139,0.888,149,2.091,210,0.352,246,2.675,579,4.158,757,1.818,935,0.357,961,1.895,962,2.237,1149,2.862,1163,6.446,1184,4.772,1194,9.948,1195,4.702,1196,4.702,1197,3.167,1198,6.139,1199,5.624,1200,4.702,1201,4.702]],["title/classes/CreateOccupationEventHandler.html",[81,0.344,1202,4.503]],["body/classes/CreateOccupationEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,579,2.649,935,0.351,1080,1.578,1163,7.555,1164,4.261,1165,6.217,1187,4.261,1202,6.749,1203,8.966,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1209,2.475,1210,2.475,1211,2.612,1212,6.11,1213,2.687,1214,2.727,1215,2.727,1216,4.617]],["title/classes/CreateOccupationRequest.html",[81,0.344,1217,4.25]],["body/classes/CreateOccupationRequest.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.366,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1217,7.081,1218,9.691,1219,6.521,1220,6.521,1221,6.521]],["title/classes/CreateProfileCommand.html",[81,0.344,1222,4.25]],["body/classes/CreateProfileCommand.html",[3,0.046,4,0.054,5,0.054,8,0.192,9,0.99,24,0.321,25,0.003,26,1.151,32,0.217,69,0.47,81,0.408,83,0.23,85,0.054,87,0.003,88,0.003,110,0.381,111,0.344,139,0.891,210,0.36,242,4.284,412,3.802,757,1.826,935,0.365,961,1.922,962,2.337,963,1.899,1222,6.537,1223,10.017,1224,4.605,1225,8.143,1226,7.252,1227,7.447,1228,5.747,1229,5.747,1230,5.747]],["title/classes/CreateProfileCommandHandler.html",[81,0.344,1231,4.503]],["body/classes/CreateProfileCommandHandler.html",[3,0.029,4,0.034,5,0.034,8,0.121,15,1.074,22,1.895,24,0.198,25,0.004,32,0.134,64,1.487,69,0.737,76,1.106,78,2.074,81,0.383,82,1.933,83,0.216,85,0.034,87,0.002,88,0.002,99,1.123,100,1.52,110,0.358,111,0.323,113,0.754,114,1.507,139,0.658,144,1.916,170,0.846,210,0.338,221,2.337,222,1.902,224,2.735,247,3.37,277,1.273,370,1.418,473,2.98,477,2.746,499,3.517,512,4.401,514,3.589,522,3.562,530,1.436,532,2,545,2.472,547,2.409,583,1.487,637,2.409,667,1.505,669,2.527,670,1.273,671,2.592,827,3.503,876,4.401,918,2.794,935,0.23,937,1.788,944,1.623,1080,1.034,1081,3.093,1086,2,1089,2.699,1095,2.588,1097,1.737,1098,3.027,1154,3.449,1164,2.794,1176,2.794,1178,2.794,1180,2.616,1183,1.689,1184,3.149,1186,2.699,1222,6.272,1231,5.018,1232,7.133,1233,5.012,1234,2.472,1235,4.006,1236,4.523,1237,2.699,1238,2.409,1239,2.901,1240,2.616,1241,2.351,1242,2.794,1243,3.178,1244,4.736,1245,2.351,1246,4.006,1247,3.178,1248,3.034,1249,3.027,1250,2.616,1251,2.517,1252,4.006,1253,4.006,1254,4.006,1255,3.621,1256,4.006,1257,3.621,1258,3.621,1259,4.006,1260,4.006,1261,3.368,1262,4.006,1263,4.006,1264,4.006,1265,2.616]],["title/classes/CreateProfileDto.html",[81,0.344,1225,4.25]],["body/classes/CreateProfileDto.html",[3,0.048,4,0.057,5,0.057,8,0.203,9,1.023,24,0.311,25,0.003,26,1.013,32,0.211,69,0.495,81,0.429,83,0.242,85,0.057,87,0.003,88,0.003,110,0.401,111,0.362,139,0.866,210,0.379,757,1.775,935,0.384,958,4.244,961,1.986,962,2.374,963,1.999,1225,6.756,1266,9.856,1267,5.31,1268,6.114,1269,5.938,1270,7.697,1271,6.114,1272,5.626,1273,4.51]],["title/classes/CreateProfileEvent.html",[81,0.344,1244,4.25]],["body/classes/CreateProfileEvent.html",[3,0.044,4,0.052,5,0.052,8,0.185,9,0.965,24,0.316,25,0.003,26,1.133,32,0.214,55,2.72,69,0.452,81,0.392,83,0.221,85,0.052,87,0.002,88,0.002,110,0.366,111,0.331,139,0.885,149,2.073,210,0.346,246,2.651,583,3.535,757,1.812,935,0.351,961,1.873,962,2.307,963,1.825,1197,3.129,1198,6.066,1236,6.437,1237,4.117,1244,6.369,1274,9.89,1275,4.425,1276,6.369,1277,4.848,1278,4.617]],["title/classes/CreateProfileEventHandler.html",[81,0.344,1279,4.503]],["body/classes/CreateProfileEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.182,15,1.431,22,1.599,24,0.264,25,0.003,32,0.179,69,0.658,81,0.386,83,0.287,85,0.051,87,0.002,88,0.002,97,2.062,99,1.496,100,1.897,110,0.476,111,0.43,113,1.133,114,1.679,118,2.261,138,1.932,139,0.501,149,1.392,158,3.623,170,1.272,171,2.208,191,2.234,210,0.341,222,1.354,246,1.78,370,1.889,583,2.234,935,0.346,1080,1.554,1164,4.198,1187,4.198,1204,3.805,1205,3.398,1206,2.648,1207,2.648,1208,3.398,1209,2.438,1210,2.438,1211,2.573,1213,2.648,1214,2.687,1215,2.687,1244,7.511,1245,5.555,1279,6.683,1280,8.9,1281,6.02,1282,6.02,1283,6.02]],["title/classes/CreateProfileRequest.html",[81,0.344,1284,4.25]],["body/classes/CreateProfileRequest.html",[3,0.044,4,0.051,5,0.051,8,0.183,9,0.959,24,0.327,25,0.003,26,1.205,32,0.222,69,0.448,81,0.388,83,0.219,85,0.051,87,0.002,88,0.002,110,0.363,111,0.328,139,0.904,210,0.343,757,1.852,935,0.348,958,3.84,961,1.862,962,2.3,963,1.809,1226,7.082,1268,5.828,1269,5.66,1271,5.828,1273,4.08,1284,6.332,1285,10.127,1286,5.474,1287,8.926,1288,7.214,1289,5.474,1290,5.474,1291,5.474]],["title/classes/CreateSocialNetworkCommand.html",[81,0.344,1292,4.25]],["body/classes/CreateSocialNetworkCommand.html",[3,0.043,4,0.051,5,0.051,8,0.181,9,0.95,24,0.326,25,0.003,26,1.243,32,0.221,81,0.383,83,0.341,85,0.051,87,0.002,88,0.002,110,0.358,111,0.323,139,0.902,210,0.338,480,3.981,757,1.848,924,4.032,935,0.342,961,1.844,962,2.201,1149,2.745,1292,6.27,1293,10.085,1294,4.509,1295,6.18,1296,5.971,1297,5.971,1298,4.509,1299,5.394,1300,5.394,1301,4.509,1302,5.394]],["title/classes/CreateSocialNetworkCommandHandler.html",[81,0.344,1303,4.503]],["body/classes/CreateSocialNetworkCommandHandler.html",[3,0.032,4,0.038,5,0.038,8,0.136,24,0.215,25,0.003,32,0.146,69,0.734,76,1.237,81,0.416,82,2.163,83,0.275,85,0.038,87,0.002,88,0.002,99,1.22,100,1.623,110,0.388,111,0.351,113,0.843,114,1.369,139,0.54,170,0.947,175,1.943,176,1.89,177,1.916,178,1.792,210,0.367,221,1.917,222,1.458,224,2.674,247,2.895,277,1.424,370,1.54,479,4.181,480,3.005,482,2.57,499,2.989,515,4.232,530,1.606,548,2.927,637,3.897,667,1.684,669,2.296,670,1.424,671,2.735,715,3.02,832,3.635,876,3.999,924,3.538,935,0.257,944,2.625,1080,1.157,1081,3.301,1086,2.172,1093,3.556,1095,2.81,1097,1.943,1098,3.387,1154,3.573,1159,3.246,1160,3.246,1161,3.246,1162,2.851,1164,3.126,1173,3.768,1176,3.126,1178,3.126,1179,3.556,1183,1.89,1187,4.52,1188,2.031,1189,3.246,1292,6.619,1303,6.4,1304,7.613,1305,5.817,1306,3.02,1307,3.556,1308,2.927,1309,3.556,1310,2.766,1311,4.482,1312,4.482,1313,4.482,1314,4.482,1315,4.482,1316,4.482,1317,4.482,1318,4.482,1319,3.126,1320,4.482,1321,4.482,1322,2.514,1323,4.482,1324,4.694]],["title/classes/CreateSocialNetworkEvent.html",[81,0.344,1309,4.25]],["body/classes/CreateSocialNetworkEvent.html",[3,0.043,4,0.051,5,0.051,8,0.183,9,0.957,15,1.706,24,0.314,25,0.003,26,1.246,32,0.213,55,2.698,81,0.387,83,0.218,85,0.051,87,0.002,88,0.002,110,0.362,111,0.327,139,0.882,149,2.06,210,0.342,246,2.636,480,3.889,757,1.787,924,4.236,935,0.347,1197,3.105,1198,6.019,1309,6.319,1325,9.852,1326,4.562,1327,4.373,1328,6.019,1329,4.562,1330,5.316,1331,4.562,1332,2.618]],["title/classes/CreateSocialNetworkEventHandler.html",[81,0.344,1333,4.503]],["body/classes/CreateSocialNetworkEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.181,15,1.077,24,0.263,25,0.003,32,0.178,69,0.656,81,0.384,83,0.286,85,0.051,87,0.002,88,0.002,97,2.05,99,1.49,100,1.892,110,0.474,111,0.428,113,1.126,114,1.673,118,2.248,138,1.921,139,0.498,149,1.383,158,3.617,170,1.264,171,2.195,191,2.221,210,0.339,222,1.346,246,1.77,370,1.881,480,3.503,832,3.356,924,3.776,935,0.343,1080,1.545,1164,4.173,1187,4.173,1204,3.794,1205,3.385,1206,2.632,1207,2.632,1208,3.385,1209,2.424,1210,2.424,1211,2.558,1213,2.632,1214,2.671,1215,2.671,1309,7.494,1310,5.827,1333,6.657,1334,8.874,1335,5.984,1336,4.173]],["title/classes/CreateSocialNetworkRequest.html",[81,0.344,1337,4.25]],["body/classes/CreateSocialNetworkRequest.html",[3,0.043,4,0.051,5,0.051,8,0.181,9,0.95,24,0.326,25,0.003,26,1.243,32,0.221,81,0.383,83,0.341,85,0.051,87,0.002,88,0.002,110,0.358,111,0.323,139,0.902,210,0.338,480,3.981,757,1.848,924,4.032,935,0.342,961,1.844,962,2.201,1149,2.745,1295,6.18,1296,5.971,1297,5.971,1337,6.27,1338,10.085,1339,5.394,1340,5.394,1341,5.394,1342,5.394,1343,5.394,1344,5.394]],["title/classes/CreateUserCommand.html",[81,0.344,1345,4.25]],["body/classes/CreateUserCommand.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.07,24,0.295,25,0.003,32,0.2,69,0.532,81,0.461,83,0.26,85,0.061,87,0.003,88,0.003,110,0.431,111,0.389,139,0.806,210,0.407,242,4.844,399,7.37,421,5.013,757,1.519,935,0.413,1332,3.117,1345,7.066,1346,9.676,1347,5.207,1348,7.189,1349,6.498,1350,6.043]],["title/classes/CreateUserCommandHandler.html",[81,0.344,1351,4.503]],["body/classes/CreateUserCommandHandler.html",[3,0.016,4,0.019,5,0.019,8,0.068,9,0.456,15,0.407,22,1.3,24,0.281,25,0.003,26,1.142,27,0.84,30,2.279,32,0.199,53,3.431,64,2.125,69,0.677,76,0.624,81,0.243,82,1.091,83,0.289,85,0.019,87,0.001,88,0.001,99,0.713,100,1.921,110,0.479,111,0.432,112,1.644,113,1.504,114,1.689,133,1.171,135,1.217,139,0.575,144,2.566,170,0.478,175,0.981,176,0.954,177,0.967,178,2.759,210,0.214,221,2.862,222,1.798,224,2.613,247,2.425,277,0.718,370,0.901,498,1.193,499,2.285,522,2.859,530,0.811,532,1.893,596,3.126,599,1.829,602,1.171,605,1.577,610,4.447,637,1.36,667,0.85,669,0.801,670,2.539,671,2.404,757,1.177,873,3.195,876,2.339,935,0.13,937,3.08,944,0.916,969,3.36,1080,0.584,1081,2.122,1086,1.27,1095,1.644,1096,2.044,1097,0.981,1098,1.709,1154,3.101,1162,3.224,1176,1.577,1178,1.577,1183,2.689,1188,3.126,1239,1.638,1240,4.505,1241,3.36,1242,1.577,1243,1.794,1261,1.901,1307,3.007,1322,1.268,1345,4.543,1351,3.187,1352,9.013,1353,6.383,1354,4.114,1355,3.426,1356,4.423,1357,3.426,1358,3.187,1359,3.187,1360,3.187,1361,3.187,1362,3.187,1363,2.262,1364,2.262,1365,3.426,1366,2.262,1367,2.262,1368,3.426,1369,2.262,1370,5.06,1371,3.187,1372,2.262,1373,3.187,1374,2.262,1375,1.901,1376,2.262,1377,3.187,1378,2.262,1379,3.187,1380,2.262,1381,1.242,1382,2.745,1383,2.475,1384,3.007,1385,2.745,1386,3.007,1387,2.864,1388,1.901,1389,1.794,1390,1.794,1391,2.864,1392,1.901,1393,3.007,1394,3.007,1395,2.262,1396,1.901,1397,2.044,1398,3.187,1399,2.044,1400,2.044,1401,3.791,1402,2.262,1403,5.361,1404,2.643,1405,2.643,1406,3.791,1407,2.262,1408,2.262,1409,3.544,1410,2.262,1411,2.262,1412,2.044,1413,2.262,1414,2.044,1415,2.044,1416,2.262,1417,2.044,1418,2.262,1419,2.262,1420,2.262,1421,2.262,1422,1.577,1423,2.262,1424,1.901,1425,2.262,1426,2.262,1427,2.262,1428,5.06,1429,2.262,1430,2.262,1431,2.262,1432,3.426,1433,3.187,1434,2.044,1435,3.187,1436,3.187,1437,1.901,1438,1.901,1439,1.901,1440,3.187,1441,1.794]],["title/classes/CreateUserDto.html",[81,0.344,399,3.61]],["body/classes/CreateUserDto.html",[3,0.041,4,0.049,5,0.049,8,0.174,9,0.926,24,0.322,25,0.003,26,1.187,27,3.45,30,3.456,32,0.218,69,0.643,79,5.033,81,0.494,82,2.774,83,0.208,85,0.049,87,0.002,88,0.002,110,0.344,111,0.551,112,3.771,128,3.156,133,4.503,135,3.093,210,0.325,399,5.194,420,8.388,596,3.94,599,4.198,602,4.503,915,5.825,935,0.33,961,1.798,962,2.261,963,1.717,1053,7.02,1442,4.832,1443,7.709,1444,5.748,1445,5.748,1446,5.748,1447,5.748,1448,5.748,1449,5.748,1450,6.116,1451,5.196,1452,6.968,1453,4.008,1454,4.832]],["title/classes/CreateUserEvent.html",[81,0.344,1455,4.503]],["body/classes/CreateUserEvent.html",[3,0.042,4,0.049,5,0.049,8,0.176,9,0.935,22,2.483,24,0.323,25,0.003,26,1.237,32,0.219,55,2.636,69,0.431,81,0.374,83,0.211,85,0.049,87,0.002,88,0.002,110,0.349,111,0.315,139,0.899,149,2.025,210,0.33,242,3.928,246,2.59,399,7.163,412,3.888,421,4.066,757,1.829,935,0.335,1197,3.033,1198,5.881,1332,2.528,1455,6.542,1456,10.019,1457,4.223,1458,3.421,1459,7.782,1460,7.782,1461,4.223]],["title/classes/CreateUserEventHandler.html",[81,0.344,1462,4.503]],["body/classes/CreateUserEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.183,15,1.087,22,1.604,24,0.264,25,0.003,32,0.179,69,0.659,81,0.387,83,0.288,85,0.051,87,0.002,88,0.002,97,2.068,99,1.499,100,1.9,110,0.477,111,0.431,113,1.136,114,1.683,118,2.268,138,1.938,139,0.503,149,1.396,158,3.626,170,1.275,171,2.215,191,2.241,210,0.342,222,1.358,246,1.785,370,1.892,935,0.347,969,3.543,1080,1.559,1164,4.21,1187,4.21,1204,3.811,1205,3.405,1206,2.656,1207,2.656,1208,3.405,1209,2.445,1210,2.445,1211,2.581,1213,2.656,1214,2.695,1215,2.695,1455,7.968,1462,6.696,1463,8.913,1464,5.699,1465,6.037,1466,3.942,1467,6.037]],["title/classes/CreateUserResponse.html",[81,0.344,1387,4.048]],["body/classes/CreateUserResponse.html",[3,0.039,4,0.046,5,0.046,8,0.165,9,0.893,13,3.615,15,1.522,24,0.333,25,0.003,26,1.217,32,0.226,43,3.267,69,0.402,81,0.349,83,0.197,85,0.046,87,0.002,88,0.002,110,0.326,111,0.457,112,3.667,133,4.378,135,2.927,139,0.916,210,0.308,596,3.831,602,4.378,757,1.876,935,0.312,961,1.733,962,2.29,963,1.625,1370,6.71,1387,5.613,1453,3.794,1468,10.229,1469,5.441,1470,5.441,1471,4.111,1472,5.441,1473,5.441,1474,5.441,1475,5.441,1476,5.441,1477,5.441]],["title/injectables/CustomHealthCheckService.html",[207,1.965,1478,4.048]],["body/injectables/CustomHealthCheckService.html",[3,0.047,4,0.055,5,0.055,8,0.196,24,0.215,25,0.003,32,0.188,69,0.72,81,0.416,83,0.234,85,0.055,87,0.003,88,0.003,99,1.569,100,1.966,110,0.388,111,0.351,113,1.219,114,1.762,122,1.806,138,2.08,139,0.54,144,2.08,170,1.369,207,3.059,208,3.18,210,0.367,213,6.95,222,1.458,225,4.693,1478,6.302,1479,6.68,1480,9.223,1481,7.318,1482,6.479,1483,9.738,1484,6.479,1485,6.479,1486,6.479,1487,6.617,1488,6.479,1489,5.447,1490,4.896,1491,5.447,1492,5.447]],["title/injectables/DatabaseConfiguration.html",[207,1.965,335,4.503]],["body/injectables/DatabaseConfiguration.html",[1,4.09,2,3.224,3,0.022,4,0.026,5,0.026,8,0.094,24,0.229,25,0.004,32,0.07,34,3.745,38,4.026,64,2.253,69,0.784,81,0.198,85,0.026,87,0.002,88,0.002,99,0.921,113,0.582,122,0.862,144,2.413,198,4.375,207,1.795,208,1.518,224,0.897,277,0.983,335,4.113,342,9.16,359,2.796,370,0.735,387,3.544,396,5.964,445,3.562,446,2.24,447,2.337,448,4.09,449,2.337,450,2.24,451,4.09,452,2.454,453,1.961,454,3.745,455,2.6,456,4.233,457,2.454,458,3.544,459,3.963,460,2.6,461,4.09,462,2.454,463,2.24,464,4.233,465,2.6,466,4.09,467,2.337,468,1.908,469,3.849,470,2.454,471,4.09,472,2.6,473,3.031,475,4.233,476,2.6,477,2.792,479,3.333,481,2.24,482,1.774,483,4.396,484,2.454,485,2.454,486,3.745,487,2.454,488,3.963,489,2.337,490,4.233,491,2.337,492,2.454,596,3.126,599,3.33,667,1.162,669,1.096,670,1.928,671,1.014,748,3.882,801,2.454,846,3.297,864,3.297,1493,3.093,1494,6.9,1495,3.093,1496,6.07,1497,4.893,1498,3.093,1499,2.6,1500,2.796,1501,2.796,1502,3.093,1503,3.093,1504,3.093,1505,6.237,1506,4.893,1507,6.9,1508,6.9,1509,6.237,1510,3.093,1511,3.093,1512,3.093,1513,6.9,1514,3.093,1515,3.093,1516,3.093,1517,6.9,1518,4.893,1519,4.893,1520,4.893,1521,3.093,1522,6.9,1523,3.093,1524,6.237,1525,3.093,1526,4.893,1527,3.093,1528,3.093,1529,3.093,1530,3.093,1531,3.093,1532,3.093,1533,3.093,1534,3.093,1535,3.093,1536,3.093,1537,3.093,1538,3.093,1539,3.093,1540,3.093,1541,3.093,1542,3.093,1543,3.093,1544,4.893,1545,3.093,1546,3.093,1547,3.093,1548,3.093,1549,3.093,1550,3.093,1551,3.093,1552,3.093,1553,3.093,1554,3.093,1555,3.093,1556,3.093,1557,2.796,1558,3.093]],["title/classes/DeleteMailCommand.html",[81,0.344,217,3.88]],["body/classes/DeleteMailCommand.html",[3,0.051,4,0.06,5,0.06,8,0.214,9,1.059,24,0.292,25,0.003,26,1.048,32,0.198,81,0.453,83,0.255,85,0.06,87,0.003,88,0.003,92,4.349,93,5.505,110,0.423,111,0.382,112,4.162,139,0.8,210,0.4,217,6.38,757,1.638,935,0.405,961,2.055,962,2.413,963,2.11,1559,8.678,1560,5.938,1561,6.385,1562,6.385]],["title/classes/DeleteMailCommandHandler.html",[81,0.344,179,4.503]],["body/classes/DeleteMailCommandHandler.html",[3,0.035,4,0.042,5,0.042,8,0.149,24,0.23,25,0.003,32,0.156,69,0.723,81,0.315,83,0.25,85,0.042,87,0.002,88,0.002,92,3.63,93,4.595,97,2.371,99,1.302,100,1.708,106,1.965,110,0.415,111,0.374,113,0.925,114,1.462,120,2.545,122,1.37,139,0.409,144,1.578,168,2.757,170,1.038,175,2.131,176,2.072,177,2.101,178,2.768,179,7.312,181,5.861,184,3.56,210,0.278,217,6.3,221,2.047,222,1.106,224,2.521,293,2.757,370,1.645,645,2.297,670,2.199,671,2.27,713,4.132,935,0.282,944,1.991,1080,1.269,1081,3.474,1086,2.32,1087,3.9,1088,6.901,1090,5.492,1092,3.56,1095,3.001,1097,2.131,1101,3.9,1154,3.671,1162,3.525,1183,2.919,1188,3.136,1322,2.757,1563,8.013,1564,2.454,1565,3.428,1566,3.9,1567,3.209,1568,4.443,1569,6.257,1570,4.132,1571,4.915,1572,4.443,1573,4.443,1574,4.915,1575,4.915,1576,4.915,1577,6.922,1578,6.257,1579,4.915,1580,4.915,1581,4.915,1582,4.443,1583,4.915,1584,4.443,1585,4.915,1586,4.915]],["title/classes/DeleteMailEvent.html",[81,0.344,1566,4.25]],["body/classes/DeleteMailEvent.html",[3,0.042,4,0.049,5,0.049,8,0.174,9,0.928,24,0.309,25,0.003,26,1.234,32,0.209,55,2.616,69,0.426,81,0.37,83,0.208,85,0.049,87,0.002,88,0.002,92,4.395,93,5.848,97,2.645,98,6.128,106,3.088,110,0.345,111,0.312,112,3.349,139,0.874,149,2.243,181,3.884,210,0.437,217,7.027,246,2.869,757,1.791,935,0.331,1197,3.01,1565,4.02,1566,6.128,1587,9.702,1588,5.21,1589,9.304,1590,5.764,1591,5.764,1592,5.764,1593,5.21,1594,5.21]],["title/classes/DeleteMailEventHandler.html",[81,0.344,182,4.503]],["body/classes/DeleteMailEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.181,22,1.585,24,0.262,25,0.003,32,0.178,69,0.655,81,0.383,83,0.286,85,0.051,87,0.002,88,0.002,92,4.015,93,5.409,97,2.707,98,4.734,99,1.487,100,1.889,106,3.16,110,0.474,111,0.428,112,3.427,113,1.123,114,1.669,118,2.242,138,1.915,139,0.497,149,1.379,158,3.614,170,1.26,171,2.189,182,6.644,184,6.833,191,2.215,210,0.338,222,1.342,246,1.764,370,1.878,935,0.342,1080,1.541,1204,3.789,1205,3.379,1206,2.624,1207,2.624,1208,3.379,1209,2.417,1210,2.417,1211,2.551,1213,2.624,1566,7.485,1567,3.896,1595,8.862,1596,5.967,1597,5.967]],["title/classes/DeleteOccupationCommand.html",[81,0.344,1598,4.25]],["body/classes/DeleteOccupationCommand.html",[3,0.052,4,0.061,5,0.061,8,0.219,9,1.075,24,0.297,25,0.003,26,1.064,32,0.201,81,0.464,83,0.262,85,0.061,87,0.003,88,0.003,110,0.434,111,0.392,139,0.808,210,0.41,757,1.656,935,0.416,961,2.087,962,2.365,1144,5.471,1149,3.33,1184,5.121,1598,7.097,1599,9.707,1600,6.086,1601,6.086]],["title/classes/DeleteOccupationCommandHandler.html",[81,0.344,1602,4.503]],["body/classes/DeleteOccupationCommandHandler.html",[3,0.037,4,0.044,5,0.044,8,0.157,15,0.934,24,0.239,25,0.003,32,0.162,69,0.716,76,1.433,81,0.333,83,0.26,85,0.044,87,0.002,88,0.002,99,1.353,100,1.759,110,0.431,111,0.389,113,0.977,114,1.519,139,0.599,170,1.097,175,2.251,176,2.189,177,2.219,178,2.075,210,0.407,221,2.126,222,1.618,224,2.392,247,1.974,277,1.649,370,1.708,473,2.592,499,3.192,512,4.437,530,1.86,545,3.203,579,3.118,667,1.95,669,2.548,670,1.649,671,2.706,715,4.846,935,0.298,944,2.102,1080,1.34,1081,3.578,1086,2.41,1095,3.118,1097,2.251,1152,6.212,1153,3.498,1154,3.728,1156,3.389,1162,3.163,1180,3.389,1183,2.189,1186,4.846,1188,2.352,1189,3.76,1209,2.102,1248,2.638,1251,2.189,1565,3.62,1598,7.067,1602,6.936,1603,8.251,1604,3.121,1605,5.191,1606,4.119,1607,5.191,1608,3.046]],["title/classes/DeleteOccupationEvent.html",[81,0.344,1609,4.503]],["body/classes/DeleteOccupationEvent.html",[3,0.045,4,0.053,5,0.053,8,0.188,9,0.976,24,0.318,25,0.003,26,1.214,32,0.216,55,2.752,81,0.399,83,0.225,85,0.053,87,0.002,88,0.002,106,3.248,110,0.373,111,0.337,139,0.888,149,2.091,210,0.352,246,2.675,579,4.158,757,1.818,935,0.357,961,1.895,962,2.237,1149,2.862,1184,4.772,1195,4.702,1196,4.702,1197,3.167,1200,4.702,1201,4.702,1609,6.829,1610,9.948,1611,5.231]],["title/classes/DeleteOccupationEventHandler.html",[81,0.344,1612,4.503]],["body/classes/DeleteOccupationEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,583,2.268,935,0.351,1080,1.578,1165,6.217,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1209,2.475,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1216,4.617,1567,3.989,1608,3.586,1609,8.005,1612,6.749,1613,8.966,1614,6.11]],["title/classes/DeleteProfileCommand.html",[81,0.344,1615,4.048]],["body/classes/DeleteProfileCommand.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,15,1.744,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.261,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1224,5.225,1615,6.745,1616,9.691,1617,7.503]],["title/classes/DeleteProfileCommandHandler.html",[81,0.344,1618,4.503]],["body/classes/DeleteProfileCommandHandler.html",[3,0.038,4,0.045,5,0.045,8,0.162,15,0.961,24,0.243,25,0.003,32,0.165,69,0.722,76,1.474,81,0.342,83,0.265,85,0.045,87,0.002,88,0.002,99,1.38,100,1.785,110,0.439,111,0.397,113,1.005,114,1.549,139,0.611,170,1.128,210,0.415,221,2.169,222,1.65,224,2.428,247,2.031,277,1.696,370,1.742,477,2.457,499,3.231,514,4.41,530,1.914,547,3.211,583,1.982,667,2.006,669,2.598,670,1.696,671,2.405,935,0.307,944,2.97,1080,1.379,1081,3.632,1086,2.457,1095,3.18,1097,2.316,1154,3.756,1183,2.252,1209,2.163,1233,5.717,1234,3.295,1238,3.211,1245,3.134,1248,2.715,1251,2.252,1265,3.487,1565,3.724,1567,3.487,1604,3.211,1615,7.141,1618,6.165,1619,8.376,1620,5.819,1621,5.341,1622,3.724,1623,3.487,1624,3.868,1625,5.341]],["title/classes/DeleteProfileEvent.html",[81,0.344,1620,4.25]],["body/classes/DeleteProfileEvent.html",[3,0.044,4,0.052,5,0.052,8,0.184,9,0.963,24,0.316,25,0.003,26,1.132,32,0.214,55,2.714,69,0.45,81,0.391,83,0.22,85,0.052,87,0.002,88,0.002,106,3.203,110,0.365,111,0.33,139,0.884,149,2.069,210,0.345,246,2.647,583,3.53,757,1.811,935,0.35,961,1.869,962,2.305,963,1.819,1197,3.123,1233,3.863,1275,4.412,1276,6.357,1277,4.833,1278,4.603,1565,4.248,1615,7.665,1620,6.357,1626,9.881]],["title/classes/DeleteProfileEventHandler.html",[81,0.344,1627,4.503]],["body/classes/DeleteProfileEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,583,2.268,935,0.351,1080,1.578,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1245,5.588,1567,3.989,1608,3.586,1620,7.555,1627,6.749,1628,8.966,1629,3.77,1630,6.11,1631,6.11]],["title/classes/DeleteSocialNetworkCommand.html",[81,0.344,1632,4.25]],["body/classes/DeleteSocialNetworkCommand.html",[3,0.051,4,0.06,5,0.06,8,0.215,9,1.061,15,1.73,24,0.293,25,0.003,26,1.051,32,0.199,81,0.455,83,0.256,85,0.06,87,0.003,88,0.003,110,0.425,111,0.383,139,0.801,210,0.401,480,3.795,757,1.64,924,3.844,935,0.407,961,2.059,962,2.347,1149,3.261,1294,5.357,1298,5.357,1301,5.357,1632,7.005,1633,9.615]],["title/classes/DeleteSocialNetworkCommandHandler.html",[81,0.344,1634,4.503]],["body/classes/DeleteSocialNetworkCommandHandler.html",[3,0.037,4,0.044,5,0.044,8,0.157,15,0.934,24,0.239,25,0.003,32,0.162,69,0.716,76,1.433,81,0.333,83,0.26,85,0.044,87,0.002,88,0.002,99,1.353,100,1.759,110,0.431,111,0.389,113,0.977,114,1.519,139,0.599,170,1.097,210,0.407,221,2.126,222,1.856,224,2.084,277,1.649,370,1.708,479,2.85,480,3.257,482,2.976,499,3.192,515,4.695,530,1.86,548,3.389,669,2.548,671,2.358,832,2.911,924,3.74,935,0.298,944,2.102,1080,1.34,1081,3.578,1086,2.41,1095,3.118,1097,2.251,1154,3.728,1209,2.102,1248,2.638,1251,2.189,1305,6.212,1306,3.498,1308,3.389,1310,3.203,1319,5.015,1322,2.911,1324,5.208,1565,3.62,1567,3.389,1608,3.046,1623,3.389,1632,7.067,1634,6.045,1635,8.251,1636,2.911,1637,4.119,1638,5.191,1639,5.434,1640,5.191,1641,5.191]],["title/classes/DeleteSocialNetworkEvent.html",[81,0.344,1637,4.25]],["body/classes/DeleteSocialNetworkEvent.html",[3,0.043,4,0.051,5,0.051,8,0.183,9,0.957,15,1.706,24,0.314,25,0.003,26,1.246,32,0.213,55,2.698,81,0.387,83,0.218,85,0.051,87,0.002,88,0.002,106,3.184,110,0.362,111,0.327,139,0.882,149,2.06,210,0.342,246,2.636,480,3.889,757,1.787,924,4.236,935,0.347,1197,3.105,1326,4.562,1327,4.373,1328,6.019,1329,4.562,1330,5.316,1331,4.562,1332,2.618,1637,6.319,1642,9.852]],["title/classes/DeleteSocialNetworkEventHandler.html",[81,0.344,1643,4.503]],["body/classes/DeleteSocialNetworkEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.181,15,1.077,24,0.263,25,0.003,32,0.178,69,0.656,81,0.384,83,0.286,85,0.051,87,0.002,88,0.002,97,2.05,99,1.49,100,1.892,110,0.474,111,0.428,113,1.126,114,1.673,118,2.248,138,1.921,139,0.498,149,1.383,158,3.617,170,1.264,171,2.195,191,2.221,210,0.339,222,1.346,246,1.77,370,1.881,480,3.503,832,3.356,924,3.776,935,0.343,1080,1.545,1204,3.794,1205,3.385,1206,2.632,1207,2.632,1208,3.385,1209,2.424,1210,2.424,1211,2.558,1213,2.632,1214,2.671,1215,2.671,1310,5.827,1336,4.173,1567,3.907,1608,3.512,1637,7.494,1643,6.657,1644,8.874,1645,5.984]],["title/classes/DeleteUserCommand.html",[81,0.344,1646,4.25]],["body/classes/DeleteUserCommand.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.261,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,412,4.031,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1347,5.225,1646,7.081,1647,9.691,1648,7.503]],["title/classes/DeleteUserCommandHandler.html",[81,0.344,1649,4.25]],["body/classes/DeleteUserCommandHandler.html",[3,0.037,4,0.044,5,0.044,8,0.158,9,0.866,22,1.382,24,0.274,25,0.003,32,0.186,64,1.932,69,0.748,76,1.437,81,0.334,83,0.26,85,0.044,87,0.002,88,0.002,99,1.355,100,1.761,110,0.432,111,0.39,113,0.979,114,1.522,170,1.099,175,2.256,176,2.194,177,2.225,178,2.081,210,0.408,221,1.539,222,1.171,224,1.508,277,1.653,370,1.711,498,2.746,499,3.196,522,3.597,530,1.865,532,2.599,667,1.955,669,1.844,670,2.288,671,1.707,757,1.41,935,0.299,937,2.323,944,2.108,1080,1.344,1081,3.582,1086,2.414,1091,4.129,1095,3.124,1097,2.256,1154,3.908,1162,3.169,1188,2.358,1240,3.398,1241,3.054,1322,4.04,1353,6.529,1381,2.858,1464,3.129,1565,3.629,1567,3.398,1646,7.075,1649,6.555,1650,8.917,1651,4.704,1652,4.129,1653,4.129,1654,5.444,1655,4.375,1656,5.204,1657,5.204,1658,5.204]],["title/classes/DeleteUserEvent.html",[81,0.344,1653,4.25]],["body/classes/DeleteUserEvent.html",[3,0.045,4,0.053,5,0.053,8,0.191,9,0.984,22,2.559,24,0.32,25,0.003,26,1.258,32,0.217,55,2.774,81,0.404,83,0.228,85,0.053,87,0.003,88,0.003,106,3.274,110,0.377,111,0.341,139,0.89,149,2.103,210,0.356,246,2.691,412,4.007,757,1.803,935,0.362,1197,3.192,1332,2.731,1457,4.562,1458,3.696,1461,4.562,1653,6.497,1659,9.987,1660,6.188,1661,4.76]],["title/classes/DeleteUserEventHandler.html",[81,0.344,1662,4.503]],["body/classes/DeleteUserEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,22,1.623,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,935,0.351,1080,1.578,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1464,5.726,1466,3.989,1567,3.989,1608,3.586,1629,3.77,1653,7.555,1662,6.749,1663,8.966,1664,6.11]],["title/entities/DiscountCodeEntity.html",[0,1.876,456,3.736]],["body/entities/DiscountCodeEntity.html",[0,2.109,2,1.894,3,0.029,4,0.034,5,0.034,6,4.82,8,0.123,9,0.863,13,3.071,14,3.305,15,1.293,21,3.115,24,0.355,25,0.003,26,0.717,27,3.654,28,6.153,32,0.221,43,4.447,51,3.007,69,0.531,70,4.445,71,3.587,72,3.651,74,1.99,75,3.587,76,1.119,79,5.191,81,0.386,82,1.956,83,0.322,85,0.034,87,0.002,88,0.002,456,4.199,457,7.924,486,5.492,565,3.665,873,5.812,879,2.936,903,4.778,904,4.361,925,4.525,928,2.061,933,2.099,1665,3.665,1666,6.494,1667,7.184,1668,6.494,1669,6.494,1670,6.039,1671,7.184,1672,4.054,1673,4.054,1674,5.443,1675,6.494,1676,4.054,1677,6.021,1678,4.054,1679,5.443,1680,5.443,1681,4.054,1682,4.054,1683,5.443,1684,4.054,1685,4.054,1686,4.054,1687,4.054,1688,6.021,1689,4.054,1690,6.494,1691,7.187,1692,3.063,1693,6.039,1694,4.054]],["title/classes/DuplicateMailException.html",[81,0.344,1385,3.88]],["body/classes/DuplicateMailException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.169,69,0.557,81,0.483,85,0.064,87,0.003,88,0.003,120,3.901,122,2.1,210,0.559,645,4.616,718,4.531,935,0.432,936,4.745,937,4.091,940,3.919,1383,5.985,1385,6.639,1404,5.254,1405,5.254,1695,6.811,1696,6.811,1697,6.334]],["title/classes/DuplicateNameException.html",[81,0.344,1698,4.25]],["body/classes/DuplicateNameException.html",[3,0.055,4,0.064,5,0.064,25,0.003,32,0.171,69,0.561,81,0.487,83,0.274,85,0.064,87,0.003,88,0.003,122,2.116,210,0.561,645,4.631,935,0.436,936,4.767,937,4.11,940,3.936,1383,6.012,1698,7.305,1699,7.591,1700,7.591,1701,7.591,1702,7.591]],["title/classes/DuplicateUsernameException.html",[81,0.344,1382,3.88]],["body/classes/DuplicateUsernameException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.169,69,0.557,81,0.483,85,0.064,87,0.003,88,0.003,120,3.901,122,2.1,210,0.559,645,4.616,718,4.531,935,0.432,936,4.745,937,4.091,940,3.919,1382,6.639,1383,5.985,1404,5.254,1405,5.254,1703,6.811,1704,6.811,1705,7.534]],["title/modules/EntitiesToMoveModule.html",[149,1.238,321,4.048]],["body/modules/EntitiesToMoveModule.html",[0,1.76,1,4.737,3,0.036,4,0.043,5,0.043,6,2.425,11,3.639,25,0.004,34,4.337,69,0.818,77,3.986,81,0.322,85,0.043,87,0.002,88,0.002,91,2.425,122,1.4,149,1.625,151,2.818,164,3.021,165,3.021,276,3.28,277,1.596,321,5.312,343,4.542,368,7.383,445,4.125,448,4.737,450,3.639,451,4.737,453,4.458,454,4.337,456,4.902,458,5.092,459,4.59,461,4.737,463,3.639,464,4.902,466,4.737,468,4.337,469,4.458,471,4.737,473,3.51,475,4.902,477,3.234,479,3.86,481,3.639,482,2.881,483,5.092,485,3.986,486,4.337,488,4.59,490,4.902,493,4.542,567,3.386,907,3.28,908,4.224,918,3.504,921,3.986,922,4.224,924,2.009,1003,4.542,1037,3.986,1038,4.542,1039,4.542,1692,3.797,1706,5.024,1707,4.542,1708,4.542,1709,4.542,1710,5.024,1711,5.024,1712,4.542]],["title/classes/EntityCreationException.html",[81,0.344,1713,4.503]],["body/classes/EntityCreationException.html",[0,2.582,3,0.053,4,0.063,5,0.063,25,0.003,32,0.166,69,0.545,81,0.473,85,0.063,87,0.003,88,0.003,122,2.054,210,0.553,313,4.432,577,4.548,645,4.572,935,0.423,936,4.682,937,4.037,940,3.866,942,4.548,943,7.603,946,6.196,1713,7.603,1714,8.175,1715,7.371,1716,7.371,1717,6.663]],["title/classes/ErrorCustomEvent.html",[81,0.344,1162,2.356]],["body/classes/ErrorCustomEvent.html",[3,0.046,4,0.054,5,0.054,8,0.193,9,0.992,24,0.321,25,0.003,26,1.222,32,0.218,81,0.409,83,0.23,85,0.054,87,0.003,88,0.003,110,0.382,111,0.345,139,0.892,176,4.228,178,3.66,210,0.361,670,2.908,757,1.827,935,0.366,961,1.926,962,2.339,963,1.905,1162,3.631,1188,4.147,1718,9.063,1719,6.378,1720,6.378,1721,6.378,1722,6.378,1723,6.378]],["title/classes/ErrorCustomEventHandler.html",[81,0.344,174,3.88]],["body/classes/ErrorCustomEventHandler.html",[3,0.032,4,0.037,5,0.037,8,0.134,9,0.77,24,0.304,25,0.003,26,0.986,32,0.206,38,1.942,53,3.449,55,1.495,69,0.679,81,0.283,83,0.273,85,0.037,87,0.002,88,0.002,99,1.206,110,0.384,111,0.347,113,0.831,138,1.417,139,0.865,158,2.968,170,0.932,171,1.619,174,4.643,176,3.992,177,4.146,191,1.639,210,0.25,221,3.041,224,1.28,236,5.263,243,3.336,247,1.679,332,4.185,346,6.259,370,1.523,670,1.402,935,0.253,1055,5.467,1067,3.078,1078,4.47,1080,1.14,1082,6.823,1083,6.823,1084,6.823,1085,5.704,1089,4.319,1091,3.502,1093,3.502,1104,3.336,1107,5.794,1108,3.99,1109,5.794,1110,3.99,1111,3.711,1112,3.99,1113,5.389,1117,3.197,1155,3.711,1162,3.643,1197,1.721,1204,3.227,1205,2.74,1208,2.74,1210,1.788,1211,1.887,1564,2.204,1718,8.558,1724,3.502,1725,5.086,1726,3.502,1727,3.711,1728,4.414,1729,4.414,1730,4.414,1731,4.414,1732,3.711,1733,3.99,1734,3.99,1735,3.502,1736,4.414,1737,3.502,1738,4.414,1739,3.711,1740,4.414,1741,3.502]],["title/classes/ErrorExceptionFilter.html",[81,0.344,1742,4.842]],["body/classes/ErrorExceptionFilter.html",[3,0.045,4,0.053,5,0.053,8,0.19,24,0.208,25,0.003,32,0.141,46,4.745,69,0.604,81,0.403,83,0.227,85,0.053,87,0.003,88,0.003,99,1.538,110,0.376,111,0.34,113,1.182,120,4.704,122,1.75,224,1.82,247,3.659,312,5.182,332,5.336,370,1.942,621,5.042,645,3.819,652,4.1,669,3.409,801,4.982,935,0.36,1509,8.213,1742,7.388,1743,8.173,1744,6.28,1745,9.086,1746,8.173,1747,9.623,1748,6.28,1749,7.388,1750,5.676,1751,6.28,1752,6.28,1753,6.28,1754,6.28,1755,4.745,1756,6.28,1757,6.28,1758,6.28,1759,6.28,1760,6.28,1761,6.28]],["title/injectables/ErrorLoggingMiddleware.html",[207,1.965,352,4.503]],["body/injectables/ErrorLoggingMiddleware.html",[3,0.032,4,0.038,5,0.038,8,0.134,9,0.772,24,0.275,25,0.003,32,0.17,69,0.701,81,0.284,83,0.232,85,0.038,87,0.002,88,0.002,99,1.208,100,1.611,110,0.385,111,0.347,113,0.832,122,1.233,138,1.42,139,0.691,144,1.42,149,1.023,158,2.971,171,1.623,191,1.642,207,2.355,208,2.171,210,0.25,221,2.235,222,0.995,224,1.282,236,5.27,243,3.343,247,3.153,293,4.238,312,5.257,346,6.265,352,5.397,370,1.051,371,3.085,372,3.204,373,6.376,374,3.204,375,3.204,376,5.397,377,3.719,378,3.719,379,3.51,621,5.115,646,3.204,647,5.996,652,2.888,667,1.662,669,1.567,670,2.039,671,1.451,1046,4.852,1067,3.085,1078,3.085,1085,5.711,1094,6.265,1100,3.51,1104,4.852,1117,3.204,1724,3.51,1725,5.094,1726,3.51,1732,3.719,1733,3.999,1735,3.51,1737,3.51,1739,3.719,1741,3.51,1762,8.291,1763,3.719,1764,5.094,1765,6.42,1766,5.397,1767,8.291,1768,4.424,1769,5.397,1770,5.094,1771,3.51,1772,3.719,1773,3.719,1774,3.719,1775,3.719,1776,3.719,1777,5.397,1778,3.719,1779,3.719,1780,3.719,1781,3.719,1782,3.719,1783,3.719,1784,3.999,1785,3.999,1786,3.999,1787,3.999,1788,3.999,1789,3.999,1790,3.999,1791,2.537,1792,3.719,1793,3.719,1794,3.719,1795,3.719,1796,3.719]],["title/classes/GenerateUserDto.html",[81,0.344,1797,4.25]],["body/classes/GenerateUserDto.html",[3,0.048,4,0.057,5,0.057,8,0.203,9,1.023,24,0.311,25,0.003,26,1.013,32,0.211,69,0.495,81,0.429,83,0.242,85,0.057,87,0.003,88,0.003,110,0.401,111,0.362,112,4.06,133,4.848,135,3.601,139,0.866,210,0.379,602,4.848,757,1.775,935,0.384,961,1.986,962,2.374,963,1.999,1442,5.626,1453,4.667,1797,6.756,1798,9.856,1799,8.514,1800,6.692]],["title/classes/GetAllMailQuery.html",[81,0.344,219,4.25]],["body/classes/GetAllMailQuery.html",[3,0.06,4,0.07,5,0.07,25,0.003,81,0.532,85,0.07,87,0.003,88,0.003,92,3.762,93,4.761,219,7.706,935,0.477,1801,8.303,1802,8.303]],["title/classes/GetAllMailQueryHandler.html",[81,0.344,185,4.503]],["body/classes/GetAllMailQueryHandler.html",[3,0.04,4,0.047,5,0.047,8,0.167,24,0.249,25,0.003,32,0.169,69,0.729,81,0.354,83,0.271,85,0.047,87,0.002,88,0.002,92,3.858,93,5.239,99,1.41,100,1.815,110,0.449,111,0.405,113,1.038,114,1.583,122,1.537,144,1.77,168,3.093,170,1.165,185,6.301,187,7.682,210,0.312,219,7.25,221,1.631,222,1.24,224,1.598,370,1.781,371,3.845,372,3.994,373,3.994,374,3.994,375,3.994,645,2.577,671,1.808,713,4.636,935,0.317,1080,1.424,1086,2.512,1087,4.375,1088,7.25,1090,5.947,1092,3.994,1101,4.375,1209,2.233,1568,6.776,1569,6.776,1570,4.636,1572,4.985,1573,4.985,1584,4.985,1803,8.516,1804,4.493,1805,4.298,1806,2.909,1807,2.909,1808,2.967,1809,6.301,1810,5.514,1811,5.514,1812,5.514,1813,4.985,1814,4.985,1815,4.985,1816,5.514,1817,5.514,1818,5.514,1819,5.514]],["title/classes/GetAllOccupationQuery.html",[81,0.344,1820,4.25]],["body/classes/GetAllOccupationQuery.html",[3,0.047,4,0.056,5,0.056,8,0.199,9,1.013,24,0.308,25,0.003,26,1.166,32,0.209,55,2.855,81,0.422,83,0.238,85,0.056,87,0.003,88,0.003,110,0.395,111,0.356,139,0.863,149,2.148,210,0.372,246,2.748,579,4.248,757,1.767,935,0.378,961,1.966,962,2.285,1149,3.029,1197,3.284,1820,6.686,1821,8.236,1822,6.584,1823,6.584,1824,6.584,1825,6.584]],["title/classes/GetAllOccupationQueryHandler.html",[81,0.344,1826,4.503]],["body/classes/GetAllOccupationQueryHandler.html",[3,0.039,4,0.046,5,0.046,8,0.163,24,0.179,25,0.003,32,0.166,69,0.741,76,1.486,81,0.345,83,0.195,85,0.046,87,0.002,88,0.002,99,1.387,100,1.793,110,0.323,111,0.291,113,1.013,114,1.558,139,0.614,144,2.7,170,1.137,175,2.334,176,2.27,177,2.301,178,2.152,210,0.417,221,2.18,222,1.659,224,2.438,277,1.71,370,1.752,473,2.688,499,3.242,512,4.549,530,1.929,545,3.321,579,2.334,670,2.342,671,1.765,827,3.159,935,0.309,1080,1.39,1086,3.031,1153,3.627,1154,3.764,1156,3.515,1157,3.754,1158,4.068,1162,3.243,1180,3.515,1183,2.27,1188,2.439,1564,2.688,1636,3.019,1791,3.087,1804,4.437,1807,2.84,1808,2.896,1820,4.271,1826,7.07,1827,7.07,1828,7.605,1829,5.383,1830,4.866,1831,5.383,1832,5.383,1833,4.866,1834,4.271,1835,4.866,1836,3.754]],["title/classes/GetAllProfileQuery.html",[81,0.344,1837,4.25]],["body/classes/GetAllProfileQuery.html",[3,0.06,4,0.071,5,0.071,25,0.003,81,0.537,85,0.071,87,0.003,88,0.003,935,0.48,1837,7.743,1838,6.642,1839,8.371]],["title/classes/GetAllProfileQueryHandler.html",[81,0.344,1840,4.503]],["body/classes/GetAllProfileQueryHandler.html",[3,0.039,4,0.046,5,0.046,8,0.165,24,0.181,25,0.003,32,0.167,69,0.743,76,1.502,81,0.349,83,0.197,85,0.046,87,0.002,88,0.002,99,1.397,100,1.803,110,0.326,111,0.294,113,1.024,114,1.569,139,0.619,144,1.746,170,1.149,175,2.359,176,2.294,177,2.326,178,2.175,210,0.42,221,2.196,222,1.224,224,2.153,247,2.069,277,1.728,370,1.765,477,2.503,499,3.256,514,4.466,530,1.95,547,3.271,583,3.139,667,2.044,669,1.927,670,2.686,671,1.784,935,0.312,1080,1.405,1086,3.045,1154,3.775,1162,3.267,1183,2.294,1188,2.465,1234,3.357,1236,4.71,1237,3.666,1238,3.271,1564,2.717,1604,3.271,1791,3.12,1804,4.462,1807,2.87,1808,2.927,1837,4.317,1840,7.109,1841,6.71,1842,7.639,1843,5.441,1844,3.45,1845,5.441,1846,4.918]],["title/classes/GetAllSocialNetworkQuery.html",[81,0.344,1847,4.25]],["body/classes/GetAllSocialNetworkQuery.html",[3,0.06,4,0.07,5,0.07,25,0.003,81,0.532,85,0.07,87,0.003,88,0.003,480,3.277,924,3.32,935,0.477,1847,7.706,1848,6.98,1849,8.303]],["title/classes/GetAllSocialNetworkQueryHandler.html",[81,0.344,1850,4.503]],["body/classes/GetAllSocialNetworkQueryHandler.html",[3,0.038,4,0.044,5,0.044,8,0.159,24,0.174,25,0.003,32,0.163,69,0.736,76,1.448,81,0.336,83,0.19,85,0.044,87,0.002,88,0.002,99,1.363,100,1.768,110,0.314,111,0.284,113,0.987,114,1.53,139,0.603,144,2.663,170,1.108,175,2.274,176,2.211,177,2.242,178,2.097,210,0.41,221,2.142,222,1.629,224,2.405,277,1.666,370,1.721,479,2.88,480,3.275,482,3.007,499,3.206,515,4.729,530,1.879,548,3.424,670,2.301,671,1.72,832,2.941,924,3.754,935,0.301,1080,1.354,1086,2.998,1154,3.738,1162,3.186,1183,2.211,1188,2.376,1306,3.534,1308,3.424,1319,3.657,1564,2.619,1636,2.941,1791,3.007,1804,4.377,1807,2.767,1808,2.822,1830,4.741,1834,4.161,1835,4.741,1836,3.657,1847,4.161,1850,6.974,1851,6.974,1852,7.521,1853,3.798,1854,4.161,1855,4.161,1856,5.244,1857,5.244,1858,5.244,1859,4.741,1860,5.244]],["title/classes/GetOccupationByIdQuery.html",[81,0.344,1861,4.25]],["body/classes/GetOccupationByIdQuery.html",[3,0.052,4,0.061,5,0.061,8,0.217,9,1.068,24,0.295,25,0.003,26,1.058,32,0.2,81,0.459,83,0.259,85,0.061,87,0.003,88,0.003,110,0.429,111,0.387,139,0.805,210,0.405,579,4.189,757,1.648,935,0.411,961,2.073,962,2.356,1149,3.295,1184,5.097,1821,8.121,1861,7.05,1862,5.684,1863,6.475,1864,6.475]],["title/classes/GetOccupationByIdQueryHandler.html",[81,0.344,1865,4.503]],["body/classes/GetOccupationByIdQueryHandler.html",[3,0.038,4,0.044,5,0.044,8,0.158,15,0.939,24,0.239,25,0.003,32,0.162,69,0.735,76,1.44,81,0.335,83,0.261,85,0.044,87,0.002,88,0.002,99,1.358,100,1.763,110,0.432,111,0.39,113,0.982,114,1.524,139,0.601,144,2.317,170,1.102,175,2.262,176,2.2,177,2.231,178,2.086,210,0.408,221,2.134,222,1.623,224,2.398,277,1.657,370,1.714,473,2.605,499,3.199,512,4.453,530,1.87,545,3.219,579,4.063,670,2.292,671,1.711,935,0.299,1080,1.347,1086,2.418,1153,3.516,1154,3.733,1156,3.407,1157,3.638,1158,3.943,1162,3.174,1180,3.407,1183,2.2,1186,3.516,1188,2.364,1248,2.652,1251,2.2,1564,2.605,1636,2.926,1791,2.992,1804,4.365,1805,4.138,1806,2.753,1807,2.753,1808,2.807,1827,6.955,1833,4.716,1834,4.14,1861,7.083,1865,6.955,1866,5.661,1867,5.217,1868,5.217,1869,5.217]],["title/classes/GetOccupationWithCriteriaDto.html",[81,0.344,1870,4.25]],["body/classes/GetOccupationWithCriteriaDto.html",[3,0.049,4,0.057,5,0.057,8,0.205,9,1.03,24,0.312,25,0.003,26,1.02,32,0.212,53,4.61,81,0.433,83,0.357,85,0.057,87,0.003,88,0.003,110,0.405,111,0.366,139,0.869,210,0.382,579,4.289,757,1.779,935,0.388,961,1.999,962,2.308,1149,3.109,1870,6.798,1871,9.892,1872,5.682,1873,5.804,1874,6.759,1875,6.11,1876,6.11]],["title/classes/GetOccupationWithCriteriaQuery.html",[81,0.344,1877,4.25]],["body/classes/GetOccupationWithCriteriaQuery.html",[3,0.05,4,0.059,5,0.059,8,0.212,9,1.052,24,0.29,25,0.003,32,0.197,69,0.517,81,0.448,83,0.253,85,0.059,87,0.003,88,0.003,110,0.419,111,0.378,139,0.796,210,0.395,579,4.342,757,1.63,935,0.401,961,2.042,962,2.336,1149,3.216,1821,8.032,1870,7.581,1877,6.944,1878,5.547,1879,6.92,1880,6.32,1881,6.991,1882,5.063,1883,5.063]],["title/classes/GetOccupationWithCriteriaQueryHandler.html",[81,0.344,1884,4.503]],["body/classes/GetOccupationWithCriteriaQueryHandler.html",[3,0.036,4,0.042,5,0.042,8,0.151,24,0.232,25,0.003,32,0.157,38,2.194,69,0.726,76,1.377,81,0.32,83,0.253,85,0.042,87,0.002,88,0.002,99,1.316,100,1.721,110,0.419,111,0.378,113,0.938,114,1.477,139,0.582,144,1.601,170,1.054,175,2.162,176,2.103,177,2.132,178,1.994,210,0.396,221,2.068,222,1.122,224,2.027,247,2.659,277,1.584,370,1.661,473,2.49,499,3.137,512,4.315,530,1.787,545,3.077,579,4.255,607,3.361,667,1.874,669,1.767,670,2.566,671,1.635,827,2.927,935,0.286,1080,1.288,1086,2.343,1153,3.361,1154,3.687,1156,3.256,1157,4.877,1158,3.769,1162,3.076,1183,2.103,1188,2.26,1564,2.49,1636,2.797,1791,2.86,1804,4.261,1805,4.01,1806,2.631,1807,2.631,1808,2.683,1827,6.79,1877,6.946,1884,6.79,1885,5.264,1886,4.987,1887,3.957,1888,4.987,1889,4.987,1890,3.957,1891,6.994,1892,4.987,1893,6.994,1894,4.193,1895,4.987]],["title/classes/GetOccupationWithCriteriaRequest.html",[81,0.344,1896,4.25]],["body/classes/GetOccupationWithCriteriaRequest.html",[3,0.049,4,0.057,5,0.057,8,0.205,9,1.03,24,0.312,25,0.003,26,1.02,32,0.212,53,4.61,81,0.433,83,0.357,85,0.057,87,0.003,88,0.003,110,0.405,111,0.366,139,0.869,210,0.382,579,4.289,757,1.779,935,0.388,961,1.999,962,2.308,1149,3.109,1873,5.804,1896,6.798,1897,9.892,1898,5.682,1899,6.11,1900,6.11,1901,5.682]],["title/classes/GetProfileByIdQuery.html",[81,0.344,1902,4.25]],["body/classes/GetProfileByIdQuery.html",[3,0.051,4,0.061,5,0.061,8,0.216,9,1.066,15,1.736,24,0.294,25,0.003,26,1.055,32,0.199,81,0.458,83,0.258,85,0.061,87,0.003,88,0.003,110,0.428,111,0.386,139,0.803,210,0.404,583,3.58,757,1.646,935,0.41,961,2.068,962,2.42,963,2.132,1838,7.653,1862,5.664,1902,7.035,1903,8.015]],["title/classes/GetProfileByIdQueryHandler.html",[81,0.344,1904,4.503]],["body/classes/GetProfileByIdQueryHandler.html",[3,0.037,4,0.044,5,0.044,8,0.156,15,0.929,22,1.372,24,0.238,25,0.003,32,0.161,69,0.733,76,1.426,81,0.331,83,0.259,85,0.044,87,0.002,88,0.002,99,1.348,100,1.754,110,0.429,111,0.388,113,0.972,114,1.514,139,0.597,144,1.658,170,1.091,175,2.239,176,2.178,177,2.208,178,2.065,210,0.405,221,2.119,222,1.162,224,2.077,277,1.641,370,1.702,412,2.148,477,2.376,499,3.185,514,4.309,530,1.851,547,3.105,583,3.587,667,1.94,669,1.83,670,2.614,671,1.694,928,2.625,935,0.296,1080,1.334,1086,2.401,1154,3.722,1162,3.152,1183,2.178,1188,2.34,1234,3.186,1236,4.544,1237,3.48,1238,3.105,1248,2.625,1564,2.579,1622,3.602,1636,2.897,1791,2.961,1804,4.341,1805,4.109,1806,2.725,1807,2.725,1808,2.779,1841,6.529,1866,5.636,1902,7.052,1904,6.918,1905,5.165,1906,4.342,1907,4.668,1908,5.165]],["title/classes/GetProfileWithCriteriaDto.html",[81,0.344,1909,4.25]],["body/classes/GetProfileWithCriteriaDto.html",[3,0.044,4,0.052,5,0.052,8,0.186,9,0.969,24,0.317,25,0.003,26,0.959,32,0.215,53,4.336,69,0.455,81,0.394,83,0.222,85,0.052,87,0.002,88,0.002,110,0.368,111,0.561,139,0.886,210,0.348,583,3.678,757,1.814,935,0.353,958,3.898,961,1.88,962,2.312,963,1.836,1268,5.871,1269,5.702,1271,5.871,1273,4.142,1872,5.168,1873,5.548,1875,7.285,1909,6.395,1910,9.909,1911,5.556,1912,6.147]],["title/classes/GetProfileWithCriteriaQuery.html",[81,0.344,1913,4.25]],["body/classes/GetProfileWithCriteriaQuery.html",[3,0.05,4,0.059,5,0.059,8,0.211,9,1.05,24,0.29,25,0.003,32,0.196,69,0.515,81,0.447,83,0.252,85,0.059,87,0.003,88,0.003,110,0.417,111,0.377,139,0.795,210,0.394,583,3.713,757,1.628,935,0.4,961,2.037,962,2.403,963,2.081,1838,7.569,1878,5.528,1882,5.046,1883,5.046,1909,8.339,1913,6.929,1914,7.895]],["title/classes/GetProfileWithCriteriaQueryHandler.html",[81,0.344,1915,4.503]],["body/classes/GetProfileWithCriteriaQueryHandler.html",[3,0.036,4,0.042,5,0.042,8,0.151,24,0.232,25,0.003,32,0.157,38,2.194,69,0.726,76,1.377,81,0.32,83,0.253,85,0.042,87,0.002,88,0.002,99,1.316,100,1.721,110,0.419,111,0.378,113,0.938,114,1.477,139,0.582,144,1.601,170,1.054,175,2.162,176,2.103,177,2.132,178,1.994,210,0.396,221,2.068,222,1.122,224,2.027,247,2.659,277,1.584,370,1.661,477,2.294,499,3.137,514,4.205,530,1.787,547,2.999,583,3.643,607,3.361,667,1.874,669,1.767,670,2.566,671,1.635,935,0.286,1080,1.288,1086,2.343,1154,3.687,1162,3.076,1183,2.103,1188,2.26,1234,3.077,1236,4.435,1237,3.361,1238,2.999,1269,4.435,1564,2.49,1636,2.797,1791,2.86,1804,4.261,1805,4.01,1806,2.631,1807,2.631,1808,2.683,1841,6.408,1844,3.162,1846,4.508,1885,5.264,1887,3.957,1890,3.957,1894,4.193,1913,6.946,1915,6.79,1916,4.987,1917,4.987,1918,4.987,1919,6.994,1920,4.987]],["title/classes/GetProfilesByUserIdQuery.html",[81,0.344,1921,4.25]],["body/classes/GetProfilesByUserIdQuery.html",[3,0.051,4,0.06,5,0.06,8,0.214,9,1.059,15,1.728,22,2.55,24,0.292,25,0.003,26,1.048,32,0.198,81,0.453,83,0.255,85,0.06,87,0.003,88,0.003,110,0.423,111,0.382,139,0.8,210,0.4,757,1.638,935,0.405,961,2.055,962,2.413,963,2.11,1838,7.617,1844,6.087,1862,5.605,1903,7.963,1921,6.989]],["title/classes/GetProfilesByUserIdQueryHandler.html",[81,0.344,1922,4.503]],["body/classes/GetProfilesByUserIdQueryHandler.html",[3,0.037,4,0.044,5,0.044,8,0.156,15,0.925,22,2.476,24,0.237,25,0.003,32,0.161,64,1.907,69,0.732,76,1.418,78,2.66,81,0.33,83,0.258,85,0.044,87,0.002,88,0.002,99,1.344,100,1.749,110,0.428,111,0.386,113,0.967,114,1.508,139,0.595,144,2.292,170,1.085,210,0.404,221,2.111,222,1.156,224,2.379,247,1.954,277,1.632,370,1.696,477,2.364,499,3.546,514,4.294,522,4.098,530,1.841,532,2.566,547,3.09,583,2.651,667,1.93,669,2.53,670,1.632,671,2.342,928,2.612,935,0.295,1080,1.327,1086,2.393,1234,3.17,1236,4.528,1237,3.462,1238,3.09,1247,4.077,1248,2.612,1250,3.355,1251,2.167,1265,3.355,1564,2.566,1652,4.077,1804,4.33,1805,4.095,1806,2.711,1807,2.711,1808,2.765,1841,6.511,1844,5.624,1866,5.624,1906,4.32,1921,7.037,1922,6.003,1923,5.138,1924,5.138]],["title/classes/GetProfilesWithCriteriaRequest.html",[81,0.344,1925,4.25]],["body/classes/GetProfilesWithCriteriaRequest.html",[3,0.044,4,0.052,5,0.052,8,0.186,9,0.969,24,0.317,25,0.003,26,0.959,32,0.215,53,4.336,69,0.455,81,0.394,83,0.222,85,0.052,87,0.002,88,0.002,110,0.368,111,0.561,139,0.886,210,0.348,757,1.814,935,0.353,958,3.898,961,1.88,962,2.312,963,1.836,1268,5.871,1269,5.702,1271,5.871,1273,4.142,1844,6.284,1873,5.548,1898,5.168,1901,6.775,1925,6.395,1926,9.909,1927,6.147,1928,6.147]],["title/classes/GetSocialNetworkByIdQuery.html",[81,0.344,1929,4.25]],["body/classes/GetSocialNetworkByIdQuery.html",[3,0.05,4,0.059,5,0.059,8,0.212,9,1.052,15,1.72,24,0.29,25,0.003,26,1.042,32,0.197,81,0.448,83,0.253,85,0.059,87,0.003,88,0.003,110,0.419,111,0.378,139,0.796,210,0.395,480,3.772,757,1.63,924,3.82,935,0.401,961,2.042,962,2.405,963,2.088,1330,5.359,1848,8.032,1862,5.547,1863,6.32,1864,6.32,1929,6.944]],["title/classes/GetSocialNetworkByIdQueryHandler.html",[81,0.344,1930,4.503]],["body/classes/GetSocialNetworkByIdQueryHandler.html",[3,0.037,4,0.043,5,0.043,8,0.154,15,0.918,24,0.236,25,0.003,32,0.16,69,0.73,76,1.408,81,0.327,83,0.257,85,0.043,87,0.002,88,0.002,99,1.337,100,1.742,110,0.426,111,0.384,113,0.96,114,1.501,139,0.592,144,2.28,170,1.077,175,2.211,176,2.15,177,2.18,178,2.039,210,0.402,221,2.1,222,1.598,224,2.369,277,1.62,370,1.688,479,2.8,480,3.226,482,2.924,499,3.168,515,4.638,530,1.828,548,3.33,670,2.256,671,1.672,832,2.86,924,3.534,935,0.293,1080,1.317,1086,2.38,1154,3.71,1162,3.124,1183,2.15,1188,2.31,1248,2.592,1251,2.15,1306,3.436,1308,3.33,1319,3.556,1324,3.694,1330,4.958,1564,2.547,1636,2.86,1791,2.924,1804,4.312,1805,4.073,1806,2.691,1807,2.691,1808,2.744,1834,4.046,1851,6.872,1853,3.694,1854,4.046,1855,4.046,1859,4.61,1866,5.605,1906,4.287,1929,7.014,1930,6.872,1931,5.1,1932,5.1]],["title/classes/GetSocialNetworkWithCriteriaQuery.html",[81,0.344,1933,4.25]],["body/classes/GetSocialNetworkWithCriteriaQuery.html",[3,0.046,4,0.054,5,0.054,8,0.194,9,0.994,24,0.304,25,0.003,26,0.984,32,0.206,53,4.451,55,2.167,81,0.41,83,0.35,85,0.054,87,0.003,88,0.003,110,0.383,111,0.496,139,0.856,210,0.362,480,3.826,757,1.754,864,5.574,924,3.875,935,0.367,961,1.93,962,2.341,963,1.911,1197,2.494,1330,5.436,1848,8.148,1873,5.656,1878,5.076,1933,6.563,1934,6.398,1935,6.398,1936,6.398]],["title/classes/GetSocialNetworkWithCriteriaQueryHandler.html",[81,0.344,1937,4.503]],["body/classes/GetSocialNetworkWithCriteriaQueryHandler.html",[3,0.035,4,0.041,5,0.041,8,0.148,24,0.229,25,0.003,32,0.155,38,2.146,69,0.721,76,1.347,81,0.313,83,0.249,85,0.041,87,0.002,88,0.002,99,1.296,100,1.701,110,0.413,111,0.373,113,0.918,114,1.455,139,0.574,144,1.566,170,1.031,175,2.116,176,2.058,177,2.086,178,1.951,210,0.39,221,2.036,222,1.098,224,1.996,247,2.619,277,1.55,370,1.636,479,2.68,480,3.151,482,2.798,499,3.107,515,4.497,530,1.749,548,3.186,607,3.288,667,1.833,669,1.729,670,2.535,671,1.6,832,4.477,924,3.467,935,0.28,1080,1.26,1086,2.308,1154,3.664,1162,3.029,1183,2.058,1188,2.211,1306,3.288,1308,3.186,1330,4.863,1564,2.437,1636,2.737,1791,2.798,1804,4.211,1805,3.949,1806,2.575,1807,2.575,1808,2.626,1851,6.71,1853,4.988,1854,3.872,1855,3.872,1885,5.214,1887,3.872,1890,3.872,1894,4.102,1933,6.879,1937,6.71,1938,4.88,1939,4.88,1940,4.88,1941,6.887,1942,4.88,1943,6.887,1944,4.88,1945,4.88]],["title/classes/GetSocialNetworkWithCriteriaRequest.html",[81,0.344,1946,4.25]],["body/classes/GetSocialNetworkWithCriteriaRequest.html",[3,0.047,4,0.056,5,0.056,8,0.199,9,1.013,24,0.308,25,0.003,26,1.003,32,0.209,53,4.534,81,0.422,83,0.354,85,0.056,87,0.003,88,0.003,110,0.395,111,0.356,139,0.863,210,0.372,480,3.867,757,1.767,924,3.917,935,0.378,961,1.966,962,2.285,1149,3.029,1330,5.495,1873,5.734,1898,5.535,1899,5.952,1900,5.952,1901,5.535,1946,6.686,1947,9.797]],["title/classes/GetUserByEmailQuery.html",[81,0.344,1948,4.503]],["body/classes/GetUserByEmailQuery.html",[3,0.052,4,0.062,5,0.062,8,0.22,9,1.077,22,2.583,24,0.297,25,0.003,26,1.208,32,0.202,81,0.466,83,0.263,85,0.062,87,0.003,88,0.003,110,0.435,111,0.393,139,0.81,210,0.411,757,1.529,935,0.417,969,5.957,1332,3.15,1948,7.536,1949,7.041,1950,7.266,1951,7.266,1952,7.266,1953,7.266]],["title/classes/GetUserByEmailQueryHandler.html",[81,0.344,1954,4.503]],["body/classes/GetUserByEmailQueryHandler.html",[3,0.041,4,0.048,5,0.048,8,0.173,13,2.437,15,1.026,21,2.471,22,2.461,24,0.254,25,0.003,32,0.172,64,2.116,69,0.715,76,1.573,81,0.365,83,0.277,85,0.048,87,0.002,88,0.002,99,1.442,100,1.846,110,0.459,111,0.415,112,3.323,113,1.072,114,1.619,144,1.83,170,1.204,210,0.434,221,1.685,222,1.282,277,1.81,370,1.821,498,3.007,499,3.319,522,3.827,530,2.043,532,2.846,599,2.751,602,2.951,667,2.141,669,2.019,670,2.435,671,1.869,935,0.327,1080,1.472,1086,2.568,1089,3.84,1251,2.403,1381,3.13,1629,3.517,1804,4.569,1805,4.395,1806,3.007,1807,3.007,1808,3.067,1948,7.786,1954,6.444,1955,6.273,1956,8.372,1957,5.699,1958,4.128,1959,5.699,1960,4.128,1961,4.791]],["title/classes/GetUserByUsernameQuery.html",[81,0.344,1962,4.503]],["body/classes/GetUserByUsernameQuery.html",[3,0.052,4,0.062,5,0.062,8,0.22,9,1.077,22,2.583,24,0.297,25,0.003,26,1.208,32,0.202,81,0.466,83,0.263,85,0.062,87,0.003,88,0.003,110,0.435,111,0.393,139,0.81,210,0.411,596,4.599,757,1.529,935,0.417,1332,3.15,1949,7.041,1962,7.536,1963,7.266,1964,5.765,1965,7.266,1966,7.266]],["title/classes/GetUserByUsernameQueryHandler.html",[81,0.344,1967,4.503]],["body/classes/GetUserByUsernameQueryHandler.html",[3,0.041,4,0.048,5,0.048,8,0.173,13,2.437,15,1.026,21,2.471,22,2.461,24,0.254,25,0.003,32,0.172,64,2.116,69,0.715,76,1.573,81,0.365,83,0.277,85,0.048,87,0.002,88,0.002,99,1.442,100,1.846,110,0.459,111,0.415,113,1.072,114,1.619,144,1.83,170,1.204,210,0.434,221,1.685,222,1.282,277,1.81,370,1.821,498,3.007,499,3.319,522,3.827,530,2.043,532,2.846,596,3.473,599,2.751,602,2.951,667,2.141,669,2.019,670,2.435,671,1.869,935,0.327,1080,1.472,1086,2.568,1089,3.84,1251,2.403,1381,3.13,1629,3.517,1804,4.569,1805,4.395,1806,3.007,1807,3.007,1808,3.067,1955,6.273,1958,4.128,1960,4.128,1961,4.791,1962,7.786,1967,6.444,1968,8.372,1969,5.699,1970,5.152]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[81,0.344,1971,4.25]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[3,0.047,4,0.056,5,0.056,8,0.199,9,1.013,22,2.603,24,0.308,25,0.003,26,1.269,32,0.209,81,0.422,83,0.238,85,0.056,87,0.003,88,0.003,110,0.395,111,0.356,139,0.863,210,0.372,412,4.212,613,5.169,638,5.618,757,1.728,935,0.378,1332,2.855,1949,7.096,1971,6.686,1972,6.584,1973,7.773,1974,5.952,1975,6.584,1976,8.426]],["title/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[81,0.344,1977,4.503]],["body/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[3,0.036,4,0.042,5,0.042,8,0.151,15,1.261,22,2.662,24,0.232,25,0.003,32,0.158,64,1.856,69,0.726,76,1.38,81,0.321,83,0.253,85,0.042,87,0.002,88,0.002,99,1.318,100,1.724,110,0.42,111,0.379,112,2.168,113,0.941,114,1.48,144,1.605,170,1.056,175,2.168,176,2.108,177,2.137,178,1.999,210,0.396,221,2.072,222,1.576,224,1.449,247,2.664,277,1.588,370,1.664,498,2.638,499,3.141,522,3.498,530,1.792,531,4.885,532,2.497,596,2.265,602,2.588,605,3.487,613,4.624,638,5.025,667,1.878,669,1.771,670,2.569,935,0.287,1080,1.291,1086,2.347,1154,3.689,1162,3.081,1183,2.108,1188,2.265,1381,2.745,1564,2.497,1636,2.804,1804,4.267,1805,4.017,1806,2.638,1807,2.638,1808,2.69,1955,5.857,1960,3.621,1971,6.953,1977,6.799,1978,7.367,1979,5,1980,3.967,1981,4.519,1982,7.006,1983,5,1984,5]],["title/classes/GetUserLoginQuery.html",[81,0.344,787,4.25]],["body/classes/GetUserLoginQuery.html",[3,0.049,4,0.057,5,0.057,8,0.205,9,1.03,22,2.628,24,0.312,25,0.003,26,1.276,32,0.212,81,0.433,83,0.244,85,0.057,87,0.003,88,0.003,110,0.405,111,0.366,139,0.869,210,0.382,596,4.482,757,1.742,776,8.099,787,6.798,935,0.388,1332,2.931,1949,7.165,1964,5.363,1985,6.759,1986,6.759,1987,8.568]],["title/classes/GetUserLoginQueryHandler.html",[81,0.344,742,4.25]],["body/classes/GetUserLoginQueryHandler.html",[3,0.03,4,0.035,5,0.035,8,0.125,13,2.605,14,2.803,15,1.097,21,2.642,22,2.272,24,0.241,25,0.003,26,1.066,32,0.163,64,1.529,69,0.718,76,1.137,81,0.264,83,0.262,85,0.035,87,0.002,88,0.002,99,1.147,100,1.908,110,0.435,111,0.392,112,3.144,113,1.147,114,1.693,120,2.133,122,1.148,144,2.328,170,0.87,210,0.345,221,2.529,222,1.924,224,1.766,247,2.317,277,1.309,370,1.448,498,2.173,499,2.872,522,3.043,530,1.476,531,4.249,532,2.057,596,3.285,599,2.941,602,3.155,605,4.249,645,1.925,667,1.548,669,1.459,670,2.304,671,2.628,716,5.123,717,4.835,718,3.664,735,5.123,736,3.463,742,4.835,744,6.786,776,3.269,787,6.358,793,5.508,935,0.236,1080,1.064,1086,2.042,1092,2.984,1154,3.48,1155,3.463,1251,2.569,1322,3.418,1381,2.262,1464,2.477,1804,3.826,1805,3.494,1806,2.173,1807,2.173,1808,2.216,1955,5.804,1960,4.413,1961,5.123,1970,5.508,1988,5.508,1989,5.508,1990,7.244,1991,4.12,1992,3.269,1993,3.724,1994,4.12,1995,8.954,1996,6.094,1997,6.094,1998,6.094,1999,3.724]],["title/classes/GetUserQuery.html",[81,0.344,784,4.048]],["body/classes/GetUserQuery.html",[3,0.052,4,0.062,5,0.062,8,0.22,9,1.077,24,0.297,25,0.003,26,1.208,32,0.202,81,0.466,83,0.263,85,0.062,87,0.003,88,0.003,110,0.435,111,0.526,139,0.81,210,0.411,412,4.222,757,1.529,784,6.774,935,0.417,1332,3.15,1458,4.264,1471,5.49,1949,7.041,2000,7.266,2001,7.266,2002,7.266]],["title/classes/GetUserQueryHandler.html",[81,0.344,2003,4.503]],["body/classes/GetUserQueryHandler.html",[3,0.039,4,0.046,5,0.046,8,0.166,15,0.984,22,1.453,24,0.247,25,0.003,32,0.168,64,2.03,69,0.744,76,1.51,81,0.351,83,0.269,85,0.046,87,0.002,88,0.002,99,1.403,100,1.808,110,0.447,111,0.403,113,1.029,114,1.575,144,2.393,170,1.155,210,0.422,221,1.617,222,1.677,224,1.585,247,2.08,277,1.738,370,1.771,498,2.886,499,3.264,522,3.722,530,1.96,532,2.731,661,4.867,784,6.882,786,7.225,935,0.314,1080,1.412,1086,2.498,1381,3.003,1564,2.731,1604,3.289,1804,4.474,1805,4.274,1806,2.886,1807,2.886,1808,2.943,1955,6.142,1958,3.962,1981,6.738,2003,6.267,2004,4.34,2005,7.656,2006,5.47,2007,5.47,2008,5.47,2009,5.47,2010,5.47,2011,5.47,2012,5.47]],["title/classes/GetUserWithCriteriaDto.html",[81,0.344,2013,4.048]],["body/classes/GetUserWithCriteriaDto.html",[3,0.032,4,0.038,5,0.038,8,0.134,9,0.774,22,2.736,24,0.338,25,0.003,26,1.094,32,0.229,43,4.53,53,3.465,81,0.285,83,0.161,85,0.038,87,0.002,88,0.002,110,0.266,111,0.587,112,3.285,139,0.924,210,0.251,596,3.432,757,1.893,935,0.255,961,1.502,962,2.057,963,1.327,1872,3.735,1873,4.674,1876,4.016,1911,4.016,2013,4.867,2014,10.298,2015,7.576,2016,7.576,2017,7.576,2018,7.576,2019,6.011,2020,7.576,2021,7.576,2022,6.44,2023,4.443,2024,4.443,2025,4.443,2026,4.443,2027,4.443,2028,4.443,2029,4.443]],["title/classes/GetUserWithCriteriaQuery.html",[81,0.344,2030,4.25]],["body/classes/GetUserWithCriteriaQuery.html",[3,0.051,4,0.06,5,0.06,8,0.215,9,1.061,22,2.673,24,0.293,25,0.003,32,0.199,69,0.524,81,0.455,83,0.256,85,0.06,87,0.003,88,0.003,110,0.425,111,0.383,139,0.801,210,0.401,757,1.506,935,0.407,1332,3.073,1878,5.624,1880,6.408,1882,5.134,1883,5.134,1914,6.408,1949,6.964,2013,8.245,2030,7.005,2031,7.088]],["title/classes/GetUserWithCriteriaQueryHandler.html",[81,0.344,2032,4.503]],["body/classes/GetUserWithCriteriaQueryHandler.html",[3,0.04,4,0.047,5,0.047,8,0.168,22,2.433,24,0.25,25,0.003,32,0.169,38,2.439,64,2.058,69,0.708,76,1.53,81,0.356,83,0.272,85,0.047,87,0.002,88,0.002,99,1.416,100,1.82,110,0.451,111,0.407,113,1.043,114,1.589,170,1.171,210,0.426,221,1.639,247,2.108,277,1.761,370,1.787,498,2.925,499,3.282,522,3.757,530,1.987,532,2.768,607,3.736,935,0.318,1080,1.432,1086,2.521,1089,3.736,1381,3.044,1629,3.421,1804,4.505,1805,4.314,1806,2.925,1807,2.925,1808,2.983,1885,5.507,1887,4.399,1890,4.399,1955,6.185,2030,7.266,2032,6.325,2033,5.544,2034,5.544,2035,5.544,2036,7.523,2037,7.523,2038,5.544,2039,5.544,2040,5.544,2041,5.544,2042,5.544,2043,5.544,2044,5.544]],["title/entities/GroupEntity.html",[0,1.876,459,3.498]],["body/entities/GroupEntity.html",[0,2.06,2,1.836,3,0.028,4,0.033,5,0.033,6,4.714,8,0.119,9,0.847,13,3.014,14,3.244,15,1.269,21,3.057,24,0.318,25,0.003,26,0.932,27,3.56,30,2.362,32,0.216,37,5.353,38,4.467,39,4.964,40,5.788,43,3.87,51,2.937,69,0.62,70,2.937,71,3.521,72,3.584,74,1.928,75,3.521,76,1.084,81,0.377,82,1.896,83,0.283,85,0.033,87,0.002,88,0.002,454,4.83,459,3.841,461,5.275,463,2.845,468,2.424,469,5.784,563,4.102,567,3.964,575,5.67,843,3.841,846,5.275,847,4.102,859,5.317,864,5.275,867,4.102,905,4.604,906,4.751,921,3.117,925,3.979,933,2.034,968,5.928,1012,3.551,1018,6.211,1454,4.945,2045,3.929,2046,7.051,2047,7.051,2048,7.051,2049,5.882,2050,5.882,2051,3.929,2052,5.882,2053,3.929,2054,3.929,2055,3.929,2056,3.929,2057,5.882,2058,3.929,2059,3.929,2060,4.445,2061,3.929,2062,5.882,2063,3.929,2064,3.929,2065,3.929]],["title/entities/GroupMembershipEntity.html",[0,1.876,461,3.61]],["body/entities/GroupMembershipEntity.html",[0,2.318,2,2.156,3,0.033,4,0.039,5,0.039,6,4.737,8,0.14,9,0.93,13,3.308,14,3.56,15,1.393,21,3.355,24,0.318,25,0.003,26,0.788,27,3.562,32,0.216,35,3.98,38,2.911,39,5.361,40,5.216,43,4.098,51,3.305,55,2.242,69,0.625,70,2.304,71,3.864,72,3.934,73,4.541,74,2.265,75,3.864,76,1.274,81,0.296,83,0.167,85,0.039,87,0.002,88,0.002,293,2.588,445,5.467,453,2.926,459,6.082,461,4.46,462,7.788,556,5.848,567,5.697,569,4.171,853,5.251,854,5.251,925,4.735,928,2.345,933,2.389,958,2.926,1037,3.661,2019,6.14,2066,4.614,2067,6.618,2068,4.614,2069,4.614,2070,4.614,2071,6.618,2072,4.614,2073,4.614,2074,6.506,2075,4.614,2076,4.614,2077,4.614,2078,4.614]],["title/controllers/HealthCheckController.html",[89,2.723,2079,4.503]],["body/controllers/HealthCheckController.html",[3,0.041,4,0.048,5,0.048,8,0.171,25,0.003,27,2.098,32,0.127,69,0.713,81,0.362,85,0.048,87,0.002,88,0.002,89,2.873,91,2.728,96,3.808,97,3.301,99,1.434,113,1.063,114,1.61,119,3.584,122,1.575,127,3.69,128,3.104,138,1.814,144,1.814,263,4.271,288,6.408,289,4.583,292,5.76,293,3.17,299,6.408,302,4.271,303,4.751,305,4.271,306,4.751,307,4.751,309,5.109,313,3.399,314,4.484,340,6.408,1478,6.517,1479,5.52,1481,8.188,1490,4.271,1491,4.751,1492,4.751,2079,6.408,2080,5.652,2081,10.742,2082,5.652,2083,9.231,2084,5.652,2085,9.231,2086,4.271,2087,5.109,2088,5.109,2089,5.652,2090,5.652,2091,5.652]],["title/modules/HealthCheckModule.html",[149,1.238,322,4.048]],["body/modules/HealthCheckModule.html",[3,0.046,4,0.054,5,0.054,25,0.003,55,2.154,69,0.759,81,0.408,85,0.054,87,0.003,88,0.003,91,3.976,122,1.772,149,1.904,151,3.566,152,4.621,160,4.954,161,3.823,162,3.823,164,4.954,165,3.823,169,5.224,170,1.343,178,3.294,322,7.755,340,5.345,368,8.128,1478,7.755,1479,4.605,1481,6.537,1489,5.345,1712,5.747,2079,7.684,2086,4.805,2087,5.747,2088,5.747,2092,5.747,2093,5.747,2094,6.358,2095,8.239,2096,6.358,2097,6.926,2098,6.358]],["title/classes/HealthCheckQuery.html",[81,0.344,1487,4.25]],["body/classes/HealthCheckQuery.html",[3,0.06,4,0.071,5,0.071,25,0.003,81,0.535,85,0.071,87,0.003,88,0.003,935,0.479,1479,6.038,1487,7.725,2099,8.337,2100,8.337]],["title/classes/HealthCheckQueryHandler.html",[81,0.344,2097,4.503]],["body/classes/HealthCheckQueryHandler.html",[3,0.036,4,0.042,5,0.042,8,0.15,24,0.164,25,0.003,32,0.156,69,0.645,81,0.317,83,0.178,85,0.042,87,0.002,88,0.002,99,1.307,100,1.712,110,0.296,111,0.267,113,0.929,114,2.012,144,1.585,170,1.043,210,0.393,221,2.716,222,1.111,224,1.432,370,1.65,748,5.511,801,3.919,935,0.284,1080,1.275,1086,2.921,1092,3.577,1154,3.676,1479,5.819,1481,3.919,1487,3.919,1489,7.328,1490,5.249,1491,4.152,1492,4.152,1764,3.919,1804,4.239,1807,2.606,2086,3.732,2097,5.839,2101,8.034,2102,4.939,2103,9.526,2104,9.786,2105,9.786,2106,9.786,2107,4.939,2108,4.939,2109,4.939,2110,4.939,2111,4.939,2112,4.939,2113,6.946,2114,6.946,2115,6.946,2116,4.939,2117,4.939,2118,4.939,2119,8.717,2120,6.946,2121,4.939,2122,4.939,2123,4.939,2124,4.465,2125,4.939,2126,4.939,2127,4.939,2128,4.939,2129,4.465,2130,4.939,2131,4.939,2132,4.939,2133,4.939]],["title/classes/HealthCheckResponse.html",[81,0.344,1490,4.048]],["body/classes/HealthCheckResponse.html",[3,0.051,4,0.061,5,0.061,8,0.216,9,1.066,24,0.294,25,0.003,32,0.199,69,0.528,81,0.458,83,0.258,85,0.061,87,0.003,88,0.003,110,0.428,111,0.386,139,0.803,210,0.404,757,1.513,935,0.41,1332,3.095,1479,6.986,1490,6.7,2086,5.394,2134,9.645,2135,7.138,2136,10.088,2137,7.138,2138,10.374,2139,7.138,2140,7.138]],["title/classes/IdProfileDto.html",[81,0.344,2141,4.842]],["body/classes/IdProfileDto.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,15,1.744,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.261,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1267,5.724,2141,8.068,2142,9.691,2143,8.925]],["title/classes/InvalidIdException.html",[81,0.344,1654,4.048]],["body/classes/InvalidIdException.html",[3,0.054,4,0.064,5,0.064,15,1.361,25,0.003,32,0.17,69,0.559,81,0.485,85,0.064,87,0.003,88,0.003,120,3.915,122,2.108,210,0.56,645,4.624,718,4.547,935,0.434,936,4.756,937,4.1,940,3.928,1241,5.391,1654,6.942,2144,7.562,2145,7.562,2146,6.836]],["title/classes/InvalidMailException.html",[81,0.344,1393,4.25]],["body/classes/InvalidMailException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.17,69,0.559,81,0.485,85,0.064,87,0.003,88,0.003,120,3.915,122,2.108,210,0.56,645,4.624,718,4.547,935,0.434,936,4.756,937,4.1,940,3.928,1241,5.391,1393,7.289,1695,6.836,1696,6.836,1697,6.358,2147,7.562]],["title/classes/InvalidParameterEntityException.html",[81,0.344,1239,3.88]],["body/classes/InvalidParameterEntityException.html",[3,0.046,4,0.054,5,0.054,24,0.274,25,0.003,32,0.144,69,0.612,81,0.53,82,3.088,83,0.231,85,0.054,87,0.003,88,0.003,110,0.496,111,0.346,120,3.312,122,1.783,144,2.656,210,0.362,247,2.433,313,3.847,577,3.947,645,4.284,718,4.974,935,0.367,936,4.283,937,3.692,940,3.537,942,3.947,1239,5.991,1241,4.855,1242,5.769,1409,4.634,2148,5.783,2149,8.272,2150,10.036,2151,6.398,2152,6.398,2153,7.478,2154,5.783,2155,6.398,2156,6.398,2157,6.398,2158,6.398,2159,6.398]],["title/classes/InvalidPasswordException.html",[81,0.344,1391,4.048]],["body/classes/InvalidPasswordException.html",[3,0.052,4,0.061,5,0.061,25,0.003,32,0.162,69,0.532,81,0.461,85,0.061,87,0.003,88,0.003,120,3.722,122,2.004,210,0.547,599,4.298,645,4.521,718,4.323,873,4.694,935,0.413,936,4.61,937,3.975,940,3.807,942,4.435,1241,5.226,1391,6.73,1409,5.207,1441,5.704,2160,6.498,2161,6.498,2162,7.189,2163,7.189,2164,9.676,2165,7.189,2166,8.906,2167,7.189]],["title/classes/InvalidUsernameException.html",[81,0.344,1394,4.25]],["body/classes/InvalidUsernameException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.169,69,0.557,81,0.483,85,0.064,87,0.003,88,0.003,120,3.901,122,2.1,210,0.559,596,3.414,645,4.616,718,4.531,935,0.432,936,4.745,937,4.091,940,3.919,1241,5.379,1394,7.273,1703,6.811,1704,6.811,1749,6.811,2146,6.811]],["title/entities/InvoicesEntity.html",[0,1.876,464,3.736]],["body/entities/InvoicesEntity.html",[0,0.93,2,1.24,3,0.019,4,0.023,5,0.023,6,4.824,8,0.08,9,0.658,13,2.341,14,2.519,15,0.986,21,2.375,24,0.362,25,0.003,26,1.19,27,3.682,28,6.815,29,7.805,30,5.915,31,7.134,32,0.223,35,1.596,37,2.539,38,1.167,43,3.282,51,2.16,55,0.899,69,0.405,70,4.816,71,2.735,72,2.784,73,2.539,74,1.302,75,2.735,76,0.732,79,6.143,80,6.923,81,0.277,82,1.281,83,0.34,85,0.023,86,6.733,87,0.001,88,0.001,111,0.234,289,4.183,313,1.596,464,3.017,486,4.603,589,4.139,816,4.951,873,5.697,892,3.017,925,3.792,928,1.349,933,1.374,1666,4.951,1674,3.911,1675,2.399,1691,6.744,1692,2.005,1693,2.231,2168,2.654,2169,6.957,2170,5.477,2171,5.477,2172,5.477,2173,5.477,2174,5.477,2175,6.957,2176,5.477,2177,5.477,2178,5.477,2179,5.477,2180,2.654,2181,4.326,2182,2.654,2183,4.326,2184,2.654,2185,4.326,2186,2.654,2187,4.326,2188,2.654,2189,4.326,2190,2.654,2191,4.326,2192,2.654,2193,2.654,2194,2.654,2195,2.654,2196,2.654,2197,6.957,2198,2.654,2199,2.654,2200,2.654,2201,4.326,2202,2.654,2203,2.654,2204,2.654,2205,4.326,2206,5.477,2207,2.654,2208,4.326,2209,2.654,2210,4.326,2211,2.654,2212,2.654,2213,4.326,2214,2.654,2215,3.911,2216,2.654,2217,2.654,2218,2.654,2219,2.654,2220,2.654,2221,2.654,2222,2.654,2223,2.654]],["title/classes/IsTestEnvironmentPipe.html",[81,0.344,417,4.503]],["body/classes/IsTestEnvironmentPipe.html",[3,0.047,4,0.056,5,0.056,8,0.199,24,0.218,25,0.003,32,0.148,69,0.487,81,0.422,83,0.238,85,0.056,87,0.003,88,0.003,99,1.585,110,0.395,111,0.356,113,1.239,120,3.409,122,1.835,144,2.114,224,1.909,370,2.002,371,4.592,372,4.769,373,4.769,374,4.769,375,4.769,387,6.731,417,7.084,418,7.617,645,3.076,671,2.159,935,0.378,1197,3.284,1505,5.952,1813,5.952,1814,5.952,1815,5.952,2224,6.584,2225,9.293,2226,8.426,2227,8.426,2228,10.126,2229,8.4,2230,9.797,2231,6.584,2232,6.584,2233,5.952]],["title/entities/JoinedConversation.html",[0,1.876,466,3.61]],["body/entities/JoinedConversation.html",[0,2.421,2,2.291,3,0.035,4,0.042,5,0.042,6,4.813,8,0.148,9,0.962,13,3.421,14,3.681,15,1.44,21,3.47,24,0.324,25,0.003,26,1.034,27,3.625,32,0.22,35,4.155,43,4.18,51,3.451,69,0.592,70,3.996,71,3.996,72,4.068,73,4.696,74,2.406,75,3.996,76,1.353,81,0.314,83,0.177,85,0.042,87,0.002,88,0.002,454,5.361,466,4.657,467,7.536,468,3.025,477,4.372,563,6.388,573,4.432,583,2.97,907,3.201,925,4.831,928,2.492,933,2.538,1018,6.349,2234,4.903,2235,8.002,2236,4.903,2237,4.903,2238,4.903,2239,4.903,2240,4.903,2241,4.903,2242,4.903,2243,4.903,2244,4.903,2245,4.903,2246,4.903]],["title/injectables/JwtAuthenticationGuard.html",[207,1.965,2247,4.842]],["body/injectables/JwtAuthenticationGuard.html",[3,0.057,4,0.067,5,0.067,25,0.003,55,2.681,69,0.698,81,0.508,85,0.067,87,0.003,88,0.003,122,2.206,207,3.464,208,3.885,729,5.334,940,3.384,2247,8.535,2248,7.155,2249,7.915,2250,6.654,2251,7.155]],["title/injectables/JwtRefreshGuard.html",[207,1.965,653,4.25]],["body/injectables/JwtRefreshGuard.html",[3,0.056,4,0.066,5,0.066,25,0.003,55,2.651,69,0.693,81,0.502,85,0.066,87,0.003,88,0.003,122,2.181,207,3.44,208,3.84,613,4.947,638,4.486,653,7.44,729,5.272,940,3.345,2248,7.072,2250,6.577,2251,7.072,2252,7.824]],["title/injectables/JwtRefreshTokenStrategy.html",[207,1.965,723,4.25]],["body/injectables/JwtRefreshTokenStrategy.html",[3,0.038,4,0.045,5,0.045,8,0.161,24,0.243,25,0.003,26,0.634,32,0.165,38,2.343,69,0.753,81,0.342,83,0.265,85,0.045,87,0.002,88,0.002,99,1.377,100,1.783,110,0.439,111,0.396,113,1.002,114,1.546,122,1.485,138,1.71,139,0.444,144,2.35,159,6.019,193,4.025,207,2.685,208,2.614,210,0.301,222,1.198,247,2.026,613,4.752,618,3.715,621,6.165,637,4.402,638,3.054,650,4.815,651,4.025,652,3.478,723,5.808,729,3.589,735,6.154,736,4.478,779,6.806,780,4.478,781,4.478,795,7.031,804,4.815,811,4.478,940,2.277,942,3.287,1973,4.226,2253,8.364,2254,5.327,2255,5.327,2256,5.327,2257,7.32,2258,5.327,2259,4.478,2260,4.815,2261,4.478,2262,4.226,2263,5.808,2264,4.478,2265,4.815,2266,4.815,2267,6.617,2268,5.808,2269,4.815,2270,5.327,2271,5.327]],["title/injectables/JwtStrategy.html",[207,1.965,724,4.25]],["body/injectables/JwtStrategy.html",[3,0.04,4,0.048,5,0.048,8,0.17,15,1.009,24,0.251,25,0.003,26,0.667,32,0.17,64,2.081,69,0.762,76,1.547,78,2.902,81,0.359,83,0.274,85,0.048,87,0.002,88,0.002,99,1.426,100,1.83,110,0.454,111,0.41,113,1.055,114,1.601,122,1.562,139,0.467,144,2.433,207,2.78,208,2.751,210,0.429,221,1.657,222,1.261,277,1.781,498,2.957,499,3.297,522,3.785,530,2.009,532,2.799,621,5.298,637,4.558,652,3.66,724,6.014,729,3.777,751,5.067,779,6.952,780,4.712,781,4.712,795,4.712,811,4.712,940,2.396,942,3.458,1958,4.06,2259,4.712,2260,5.067,2261,4.712,2262,4.447,2263,4.447,2264,4.712,2265,5.067,2266,5.067,2267,5.067,2268,4.447,2269,5.067,2272,5.605,2273,5.605,2274,7.579,2275,5.605]],["title/classes/ListRolesDto.html",[81,0.344,2276,4.503]],["body/classes/ListRolesDto.html",[3,0.051,4,0.06,5,0.06,8,0.214,9,1.059,24,0.292,25,0.003,32,0.198,69,0.522,81,0.453,83,0.255,85,0.06,87,0.003,88,0.003,110,0.423,111,0.382,133,4.97,135,3.801,139,0.8,210,0.4,602,4.97,757,1.638,935,0.405,961,2.055,962,2.413,963,2.11,1453,4.926,2276,7.406,2277,9.6,2278,7.064,2279,7.064,2280,7.064]],["title/injectables/LocalAuthenticationGuard.html",[207,1.965,648,4.503]],["body/injectables/LocalAuthenticationGuard.html",[3,0.057,4,0.068,5,0.068,25,0.003,69,0.702,81,0.512,85,0.068,87,0.003,88,0.003,122,2.223,207,3.48,208,3.915,648,7.975,729,5.375,940,3.41,2250,6.706,2281,7.977,2282,7.977]],["title/injectables/LocalStrategy.html",[207,1.965,725,4.25]],["body/injectables/LocalStrategy.html",[3,0.044,4,0.052,5,0.052,8,0.184,24,0.266,25,0.003,26,1.207,32,0.18,64,2.261,69,0.731,78,3.154,81,0.391,83,0.29,85,0.052,87,0.002,88,0.002,99,1.507,100,1.908,110,0.48,111,0.433,113,1.146,114,1.692,122,1.698,138,1.956,144,1.956,207,2.939,208,2.99,210,0.345,599,4.768,637,4.818,643,6.888,644,5.121,725,6.357,729,4.105,762,6.054,940,2.604,942,3.759,2259,5.121,2261,5.121,2262,4.833,2264,5.121,2283,8.953,2284,6.092,2285,6.092,2286,6.092,2287,8.012,2288,8.012,2289,6.092,2290,5.507,2291,6.092,2292,6.092,2293,6.092]],["title/classes/LoggingTypeEnum.html",[81,0.344,1067,3.736]],["body/classes/LoggingTypeEnum.html",[3,0.047,4,0.055,5,0.055,8,0.196,9,1.002,24,0.306,25,0.003,26,1.098,32,0.207,55,3.124,81,0.416,85,0.055,87,0.003,88,0.003,92,4.412,139,0.894,312,6.389,621,6.217,670,3.201,935,0.372,1067,5.816,1197,3.595,1726,7.727,2294,5.857,2295,9.707,2296,6.479,2297,6.479,2298,6.479]],["title/classes/LoginOfUserEvent.html",[81,0.344,1992,4.25]],["body/classes/LoginOfUserEvent.html",[3,0.045,4,0.053,5,0.053,8,0.191,9,0.984,22,2.559,24,0.32,25,0.003,26,1.258,32,0.217,55,2.774,81,0.404,83,0.228,85,0.053,87,0.003,88,0.003,110,0.377,111,0.341,139,0.89,149,2.103,210,0.356,246,2.691,596,4.365,757,1.803,762,6.188,935,0.362,1197,3.192,1332,2.731,1457,4.562,1461,4.562,1660,6.188,1661,4.76,1964,4.998,1992,6.497,2299,9.987]],["title/classes/LoginOfUserEventHandler.html",[81,0.344,2300,4.503]],["body/classes/LoginOfUserEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,22,1.623,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,596,2.768,935,0.351,1080,1.578,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1464,5.726,1629,3.77,1992,7.555,1993,5.523,2300,6.749,2301,8.966,2302,6.11,2303,6.11,2304,6.11]],["title/classes/MailDto.html",[81,0.344,255,4.25]],["body/classes/MailDto.html",[3,0.045,4,0.053,5,0.053,8,0.189,9,0.978,24,0.319,25,0.003,26,1.215,27,3.363,32,0.216,69,0.602,79,5.315,81,0.522,82,3.012,83,0.226,85,0.053,87,0.003,88,0.003,92,4.511,110,0.374,111,0.539,128,3.427,210,0.353,255,6.458,577,5.589,915,6.151,935,0.358,961,1.899,962,2.323,963,1.864,969,5.316,1053,7.396,2305,6.241,2306,7.187,2307,6.241,2308,6.241,2309,6.241,2310,6.241,2311,6.241]],["title/classes/MailLandingPageDto.html",[81,0.344,1809,4.503]],["body/classes/MailLandingPageDto.html",[3,0.047,4,0.056,5,0.056,8,0.199,9,1.013,15,1.763,24,0.308,25,0.003,26,1.269,32,0.209,81,0.422,83,0.238,85,0.056,87,0.003,88,0.003,92,4.439,93,6.115,110,0.395,111,0.356,112,4.391,139,0.863,210,0.372,757,1.728,935,0.378,1327,4.769,1332,2.855,1809,7.084,2312,9.797,2313,6.584,2314,6.584,2315,8.426]],["title/classes/MailRequiredException.html",[81,0.344,2316,4.503]],["body/classes/MailRequiredException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.17,69,0.559,81,0.485,85,0.064,87,0.003,88,0.003,120,3.915,122,2.108,210,0.56,645,4.624,718,4.547,935,0.434,936,4.756,937,4.1,940,3.928,1697,6.358,2316,7.723,2317,8.304,2318,7.562,2319,7.562,2320,6]],["title/classes/MailResponse.html",[81,0.344,129,4.25]],["body/classes/MailResponse.html",[3,0.052,4,0.061,5,0.061,8,0.217,9,1.068,24,0.295,25,0.003,26,1.058,32,0.2,81,0.459,83,0.259,85,0.061,87,0.003,88,0.003,92,4.377,93,5.539,110,0.429,111,0.387,112,4.189,129,7.05,139,0.805,210,0.405,757,1.648,935,0.411,961,2.073,962,2.356,1149,3.295,2321,7.163,2322,7.163,2323,7.163]],["title/entities/MediaEntity.html",[0,1.876,469,3.397]],["body/entities/MediaEntity.html",[0,1.924,2,1.677,3,0.026,4,0.03,5,0.03,6,4.81,8,0.109,9,0.802,13,2.853,14,3.07,15,1.201,21,2.893,24,0.327,25,0.004,26,0.89,27,3.655,32,0.221,34,5.989,39,6.388,40,6.216,43,3.738,51,2.743,69,0.596,70,3.332,71,3.332,72,3.392,74,1.762,75,3.332,76,0.991,77,2.848,81,0.23,83,0.13,85,0.03,87,0.002,88,0.002,445,4.988,453,2.276,459,5.775,469,3.483,477,4.465,567,5.038,575,2.6,757,1.139,867,6.168,906,6.147,907,2.344,925,4.32,928,1.824,933,1.858,1037,2.848,2324,3.589,2325,6.673,2326,6.673,2327,6.673,2328,6.673,2329,6.673,2330,6.673,2331,6.673,2332,6.673,2333,5.493,2334,3.589,2335,5.493,2336,3.589,2337,5.493,2338,3.589,2339,3.589,2340,3.589,2341,5.493,2342,3.589,2343,5.493,2344,3.589,2345,3.589,2346,3.589,2347,5.493,2348,3.589,2349,5.493,2350,3.589,2351,3.589]],["title/entities/MessageEntity.html",[0,1.876,471,3.61]],["body/entities/MessageEntity.html",[0,2.417,2,2.286,3,0.035,4,0.042,5,0.042,6,4.81,8,0.148,9,0.96,13,3.417,14,3.676,15,1.438,21,3.465,24,0.324,25,0.003,26,1.033,27,3.623,32,0.22,35,4.148,39,4.375,40,4.256,43,4.177,51,3.445,69,0.591,70,3.991,71,3.991,72,4.062,73,4.69,74,2.401,75,3.991,76,1.35,81,0.314,83,0.177,85,0.042,87,0.002,88,0.002,292,6.039,445,5.573,453,3.102,454,5.355,468,3.018,471,4.649,563,6.382,577,3.018,757,1.62,925,4.827,928,2.486,933,2.532,2352,4.892,2353,7.224,2354,6.899,2355,4.892,2356,4.892,2357,6.899,2358,4.892,2359,4.892,2360,4.892,2361,4.892,2362,4.892]],["title/classes/NoUserTraceException.html",[81,0.344,2363,4.842]],["body/classes/NoUserTraceException.html",[3,0.054,4,0.063,5,0.063,22,2.616,25,0.003,32,0.168,69,0.553,81,0.48,85,0.063,87,0.003,88,0.003,210,0.557,717,5.934,935,0.429,936,4.724,937,4.073,940,3.901,1242,5.216,2363,8.249,2364,9.125,2365,7.479,2366,9.847,2367,7.479,2368,7.479,2369,7.479,2370,7.479]],["title/classes/NotTheOwnerException.html",[81,0.344,2371,4.503]],["body/classes/NotTheOwnerException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.17,69,0.559,81,0.485,85,0.064,87,0.003,88,0.003,120,3.915,122,2.108,210,0.56,645,4.624,828,5.274,935,0.434,936,4.756,937,4.1,940,3.928,2233,6.836,2371,7.723,2372,8.304,2373,7.562,2374,7.562,2375,7.562]],["title/entities/NotificationEntity.html",[0,1.876,488,3.498]],["body/entities/NotificationEntity.html",[0,1.782,2,1.519,3,0.023,4,0.028,5,0.028,6,4.706,8,0.098,9,0.753,13,2.68,14,2.884,15,1.128,21,2.718,22,1.665,24,0.357,25,0.003,26,1.051,27,3.57,28,5.137,29,6.477,30,4.909,31,4.278,32,0.216,35,3.77,37,5.45,38,4.085,39,5.177,40,5.037,43,3.591,44,2.939,45,4.278,46,6.169,48,2.939,49,4.278,51,2.541,53,3.816,55,2.403,61,2.939,62,4.278,64,3.03,69,0.604,70,4.077,71,2.541,72,2.586,73,4.162,74,1.596,75,2.541,76,0.897,78,1.683,79,4.093,80,4.974,81,0.326,82,1.569,83,0.319,85,0.028,86,5.627,87,0.002,88,0.002,289,4.629,293,1.823,454,5.037,468,2.006,477,3.756,488,3.322,563,4.372,583,2.327,591,2.355,864,3.429,874,2.58,892,4.946,907,2.123,925,4.15,928,1.653,933,1.683,1078,2.267,2306,6.108,2376,3.251,2377,6.269,2378,7.699,2379,5.088,2380,3.251,2381,3.251,2382,3.251,2383,3.251,2384,3.251,2385,5.088,2386,3.251,2387,3.251,2388,5.088,2389,3.251,2390,3.251,2391,6.959,2392,3.251,2393,3.251,2394,5.088,2395,3.251,2396,3.251,2397,3.251]],["title/controllers/OccupationController.html",[89,2.723,2398,4.503]],["body/controllers/OccupationController.html",[3,0.023,4,0.028,5,0.028,8,0.098,24,0.283,25,0.003,26,1.186,27,3.276,32,0.199,69,0.653,81,0.208,83,0.308,85,0.028,87,0.002,88,0.002,89,1.65,91,1.567,96,2.187,99,0.956,100,2.25,106,1.298,110,0.511,111,0.461,113,1.661,114,2.126,118,2.353,119,2.058,121,2.264,122,0.905,127,2.119,128,1.782,131,2.187,132,2.351,133,1.68,134,2.351,135,1.746,138,1.042,139,0.27,143,6.155,144,2.833,222,1.986,258,2.264,312,2.058,430,5.572,579,2.203,670,2.804,671,2.894,1184,4.897,1217,7.627,1422,3.544,1879,2.351,1896,5.622,2398,4.272,2399,3.246,2400,4.594,2401,4.594,2402,7.086,2403,4.594,2404,6.263,2405,4.594,2406,4.594,2407,5.661,2408,3.246,2409,2.934,2410,3.246,2411,2.934,2412,2.934,2413,3.246,2414,2.934,2415,3.246,2416,2.934,2417,2.729,2418,3.246,2419,3.246,2420,4.272,2421,2.729,2422,3.246,2423,5.082,2424,2.934,2425,2.934,2426,3.246,2427,2.934,2428,5.082,2429,3.246,2430,3.246,2431,2.934,2432,2.934,2433,3.246,2434,2.575,2435,2.575,2436,4.733,2437,2.934,2438,2.575,2439,2.934,2440,2.575,2441,2.351,2442,2.575,2443,2.934,2444,3.246,2445,3.246,2446,2.934,2447,5.265,2448,3.246,2449,2.729,2450,3.246,2451,3.246,2452,3.246,2453,2.575,2454,3.246,2455,3.246,2456,2.934,2457,2.575,2458,3.246,2459,3.246,2460,2.934,2461,3.246,2462,3.246,2463,2.934,2464,3.246,2465,3.246,2466,2.934,2467,3.246,2468,3.246]],["title/classes/OccupationDto.html",[81,0.344,1157,3.736]],["body/classes/OccupationDto.html",[3,0.043,4,0.051,5,0.051,8,0.181,9,0.952,13,3.794,14,4.082,15,1.597,21,3.848,24,0.335,25,0.003,26,1.124,32,0.227,43,4.44,81,0.384,83,0.341,85,0.051,87,0.002,88,0.002,110,0.359,111,0.48,139,0.916,210,0.339,757,1.877,935,0.343,961,1.847,962,2.203,1149,2.753,1157,5.522,2469,5.984,2470,5.984,2471,5.984,2472,5.984,2473,5.984,2474,5.984,2475,5.984]],["title/entities/OccupationEntity.html",[0,1.876,473,2.675]],["body/entities/OccupationEntity.html",[0,1.588,2,3.58,3,0.033,4,0.038,5,0.038,8,0.137,9,0.921,13,3.275,14,3.524,15,1.379,21,3.322,24,0.324,25,0.003,26,0.998,27,3.626,30,2.725,32,0.22,34,5.713,37,2.66,38,1.994,43,4.073,51,3.262,69,0.657,70,3.262,71,3.825,72,3.894,74,2.224,75,3.825,76,1.251,81,0.419,82,2.187,83,0.277,85,0.038,87,0.002,88,0.002,445,5.434,446,3.283,447,3.425,473,3.262,477,4.259,839,3.596,864,4.402,879,5.549,904,6.073,907,2.959,925,4.706,928,2.304,933,2.346,940,1.938,942,2.796,961,1.057,962,1.787,963,1.354,1450,5.184,1844,4.858,2060,4.937,2476,4.532,2477,6.925,2478,6.925,2479,6.533,2480,4.532,2481,6.533,2482,4.532,2483,4.532,2484,4.532,2485,4.532,2486,4.532,2487,4.532,2488,6.533,2489,4.532,2490,4.532,2491,4.937,2492,4.532,2493,4.532]],["title/modules/OccupationModule.html",[149,1.238,323,4.048]],["body/modules/OccupationModule.html",[3,0.03,4,0.035,5,0.035,25,0.004,64,1.548,69,0.805,78,2.159,81,0.267,83,0.151,85,0.035,87,0.002,88,0.002,91,2.967,97,2.502,106,2.458,122,1.162,149,1.421,151,2.339,152,3.449,156,5.408,158,3.223,160,3.697,161,2.508,162,2.508,164,3.697,165,3.697,166,2.723,167,4.015,168,2.339,169,3.899,170,0.881,171,2.256,172,2.723,178,4.143,180,3.151,183,3.151,186,5.519,188,3.899,189,2.81,190,2.644,191,1.548,194,2.723,195,2.723,196,2.723,197,2.723,198,2.644,230,3.151,238,2.908,276,2.723,277,1.325,278,3.02,323,7.489,473,3.07,579,2.666,944,1.689,1150,5.169,1152,5.994,1156,2.723,1165,5.612,1202,5.169,1210,1.689,1602,5.169,1612,5.169,1806,2.2,1826,5.169,1828,3.506,1865,5.169,1866,2.644,1884,5.169,1885,2.508,2398,6.14,2436,6.796,2437,3.77,2494,3.77,2495,4.17,2496,3.77,2497,4.17,2498,4.17,2499,5.169,2500,3.309,2501,5.169,2502,3.309,2503,3.309,2504,5.169,2505,3.506,2506,5.169,2507,3.309,2508,5.169,2509,3.506,2510,5.169,2511,3.309,2512,3.309,2513,5.795]],["title/classes/OccupationNotFoundException.html",[81,0.344,2514,4.503]],["body/classes/OccupationNotFoundException.html",[3,0.055,4,0.064,5,0.064,25,0.003,32,0.171,69,0.561,81,0.487,85,0.064,87,0.003,88,0.003,122,2.116,210,0.561,645,4.631,935,0.436,936,4.767,937,4.11,940,3.936,1251,3.201,1582,6.862,2514,7.741,2515,8.323,2516,6.862,2517,6.862,2518,7.591]],["title/classes/OccupationResponse.html",[81,0.344,2438,4.25]],["body/classes/OccupationResponse.html",[3,0.042,4,0.05,5,0.05,8,0.177,9,0.937,13,3.75,14,4.036,15,1.579,21,3.804,24,0.333,25,0.003,26,1.114,32,0.226,43,4.41,81,0.375,83,0.338,85,0.05,87,0.002,88,0.002,110,0.35,111,0.475,139,0.913,210,0.331,757,1.871,935,0.336,961,1.819,962,2.274,963,1.746,2438,6.186,2519,10.236,2520,5.847,2521,5.847,2522,5.847,2523,5.847,2524,5.847,2525,5.847,2526,5.847]],["title/injectables/OccupationService.html",[207,1.965,2436,4.048]],["body/injectables/OccupationService.html",[3,0.017,4,0.02,5,0.02,8,0.071,24,0.259,25,0.004,26,1.1,32,0.182,69,0.733,81,0.151,83,0.324,85,0.02,87,0.001,88,0.001,99,0.736,100,2.139,106,0.939,110,0.468,111,0.423,113,1.47,114,1.979,122,0.654,138,0.754,139,0.326,144,2.875,170,0.496,207,1.435,208,1.152,210,0.133,211,1.637,212,4.738,213,5.024,218,1.774,220,3.798,221,0.694,222,1.757,223,4.541,224,2.871,225,1.7,242,1.582,245,1.774,312,1.489,579,3.516,667,2.934,669,2.767,670,3.168,671,3.199,937,2.243,1086,0.787,1142,3.103,1145,3.988,1148,3.288,1152,4.541,1157,4.088,1158,1.774,1159,5.093,1160,1.7,1161,1.7,1184,4.877,1217,4.651,1240,3.282,1251,2.746,1383,1.533,1598,3.103,1698,3.988,1755,4.921,1791,4.276,1820,1.863,1828,1.974,1861,3.103,1866,1.489,1870,3.103,1873,1.448,1877,3.103,1879,2.832,1882,1.7,1883,1.7,1885,1.412,1896,4.651,2400,3.535,2401,3.535,2403,3.535,2405,3.535,2406,3.535,2407,3.535,2411,3.535,2416,3.535,2424,3.535,2427,3.535,2431,3.535,2436,2.955,2438,1.863,2439,2.122,2440,1.863,2441,1.7,2442,1.863,2443,3.535,2514,5.911,2515,2.122,2527,2.348,2528,5.862,2529,3.911,2530,2.348,2531,3.911,2532,2.348,2533,5.862,2534,2.348,2535,2.348,2536,2.348,2537,3.911,2538,2.348,2539,2.348,2540,2.348,2541,4.928,2542,2.348,2543,4.651,2544,1.974,2545,2.122,2546,1.974,2547,2.122,2548,1.974,2549,3.988,2550,1.637,2551,3.103,2552,1.863,2553,3.103,2554,1.974,2555,3.103,2556,1.863,2557,2.348,2558,3.911,2559,5.026,2560,3.288,2561,2.122,2562,2.348,2563,2.122,2564,2.122,2565,2.348,2566,3.911,2567,3.911]],["title/entities/PlanEntity.html",[0,1.876,475,3.736]],["body/entities/PlanEntity.html",[0,2.177,2,1.977,3,0.03,4,0.036,5,0.036,6,4.866,8,0.128,9,0.885,13,3.149,14,3.388,15,1.326,21,3.194,24,0.357,25,0.003,26,1.076,27,3.691,28,6.263,29,6.44,30,4.881,32,0.224,43,3.976,51,3.103,69,0.46,70,4.514,71,3.678,72,3.744,74,2.076,75,3.678,76,1.168,81,0.271,83,0.364,85,0.036,86,6.44,87,0.002,88,0.002,289,5.199,475,4.334,486,5.578,581,3.557,843,2.762,873,5.902,905,4.058,925,4.595,928,2.15,933,2.19,1670,6.192,1692,3.197,1693,5.224,2568,4.231,2569,7.366,2570,8.647,2571,8.647,2572,4.231,2573,4.231,2574,4.231,2575,6.214,2576,8.117,2577,4.231,2578,4.231,2579,4.231,2580,4.231,2581,4.231,2582,6.214,2583,4.231,2584,4.231]],["title/controllers/ProfileController.html",[89,2.723,2585,4.503]],["body/controllers/ProfileController.html",[3,0.017,4,0.02,5,0.02,8,0.071,15,1.173,22,1.04,24,0.278,25,0.003,26,1.101,27,3.19,32,0.193,69,0.619,81,0.151,83,0.318,85,0.02,87,0.001,88,0.001,89,1.195,91,1.134,96,1.584,97,0.805,99,0.737,100,2.225,106,0.94,110,0.502,111,0.453,113,1.617,114,2.093,118,2.204,119,1.49,121,1.639,122,0.655,127,1.535,128,1.291,131,1.584,132,1.702,133,1.217,134,1.702,135,1.265,138,0.755,139,0.196,143,5.992,144,2.758,222,1.933,247,1.913,258,1.639,288,3.291,289,2.354,292,2.958,299,3.291,302,1.776,303,1.976,305,1.776,307,1.976,308,2.125,313,1.413,314,1.865,412,1.628,430,4.719,583,3.478,618,6.86,646,1.702,651,1.776,670,2.73,671,2.818,686,1.865,1236,1.49,1237,1.584,1284,4.654,1422,3.508,1578,4.547,1844,4.955,1879,1.702,1925,5.582,2268,3.106,2417,1.976,2420,3.291,2421,1.976,2434,1.865,2435,1.865,2441,1.702,2447,5.915,2449,1.976,2453,3.106,2457,1.865,2585,3.291,2586,2.35,2587,3.538,2588,3.914,2589,3.538,2590,6.516,2591,3.914,2592,3.914,2593,3.538,2594,4.547,2595,3.538,2596,3.538,2597,3.538,2598,2.35,2599,2.35,2600,2.35,2601,2.35,2602,5.866,2603,3.914,2604,2.35,2605,2.35,2606,5.03,2607,2.35,2608,5.298,2609,2.35,2610,2.35,2611,2.35,2612,2.35,2613,3.538,2614,2.35,2615,2.35,2616,2.35,2617,2.35,2618,2.125,2619,3.914,2620,2.35,2621,2.35,2622,2.35,2623,2.35,2624,2.35,2625,3.914,2626,2.35,2627,2.35,2628,5.919,2629,3.538,2630,2.35,2631,2.35,2632,3.914,2633,2.35,2634,3.801,2635,2.125,2636,1.976,2637,2.125,2638,2.125,2639,3.538,2640,2.125,2641,2.35,2642,2.35,2643,2.125,2644,2.125,2645,2.35,2646,3.914,2647,2.35,2648,2.35,2649,5.03,2650,2.35,2651,2.35,2652,2.35,2653,2.35,2654,2.35,2655,2.35,2656,2.35,2657,2.35,2658,5.03,2659,2.35,2660,2.35,2661,3.914,2662,2.35,2663,2.35,2664,2.35,2665,2.35,2666,2.35,2667,2.35,2668,2.35,2669,2.35,2670,2.35,2671,2.35]],["title/entities/ProfileEntity.html",[0,1.876,477,2.464]],["body/entities/ProfileEntity.html",[0,1.451,2,3.593,3,0.018,4,0.021,5,0.021,8,0.076,9,0.634,13,2.256,14,2.428,15,0.95,21,2.288,22,1.797,24,0.32,25,0.003,26,0.728,27,3.536,32,0.214,34,4.488,35,1.513,38,4.19,39,6.168,40,5.878,43,3.2,51,2.068,55,1.403,64,2.271,69,0.634,70,3.055,71,2.635,72,2.683,73,2.43,74,1.235,75,2.635,76,0.694,78,1.302,81,0.161,83,0.278,85,0.021,87,0.001,88,0.001,111,0.515,293,3.793,445,4.513,446,1.822,447,1.901,448,4.122,449,1.901,450,1.822,466,4.902,467,1.901,468,1.552,469,4.876,470,1.996,473,3.055,477,1.905,488,3.994,489,1.901,556,5.497,575,4.431,579,2.652,583,1.959,591,2.999,827,3.097,843,4.415,846,6.555,847,6.643,867,2.888,874,1.996,879,2.999,892,4.716,903,4.188,904,3.823,905,4.75,906,3.556,918,1.755,925,4.084,928,1.279,933,1.302,958,1.595,961,0.587,962,0.966,963,0.751,968,4.437,973,4.771,980,3.744,997,3.744,1018,4.854,1021,4.437,1268,3.446,1269,3.347,1271,4.415,1273,1.695,2478,4.771,2672,2.516,2673,5.278,2674,5.278,2675,5.278,2676,5.278,2677,2.516,2678,4.141,2679,4.141,2680,2.516,2681,2.516,2682,2.516,2683,2.516,2684,4.141,2685,2.516,2686,4.141,2687,2.516,2688,4.141,2689,4.141,2690,6.117,2691,2.516,2692,4.141,2693,2.516,2694,4.141,2695,2.516,2696,2.516,2697,2.516,2698,4.141,2699,4.141,2700,2.516,2701,2.516,2702,4.141,2703,2.516,2704,2.516,2705,2.516,2706,4.141,2707,2.516,2708,2.516]],["title/modules/ProfileModule.html",[149,1.238,324,4.048]],["body/modules/ProfileModule.html",[3,0.027,4,0.032,5,0.032,22,1.001,25,0.004,64,1.399,69,0.809,78,1.951,81,0.242,83,0.136,85,0.032,87,0.002,88,0.002,91,2.751,97,2.355,106,2.279,122,1.05,149,1.318,151,2.114,152,3.198,156,5.208,158,3.104,160,3.428,161,2.266,162,2.266,164,3.428,165,3.428,166,2.461,167,3.722,168,2.114,169,3.615,170,0.796,171,2.091,172,2.461,178,4.211,180,2.848,183,2.848,186,5.793,188,3.615,189,2.539,190,2.39,191,1.399,194,2.461,195,2.461,196,2.461,197,2.461,198,2.39,230,2.848,238,2.628,276,2.461,277,1.197,278,2.73,324,7.304,473,2.847,477,2.623,583,2.846,827,3.346,918,2.628,944,1.526,1210,1.526,1231,4.793,1233,5.492,1238,2.266,1245,5.083,1279,4.793,1618,4.793,1627,4.793,1806,1.988,1840,4.793,1842,3.168,1844,2.39,1866,3.615,1885,2.266,1904,4.793,1915,4.793,1922,4.793,2500,2.99,2502,2.99,2503,2.99,2505,3.168,2507,4.523,2509,3.168,2511,4.523,2512,2.99,2513,5.456,2585,5.781,2634,6.546,2635,3.407,2709,3.407,2710,3.769,2711,3.407,2712,3.769,2713,3.769,2714,4.793,2715,3.769,2716,3.168,2717,4.793,2718,4.793,2719,4.793,2720,4.793,2721,4.793,2722,3.769,2723,3.407,2724,4.793,2725,4.793,2726,4.793,2727,4.793]],["title/classes/ProfileResponse.html",[81,0.344,1236,3.397]],["body/classes/ProfileResponse.html",[3,0.045,4,0.053,5,0.053,8,0.189,9,0.978,15,1.63,24,0.33,25,0.003,26,1.215,32,0.224,53,4.38,81,0.4,83,0.226,85,0.053,87,0.003,88,0.003,110,0.374,111,0.49,139,0.908,210,0.353,412,3.768,757,1.861,935,0.358,961,1.899,962,2.323,963,1.864,1236,5.162,1269,5.744,1873,5.589,2728,6.241,2729,8.14,2730,6.241,2731,6.241,2732,6.241]],["title/injectables/ProfileService.html",[207,1.965,2634,4.048]],["body/injectables/ProfileService.html",[3,0.012,4,0.015,5,0.015,8,0.052,15,1.681,22,1.8,24,0.261,25,0.004,26,1.146,32,0.182,69,0.684,81,0.11,83,0.285,85,0.015,87,0.001,88,0.001,99,0.563,100,2.147,106,0.686,110,0.472,111,0.426,113,1.483,114,1.989,122,0.478,138,0.551,139,0.249,144,2.457,170,0.363,207,1.098,208,0.842,210,0.097,211,1.197,212,4.003,213,4.306,218,1.297,220,3.603,221,0.508,222,1.897,223,4.956,224,3.011,225,1.243,245,1.297,412,2.471,579,1.726,583,3.236,667,2.96,669,2.792,671,3.29,715,5.958,827,2.336,828,3.325,876,1.847,937,2.128,1086,1.003,1189,6.404,1222,2.375,1225,1.362,1226,1.362,1233,3.767,1236,1.088,1237,1.157,1239,3.453,1240,3.113,1241,1.757,1242,1.197,1243,1.362,1250,1.955,1251,3.618,1268,3.113,1269,3.023,1284,4.291,1615,2.262,1654,5.955,1655,1.443,1755,3.008,1837,2.375,1842,1.443,1844,1.898,1866,1.898,1873,1.059,1885,1.032,1902,3.782,1907,2.706,1909,1.362,1913,2.375,1921,2.375,1925,3.782,2371,3.347,2372,1.551,2441,1.243,2546,1.443,2552,2.375,2554,1.443,2556,1.362,2560,2.517,2587,2.706,2589,2.706,2593,2.706,2594,3.599,2595,2.706,2596,2.706,2597,2.706,2608,3.879,2618,2.706,2628,6.413,2634,2.262,2637,1.551,2638,1.551,2639,2.706,2640,1.551,2716,1.443,2733,1.716,2734,2.994,2735,2.994,2736,4.767,2737,2.994,2738,2.994,2739,1.716,2740,2.994,2741,1.716,2742,2.994,2743,1.716,2744,2.994,2745,1.716,2746,2.994,2747,1.716,2748,1.716,2749,1.716,2750,1.716,2751,1.716,2752,2.994,2753,2.994,2754,1.716,2755,2.994,2756,4.547,2757,1.716,2758,2.994,2759,1.716,2760,2.994,2761,1.716,2762,2.994,2763,1.716,2764,4.713,2765,1.443,2766,3.008,2767,2.375,2768,3.159,2769,2.375,2770,1.716,2771,1.716,2772,1.716,2773,1.716,2774,2.375,2775,1.716,2776,1.716,2777,1.716,2778,1.716,2779,7.88,2780,2.994,2781,3.981,2782,2.994,2783,2.375,2784,2.994,2785,2.994,2786,2.994,2787,1.716,2788,1.716,2789,3.981,2790,1.716,2791,1.716,2792,1.716]],["title/classes/QueryErrorException.html",[81,0.344,2543,4.25]],["body/classes/QueryErrorException.html",[3,0.055,4,0.064,5,0.064,25,0.003,32,0.171,69,0.561,81,0.487,85,0.064,87,0.003,88,0.003,122,2.116,210,0.561,645,4.631,670,2.411,935,0.436,936,4.767,937,4.11,939,6.862,940,3.936,941,6.862,943,6.381,2543,7.305,2544,7.741,2793,7.591]],["title/entities/ReferralCodeEntity.html",[0,1.876,490,3.736]],["body/entities/ReferralCodeEntity.html",[0,1.335,2,1.781,3,0.027,4,0.032,5,0.032,6,4.591,8,0.115,9,0.691,13,2.96,15,1.246,21,3.002,22,2.048,24,0.341,25,0.003,26,0.918,27,3.45,30,2.292,32,0.209,37,4.525,38,3.391,43,4.264,46,4.345,51,1.903,64,3.531,69,0.612,70,3.457,71,2.871,73,4.063,74,1.87,75,2.871,76,1.052,78,1.973,80,4.562,81,0.369,82,1.839,85,0.032,87,0.002,88,0.002,128,2.093,314,4.562,486,5.367,490,4.009,491,7.188,589,5.232,601,4.164,828,4.828,864,3.874,906,3.874,917,4.562,1053,6.889,1059,7.313,1428,5.493,1433,4.833,1450,3.024,1452,5.197,1665,3.445,1692,2.88,2060,2.88,2320,6.117,2794,6.923,2795,6.923,2796,5.749,2797,5.749,2798,4.833,2799,3.811,2800,3.811,2801,3.811,2802,3.811,2803,3.811,2804,3.811,2805,3.811,2806,3.811,2807,5.749,2808,5.749,2809,5.749,2810,5.749,2811,3.811,2812,3.811,2813,3.811,2814,5.749,2815,3.811,2816,3.811,2817,3.811,2818,3.811,2819,3.811,2820,3.811,2821,5.749,2822,3.811,2823,5.749,2824,3.811,2825,3.811,2826,3.811]],["title/classes/RegisterCommand.html",[81,0.344,782,4.25]],["body/classes/RegisterCommand.html",[3,0.047,4,0.055,5,0.055,8,0.197,9,1.006,24,0.324,25,0.003,26,1.306,32,0.22,81,0.418,83,0.236,85,0.055,87,0.003,88,0.003,110,0.391,111,0.353,112,4.378,139,0.895,210,0.369,596,4.423,599,4.873,757,1.816,782,6.644,935,0.374,1332,2.827,1964,5.174,2827,6.521,2828,6.521,2829,9.251]],["title/classes/RegisterEvent.html",[81,0.344,2830,4.25]],["body/classes/RegisterEvent.html",[3,0.053,4,0.063,5,0.063,8,0.225,9,1.092,24,0.301,25,0.003,26,1.217,32,0.204,81,0.476,83,0.268,85,0.063,87,0.003,88,0.003,110,0.445,111,0.402,139,0.818,210,0.42,412,4.254,757,1.55,935,0.426,1332,3.219,1458,4.357,2830,7.208,2831,7.425,2832,7.425,2833,7.425]],["title/classes/RegisterEventHandler.html",[81,0.344,745,4.503]],["body/classes/RegisterEventHandler.html",[3,0.045,4,0.052,5,0.052,8,0.187,9,0.972,15,1.456,22,2.15,24,0.205,25,0.003,32,0.182,55,2.095,69,0.707,81,0.397,83,0.223,85,0.052,87,0.002,88,0.002,99,1.522,110,0.371,111,0.335,113,1.164,122,1.724,170,1.306,224,2.345,332,5.283,370,1.922,745,6.802,747,8.152,935,0.355,1080,1.597,1197,2.411,1204,3.856,1205,3.459,1208,3.459,1210,2.505,1211,2.644,1466,5.283,1499,6.802,1501,5.59,1564,3.088,1629,3.816,2830,7.59,2834,9.019,2835,9.019,2836,8.091,2837,6.184,2838,5.59,2839,6.184,2840,6.184,2841,7.314,2842,6.184]],["title/classes/RegisterHandler.html",[81,0.344,737,4.503]],["body/classes/RegisterHandler.html",[3,0.018,4,0.021,5,0.021,8,0.077,9,0.5,22,1.106,24,0.277,25,0.003,26,1.159,30,1.522,32,0.198,53,3.651,64,1.545,69,0.697,76,0.699,78,1.311,81,0.267,82,1.222,83,0.301,85,0.021,87,0.001,88,0.001,99,0.783,100,1.981,110,0.515,111,0.451,112,1.805,113,1.57,114,1.762,144,2.678,170,0.535,175,1.098,176,1.067,177,1.082,178,2.917,210,0.235,221,2.951,222,1.877,224,2.694,247,2.335,277,0.804,370,0.989,498,1.336,499,2.201,522,2.078,530,0.907,531,2.903,532,1.264,596,3.305,599,2.558,601,1.834,605,1.765,610,5.088,637,1.522,670,2.318,671,2.392,737,3.499,782,4.872,873,2.718,876,1.562,935,0.145,937,3.256,944,1.025,969,3.603,1081,2.298,1086,1.395,1095,1.805,1097,1.098,1154,2.897,1162,3.392,1176,2.903,1178,1.765,1183,3.076,1188,3.305,1239,1.834,1240,4.764,1241,3.603,1242,1.765,1243,2.009,1261,2.128,1322,1.42,1354,4.456,1355,3.763,1356,4.792,1357,3.763,1358,3.499,1359,3.499,1360,3.499,1361,3.499,1362,3.499,1365,2.288,1368,3.763,1370,4.872,1371,3.499,1373,3.499,1375,2.128,1377,3.499,1379,3.499,1382,3.015,1383,2.718,1384,3.303,1385,3.015,1386,3.303,1391,3.146,1392,2.128,1393,3.303,1394,3.303,1396,2.128,1397,2.288,1398,3.499,1399,2.288,1400,2.288,1403,6.134,1404,2.903,1405,2.903,1409,4.447,1412,2.288,1414,2.288,1415,2.288,1417,2.288,1428,4.206,1432,3.763,1433,3.499,1434,2.288,1435,3.499,1436,3.499,1437,2.128,1438,2.128,1439,2.128,1440,3.499,1441,2.009,2830,2.009,2838,2.288,2843,2.532,2844,4.162,2845,2.532,2846,2.532,2847,2.532,2848,2.532,2849,2.532,2850,2.532,2851,2.532,2852,2.532,2853,2.532,2854,2.532,2855,2.532,2856,2.532,2857,2.532,2858,2.532,2859,4.162,2860,2.532,2861,4.162,2862,2.532,2863,2.532,2864,4.162,2865,2.532]],["title/classes/RemoveRefreshTokenCommand.html",[81,0.344,2866,4.25]],["body/classes/RemoveRefreshTokenCommand.html",[3,0.052,4,0.062,5,0.062,8,0.22,9,1.077,24,0.297,25,0.003,26,1.208,32,0.202,81,0.466,83,0.263,85,0.062,87,0.003,88,0.003,110,0.435,111,0.393,139,0.81,210,0.411,412,4.222,613,5.129,757,1.529,935,0.417,1332,3.15,1458,4.264,2866,7.112,2867,9.722,2868,6.568,2869,6.568,2870,6.568]],["title/classes/RemoveRefreshTokenCommandHandler.html",[81,0.344,2871,4.503]],["body/classes/RemoveRefreshTokenCommandHandler.html",[3,0.04,4,0.047,5,0.047,8,0.166,22,1.461,24,0.248,25,0.003,32,0.168,64,2.041,69,0.728,76,1.518,81,0.353,83,0.27,85,0.047,87,0.002,88,0.002,99,1.408,100,1.813,110,0.448,111,0.405,113,1.035,114,1.581,170,1.162,175,2.384,176,2.319,177,2.351,178,2.199,210,0.423,221,2.212,222,1.237,224,1.594,277,1.747,293,3.084,370,1.777,498,2.901,499,3.271,522,3.736,530,1.971,532,2.746,613,4.815,667,2.066,669,1.948,670,2.701,935,0.316,944,2.227,1080,1.42,1081,3.687,1086,2.507,1095,3.244,1097,2.384,1154,3.786,1162,3.291,1183,2.319,1188,2.491,1209,2.227,1381,3.02,1604,3.307,1980,4.363,2866,7.242,2871,7.149,2872,8.504,2873,7.242,2874,5.499,2875,5.499,2876,4.156]],["title/classes/RemoveRefreshTokenEvent.html",[81,0.344,2877,4.503]],["body/classes/RemoveRefreshTokenEvent.html",[3,0.044,4,0.052,5,0.052,8,0.187,9,0.97,22,2.145,24,0.317,25,0.003,26,1.252,32,0.215,55,2.736,81,0.395,83,0.223,85,0.052,87,0.002,88,0.002,110,0.369,111,0.334,139,0.886,149,2.082,210,0.349,246,2.663,412,3.975,613,5.471,638,4.63,757,1.795,935,0.354,1197,3.148,1332,2.673,1458,3.618,2877,6.789,2878,9.919,2879,5.573,2880,7.3,2881,6.789,2882,5.573,2883,5.573]],["title/classes/RemoveRefreshTokenEventHandler.html",[81,0.344,2884,4.503]],["body/classes/RemoveRefreshTokenEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.184,15,1.096,24,0.266,25,0.003,32,0.18,69,0.662,81,0.391,83,0.29,85,0.052,87,0.002,88,0.002,97,2.087,99,1.507,110,0.48,111,0.433,113,1.146,118,2.288,138,1.956,139,0.507,149,1.408,158,3.635,170,1.287,171,2.235,191,2.261,210,0.345,246,1.801,332,5.231,370,1.903,613,5.213,638,3.493,935,0.35,1080,1.573,1204,3.827,1205,3.425,1206,2.679,1207,2.679,1208,3.425,1210,2.467,1211,2.604,1213,2.679,1214,2.719,1215,2.719,1466,3.977,1629,3.759,2877,7.996,2884,6.735,2885,8.953,2886,7.996,2887,6.092,2888,6.092,2889,6.092]],["title/injectables/RequestLoggingMiddleware.html",[207,1.965,347,4.503]],["body/injectables/RequestLoggingMiddleware.html",[3,0.031,4,0.037,5,0.037,8,0.132,9,0.764,24,0.249,25,0.003,32,0.169,69,0.715,81,0.28,83,0.23,85,0.037,87,0.002,88,0.002,99,1.197,110,0.381,111,0.344,113,0.822,122,1.217,138,1.402,139,0.686,158,2.953,171,1.602,191,1.621,207,2.333,208,2.143,210,0.247,221,2.218,224,1.266,236,5.231,243,3.3,247,3.331,293,4.912,312,5.225,332,4.153,346,6.619,347,5.347,370,1.037,371,3.045,372,3.163,373,6.344,374,3.163,375,3.163,379,5.952,621,5.084,646,3.163,647,5.952,652,2.851,1046,4.806,1051,5.046,1055,3.163,1067,3.045,1078,4.435,1085,5.669,1094,6.227,1100,3.465,1104,4.806,1106,3.671,1113,3.671,1114,3.947,1117,3.163,1724,3.465,1725,5.046,1726,3.465,1727,3.671,1732,3.671,1734,3.947,1735,3.465,1737,3.465,1741,3.465,1763,3.671,1764,5.046,1766,5.347,1769,5.347,1770,5.046,1771,3.465,1772,3.671,1773,3.671,1774,3.671,1775,5.347,1776,3.671,1777,5.347,1778,3.671,1779,3.671,1780,3.671,1781,3.671,1782,3.671,1783,3.671,1784,3.947,1792,3.671,1793,3.671,1794,3.671,1795,5.347,1796,3.671,2268,3.465,2890,8.241,2891,6.36,2892,4.367,2893,3.947,2894,4.367,2895,5.749,2896,3.947,2897,3.947,2898,4.367,2899,4.367,2900,4.367,2901,4.367]],["title/interfaces/RequestUser.html",[618,3.736,2902,3.88]],["body/interfaces/RequestUser.html",[3,0.054,4,0.064,5,0.064,8,0.228,9,1.101,22,2.731,24,0.25,25,0.003,64,3.816,69,0.678,78,3.901,85,0.064,87,0.003,88,0.003,618,6.392,621,6.095,652,4.919,940,3.919,2902,5.457,2903,5.978,2904,7.534,2905,7.534]],["title/injectables/ResponseLoggingMiddleware.html",[207,1.965,350,4.503]],["body/injectables/ResponseLoggingMiddleware.html",[3,0.032,4,0.038,5,0.038,8,0.136,9,0.781,24,0.277,25,0.003,32,0.172,69,0.683,81,0.289,83,0.235,85,0.038,87,0.002,88,0.002,99,1.223,100,1.627,110,0.39,111,0.352,113,0.847,122,1.255,138,1.445,139,0.696,144,1.445,149,1.041,158,2.996,171,1.651,191,1.671,207,2.385,208,2.21,210,0.255,221,2.257,222,1.013,224,1.305,236,5.323,243,3.402,247,3.371,293,4.972,312,5.3,346,5.768,350,5.466,370,1.07,371,3.14,372,3.261,373,6.421,374,3.261,375,3.261,376,5.466,377,3.785,378,5.466,379,6.632,621,5.157,646,3.261,647,6.056,652,2.94,1046,4.914,1051,5.159,1085,5.768,1094,6.317,1100,3.572,1104,3.402,1106,3.785,1117,3.261,1724,3.572,1725,5.159,1735,3.572,1737,3.572,1739,3.785,1741,3.572,1763,3.785,1764,5.159,1766,5.466,1769,5.466,1770,5.159,1771,3.572,1772,3.785,1773,3.785,1774,3.785,1775,3.785,1776,3.785,1777,5.466,1778,3.785,1779,3.785,1780,3.785,1781,3.785,1782,3.785,1783,3.785,1785,4.07,1786,4.07,1787,4.07,1788,4.07,1789,4.07,1790,4.07,1792,3.785,1793,3.785,1794,3.785,1795,3.785,1796,3.785,2893,4.07,2895,5.878,2896,4.07,2897,4.07,2906,8.359,2907,6.502,2908,4.502]],["title/classes/RestoreOccupationCommand.html",[81,0.344,2555,4.25]],["body/classes/RestoreOccupationCommand.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.261,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1144,5.452,1184,5.113,1600,6.065,1601,6.065,2555,7.081,2909,9.691]],["title/classes/RestoreOccupationCommandHandler.html",[81,0.344,2499,4.503]],["body/classes/RestoreOccupationCommandHandler.html",[3,0.039,4,0.046,5,0.046,8,0.163,15,0.969,24,0.245,25,0.003,32,0.166,69,0.724,76,1.486,81,0.345,83,0.266,85,0.046,87,0.002,88,0.002,99,1.387,100,1.793,110,0.442,111,0.399,113,1.013,114,1.558,139,0.614,170,1.137,210,0.417,221,2.18,222,1.659,224,2.438,277,1.71,370,1.752,473,2.688,499,3.242,512,4.549,530,1.929,545,3.321,667,2.022,669,2.612,670,1.71,671,2.418,935,0.309,944,2.18,1080,1.39,1081,3.647,1086,2.471,1095,3.197,1097,2.334,1152,6.308,1153,3.627,1154,3.764,1156,3.515,1165,3.515,1180,3.515,1183,2.27,1184,2.84,1186,3.627,1209,2.18,1248,2.736,1251,2.27,1265,3.515,1604,3.237,1606,5.85,2499,6.199,2555,7.177,2910,8.41,2911,4.271,2912,5.85,2913,3.627,2914,5.383,2915,5.383]],["title/classes/RestoreOccupationEvent.html",[81,0.344,2912,4.25]],["body/classes/RestoreOccupationEvent.html",[3,0.045,4,0.053,5,0.053,8,0.188,9,0.974,24,0.318,25,0.003,26,1.213,32,0.215,55,2.747,81,0.398,83,0.224,85,0.053,87,0.002,88,0.002,110,0.372,111,0.336,139,0.887,149,2.088,210,0.351,246,2.671,579,4.153,757,1.817,935,0.356,961,1.891,962,2.318,963,1.853,1184,4.765,1195,4.688,1196,4.688,1197,3.16,1199,5.607,1200,4.688,1201,4.688,2912,6.433,2916,9.938,2917,6.433]],["title/classes/RestoreOccupationEventHandler.html",[81,0.344,2508,4.503]],["body/classes/RestoreOccupationEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,579,2.649,935,0.351,1080,1.578,1165,6.217,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1209,2.475,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1216,4.617,2508,6.749,2912,7.555,2913,4.117,2918,8.966,2919,6.11,2920,4.617]],["title/classes/RestoreProfileCommand.html",[81,0.344,2774,4.25]],["body/classes/RestoreProfileCommand.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.261,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1224,5.225,1227,6.521,2608,6.328,2774,7.081,2921,9.691,2922,7.214]],["title/classes/RestoreProfileCommandHandler.html",[81,0.344,2726,4.503]],["body/classes/RestoreProfileCommandHandler.html",[3,0.039,4,0.046,5,0.046,8,0.163,15,0.969,24,0.245,25,0.003,32,0.166,69,0.724,76,1.486,81,0.345,83,0.266,85,0.046,87,0.002,88,0.002,99,1.387,100,1.793,110,0.442,111,0.399,113,1.013,114,1.558,139,0.614,170,1.137,210,0.417,221,2.18,222,1.659,224,2.438,277,1.71,370,1.752,477,2.476,499,3.242,514,4.434,530,1.929,547,3.237,667,2.022,669,2.612,670,1.71,671,2.418,935,0.309,944,2.18,1080,1.39,1081,3.647,1086,2.471,1095,3.197,1097,2.334,1154,3.764,1183,2.27,1209,2.18,1233,5.736,1234,3.321,1238,3.237,1245,3.159,1248,2.736,1251,2.27,1265,3.515,1604,3.237,1622,3.754,1624,3.899,2608,3.515,2726,6.199,2774,7.177,2911,4.271,2913,3.627,2923,8.41,2924,5.85,2925,5.383,2926,6.665,2927,5.383]],["title/classes/RestoreProfileEvent.html",[81,0.344,2924,4.25]],["body/classes/RestoreProfileEvent.html",[3,0.045,4,0.053,5,0.053,8,0.188,9,0.974,24,0.318,25,0.003,26,1.213,32,0.215,55,2.747,81,0.398,83,0.224,85,0.053,87,0.002,88,0.002,110,0.372,111,0.336,139,0.887,149,2.088,210,0.351,246,2.671,583,3.555,757,1.817,935,0.356,961,1.891,962,2.318,963,1.853,1197,3.16,1275,4.493,1276,4.922,2608,5.897,2917,6.433,2924,6.433,2928,9.938,2929,6.203,2930,6.203,2931,6.203]],["title/classes/RestoreProfileEventHandler.html",[81,0.344,2727,4.503]],["body/classes/RestoreProfileEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,583,2.268,935,0.351,1080,1.578,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1209,2.475,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1245,5.588,2727,6.749,2913,4.117,2920,4.617,2924,7.555,2932,8.966,2933,6.11,2934,5.523]],["title/classes/RestoreSocialNetworkCommand.html",[81,0.344,2935,4.25]],["body/classes/RestoreSocialNetworkCommand.html",[3,0.051,4,0.06,5,0.06,8,0.215,9,1.061,15,1.73,24,0.293,25,0.003,26,1.051,32,0.199,81,0.455,83,0.256,85,0.06,87,0.003,88,0.003,110,0.425,111,0.383,139,0.801,210,0.401,480,3.795,757,1.64,924,3.844,935,0.407,961,2.059,962,2.347,1149,3.261,1294,5.357,1298,5.357,1301,5.357,2935,7.005,2936,9.615]],["title/classes/RestoreSocialNetworkCommandHandler.html",[81,0.344,2937,4.503]],["body/classes/RestoreSocialNetworkCommandHandler.html",[3,0.037,4,0.044,5,0.044,8,0.156,15,0.929,24,0.238,25,0.003,32,0.161,38,2.272,69,0.715,76,1.426,81,0.331,83,0.259,85,0.044,87,0.002,88,0.002,99,1.348,100,1.754,110,0.429,111,0.388,113,0.972,114,1.514,139,0.597,170,1.091,210,0.405,221,2.119,222,1.851,224,2.077,277,1.641,370,1.702,479,2.836,480,3.248,482,2.961,499,3.185,515,4.679,530,1.851,548,3.372,607,3.48,669,2.539,671,2.35,832,2.897,924,3.733,935,0.296,944,2.092,1080,1.334,1081,3.568,1086,2.401,1095,3.107,1097,2.239,1154,3.722,1209,2.092,1248,2.625,1251,2.178,1305,6.198,1306,3.48,1308,3.372,1310,3.186,1319,4.997,1322,2.897,1324,5.19,1604,3.105,1623,3.372,1639,5.415,2911,4.098,2913,3.48,2920,3.903,2935,7.052,2937,6.024,2938,8.229,2939,4.098,2940,5.165,2941,5.165,2942,5.165]],["title/classes/RestoreSocialNetworkEvent.html",[81,0.344,2939,4.25]],["body/classes/RestoreSocialNetworkEvent.html",[3,0.043,4,0.051,5,0.051,8,0.183,9,0.957,15,1.706,24,0.314,25,0.003,26,1.246,32,0.213,55,2.698,81,0.387,83,0.218,85,0.051,87,0.002,88,0.002,110,0.362,111,0.327,139,0.882,149,2.06,210,0.342,246,2.636,480,3.889,757,1.787,924,4.236,935,0.347,1197,3.105,1326,4.562,1327,4.373,1328,6.019,1329,4.562,1330,5.316,1331,4.562,1332,2.618,2917,6.319,2939,6.319,2943,9.852]],["title/classes/RestoreSocialNetworkEventHandler.html",[81,0.344,2944,4.503]],["body/classes/RestoreSocialNetworkEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.181,15,1.077,24,0.263,25,0.003,32,0.178,69,0.656,81,0.384,83,0.286,85,0.051,87,0.002,88,0.002,97,2.05,99,1.49,100,1.892,110,0.474,111,0.428,113,1.126,114,1.673,118,2.248,138,1.921,139,0.498,149,1.383,158,3.617,170,1.264,171,2.195,191,2.221,210,0.339,222,1.346,246,1.77,370,1.881,480,3.503,832,3.356,924,3.776,935,0.343,1080,1.545,1204,3.794,1205,3.385,1206,2.632,1207,2.632,1208,3.385,1209,2.424,1210,2.424,1211,2.558,1213,2.632,1214,2.671,1215,2.671,1310,5.827,1336,4.173,2913,4.032,2920,4.522,2939,7.494,2944,6.657,2945,8.874,2946,5.984]],["title/classes/RestoreUserCommand.html",[81,0.344,2947,4.25]],["body/classes/RestoreUserCommand.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,15,1.744,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.261,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1347,5.225,1648,7.503,2947,7.081,2948,9.691]],["title/classes/RestoreUserCommandHandler.html",[81,0.344,2949,4.503]],["body/classes/RestoreUserCommandHandler.html",[3,0.036,4,0.042,5,0.042,8,0.15,9,0.838,15,1.254,22,1.318,24,0.267,25,0.003,32,0.181,38,2.183,64,1.842,69,0.725,76,1.37,81,0.318,83,0.252,85,0.042,87,0.002,88,0.002,99,1.311,100,1.717,110,0.418,111,0.377,113,0.934,114,1.472,170,1.048,175,2.152,176,2.093,177,2.122,178,1.984,210,0.394,221,1.468,222,1.568,224,2.335,277,1.577,370,1.656,498,2.618,499,3.131,522,3.48,530,1.779,532,2.478,607,3.344,667,2.618,669,2.469,670,2.559,671,2.641,715,3.344,757,1.374,935,0.285,944,2.01,1080,1.282,1081,3.493,1086,2.335,1089,3.344,1095,3.022,1097,2.152,1154,3.87,1162,3.066,1183,2.093,1188,2.249,1250,4.551,1251,2.093,1322,2.784,1353,6.417,1381,2.725,1464,2.984,1564,2.478,1623,4.551,1636,2.784,1958,3.595,2320,3.938,2911,3.938,2913,3.344,2947,6.931,2949,6.772,2950,8.736,2951,3.938,2952,4.963,2953,4.963,2954,4.963]],["title/classes/RestoreUserEvent.html",[81,0.344,2951,4.25]],["body/classes/RestoreUserEvent.html",[3,0.045,4,0.053,5,0.053,8,0.191,9,0.984,22,2.559,24,0.32,25,0.003,26,1.258,32,0.217,55,2.774,81,0.404,83,0.228,85,0.053,87,0.003,88,0.003,110,0.377,111,0.341,139,0.89,149,2.103,210,0.356,246,2.691,412,4.007,757,1.803,935,0.362,1197,3.192,1332,2.731,1457,4.562,1458,3.696,1461,4.562,1660,6.188,1661,4.76,2917,6.497,2951,6.497,2955,9.987]],["title/classes/RestoreUserEventHandler.html",[81,0.344,2956,4.842]],["body/classes/RestoreUserEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,22,1.623,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,935,0.351,1080,1.578,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1209,2.475,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1464,5.726,1466,3.989,2913,4.117,2920,4.617,2951,7.555,2956,7.257,2957,8.966,2958,6.11]],["title/classes/RoleGroupMembershipEnum.html",[81,0.344,2074,4.503]],["body/classes/RoleGroupMembershipEnum.html",[3,0.046,4,0.054,5,0.054,6,4.677,8,0.194,9,0.994,24,0.304,25,0.003,26,1.091,32,0.206,55,3.106,81,0.41,85,0.054,87,0.003,88,0.003,139,0.892,567,6.531,828,6.999,935,0.367,1197,3.573,2074,6.954,2295,9.684,2959,8.761,2960,6.398,2961,9.072,2962,10.036,2963,6.398,2964,6.398,2965,6.398]],["title/classes/SamePasswordException.html",[81,0.344,2966,4.503]],["body/classes/SamePasswordException.html",[3,0.054,4,0.063,5,0.063,25,0.003,32,0.168,69,0.553,81,0.48,85,0.063,87,0.003,88,0.003,120,3.872,122,2.085,210,0.557,599,4.404,645,4.601,718,4.497,935,0.429,936,4.724,937,4.073,940,3.901,2160,6.761,2161,6.761,2966,7.671,2967,8.249,2968,7.479,2969,6.287,2970,6.287]],["title/classes/SendMailCommand.html",[81,0.344,282,4.25]],["body/classes/SendMailCommand.html",[3,0.044,4,0.052,5,0.052,8,0.186,9,0.969,24,0.317,25,0.003,26,1.21,32,0.215,81,0.394,83,0.222,85,0.052,87,0.002,88,0.002,92,4.49,110,0.368,111,0.536,139,0.886,210,0.348,282,6.395,293,5.353,577,5.548,757,1.814,935,0.353,961,1.88,962,2.312,963,1.836,969,5.277,1560,5.168,1561,5.556,1562,5.556,2306,7.134,2971,9.909,2972,5.556,2973,5.556]],["title/classes/SendMailCommandHandler.html",[81,0.344,271,4.503]],["body/classes/SendMailCommandHandler.html",[3,0.042,4,0.05,5,0.05,8,0.179,24,0.26,25,0.003,32,0.176,69,0.723,81,0.378,83,0.283,85,0.05,87,0.002,88,0.002,92,3.992,99,1.476,100,1.878,110,0.47,111,0.424,113,1.11,114,1.657,122,1.644,139,0.491,168,3.308,170,1.246,181,3.974,184,4.271,210,0.334,221,2.319,224,1.709,271,6.593,282,7.45,370,1.863,935,0.339,944,3.176,969,4.602,1081,3.82,1086,2.628,1087,4.679,1088,7.45,1090,6.222,1095,3.4,1097,2.557,1101,4.679,1103,5.331,1154,3.854,1183,2.487,1560,4.958,2972,5.331,2973,5.331,2974,8.81,2975,6.222,2976,5.331,2977,5.898,2978,5.898,2979,5.898,2980,5.898]],["title/classes/SendMailEvent.html",[81,0.344,2975,4.25]],["body/classes/SendMailEvent.html",[3,0.039,4,0.046,5,0.046,8,0.165,9,0.894,24,0.326,25,0.003,26,1.249,32,0.221,55,2.521,81,0.35,83,0.197,85,0.046,87,0.002,88,0.002,92,4.556,97,2.549,110,0.327,111,0.515,112,3.944,139,0.905,149,1.958,210,0.309,246,2.504,577,5.225,757,1.855,935,0.313,961,1.736,962,2.221,963,1.629,969,4.97,1197,2.9,1588,4.931,1593,4.931,1594,4.931,2306,6.719,2975,5.904,2981,10.055,2982,5.455,2983,5.455,2984,5.455,2985,6.726,2986,5.455]],["title/classes/SendMailEventHandler.html",[81,0.344,273,4.503]],["body/classes/SendMailEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,92,4.062,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,112,2.649,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,184,6.897,191,2.268,210,0.346,222,1.375,246,1.807,273,6.749,370,1.907,935,0.351,1080,1.578,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1629,3.77,2975,7.555,2976,5.523,2987,8.966,2988,6.11,2989,6.11,2990,6.11]],["title/classes/SetCurrentRefreshTokenCommand.html",[81,0.344,2991,4.25]],["body/classes/SetCurrentRefreshTokenCommand.html",[3,0.048,4,0.057,5,0.057,8,0.202,9,1.021,24,0.31,25,0.003,26,1.272,32,0.21,81,0.428,83,0.241,85,0.057,87,0.003,88,0.003,110,0.4,111,0.361,139,0.866,210,0.377,412,4.229,613,5.194,757,1.735,935,0.383,1332,2.892,1973,7.811,1974,6.03,2868,6.03,2869,6.03,2870,7.681,2991,6.741,2992,9.844,2993,7.13]],["title/classes/SetCurrentRefreshTokenCommandHandler.html",[81,0.344,2994,4.503]],["body/classes/SetCurrentRefreshTokenCommandHandler.html",[3,0.038,4,0.045,5,0.045,8,0.161,22,1.411,24,0.242,25,0.003,32,0.164,64,1.972,69,0.738,76,1.466,81,0.341,83,0.264,85,0.045,87,0.002,88,0.002,99,1.375,100,1.78,110,0.438,111,0.395,113,1,114,1.544,170,1.122,175,2.304,176,2.24,177,2.271,178,2.124,210,0.413,221,2.161,222,1.644,224,1.54,247,2.02,277,1.688,370,1.736,498,2.803,499,3.224,522,3.649,530,1.904,531,5.096,532,2.653,601,3.848,613,4.746,667,1.996,669,1.882,670,2.653,935,0.305,944,2.152,1080,1.372,1081,3.622,1086,2.449,1095,3.168,1097,2.304,1154,3.751,1162,3.214,1183,2.24,1188,2.407,1381,2.917,1564,2.653,1636,2.98,1980,5.798,2873,7.138,2876,4.015,2991,7.138,2993,6.516,2994,7.022,2995,8.353,2996,5.313,2997,5.313,2998,5.313]],["title/classes/SetCurrentRefreshTokenEvent.html",[81,0.344,2999,4.503]],["body/classes/SetCurrentRefreshTokenEvent.html",[3,0.043,4,0.051,5,0.051,8,0.183,9,0.957,22,2.518,24,0.314,25,0.003,26,1.246,32,0.213,55,2.698,81,0.387,83,0.218,85,0.051,87,0.002,88,0.002,110,0.362,111,0.327,139,0.882,149,2.06,210,0.342,246,2.636,412,3.942,613,5.443,638,4.567,757,1.787,846,5.367,935,0.347,1197,3.105,1332,2.618,1458,3.543,2879,5.458,2880,7.2,2882,5.458,2883,5.458,2993,7.135,2999,6.696,3000,9.852]],["title/classes/SetCurrentRefreshTokenEventHandler.html",[81,0.344,3001,4.503]],["body/classes/SetCurrentRefreshTokenEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.182,15,1.083,24,0.264,25,0.003,32,0.179,69,0.658,81,0.386,83,0.287,85,0.051,87,0.002,88,0.002,97,2.062,99,1.496,110,0.476,111,0.43,113,1.133,118,2.261,138,1.932,139,0.501,149,1.392,158,3.623,170,1.272,171,2.208,191,2.234,210,0.341,246,1.78,332,5.19,370,1.889,613,5.193,638,3.452,846,4.056,935,0.346,1080,1.554,1204,3.805,1205,3.398,1206,2.648,1207,2.648,1208,3.398,1210,2.438,1211,2.573,1213,2.648,1214,2.687,1215,2.687,1466,3.93,1629,3.714,2886,7.958,2993,6.856,2999,7.958,3001,6.683,3002,8.9,3003,6.02,3004,6.02]],["title/classes/ShiftProfileOwnerCommand.html",[81,0.344,2769,4.25]],["body/classes/ShiftProfileOwnerCommand.html",[3,0.049,4,0.057,5,0.057,8,0.204,9,1.027,24,0.312,25,0.003,26,1.176,32,0.211,81,0.432,83,0.243,85,0.057,87,0.003,88,0.003,110,0.404,111,0.364,139,0.868,210,0.381,412,3.907,583,3.667,757,1.778,935,0.387,961,1.995,962,2.379,963,2.012,2608,6.133,2769,6.784,3005,9.88,3006,6.737,3007,8.55,3008,6.737]],["title/classes/ShiftProfileOwnerCommandHandler.html",[81,0.344,2714,4.503]],["body/classes/ShiftProfileOwnerCommandHandler.html",[3,0.036,4,0.043,5,0.043,8,0.152,15,1.267,24,0.234,25,0.003,32,0.158,64,1.87,69,0.709,76,1.39,78,2.608,81,0.323,83,0.254,85,0.043,87,0.002,88,0.002,99,1.325,100,1.731,110,0.422,111,0.381,113,0.948,114,1.488,139,0.676,170,1.064,210,0.398,221,2.401,222,1.827,224,2.354,247,1.915,277,1.6,370,1.673,477,2.317,499,3.526,514,4.234,522,4.054,530,1.805,532,2.515,547,3.029,583,3.434,667,1.892,669,2.877,670,1.6,671,2.663,935,0.289,944,2.04,1080,1.301,1081,3.52,1086,2.36,1095,3.053,1097,2.184,1154,3.697,1209,2.04,1234,3.108,1238,3.029,1247,3.996,1248,3.579,1249,3.806,1250,3.289,1251,2.969,1265,3.289,1622,3.512,1624,3.648,1652,3.996,2714,5.92,2716,7.391,2769,6.976,2926,4.553,3009,8.119,3010,5.037,3011,5.037,3012,4.553,3013,5.037]],["title/classes/ShiftProfileOwnerEvent.html",[81,0.344,3014,4.503]],["body/classes/ShiftProfileOwnerEvent.html",[3,0.042,4,0.049,5,0.049,8,0.175,9,0.93,15,1.57,24,0.322,25,0.003,26,1.234,32,0.218,55,2.621,81,0.371,83,0.209,85,0.049,87,0.002,88,0.002,110,0.346,111,0.313,139,0.898,149,2.016,210,0.327,246,2.579,583,3.94,757,1.839,828,6.772,935,0.332,961,1.805,962,2.265,963,1.726,1197,3.016,3014,6.505,3015,9.994,3016,5.78,3017,7.738,3018,5.78,3019,7.738,3020,5.78,3021,5.78]],["title/classes/ShiftProfileOwnerEventHandler.html",[81,0.344,2721,4.503]],["body/classes/ShiftProfileOwnerEventHandler.html",[3,0.043,4,0.05,5,0.05,8,0.179,15,1.414,22,1.571,24,0.261,25,0.003,32,0.177,69,0.652,81,0.379,83,0.284,85,0.05,87,0.002,88,0.002,97,2.026,99,1.478,100,1.881,110,0.471,111,0.425,113,1.113,114,1.66,118,2.222,138,1.899,139,0.493,149,1.367,158,3.605,170,1.249,171,2.17,191,2.196,210,0.335,222,1.331,246,1.749,370,1.867,583,3.632,935,0.34,1080,1.527,1204,3.772,1205,3.359,1206,2.602,1207,2.602,1208,3.359,1209,2.396,1210,2.396,1211,2.529,1213,2.602,1214,2.64,1215,2.64,1336,4.125,2721,6.605,2723,8.498,3014,7.903,3022,8.823,3023,5.915,3024,5.915,3025,5.915,3026,5.915]],["title/classes/ShiftProfileOwnerRequest.html",[81,0.344,2756,4.503]],["body/classes/ShiftProfileOwnerRequest.html",[3,0.049,4,0.057,5,0.057,8,0.204,9,1.027,24,0.312,25,0.003,26,1.176,32,0.211,81,0.432,83,0.243,85,0.057,87,0.003,88,0.003,110,0.404,111,0.364,139,0.868,210,0.381,412,3.907,583,3.667,757,1.778,935,0.387,961,1.995,962,2.379,963,2.012,2608,6.133,2756,7.188,3027,9.88,3028,6.737,3029,8.55,3030,6.737]],["title/classes/SignInDto.html",[81,0.344,3031,4.503]],["body/classes/SignInDto.html",[3,0.051,4,0.061,5,0.061,8,0.216,9,1.066,24,0.294,25,0.003,26,1.201,27,3.291,32,0.199,69,0.528,79,6.587,81,0.569,82,3.445,85,0.061,87,0.003,88,0.003,596,4.37,599,4.655,917,5.664,935,0.41,2798,6.001,3031,7.454,3032,8.719,3033,7.138,3034,6.453,3035,7.138,3036,7.138,3037,6.453,3038,6.453]],["title/classes/SignUpDto.html",[81,0.344,632,4.25]],["body/classes/SignUpDto.html",[3,0.049,4,0.057,5,0.057,8,0.205,9,1.03,24,0.312,25,0.003,26,1.241,27,3.492,32,0.212,69,0.5,79,6.665,81,0.549,82,3.262,85,0.057,87,0.003,88,0.003,112,4.079,596,4.262,599,4.54,632,6.798,915,6.475,917,5.363,935,0.388,2798,5.682,3032,8.942,3034,6.11,3037,6.11,3038,6.11,3039,6.759,3040,6.11,3041,6.759,3042,6.759,3043,6.759]],["title/controllers/SocialNetworkController.html",[89,2.723,3044,4.503]],["body/controllers/SocialNetworkController.html",[3,0.024,4,0.028,5,0.028,8,0.1,24,0.272,25,0.003,26,1.148,27,3.182,32,0.193,69,0.674,81,0.211,83,0.297,85,0.028,87,0.002,88,0.002,89,1.674,91,1.589,96,2.219,99,0.967,100,2.223,106,1.317,110,0.492,111,0.444,113,1.613,114,2.09,118,2.375,119,2.088,121,2.297,122,0.918,127,2.15,128,1.808,131,2.219,132,2.385,133,1.705,134,2.385,135,1.772,138,1.057,139,0.274,143,5.979,144,2.752,222,1.929,258,2.297,360,7.037,430,5.173,480,3.501,670,2.723,671,2.811,924,3.097,1330,3.545,1337,7.395,1422,3.584,1879,2.385,1946,5.667,2409,2.977,2412,2.977,2414,2.977,2417,2.769,2420,4.321,2421,2.769,2425,2.977,2432,2.977,2434,2.613,2435,2.613,2440,2.613,2441,2.385,2442,2.613,2446,2.977,2447,5.314,2449,2.769,2453,2.613,2456,2.977,2457,2.613,2460,2.977,2466,2.977,2548,2.769,3044,4.321,3045,3.293,3046,4.646,3047,4.646,3048,7.142,3049,4.646,3050,6.321,3051,4.646,3052,5.714,3053,3.293,3054,3.293,3055,2.977,3056,3.293,3057,8.018,3058,3.293,3059,2.977,3060,3.293,3061,3.293,3062,3.293,3063,5.14,3064,2.977,3065,3.293,3066,4.646,3067,5.667,3068,3.293,3069,4.777,3070,2.977,3071,4.646,3072,2.613,3073,2.977,3074,2.977,3075,3.293,3076,3.293,3077,3.293,3078,3.293,3079,3.293,3080,5.14,3081,3.293,3082,5.14,3083,3.293,3084,3.293,3085,3.293,3086,3.293,3087,3.293,3088,3.293]],["title/classes/SocialNetworkDto.html",[81,0.344,1853,3.88]],["body/classes/SocialNetworkDto.html",[3,0.038,4,0.044,5,0.044,8,0.158,9,0.869,13,3.542,14,3.811,15,1.491,21,3.592,24,0.336,25,0.003,26,1.206,32,0.228,43,4.267,81,0.335,83,0.323,85,0.044,87,0.002,88,0.002,110,0.313,111,0.448,139,0.92,210,0.296,480,4.06,757,1.885,935,0.3,961,1.686,962,2.188,963,1.562,1296,5.582,1297,5.582,1853,5.236,3089,10.286,3090,5.231,3091,5.231,3092,5.231,3093,5.231,3094,5.231,3095,5.231,3096,5.231,3097,5.231,3098,5.231]],["title/entities/SocialNetworkEntity.html",[0,1.876,479,2.942]],["body/entities/SocialNetworkEntity.html",[0,2.932,2,2.741,3,0.028,4,0.033,5,0.033,8,0.118,9,0.845,13,3.34,14,3.594,15,1.506,21,3.388,24,0.318,25,0.003,26,1.219,27,3.557,32,0.216,43,4.414,51,2.929,69,0.434,70,4.785,71,3.513,72,3.576,74,1.921,75,3.513,76,1.08,81,0.376,83,0.329,85,0.033,87,0.002,88,0.002,289,3.527,445,5.156,446,2.835,479,3.863,480,3.852,481,7.068,585,3.29,843,2.555,905,3.83,924,3.902,925,4.466,928,1.989,933,2.026,940,1.673,942,2.415,961,0.913,962,1.368,963,1.169,1295,4.906,1296,5.64,1297,5.64,1330,5.473,1717,3.538,2477,6.359,2491,4.432,3099,3.914,3100,7.035,3101,5.865,3102,3.914,3103,3.914,3104,3.914,3105,3.914,3106,3.914,3107,3.914,3108,3.914,3109,3.914,3110,3.914,3111,3.914,3112,3.538,3113,3.914,3114,9.111,3115,2.415,3116,3.914]],["title/modules/SocialNetworkModule.html",[149,1.238,325,4.048]],["body/modules/SocialNetworkModule.html",[3,0.029,4,0.034,5,0.034,25,0.003,64,1.493,69,0.801,78,2.082,81,0.258,83,0.145,85,0.034,87,0.002,88,0.002,91,2.889,97,2.449,106,2.393,122,1.121,149,1.384,151,2.256,152,3.357,156,5.337,158,3.181,160,3.599,161,2.418,162,2.418,164,3.599,165,3.599,166,2.626,167,3.908,168,2.256,169,3.796,170,0.85,171,2.196,172,2.626,178,4.116,180,3.039,183,3.039,186,5.403,188,3.796,189,2.71,190,2.55,191,1.493,194,2.626,195,2.626,196,2.626,197,2.626,198,2.55,230,3.039,238,2.805,276,2.626,277,1.278,278,2.913,325,7.424,360,3.191,479,3.287,480,1.588,482,2.306,924,4.15,944,1.629,1210,1.629,1303,5.032,1305,5.905,1308,2.626,1310,5.224,1330,3.357,1333,5.032,1634,5.032,1643,5.032,1806,2.122,1850,5.032,1852,3.381,1866,2.55,1885,2.418,1930,5.032,1937,5.032,2500,3.191,2502,3.191,2503,3.191,2505,3.381,2507,3.191,2509,3.381,2511,3.191,2512,3.191,2513,5.673,2937,5.032,2944,5.032,3044,6.011,3069,6.707,3070,3.636,3117,3.636,3118,4.022,3119,3.636,3120,4.022,3121,4.022,3122,5.032,3123,5.032,3124,5.032,3125,5.032]],["title/classes/SocialNetworkResponse.html",[81,0.344,3072,4.25]],["body/classes/SocialNetworkResponse.html",[3,0.036,4,0.043,5,0.043,8,0.152,9,0.845,13,3.467,14,3.73,15,1.459,21,3.516,24,0.338,25,0.003,26,1.229,32,0.229,43,4.213,81,0.322,83,0.317,85,0.043,87,0.002,88,0.002,110,0.301,111,0.439,139,0.923,210,0.284,480,4.077,757,1.891,935,0.288,961,1.64,962,2.049,1149,2.311,1295,5.655,1296,5.464,1297,5.464,3072,5.578,3126,10.328,3127,5.024,3128,5.024,3129,5.024,3130,5.024,3131,5.024,3132,5.024,3133,5.024,3134,5.024,3135,5.024,3136,5.024]],["title/injectables/SocialNetworkService.html",[207,1.965,3069,4.048]],["body/injectables/SocialNetworkService.html",[3,0.018,4,0.021,5,0.021,8,0.075,15,1.09,24,0.253,25,0.003,26,1.062,32,0.179,69,0.729,81,0.159,83,0.316,85,0.021,87,0.001,88,0.001,99,0.768,100,2.118,110,0.457,111,0.413,113,1.436,114,1.952,122,0.689,138,0.794,139,0.34,144,2.865,170,0.522,207,1.498,208,1.214,210,0.14,211,1.725,212,4.861,213,5.143,218,1.869,220,3.941,221,0.731,222,1.717,223,4.222,224,2.88,245,1.869,360,6.563,480,3.265,667,2.867,669,2.704,670,2.627,671,3.029,832,3.758,924,3.407,934,5.633,937,2.991,938,2.236,1086,0.829,1159,2.957,1160,1.791,1161,1.791,1187,1.725,1240,4.375,1241,1.451,1251,2.552,1292,3.24,1295,2.847,1296,2.751,1297,2.751,1305,4.222,1330,2.925,1337,4.803,1383,1.615,1632,3.24,1654,5.063,1655,2.079,1698,3.24,1713,3.433,1714,2.236,1755,1.869,1791,4.137,1847,3.24,1852,2.079,1853,4.385,1854,1.962,1855,1.962,1866,1.568,1873,1.526,1879,1.791,1885,1.487,1929,3.24,1933,3.24,1946,4.803,2440,1.962,2441,1.791,2442,1.962,2543,4.803,2544,2.079,2545,3.691,2547,2.236,2548,2.079,2552,1.962,2556,1.962,2560,4.384,2561,3.691,2563,2.236,2564,2.236,2935,3.24,3046,3.691,3047,3.691,3049,3.691,3051,3.691,3052,3.691,3055,3.691,3057,7.213,3059,3.691,3064,3.691,3066,3.691,3067,4.803,3069,3.086,3071,3.691,3072,1.962,3073,2.236,3074,2.236,3137,2.473,3138,6.054,3139,4.083,3140,2.473,3141,4.083,3142,2.473,3143,6.054,3144,2.473,3145,2.473,3146,2.473,3147,4.083,3148,2.473,3149,2.473,3150,2.473,3151,3.24,3152,2.473,3153,4.083,3154,4.083,3155,5.215,3156,2.473,3157,4.083,3158,4.083,3159,4.083,3160,4.083,3161,2.473]],["title/classes/SoftDeleteOccupationCommand.html",[81,0.344,2553,4.25]],["body/classes/SoftDeleteOccupationCommand.html",[3,0.052,4,0.061,5,0.061,8,0.217,9,1.068,24,0.295,25,0.003,26,1.058,32,0.2,81,0.459,83,0.259,85,0.061,87,0.003,88,0.003,106,3.862,110,0.429,111,0.387,139,0.805,210,0.405,757,1.648,935,0.411,961,2.073,962,2.356,1144,5.413,1149,3.295,1184,5.097,1600,6.022,1601,6.022,2553,7.05,3162,9.661]],["title/classes/SoftDeleteOccupationCommandHandler.html",[81,0.344,2501,4.503]],["body/classes/SoftDeleteOccupationCommandHandler.html",[3,0.036,4,0.042,5,0.042,8,0.151,15,0.895,24,0.232,25,0.003,32,0.157,69,0.725,76,1.373,81,0.319,83,0.252,85,0.042,87,0.002,88,0.002,99,1.314,100,1.719,106,3.682,110,0.418,111,0.378,113,0.936,114,1.475,139,0.581,170,1.051,175,2.157,176,2.098,177,2.127,178,1.989,210,0.395,221,2.064,222,1.571,224,2.535,247,1.892,277,1.58,370,1.659,473,2.484,499,3.134,512,4.308,530,1.783,545,3.07,579,3.027,667,1.869,669,2.473,670,1.58,671,2.289,715,3.352,935,0.286,944,2.015,1080,1.285,1081,3.497,1086,2.339,1095,3.027,1097,2.157,1152,6.098,1153,3.352,1154,3.684,1156,3.248,1162,3.071,1165,3.248,1180,3.248,1183,2.944,1184,2.625,1186,4.704,1188,2.254,1189,3.603,1248,2.529,1251,2.098,1564,2.484,1606,5.539,1608,2.92,1636,2.79,2501,6.781,2553,6.938,3163,8.066,3164,5.539,3165,3.352,3166,3.947,3167,4.975,3168,4.975,3169,3.352]],["title/classes/SoftDeleteOccupationEvent.html",[81,0.344,3164,4.25]],["body/classes/SoftDeleteOccupationEvent.html",[3,0.044,4,0.052,5,0.052,8,0.184,9,0.963,24,0.316,25,0.003,26,1.207,32,0.214,55,2.714,81,0.391,83,0.22,85,0.052,87,0.002,88,0.002,106,4.134,110,0.365,111,0.33,139,0.884,149,2.069,210,0.345,246,2.647,579,4.124,757,1.811,935,0.35,961,1.869,962,2.219,1149,2.802,1184,4.723,1195,4.603,1196,4.603,1197,3.123,1200,4.603,1201,4.603,1611,5.121,3164,6.357,3169,5.399,3170,9.881]],["title/classes/SoftDeleteOccupationEventHandler.html",[81,0.344,2504,4.503]],["body/classes/SoftDeleteOccupationEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.182,15,1.083,24,0.264,25,0.003,32,0.179,69,0.658,81,0.386,83,0.287,85,0.051,87,0.002,88,0.002,97,2.062,99,1.496,100,1.897,106,3.785,110,0.476,111,0.43,113,1.133,114,1.679,118,2.261,138,1.932,139,0.501,149,1.392,158,3.623,170,1.272,171,2.208,191,2.234,210,0.341,222,1.354,246,1.78,370,1.889,579,2.61,935,0.346,1080,1.554,1165,6.181,1204,3.805,1205,3.398,1206,2.648,1207,2.648,1208,3.398,1209,2.438,1210,2.438,1211,2.573,1213,2.648,1214,2.687,1215,2.687,1216,4.549,1608,3.533,2504,6.683,3164,7.511,3165,4.056,3169,4.056,3171,8.9,3172,6.02]],["title/classes/SoftDeleteProfileCommand.html",[81,0.344,2767,4.25]],["body/classes/SoftDeleteProfileCommand.html",[3,0.051,4,0.061,5,0.061,8,0.216,9,1.066,15,1.736,24,0.294,25,0.003,26,1.055,32,0.199,81,0.458,83,0.258,85,0.061,87,0.003,88,0.003,106,3.856,110,0.428,111,0.386,139,0.803,210,0.404,757,1.646,935,0.41,961,2.068,962,2.42,963,2.132,1224,5.17,1617,7.454,2767,7.035,3173,9.645]],["title/classes/SoftDeleteProfileCommandHandler.html",[81,0.344,2724,4.503]],["body/classes/SoftDeleteProfileCommandHandler.html",[3,0.038,4,0.044,5,0.044,8,0.158,15,1.491,24,0.24,25,0.003,32,0.163,69,0.717,76,1.444,81,0.335,83,0.261,85,0.044,87,0.002,88,0.002,99,1.36,100,1.766,106,3.75,110,0.433,111,0.391,113,0.984,114,1.527,139,0.602,170,1.105,210,0.409,221,2.138,222,1.626,224,2.401,247,1.989,277,1.662,370,1.718,477,2.406,499,3.203,514,4.347,530,1.875,547,3.145,583,1.942,667,1.965,669,2.561,670,1.662,671,2.371,935,0.3,944,2.119,1080,1.351,1081,3.592,1086,2.422,1095,3.135,1097,2.268,1154,3.735,1183,2.206,1209,2.119,1233,5.667,1234,3.227,1238,3.145,1245,3.07,1248,2.659,1251,2.206,1265,3.415,1604,3.145,1622,3.648,1623,4.72,1624,3.789,2724,6.078,2767,7.091,3165,3.525,3166,4.15,3174,8.285,3175,5.736,3176,5.231,3177,5.231,3178,5.231]],["title/classes/SoftDeleteProfileEvent.html",[81,0.344,3175,4.25]],["body/classes/SoftDeleteProfileEvent.html",[3,0.044,4,0.052,5,0.052,8,0.184,9,0.961,15,1.609,24,0.315,25,0.003,26,1.206,32,0.214,55,2.709,81,0.389,83,0.219,85,0.052,87,0.002,88,0.002,106,4.131,110,0.364,111,0.329,139,0.883,149,2.066,210,0.344,246,2.643,583,3.526,757,1.81,935,0.349,961,1.865,962,2.303,963,1.814,1197,3.117,1275,4.399,1278,6.043,3169,5.388,3175,6.344,3179,9.871,3180,5.49,3181,5.49]],["title/classes/SoftDeleteProfileEventHandler.html",[81,0.344,2720,4.503]],["body/classes/SoftDeleteProfileEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.182,15,1.083,24,0.264,25,0.003,32,0.179,69,0.658,81,0.386,83,0.287,85,0.051,87,0.002,88,0.002,97,2.062,99,1.496,100,1.897,106,3.785,110,0.476,111,0.43,113,1.133,114,1.679,118,2.261,138,1.932,139,0.501,149,1.392,158,3.623,170,1.272,171,2.208,191,2.234,210,0.341,222,1.354,246,1.78,370,1.889,583,2.234,935,0.346,1080,1.554,1204,3.805,1205,3.398,1206,2.648,1207,2.648,1208,3.398,1209,2.438,1210,2.438,1211,2.573,1213,2.648,1214,2.687,1215,2.687,1245,5.555,1336,4.198,1608,3.533,2720,6.683,3165,4.056,3169,4.056,3175,7.511,3182,8.9,3183,6.02]],["title/classes/SoftDeleteSocialNetworkCommand.html",[81,0.344,3184,4.503]],["body/classes/SoftDeleteSocialNetworkCommand.html",[3,0.051,4,0.06,5,0.06,8,0.212,9,1.054,15,1.722,24,0.291,25,0.003,26,1.044,32,0.197,81,0.45,83,0.253,85,0.06,87,0.003,88,0.003,106,3.826,110,0.42,111,0.379,139,0.797,210,0.397,480,3.777,757,1.633,924,3.826,935,0.403,961,2.046,962,2.339,1149,3.227,1294,5.301,1298,5.301,1301,5.301,3184,7.374,3185,9.57]],["title/classes/SoftDeleteSocialNetworkCommandHandler.html",[81,0.344,3125,4.503]],["body/classes/SoftDeleteSocialNetworkCommandHandler.html",[3,0.037,4,0.043,5,0.043,8,0.155,15,0.922,24,0.237,25,0.003,32,0.16,69,0.713,76,1.415,81,0.329,83,0.258,85,0.043,87,0.002,88,0.002,99,1.341,100,1.747,106,3.723,110,0.427,111,0.386,113,0.964,114,1.506,139,0.594,170,1.083,210,0.403,221,2.108,222,1.844,224,2.066,277,1.628,370,1.693,479,2.814,480,3.235,482,2.939,499,3.175,515,4.654,530,1.837,548,3.347,669,2.525,671,2.337,832,2.875,924,3.723,935,0.294,944,2.076,1080,1.324,1081,3.554,1086,2.389,1095,3.091,1097,2.222,1154,3.715,1209,2.076,1248,2.605,1251,2.161,1305,6.178,1306,3.454,1308,3.347,1310,3.162,1319,4.971,1322,2.875,1324,5.163,1604,3.082,1608,3.008,1623,3.347,1639,5.387,3125,5.993,3165,3.454,3166,4.067,3184,7.448,3186,8.196,3187,4.067,3188,5.126,3189,5.126,3190,5.126]],["title/classes/SoftDeleteSocialNetworkEvent.html",[81,0.344,3187,4.25]],["body/classes/SoftDeleteSocialNetworkEvent.html",[3,0.043,4,0.05,5,0.05,8,0.179,9,0.944,15,1.692,24,0.312,25,0.003,26,1.241,32,0.211,55,2.662,81,0.379,83,0.214,85,0.05,87,0.002,88,0.002,106,4.104,110,0.354,111,0.32,139,0.879,149,2.04,210,0.335,246,2.609,480,3.863,757,1.779,924,4.219,935,0.34,1197,3.063,1326,4.47,1327,4.284,1328,5.938,1329,4.47,1330,5.273,1331,4.47,1332,2.565,3169,5.294,3187,6.234,3191,9.786]],["title/classes/SoftDeleteSocialNetworkEventHandler.html",[81,0.344,3122,4.503]],["body/classes/SoftDeleteSocialNetworkEventHandler.html",[3,0.042,4,0.05,5,0.05,8,0.179,15,1.061,24,0.26,25,0.003,32,0.176,69,0.652,81,0.378,83,0.283,85,0.05,87,0.002,88,0.002,97,2.02,99,1.476,100,1.878,106,3.754,110,0.47,111,0.424,113,1.11,114,1.657,118,2.216,138,1.893,139,0.491,149,1.363,158,3.602,170,1.246,171,2.163,191,2.189,210,0.334,222,1.327,246,1.744,370,1.863,480,3.478,832,3.308,924,3.754,935,0.339,1080,1.523,1204,3.767,1205,3.353,1206,2.594,1207,2.594,1208,3.353,1209,2.389,1210,2.389,1211,2.521,1213,2.594,1214,2.632,1215,2.632,1310,5.794,1336,4.113,1608,3.461,3122,6.593,3165,3.974,3169,3.974,3187,7.45,3192,8.81,3193,5.898]],["title/classes/SoftDeleteUserCommand.html",[81,0.344,3194,4.25]],["body/classes/SoftDeleteUserCommand.html",[3,0.052,4,0.062,5,0.062,8,0.22,9,1.077,24,0.297,25,0.003,26,1.208,32,0.202,81,0.466,83,0.263,85,0.062,87,0.003,88,0.003,106,3.887,110,0.435,111,0.393,139,0.81,210,0.411,412,4.222,757,1.529,935,0.417,1332,3.15,1347,5.262,1458,4.264,1648,6.108,3194,7.112,3195,9.722,3196,7.266]],["title/classes/SoftDeleteUserCommandHandler.html",[81,0.344,3197,4.503]],["body/classes/SoftDeleteUserCommandHandler.html",[3,0.036,4,0.042,5,0.042,8,0.151,9,0.842,15,1.261,22,1.328,24,0.268,25,0.003,32,0.182,64,1.856,69,0.726,76,1.38,81,0.321,83,0.253,85,0.042,87,0.002,88,0.002,99,1.318,100,1.724,106,3.824,110,0.42,111,0.379,113,0.941,114,1.48,170,1.056,175,2.168,176,2.108,177,2.137,178,1.999,210,0.396,221,1.478,222,1.576,224,1.449,277,1.588,370,1.664,498,2.638,499,3.141,522,3.498,530,1.792,532,2.497,604,4.519,667,1.878,669,2.482,670,2.569,671,2.297,757,1.38,935,0.287,944,2.025,1080,1.291,1081,3.506,1086,2.347,1089,3.369,1095,3.038,1097,2.168,1154,3.876,1162,3.081,1188,2.265,1247,3.967,1248,2.541,1249,5.294,1250,3.264,1251,2.108,1322,3.929,1353,6.434,1381,2.745,1464,3.006,1564,2.497,1636,2.804,1649,3.967,3165,3.369,3166,3.967,3194,6.953,3197,5.889,3198,8.764,3199,3.967,3200,5,3201,5]],["title/classes/SoftDeleteUserEvent.html",[81,0.344,3199,4.25]],["body/classes/SoftDeleteUserEvent.html",[3,0.044,4,0.052,5,0.052,8,0.186,9,0.967,22,2.533,24,0.316,25,0.003,26,1.25,32,0.214,55,2.725,81,0.393,83,0.221,85,0.052,87,0.002,88,0.002,106,3.958,110,0.367,111,0.332,139,0.885,149,2.076,210,0.347,246,2.655,412,3.965,613,4.244,638,4.612,757,1.792,846,5.42,935,0.352,1197,3.135,1332,2.657,1457,4.439,1458,3.596,1461,4.439,1660,6.078,1661,4.631,3199,6.382,3202,9.9]],["title/classes/SoftDeleteUserEventHandler.html",[81,0.344,3203,4.842]],["body/classes/SoftDeleteUserEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.182,15,1.083,22,1.599,24,0.264,25,0.003,32,0.179,69,0.658,81,0.386,83,0.287,85,0.051,87,0.002,88,0.002,97,2.062,99,1.496,100,1.897,106,3.785,110,0.476,111,0.43,113,1.133,114,1.679,118,2.261,138,1.932,139,0.501,149,1.392,158,3.623,170,1.272,171,2.208,191,2.234,210,0.341,222,1.354,246,1.78,370,1.889,935,0.346,1080,1.554,1204,3.805,1205,3.398,1206,2.648,1207,2.648,1208,3.398,1209,2.438,1210,2.438,1211,2.573,1213,2.648,1214,2.687,1215,2.687,1464,5.692,1466,3.93,1608,3.533,3165,4.056,3169,4.056,3199,7.511,3203,7.186,3204,8.9,3205,6.02]],["title/entities/StripEventEntity.html",[0,1.876,483,3.88]],["body/entities/StripEventEntity.html",[0,3.027,2,3.201,3,0.049,4,0.058,5,0.058,6,4.17,8,0.207,9,1.138,15,1.704,24,0.227,25,0.003,26,1.028,27,2.543,32,0.154,55,2.321,69,0.507,74,4.646,76,1.891,81,0.554,83,0.312,85,0.058,87,0.003,88,0.003,483,7.2,484,6.856,587,6.192,757,1.615,925,4.392,940,2.929,2491,5.176,3112,6.192,3206,6.85,3207,6.85,3208,6.85]],["title/entities/SubscriptionEntity.html",[0,1.876,486,3.305]],["body/entities/SubscriptionEntity.html",[0,1.776,2,1.512,3,0.023,4,0.027,5,0.027,6,4.758,8,0.098,9,0.751,13,2.672,14,2.875,15,1.382,21,2.71,22,2.041,24,0.347,25,0.003,26,0.842,27,3.615,28,5.123,32,0.219,35,3.048,37,4.781,38,3.584,43,4.551,51,2.531,55,1.096,64,3.024,69,0.603,70,4.253,71,3.121,72,3.177,73,3.668,74,1.588,75,3.121,76,0.893,78,1.675,81,0.325,82,1.562,83,0.278,85,0.027,87,0.002,88,0.002,111,0.441,289,1.946,313,1.946,456,5.682,458,2.344,464,5.682,475,5.682,486,3.128,571,5.65,581,5.254,589,2.445,757,1.755,843,2.113,879,2.344,892,3.535,904,3.672,905,3.31,925,4.141,928,1.645,933,1.675,1668,5.65,1669,5.65,1679,4.582,1680,4.582,1683,4.582,1690,6.943,1707,2.925,1708,2.925,1709,2.925,2060,2.445,3209,3.236,3210,6.25,3211,6.25,3212,6.25,3213,6.25,3214,3.236,3215,3.236,3216,5.069,3217,3.236,3218,3.236,3219,3.236,3220,5.069,3221,3.236,3222,5.069,3223,3.236,3224,3.236,3225,2.925,3226,3.236,3227,4.262,3228,4.582,3229,5.069,3230,5.069,3231,5.069,3232,5.069,3233,3.236,3234,5.069,3235,3.236,3236,3.236,3237,5.069,3238,3.236,3239,4.582,3240,3.236]],["title/classes/TimestampEntityExtendEntity.html",[81,0.344,3241,4.842]],["body/classes/TimestampEntityExtendEntity.html",[3,0.035,4,0.041,5,0.041,8,0.147,9,0.825,13,3.403,14,3.662,21,3.452,24,0.314,25,0.003,27,2.955,32,0.213,43,4.167,45,5.77,46,7.16,49,5.77,62,5.77,69,0.359,70,4.32,76,1.341,81,0.311,83,0.342,85,0.041,87,0.002,88,0.002,99,1.291,113,1.498,224,2.508,332,6.186,757,1.851,847,6.034,874,6.316,935,0.279,940,2.934,2491,6.016,3241,6.205,3242,9.739,3243,9.739,3244,4.857,3245,8.652,3246,8.652,3247,8.652,3248,4.857,3249,4.857,3250,6.864,3251,6.864,3252,4.857,3253,4.857,3254,4.857,3255,4.857,3256,4.857,3257,8.652,3258,6.864,3259,7.961]],["title/interfaces/TokenPayload.html",[779,4.048,2902,3.88]],["body/interfaces/TokenPayload.html",[3,0.057,4,0.067,5,0.067,8,0.241,9,1.137,24,0.264,25,0.003,26,1.203,85,0.067,87,0.003,88,0.003,412,4.352,779,7.152,2902,5.755,2903,6.305,3260,7.946,3261,7.946]],["title/classes/TransferProfileToUserCommand.html",[81,0.344,3262,4.842]],["body/classes/TransferProfileToUserCommand.html",[3,0.048,4,0.056,5,0.056,8,0.2,9,1.015,24,0.309,25,0.003,26,1.005,32,0.209,69,0.488,81,0.424,83,0.239,85,0.056,87,0.003,88,0.003,110,0.396,111,0.357,139,0.863,210,0.374,412,3.871,583,3.641,757,1.769,935,0.379,961,1.97,962,2.365,963,1.973,1347,4.784,1350,5.553,3031,7.824,3262,7.633,3263,9.809,3264,9.307,3265,8.444,3266,6.606,3267,6.606]],["title/classes/UnauthorizedRequestException.html",[81,0.344,3268,4.842]],["body/classes/UnauthorizedRequestException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.17,69,0.559,81,0.485,85,0.064,87,0.003,88,0.003,120,3.915,122,2.108,210,0.56,621,4.666,645,4.624,794,6.836,935,0.434,936,4.756,937,4.1,940,3.928,3268,8.304,3269,9.187,3270,7.562,3271,7.562,3272,7.562]],["title/classes/UpdateOccupationCommand.html",[81,0.344,2551,4.25]],["body/classes/UpdateOccupationCommand.html",[3,0.048,4,0.057,5,0.057,8,0.203,9,1.025,24,0.311,25,0.003,26,1.015,32,0.211,69,0.497,81,0.431,83,0.243,85,0.057,87,0.003,88,0.003,110,0.402,111,0.363,139,0.867,210,0.38,757,1.776,935,0.385,961,1.99,962,2.302,1144,5.074,1146,6.069,1147,6.069,1148,5.645,1149,3.089,1184,4.948,2549,8.261,2550,4.682,2551,6.77,3273,9.868,3274,6.714]],["title/classes/UpdateOccupationCommandHandler.html",[81,0.344,2506,4.503]],["body/classes/UpdateOccupationCommandHandler.html",[3,0.031,4,0.037,5,0.037,8,0.13,15,0.774,24,0.209,25,0.004,32,0.142,69,0.712,76,1.188,81,0.403,82,2.076,83,0.269,85,0.037,87,0.002,88,0.002,99,1.184,100,1.585,110,0.377,111,0.34,113,0.81,114,1.329,139,0.524,144,1.381,170,0.909,175,1.865,176,1.814,177,1.839,178,1.72,210,0.356,221,1.86,222,1.959,224,2.723,247,2.828,277,1.367,370,1.495,473,4.347,499,2.932,512,3.882,530,1.542,545,2.655,579,1.865,637,3.783,667,1.616,669,2.635,670,1.367,671,2.855,715,4.239,876,3.882,935,0.247,944,1.743,1080,1.111,1081,3.225,1086,2.108,1091,3.414,1095,2.728,1097,1.865,1152,5.706,1153,2.899,1154,3.529,1156,2.809,1159,3.116,1160,3.116,1161,3.116,1162,2.767,1167,3.889,1168,3.889,1169,3.889,1170,3.889,1171,3.889,1173,3.617,1176,3,1178,3,1179,3.414,1180,4.108,1182,3.889,1183,2.653,1184,2.27,1186,4.239,1188,1.949,1189,3.116,1248,2.187,1251,1.814,1606,5.901,1639,3.251,1652,3.414,2506,6.252,2551,6.908,3275,7.437,3276,2.809,3277,4.302,3278,4.302,3279,4.302,3280,6.291,3281,4.302,3282,4.302,3283,4.302,3284,2.809]],["title/classes/UpdateOccupationDto.html",[81,0.344,2549,4.25]],["body/classes/UpdateOccupationDto.html",[3,0.052,4,0.061,5,0.061,8,0.219,9,1.075,24,0.297,25,0.003,26,1.064,32,0.201,81,0.464,83,0.366,85,0.061,87,0.003,88,0.003,110,0.434,111,0.392,139,0.808,210,0.41,757,1.656,935,0.416,961,2.087,962,2.365,1149,3.33,1191,6.544,1192,6.544,1193,6.544,2549,7.097,3285,9.707]],["title/classes/UpdateOccupationEvent.html",[81,0.344,3286,4.503]],["body/classes/UpdateOccupationEvent.html",[3,0.045,4,0.053,5,0.053,8,0.188,9,0.976,24,0.318,25,0.003,26,1.214,32,0.216,55,2.752,81,0.399,83,0.225,85,0.053,87,0.002,88,0.002,110,0.373,111,0.337,139,0.888,149,2.091,210,0.352,246,2.675,579,4.158,757,1.818,935,0.357,961,1.895,962,2.237,1149,2.862,1184,4.772,1195,4.702,1196,4.702,1197,3.167,1200,4.702,1201,4.702,1611,5.231,3115,5.012,3286,6.829,3287,9.948]],["title/classes/UpdateOccupationEventHandler.html",[81,0.344,2510,4.503]],["body/classes/UpdateOccupationEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,579,2.649,935,0.351,1080,1.578,1165,6.217,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1209,2.475,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1216,4.617,2510,6.749,3284,3.989,3286,8.005,3288,8.966,3289,3.586,3290,6.11]],["title/classes/UpdateOccupationRequest.html",[81,0.344,2541,4.503]],["body/classes/UpdateOccupationRequest.html",[3,0.052,4,0.061,5,0.061,8,0.218,9,1.073,24,0.296,25,0.003,26,1.062,32,0.201,81,0.463,83,0.366,85,0.061,87,0.003,88,0.003,110,0.432,111,0.39,139,0.807,210,0.408,757,1.653,935,0.414,961,2.082,962,2.427,963,2.155,1219,6.521,1220,6.521,1221,6.521,2541,7.503,3291,9.691]],["title/classes/UpdateOccupationsProfileCommand.html",[81,0.344,2768,4.25]],["body/classes/UpdateOccupationsProfileCommand.html",[3,0.049,4,0.057,5,0.057,8,0.204,9,1.027,15,1.691,24,0.312,25,0.003,26,1.176,32,0.211,81,0.432,83,0.243,85,0.057,87,0.003,88,0.003,110,0.404,111,0.364,139,0.868,210,0.381,757,1.778,827,6.212,935,0.387,961,1.995,962,2.379,963,2.012,1224,4.879,1617,5.663,2768,6.784,3292,8.931,3293,8.55]],["title/classes/UpdateOccupationsProfileCommandHandler.html",[81,0.344,2717,4.503]],["body/classes/UpdateOccupationsProfileCommandHandler.html",[3,0.033,4,0.039,5,0.039,8,0.138,15,1.18,24,0.217,25,0.003,32,0.147,69,0.707,76,1.257,81,0.292,83,0.237,85,0.039,87,0.002,88,0.002,99,1.233,100,1.637,110,0.393,111,0.355,113,0.857,114,1.622,139,0.64,144,1.461,170,0.962,210,0.371,221,2.271,222,1.89,224,2.581,247,2.921,277,1.446,370,1.557,473,3.273,477,2.094,499,3.425,512,4.739,514,3.941,530,1.631,545,2.809,547,2.737,583,1.69,667,1.71,669,2.721,670,1.446,671,2.755,827,5.74,876,2.809,918,3.175,935,0.261,944,1.844,1080,1.176,1081,3.33,1086,2.196,1095,2.842,1097,1.974,1154,3.59,1180,2.972,1183,1.92,1184,3.458,1186,3.068,1233,5.328,1234,2.809,1238,2.737,1245,2.672,1248,3.332,1251,3.238,1255,4.115,1257,4.115,1258,4.115,1265,2.972,1307,3.612,1564,2.273,1622,3.175,1623,4.28,1624,3.297,2608,2.972,2717,5.51,2768,6.666,3276,2.972,3289,2.672,3294,6.943,3295,5.201,3296,4.552,3297,4.552,3298,4.552,3299,4.115,3300,4.115,3301,4.552]],["title/classes/UpdateOccupationsProfileDto.html",[81,0.344,3302,4.842]],["body/classes/UpdateOccupationsProfileDto.html",[3,0.05,4,0.059,5,0.059,8,0.21,9,1.047,24,0.289,25,0.003,32,0.196,69,0.513,81,0.445,83,0.251,85,0.059,87,0.003,88,0.003,110,0.416,111,0.515,139,0.793,210,0.393,757,1.625,827,5.59,935,0.399,958,4.403,961,2.033,962,2.4,963,2.074,1267,5.509,1268,6.219,1271,6.219,1272,7.326,1273,4.679,3302,7.878,3303,8.61]],["title/classes/UpdateOccupationsProfileEvent.html",[81,0.344,3295,4.25]],["body/classes/UpdateOccupationsProfileEvent.html",[3,0.042,4,0.049,5,0.049,8,0.175,9,0.93,24,0.322,25,0.003,26,1.234,32,0.218,55,2.621,81,0.371,83,0.209,85,0.049,87,0.002,88,0.002,110,0.346,111,0.313,139,0.898,149,2.016,210,0.327,246,2.579,583,3.458,757,1.839,827,6.087,935,0.332,961,1.805,962,2.265,963,1.726,1197,3.016,1275,4.187,1277,6.139,1278,4.368,2608,5.695,3115,4.774,3180,5.225,3181,5.225,3295,6.139,3300,7.885,3304,9.034]],["title/classes/UpdateOccupationsProfileEventHandler.html",[81,0.344,2725,4.503]],["body/classes/UpdateOccupationsProfileEventHandler.html",[3,0.043,4,0.05,5,0.05,8,0.18,15,1.417,24,0.261,25,0.003,32,0.177,69,0.653,81,0.38,83,0.284,85,0.05,87,0.002,88,0.002,97,2.032,99,1.481,100,1.883,110,0.472,111,0.426,113,1.116,114,1.663,118,2.228,138,1.904,139,0.494,149,1.371,158,3.608,170,1.253,171,2.176,191,2.202,210,0.336,222,1.334,246,1.754,370,1.87,579,2.572,583,2.202,827,5.523,935,0.34,1080,1.532,1204,3.778,1205,3.366,1206,2.609,1207,2.609,1208,3.366,1210,2.403,1211,2.536,1213,2.609,1214,2.648,1215,2.648,1245,5.523,1629,3.66,2725,6.618,2934,5.362,3284,3.873,3289,3.481,3295,7.468,3305,7.987,3306,5.932,3307,5.932]],["title/classes/UpdateProfileCommand.html",[81,0.344,2766,4.048]],["body/classes/UpdateProfileCommand.html",[3,0.048,4,0.057,5,0.057,8,0.203,9,1.023,15,1.685,24,0.311,25,0.003,26,1.013,32,0.211,69,0.495,81,0.429,83,0.242,85,0.057,87,0.003,88,0.003,110,0.401,111,0.362,139,0.866,210,0.379,757,1.775,935,0.384,961,1.986,962,2.374,963,1.999,1224,4.847,1228,7.697,1229,6.05,1230,6.05,2550,4.667,2766,6.434,2783,8.254,3292,8.909]],["title/classes/UpdateProfileCommandHandler.html",[81,0.344,2719,4.503]],["body/classes/UpdateProfileCommandHandler.html",[3,0.038,4,0.045,5,0.045,8,0.161,15,0.959,24,0.243,25,0.003,32,0.165,69,0.721,76,1.47,81,0.342,83,0.265,85,0.045,87,0.002,88,0.002,99,1.377,100,1.783,110,0.439,111,0.396,113,1.002,114,1.546,139,0.61,170,1.125,210,0.414,221,2.165,222,1.647,224,2.424,247,2.026,277,1.692,370,1.739,477,2.45,499,3.228,514,4.402,530,1.909,547,3.203,583,1.977,667,2.001,669,2.594,670,1.692,671,2.401,935,0.306,944,2.965,1080,1.376,1081,3.627,1086,2.453,1095,3.174,1097,2.31,1154,3.754,1183,2.246,1209,2.158,1233,5.711,1234,3.287,1238,3.203,1245,3.126,1248,2.707,1251,2.246,1265,3.478,1604,3.203,1622,3.715,1623,3.478,1624,3.858,2719,6.154,2766,7.134,3276,3.478,3289,3.126,3294,7.561,3299,4.815,3308,5.808,3309,5.327,3310,5.327]],["title/classes/UpdateProfileDto.html",[81,0.344,2783,4.25]],["body/classes/UpdateProfileDto.html",[3,0.051,4,0.06,5,0.06,8,0.213,9,1.056,24,0.292,25,0.003,26,1.046,32,0.198,69,0.521,81,0.451,85,0.06,87,0.003,88,0.003,111,0.543,139,0.878,757,1.798,935,0.404,958,4.464,1267,5.585,1268,6.258,1269,6.078,1270,6.363,1271,6.258,1272,5.918,1273,4.743,2783,6.974,3303,8.664]],["title/classes/UpdateProfileEvent.html",[81,0.344,3308,4.25]],["body/classes/UpdateProfileEvent.html",[3,0.044,4,0.052,5,0.052,8,0.184,9,0.963,24,0.316,25,0.003,26,1.132,32,0.214,55,2.714,69,0.45,81,0.391,83,0.22,85,0.052,87,0.002,88,0.002,110,0.365,111,0.33,139,0.884,149,2.069,210,0.345,246,2.647,583,3.53,757,1.811,935,0.35,961,1.869,962,2.305,963,1.819,1197,3.123,1233,3.863,1275,4.412,1276,6.357,1277,4.833,1278,4.603,2766,7.665,3115,4.943,3276,3.977,3304,8.932,3308,6.357]],["title/classes/UpdateProfileEventHandler.html",[81,0.344,2718,4.503]],["body/classes/UpdateProfileEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.185,15,1.1,24,0.266,25,0.003,32,0.181,69,0.663,81,0.392,83,0.29,85,0.052,87,0.002,88,0.002,97,2.093,99,1.51,100,1.911,110,0.481,111,0.434,113,1.15,114,1.696,118,2.295,138,1.961,139,0.509,149,1.412,158,3.638,170,1.291,171,2.241,191,2.268,210,0.346,222,1.375,246,1.807,370,1.907,583,2.268,935,0.351,1080,1.578,1204,3.833,1205,3.432,1206,2.687,1207,2.687,1208,3.432,1209,2.475,1210,2.475,1211,2.612,1213,2.687,1214,2.727,1215,2.727,1245,5.588,2718,6.749,3284,3.989,3289,3.586,3305,8.104,3308,7.555,3311,6.11,3312,6.11]],["title/classes/UpdateProfileRequest.html",[81,0.344,2628,4.25]],["body/classes/UpdateProfileRequest.html",[3,0.044,4,0.051,5,0.051,8,0.183,9,0.959,15,1.607,24,0.327,25,0.003,26,1.205,32,0.222,69,0.448,81,0.388,83,0.219,85,0.051,87,0.002,88,0.002,110,0.363,111,0.328,139,0.904,210,0.343,757,1.852,935,0.348,958,3.84,961,1.862,962,2.3,963,1.809,1226,7.082,1268,5.828,1269,5.66,1271,5.828,1273,4.08,1286,5.474,1288,7.214,1289,5.474,1290,5.474,1291,5.474,2628,6.332,3313,10.127]],["title/classes/UpdateSocialNetworkCommand.html",[81,0.344,3151,4.25]],["body/classes/UpdateSocialNetworkCommand.html",[3,0.041,4,0.048,5,0.048,8,0.172,9,0.918,15,1.554,24,0.33,25,0.003,26,1.258,32,0.224,81,0.363,83,0.334,85,0.048,87,0.002,88,0.002,110,0.34,111,0.307,139,0.91,210,0.321,480,4.009,757,1.864,924,4.06,935,0.325,961,1.781,962,2.156,1149,2.607,1294,4.283,1295,6.023,1296,5.819,1297,5.819,1298,4.283,1299,5.123,1300,5.123,1301,4.283,1302,5.123,3151,6.059,3314,10.156,3315,5.668]],["title/classes/UpdateSocialNetworkCommandHandler.html",[81,0.344,3123,4.503]],["body/classes/UpdateSocialNetworkCommandHandler.html",[3,0.037,4,0.044,5,0.044,8,0.156,15,0.927,24,0.237,25,0.003,32,0.161,69,0.714,76,1.422,81,0.33,83,0.258,85,0.044,87,0.002,88,0.002,99,1.346,100,1.752,110,0.429,111,0.387,113,0.969,114,1.511,139,0.596,170,1.088,210,0.405,221,2.115,222,1.849,224,2.073,277,1.636,370,1.699,479,2.829,480,3.244,482,2.954,499,3.182,515,4.671,530,1.846,548,3.363,669,2.534,671,2.346,832,2.889,924,3.73,935,0.296,944,2.897,1080,1.33,1081,3.563,1086,2.397,1095,3.102,1097,2.234,1154,3.72,1209,2.087,1248,2.618,1251,2.172,1305,6.191,1306,3.471,1308,3.363,1310,3.178,1319,4.988,1322,2.889,1324,5.181,1604,3.098,1623,3.363,1639,5.406,3123,6.014,3151,7.044,3276,3.363,3284,3.363,3289,3.023,3316,8.218,3317,4.087,3318,5.151,3319,5.151,3320,5.151]],["title/classes/UpdateSocialNetworkEvent.html",[81,0.344,3317,4.25]],["body/classes/UpdateSocialNetworkEvent.html",[3,0.043,4,0.051,5,0.051,8,0.183,9,0.957,15,1.706,24,0.314,25,0.003,26,1.246,32,0.213,55,2.698,81,0.387,83,0.218,85,0.051,87,0.002,88,0.002,110,0.362,111,0.327,139,0.882,149,2.06,210,0.342,246,2.636,480,3.889,757,1.787,924,4.236,935,0.347,1197,3.105,1326,4.562,1327,4.373,1328,6.019,1329,4.562,1330,5.316,1331,4.562,1332,2.618,3115,4.914,3317,6.319,3321,9.852]],["title/classes/UpdateSocialNetworkEventHandler.html",[81,0.344,3124,4.503]],["body/classes/UpdateSocialNetworkEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.181,15,1.077,24,0.263,25,0.003,32,0.178,69,0.656,81,0.384,83,0.286,85,0.051,87,0.002,88,0.002,97,2.05,99,1.49,100,1.892,110,0.474,111,0.428,113,1.126,114,1.673,118,2.248,138,1.921,139,0.498,149,1.383,158,3.617,170,1.264,171,2.195,191,2.221,210,0.339,222,1.346,246,1.77,370,1.881,480,3.503,832,3.356,924,3.776,935,0.343,1080,1.545,1204,3.794,1205,3.385,1206,2.632,1207,2.632,1208,3.385,1209,2.424,1210,2.424,1211,2.558,1213,2.632,1214,2.671,1215,2.671,1310,5.827,1336,4.173,3124,6.657,3284,3.907,3289,3.512,3317,7.494,3322,8.874,3323,5.984]],["title/classes/UpdateSocialNetworkRequest.html",[81,0.344,3067,4.25]],["body/classes/UpdateSocialNetworkRequest.html",[3,0.041,4,0.048,5,0.048,8,0.172,9,0.918,15,1.554,24,0.33,25,0.003,26,1.258,32,0.224,81,0.363,83,0.334,85,0.048,87,0.002,88,0.002,110,0.34,111,0.307,139,0.91,210,0.321,480,4.009,757,1.864,924,4.06,935,0.325,961,1.781,962,2.156,1149,2.607,1295,6.023,1296,5.819,1297,5.819,1339,5.123,1340,5.123,1341,5.123,1342,5.123,1343,5.123,1344,5.123,3067,6.059,3324,10.156,3325,5.668]],["title/classes/UpdateUserCommand.html",[81,0.344,3326,4.25]],["body/classes/UpdateUserCommand.html",[3,0.048,4,0.057,5,0.057,8,0.203,9,1.025,22,2.706,24,0.311,25,0.003,26,1.174,32,0.211,69,0.497,81,0.431,83,0.243,85,0.057,87,0.003,88,0.003,110,0.402,111,0.363,139,0.867,210,0.38,412,4.105,421,4.682,757,1.738,935,0.385,1332,2.911,1347,4.863,1349,6.069,1350,7.173,1458,3.94,2550,4.682,3326,6.77,3327,8.296,3328,7.698]],["title/classes/UpdateUserCommandHandler.html",[81,0.344,3329,4.503]],["body/classes/UpdateUserCommandHandler.html",[3,0.019,4,0.022,5,0.022,8,0.079,9,0.513,15,0.768,22,1.438,24,0.28,25,0.004,26,1.143,32,0.19,38,1.877,53,2.913,64,2.321,69,0.671,76,0.72,81,0.274,82,1.259,83,0.295,85,0.022,87,0.001,88,0.001,99,0.803,100,1.997,110,0.488,111,0.441,112,2.711,113,1.47,114,1.782,144,2.376,170,0.551,175,1.131,176,1.1,177,1.116,178,2.164,210,0.241,221,2.871,222,2.161,224,2.363,247,2.378,277,0.829,293,1.464,370,1.014,498,1.377,499,2.241,522,2.131,530,0.935,532,1.303,596,3.693,605,3.775,607,2.875,610,2.976,637,2.566,661,2.786,667,0.98,669,0.924,670,2.351,671,2.261,757,0.924,847,4.809,876,1.61,935,0.15,937,1.905,944,1.057,969,3.67,1080,0.674,1081,2.347,1086,1.43,1095,1.85,1097,1.131,1154,3.26,1159,1.89,1160,1.89,1161,1.89,1162,2.751,1176,1.82,1178,1.82,1179,2.07,1183,2.283,1188,2.453,1240,2.786,1249,3.225,1250,1.704,1251,1.1,1307,2.07,1322,3.036,1353,6.197,1358,3.587,1359,3.587,1360,3.587,1362,3.587,1371,3.587,1373,3.587,1375,2.194,1379,3.587,1381,1.433,1382,3.091,1383,2.786,1384,2.07,1385,3.091,1386,2.07,1403,3.587,1404,2.976,1405,2.976,1435,3.587,1436,3.587,1437,2.194,1438,2.194,1440,3.587,1441,2.07,1464,1.569,1608,2.504,1651,2.359,1958,1.89,2004,2.07,2876,1.972,3276,1.704,3289,1.531,3326,4.962,3329,4.551,3330,7.295,3331,4.267,3332,4.267,3333,2.359,3334,2.609,3335,2.609,3336,2.609,3337,2.609,3338,4.267,3339,2.609,3340,2.609,3341,2.609,3342,2.07,3343,2.609,3344,2.609,3345,2.609,3346,2.609,3347,2.609,3348,2.609,3349,2.609,3350,2.609,3351,2.609,3352,2.609,3353,6.254,3354,2.609,3355,4.267,3356,2.609,3357,4.267,3358,4.267,3359,2.609]],["title/classes/UpdateUserCredentialCommand.html",[81,0.344,3360,4.25]],["body/classes/UpdateUserCredentialCommand.html",[3,0.047,4,0.056,5,0.056,8,0.199,9,1.013,22,2.69,24,0.308,25,0.003,26,1.003,32,0.209,69,0.487,81,0.422,83,0.238,85,0.056,87,0.003,88,0.003,110,0.395,111,0.356,139,0.863,210,0.372,412,3.865,757,1.767,935,0.378,961,1.966,962,2.362,963,1.967,2550,4.592,3327,8.236,3360,6.686,3361,6.584,3362,7.828,3363,8.426,3364,6.584,3365,5.535]],["title/classes/UpdateUserCredentialCommandHandler.html",[81,0.344,3366,4.503]],["body/classes/UpdateUserCredentialCommandHandler.html",[3,0.028,4,0.033,5,0.033,8,0.117,9,0.699,15,1.047,22,2.625,24,0.258,25,0.003,26,1.137,32,0.187,53,3.129,64,1.436,69,0.691,76,1.068,81,0.248,83,0.281,85,0.033,87,0.002,88,0.002,99,1.094,100,1.865,110,0.466,111,0.42,113,1.315,114,1.641,144,1.867,170,0.817,175,1.678,176,1.631,177,1.654,178,1.547,210,0.329,221,2.922,222,1.874,224,2.536,247,1.471,277,1.229,370,1.381,498,2.041,499,2.784,522,2.904,530,1.387,531,4.055,532,1.932,599,4.38,605,2.698,667,1.453,669,1.371,670,2.468,671,2.731,696,3.497,776,3.07,813,5.256,935,0.222,944,1.567,1080,0.999,1081,3.029,1086,1.949,1093,4.614,1095,2.521,1097,1.678,1154,3.41,1162,2.558,1183,1.631,1188,1.753,1249,2.924,1250,2.526,1251,1.631,1322,2.17,1354,5.873,1361,4.889,1377,4.889,1381,2.125,1396,3.253,1398,3.253,1439,3.253,1960,2.802,1988,5.256,1989,5.256,1990,7.023,1999,3.497,2876,2.924,2969,3.253,2970,4.889,3276,2.526,3289,2.27,3330,7.355,3333,3.497,3360,6.164,3366,5.873,3367,7.63,3368,3.869,3369,3.869,3370,3.07,3371,3.497,3372,3.869,3373,3.869,3374,5.815,3375,3.869,3376,5.815,3377,3.869,3378,3.869,3379,3.869,3380,3.869,3381,3.869]],["title/classes/UpdateUserCredentialDto.html",[81,0.344,3362,4.048]],["body/classes/UpdateUserCredentialDto.html",[3,0.046,4,0.054,5,0.054,8,0.193,9,0.992,22,2.664,24,0.321,25,0.003,26,1.222,32,0.218,81,0.409,83,0.23,85,0.054,87,0.003,88,0.003,110,0.382,111,0.345,139,0.892,210,0.361,596,4.147,599,4.418,757,1.827,935,0.366,961,1.926,962,2.339,963,1.905,3362,6.239,3382,9.063,3383,6.378,3384,9.154,3385,8.256,3386,6.378,3387,6.378]],["title/classes/UpdateUserCredentialEvent.html",[81,0.344,3370,4.25]],["body/classes/UpdateUserCredentialEvent.html",[3,0.044,4,0.052,5,0.052,8,0.187,9,0.97,22,2.826,24,0.317,25,0.003,26,1.252,32,0.215,55,2.736,81,0.395,83,0.223,85,0.052,87,0.002,88,0.002,110,0.369,111,0.334,139,0.886,149,2.082,210,0.349,246,2.663,412,3.975,757,1.795,935,0.354,1197,3.148,1332,2.673,1458,3.618,3115,4.982,3370,6.407,3388,8.339,3389,6.165,3390,8.075,3391,8.075,3392,6.165,3393,6.165]],["title/classes/UpdateUserCredentialEventHandler.html",[81,0.344,3394,4.842]],["body/classes/UpdateUserCredentialEventHandler.html",[3,0.043,4,0.051,5,0.051,8,0.183,15,1.087,22,2.617,24,0.264,25,0.003,32,0.179,69,0.659,81,0.387,83,0.288,85,0.051,87,0.002,88,0.002,97,2.068,99,1.499,100,1.9,110,0.477,111,0.431,113,1.136,114,1.683,118,2.268,138,1.938,139,0.503,149,1.396,158,3.626,170,1.275,171,2.215,191,2.241,210,0.342,222,1.358,246,1.785,370,1.892,935,0.347,1080,1.559,1204,3.811,1205,3.405,1206,2.656,1207,2.656,1208,3.405,1209,2.445,1210,2.445,1211,2.581,1213,2.656,1214,2.695,1215,2.695,1466,3.942,3284,3.942,3289,3.543,3370,7.52,3371,8.567,3394,7.2,3395,7.493,3396,6.037]],["title/classes/UpdateUserDto.html",[81,0.344,3328,4.048]],["body/classes/UpdateUserDto.html",[3,0.048,4,0.057,5,0.057,8,0.203,9,1.025,24,0.311,25,0.003,26,1.239,27,3.167,30,4.037,32,0.211,69,0.497,79,6.123,81,0.547,82,3.24,85,0.057,87,0.003,88,0.003,111,0.563,112,4.066,596,4.249,599,4.526,915,6.448,935,0.385,1442,5.645,1450,5.327,1451,6.069,1454,7.173,3040,6.069,3328,6.448,3382,8.92,3397,6.714,3398,6.714,3399,6.714]],["title/classes/UpdateUserEvent.html",[81,0.344,3342,4.25]],["body/classes/UpdateUserEvent.html",[3,0.045,4,0.053,5,0.053,8,0.191,9,0.984,22,2.559,24,0.32,25,0.003,26,1.258,32,0.217,55,2.774,81,0.404,83,0.228,85,0.053,87,0.003,88,0.003,110,0.377,111,0.341,139,0.89,149,2.103,210,0.356,246,2.691,412,4.007,757,1.803,935,0.362,1197,3.192,1332,2.731,1457,4.562,1458,3.696,1461,4.562,1660,6.188,1661,4.76,3115,5.053,3342,6.497,3388,8.396]],["title/classes/UpdateUserEventHandler.html",[81,0.344,3400,4.503]],["body/classes/UpdateUserEventHandler.html",[3,0.045,4,0.052,5,0.052,8,0.187,15,1.113,22,1.643,24,0.268,25,0.003,32,0.182,69,0.667,81,0.397,83,0.292,85,0.052,87,0.002,88,0.002,97,2.118,99,1.522,110,0.485,111,0.438,113,1.164,118,2.323,138,1.985,139,0.515,149,1.43,158,3.65,170,1.306,171,2.269,191,2.296,210,0.35,246,1.829,332,5.283,370,1.922,935,0.355,1080,1.597,1204,3.856,1205,3.459,1206,2.72,1207,2.72,1208,3.459,1209,2.505,1210,2.505,1211,2.644,1213,2.72,1214,2.76,1215,2.76,1464,5.753,1466,4.038,3284,4.038,3289,3.629,3342,7.59,3395,7.582,3400,6.802,3401,6.184]],["title/classes/UpdateUserRoleCommand.html",[81,0.344,3402,4.048]],["body/classes/UpdateUserRoleCommand.html",[3,0.048,4,0.056,5,0.056,8,0.2,9,1.015,22,2.606,24,0.309,25,0.003,26,1.005,32,0.209,69,0.488,81,0.424,83,0.239,85,0.056,87,0.003,88,0.003,110,0.396,111,0.357,133,4.818,135,3.554,139,0.863,210,0.374,412,3.871,602,4.818,757,1.769,935,0.379,961,1.97,962,2.365,963,1.973,1390,5.241,3327,8.246,3402,6.381,3403,6.606,3404,8.444,3405,6.606]],["title/classes/UpdateUserRoleCommandHandler.html",[81,0.344,3406,4.503]],["body/classes/UpdateUserRoleCommandHandler.html",[3,0.038,4,0.045,5,0.045,8,0.161,22,2.589,24,0.242,25,0.003,32,0.164,64,1.972,69,0.738,76,1.466,81,0.341,83,0.264,85,0.045,87,0.002,88,0.002,99,1.375,100,1.78,110,0.438,111,0.395,113,1,114,1.544,170,1.122,175,2.304,176,2.24,177,2.271,178,2.124,210,0.413,221,2.161,222,1.644,224,2.118,277,1.688,370,1.736,498,2.803,499,3.224,522,3.649,530,1.904,532,2.653,602,2.75,667,1.996,669,1.882,670,2.653,671,1.742,935,0.305,944,2.152,1080,1.372,1081,3.622,1086,2.449,1095,3.168,1097,2.304,1154,3.751,1162,3.214,1183,2.24,1188,2.407,1322,2.98,1381,2.917,1564,2.653,1636,2.98,2876,4.015,3276,3.469,3289,3.118,3330,7.022,3402,6.798,3406,7.022,3407,7.138,3408,4.215,3409,4.802,3410,5.313,3411,5.313,3412,5.313,3413,5.313]],["title/classes/UpdateUserRoleEvent.html",[81,0.344,3408,4.25]],["body/classes/UpdateUserRoleEvent.html",[3,0.043,4,0.051,5,0.051,8,0.183,9,0.957,22,2.842,24,0.314,25,0.003,26,1.128,32,0.213,55,2.698,69,0.446,81,0.387,83,0.218,85,0.051,87,0.002,88,0.002,110,0.362,111,0.327,139,0.882,149,2.06,210,0.342,246,2.636,757,1.787,935,0.347,1197,3.105,1332,2.618,2019,6.319,3115,4.914,3276,3.942,3388,8.282,3402,8.007,3407,4.79,3408,6.319,3414,6.037,3415,6.037,3416,7.965,3417,6.037,3418,6.037]],["title/classes/UpdateUserRoleEventHandler.html",[81,0.344,3419,4.842]],["body/classes/UpdateUserRoleEventHandler.html",[3,0.043,4,0.05,5,0.05,8,0.18,15,1.071,22,2.605,24,0.262,25,0.003,32,0.177,69,0.654,81,0.382,83,0.285,85,0.05,87,0.002,88,0.002,97,2.038,99,1.484,100,1.886,110,0.473,111,0.427,113,1.119,114,1.666,118,2.235,138,1.91,139,0.495,149,1.375,158,3.611,170,1.257,171,2.182,191,2.208,210,0.337,222,1.338,246,1.759,370,1.874,935,0.341,1080,1.536,1204,3.783,1205,3.372,1206,2.617,1207,2.617,1208,3.372,1209,2.41,1210,2.41,1211,2.543,1213,2.617,1214,2.655,1215,2.655,2019,4.72,3284,3.884,3289,3.491,3395,7.439,3408,7.476,3409,8.518,3419,7.13,3420,5.949,3421,5.949,3422,5.949]],["title/controllers/UserController.html",[89,2.723,3423,4.503]],["body/controllers/UserController.html",[3,0.013,4,0.016,5,0.016,8,0.056,15,1.324,22,1.766,24,0.276,25,0.004,26,1.028,27,3.148,32,0.191,69,0.639,81,0.119,83,0.3,85,0.016,87,0.001,88,0.001,89,0.941,91,0.894,96,1.248,99,0.602,100,2.195,106,0.741,110,0.498,111,0.449,112,0.803,113,1.595,114,2.077,118,2.33,119,1.174,121,1.292,122,0.516,127,1.209,128,1.017,131,1.248,132,1.341,133,0.959,135,0.997,138,0.595,139,0.154,143,5.913,144,2.773,159,2.604,222,1.868,224,2.458,242,1.248,247,0.704,258,1.292,263,1.4,399,4.18,403,3.985,412,2.089,421,2.943,424,1.674,430,4.107,577,5.232,599,0.894,602,2.185,618,6.817,645,4.036,646,3.057,651,1.4,661,1.209,667,3.186,669,3.004,670,2.694,671,2.723,1387,1.4,1388,1.557,1389,1.47,1390,1.47,1422,3.503,1424,2.689,1791,4.862,1797,4.922,1882,1.341,1883,1.341,2004,1.47,2013,4.688,2276,4.223,2434,1.47,2435,1.47,2453,1.47,2457,2.537,2463,1.674,2550,2.23,2613,2.891,2629,4.541,2636,1.557,2644,1.674,2881,2.689,3115,2.604,3328,6.528,3362,5.311,3365,1.557,3423,2.689,3424,1.852,3425,2.891,3426,4.541,3427,2.891,3428,3.815,3429,2.891,3430,2.891,3431,2.891,3432,2.891,3433,4.22,3434,3.815,3435,3.198,3436,1.674,3437,1.852,3438,1.852,3439,1.852,3440,1.852,3441,4.22,3442,1.852,3443,1.852,3444,1.852,3445,1.674,3446,1.852,3447,1.852,3448,1.674,3449,1.852,3450,1.852,3451,1.674,3452,1.852,3453,1.852,3454,1.852,3455,1.674,3456,3.198,3457,1.852,3458,1.852,3459,1.852,3460,1.852,3461,1.852,3462,1.852,3463,1.852,3464,1.674,3465,1.852,3466,1.852,3467,1.852,3468,1.674,3469,1.852,3470,1.852,3471,1.852,3472,1.852,3473,1.852,3474,1.852,3475,1.852,3476,1.852,3477,1.852,3478,1.852,3479,1.674,3480,1.674,3481,1.852,3482,1.852,3483,1.852,3484,1.852,3485,1.852,3486,1.852,3487,1.852,3488,8.48,3489,1.852,3490,1.852,3491,1.852,3492,1.852,3493,1.852,3494,1.852,3495,1.852,3496,1.852,3497,1.852,3498,1.852,3499,1.852,3500,1.852,3501,1.852,3502,1.852,3503,1.852,3504,1.852,3505,1.852,3506,1.852,3507,1.852,3508,1.852,3509,1.852,3510,1.852,3511,1.852,3512,1.852,3513,1.852,3514,1.852,3515,1.852,3516,1.852,3517,1.852,3518,1.852]],["title/entities/UserEntity.html",[0,1.876,64,1.988]],["body/entities/UserEntity.html",[0,1.437,1,4.094,2,3.141,3,0.018,4,0.021,5,0.021,8,0.075,9,0.629,13,2.239,14,2.409,15,0.943,21,2.271,22,2.033,24,0.325,25,0.003,26,1.101,27,3.635,32,0.22,37,5.137,38,4.405,40,3.749,43,3.183,51,2.049,53,3.269,55,2.058,64,1.523,69,0.592,70,4.139,71,2.615,72,2.662,74,1.221,75,2.615,76,0.687,81,0.263,83,0.09,84,5.468,85,0.021,87,0.001,88,0.001,99,0.468,100,0.53,111,0.462,112,2.271,114,0.526,133,2.711,135,1.339,221,0.736,224,0.721,247,0.946,289,3.149,293,1.396,408,3.45,458,1.802,477,3.092,486,3.749,487,1.974,488,3.967,489,1.88,490,5.337,491,1.88,492,1.974,583,1.944,589,3.101,591,2.972,596,2.373,599,3.244,602,2.711,757,1.526,839,1.974,843,4.724,853,3.256,854,3.256,863,3.71,864,5.39,905,4.997,907,1.625,925,3.678,928,1.265,933,1.288,940,1.064,942,1.535,961,0.58,962,1.222,963,0.743,966,4.734,969,3.566,1021,4.403,1370,6.072,1422,1.735,1453,1.735,1524,3.71,1557,3.71,1670,4.403,1844,3.321,1960,4.401,1980,4.155,2060,4.592,2124,3.71,2491,3.101,2841,3.71,3012,3.71,3225,4.734,3227,5.108,3228,5.493,3519,2.488,3520,5.237,3521,5.237,3522,5.237,3523,5.237,3524,5.237,3525,4.104,3526,2.488,3527,2.488,3528,4.104,3529,2.488,3530,2.488,3531,2.488,3532,2.488,3533,6.076,3534,4.104,3535,4.104,3536,2.488,3537,5.493,3538,6.723,3539,2.488,3540,2.488,3541,4.104,3542,2.488,3543,2.488,3544,2.488,3545,2.488,3546,4.104,3547,2.488,3548,2.488,3549,4.104,3550,2.488,3551,2.488,3552,4.104,3553,2.488,3554,2.488,3555,2.488,3556,4.104,3557,2.249,3558,4.104,3559,2.488,3560,4.104,3561,2.488]],["title/interfaces/UserIdDto.html",[403,4.25,2902,3.88]],["body/interfaces/UserIdDto.html",[3,0.057,4,0.067,5,0.067,8,0.241,9,1.137,24,0.264,25,0.003,26,1.203,85,0.067,87,0.003,88,0.003,403,7.509,412,4.352,423,6.68,2902,5.755,2903,6.305,3562,7.946]],["title/classes/UserListResponse.html",[81,0.344,2005,4.503]],["body/classes/UserListResponse.html",[3,0.05,4,0.059,5,0.059,8,0.209,9,1.045,24,0.289,25,0.003,32,0.196,69,0.512,81,0.444,83,0.25,85,0.059,87,0.003,88,0.003,110,0.415,111,0.374,210,0.391,408,7.995,661,6.85,757,1.623,935,0.397,1389,5.49,1471,5.229,2005,7.311,3563,8.597,3564,6.92,3565,9.51,3566,8.696,3567,8.696,3568,8.696]],["title/classes/UserLoginDto.html",[81,0.344,3569,4.842]],["body/classes/UserLoginDto.html",[3,0.046,4,0.054,5,0.054,8,0.192,9,0.988,24,0.303,25,0.003,26,1.284,27,3.052,32,0.205,69,0.469,81,0.406,83,0.229,85,0.054,87,0.003,88,0.003,110,0.38,111,0.343,128,3.48,139,0.854,210,0.359,423,8.119,599,5.038,757,1.749,762,7.562,935,0.364,1053,7.248,3569,7.432,3570,6.338,3571,8.222,3572,6.338,3573,6.338,3574,6.338,3575,6.338,3576,6.338]],["title/classes/UserLoginResponse.html",[81,0.344,658,4.25]],["body/classes/UserLoginResponse.html",[3,0.036,4,0.042,5,0.042,8,0.151,9,0.839,13,3.448,15,1.452,21,3.497,24,0.338,25,0.003,26,1.227,32,0.229,43,3.846,64,1.847,69,0.516,81,0.319,83,0.18,85,0.042,87,0.002,88,0.002,110,0.298,111,0.53,133,4.176,135,2.677,139,0.906,210,0.281,596,3.654,599,3.893,602,4.176,638,4.625,658,5.539,757,1.89,935,0.286,961,1.629,962,2.227,963,1.486,969,4.733,1453,3.47,1471,3.76,3563,9.317,3577,4.975,3578,4.975,3579,4.975,3580,4.975,3581,4.975,3582,4.975,3583,4.975,3584,4.975,3585,4.975,3586,4.975,3587,4.975]],["title/modules/UserModule.html",[149,1.238,157,3.736]],["body/modules/UserModule.html",[3,0.026,4,0.031,5,0.031,22,2.363,25,0.004,64,1.354,69,0.808,81,0.234,83,0.132,85,0.031,87,0.002,88,0.002,91,2.684,97,2.309,106,1.458,122,1.017,149,1.285,151,2.046,152,3.119,156,5.143,157,6.683,158,3.065,159,5.277,160,3.344,161,2.193,162,2.193,164,3.344,165,3.344,166,2.381,167,3.631,168,2.046,169,3.526,170,0.77,171,2.04,172,2.381,178,4.251,180,2.756,183,2.756,186,6.463,188,3.526,189,2.458,190,2.313,191,1.354,194,2.381,195,2.381,196,2.381,197,2.381,198,2.313,230,2.756,238,2.543,276,2.381,277,1.159,278,2.642,613,4.282,638,2.091,742,4.412,744,2.894,786,2.894,944,1.477,1210,1.477,1351,4.675,1353,5.66,1381,2.003,1462,4.675,1464,4.533,1649,4.412,1662,4.675,1806,1.924,1885,2.193,1954,4.675,1956,3.297,1967,4.675,1968,3.297,1977,4.675,1978,3.066,2003,4.675,2032,4.675,2300,4.675,2500,2.894,2502,2.894,2503,2.894,2507,5.347,2511,2.894,2512,2.894,2513,5.347,2871,4.675,2873,4.412,2884,4.675,2886,4.675,2949,4.675,2993,4.028,2994,4.675,3001,4.675,3197,4.675,3329,4.675,3366,4.675,3367,3.066,3400,4.675,3406,4.675,3407,2.894,3423,5.666,3479,3.297,3588,3.647,3589,3.647,3590,3.647,3591,3.647,3592,3.647,3593,3.647,3594,3.647,3595,3.647,3596,3.647,3597,3.647]],["title/classes/UserNotFoundException.html",[81,0.344,2764,4.25]],["body/classes/UserNotFoundException.html",[3,0.054,4,0.064,5,0.064,25,0.003,32,0.17,69,0.559,81,0.485,85,0.064,87,0.003,88,0.003,120,3.915,122,2.108,210,0.56,645,4.624,718,4.547,935,0.434,936,4.756,937,4.1,940,3.928,1251,3.189,2516,6.836,2517,6.836,2764,7.289,2765,7.723,3598,7.562]],["title/classes/UserResponse.html",[81,0.344,661,3.498]],["body/classes/UserResponse.html",[3,0.043,4,0.051,5,0.051,8,0.182,9,0.955,15,1.602,24,0.327,25,0.003,26,1.203,32,0.221,69,0.445,81,0.386,83,0.218,85,0.051,87,0.002,88,0.002,110,0.361,111,0.532,112,3.859,133,4.608,135,3.239,139,0.903,210,0.341,596,4.032,602,4.608,661,5.19,757,1.851,935,0.346,961,1.854,962,2.358,963,1.798,1453,4.198,1471,4.549,3599,6.02,3600,6.02,3601,6.02,3602,6.02,3603,6.02,3604,6.02]],["title/injectables/UserService.html",[159,3.305,207,1.965]],["body/injectables/UserService.html",[3,0.012,4,0.014,5,0.014,8,0.05,15,0.946,22,2.058,24,0.285,25,0.003,26,1.232,30,0.987,32,0.199,69,0.718,81,0.105,83,0.311,85,0.014,87,0.001,88,0.001,93,0.941,97,0.562,99,0.542,100,2.226,106,0.656,110,0.515,111,0.465,112,2.51,113,1.642,114,2.094,122,0.458,133,2.392,135,0.883,138,0.527,139,0.24,144,2.802,159,1.776,170,0.347,181,1.106,207,1.056,208,0.806,210,0.093,211,1.145,212,3.901,213,4.204,217,2.085,218,1.241,220,2.906,221,1.366,222,2.038,223,2.008,224,2.625,225,5.042,242,1.106,245,1.241,247,0.624,399,3.901,412,3.806,421,2.682,596,0.744,599,2.537,602,2.997,613,2.029,618,1.145,638,1.651,651,1.241,661,1.072,667,2.489,669,2.347,670,2.639,671,3.001,784,2.176,786,1.302,788,6.558,876,1.013,937,2.584,1240,3.779,1241,0.963,1250,1.88,1251,2.441,1345,2.284,1353,3.666,1382,2.785,1383,1.88,1384,1.302,1385,3.347,1386,1.302,1387,1.241,1388,1.38,1389,1.302,1390,1.302,1391,2.906,1392,2.42,1404,3.223,1405,3.223,1409,2.085,1422,1.145,1424,2.42,1559,1.484,1646,2.284,1755,2.176,1791,4.309,1797,4.593,1882,1.189,1883,1.189,1885,0.987,1971,1.302,1973,1.302,1978,1.38,2004,1.302,2013,3.973,2030,2.284,2316,2.42,2317,1.484,2320,2.284,2546,1.38,2550,2.008,2552,3.051,2554,1.38,2556,1.302,2636,1.38,2764,4.95,2765,1.38,2866,1.302,2873,2.284,2881,2.42,2947,2.284,2966,2.42,2967,1.484,2969,1.38,2970,2.42,2991,1.302,2993,1.189,3115,1.776,3194,1.302,3326,1.302,3328,5.007,3360,2.284,3362,5.26,3365,1.38,3367,1.38,3402,2.176,3407,1.302,3425,2.603,3426,4.177,3427,2.603,3428,2.603,3429,2.603,3430,2.603,3431,2.603,3432,2.603,3434,2.603,3436,2.603,3445,2.603,3448,2.603,3451,2.603,3455,2.603,3464,2.603,3468,2.603,3480,1.484,3605,1.642,3606,2.879,3607,4.621,3608,2.879,3609,2.879,3610,2.879,3611,2.879,3612,1.642,3613,1.642,3614,2.879,3615,1.642,3616,1.642,3617,2.879,3618,1.642,3619,1.642,3620,1.642,3621,1.642,3622,1.642,3623,1.642,3624,2.879,3625,1.642,3626,2.879,3627,1.642,3628,2.879,3629,1.642,3630,2.879,3631,1.642,3632,1.642,3633,2.879,3634,1.642,3635,1.642,3636,2.879,3637,1.642,3638,2.879,3639,1.642,3640,1.642,3641,1.642,3642,1.642,3643,1.642,3644,1.642,3645,1.642,3646,1.642,3647,1.642,3648,1.642,3649,1.642,3650,1.642,3651,1.642,3652,2.879,3653,3.846,3654,1.642,3655,2.879,3656,1.642,3657,4.621,3658,1.642,3659,1.642,3660,1.642]],["title/changelog.html",[1836,3.107,3661,3.367,3662,4.455]],["body/changelog.html",[0,2.79,2,2.821,22,1.604,25,0.002,87,0.002,88,0.002,93,3.462,97,3.246,98,4.79,112,2.618,149,2.339,238,5.554,306,5.076,387,6.456,579,2.618,583,2.241,591,4.373,601,5.769,610,5.554,637,3.63,762,4.562,924,2.414,1198,4.562,1330,3.386,1428,4.79,2643,5.458,3115,3.725,3663,5.458,3664,10.697,3665,8.913,3666,7.965,3667,10.697,3668,6.037,3669,10.472,3670,7.965,3671,8.913,3672,6.037,3673,6.037,3674,6.037,3675,6.037,3676,6.037,3677,6.037,3678,6.037,3679,6.037,3680,9.146,3681,6.037,3682,6.037,3683,6.037,3684,6.037,3685,6.037,3686,6.037,3687,6.037,3688,6.037,3689,6.037,3690,6.037,3691,6.037,3692,5.458,3693,5.458]],["title/contributing.html",[1836,3.107,3661,3.367,3694,4.027]],["body/contributing.html",[25,0.003,87,0.003,88,0.003,3694,7.891]],["title/dependencies.html",[152,3.619,3695,4.027]],["body/dependencies.html",[25,0.003,76,1.733,81,0.524,82,3.031,87,0.003,88,0.003,122,1.75,128,3.448,152,3.522,168,3.522,170,1.327,277,1.995,338,5.676,531,4.379,652,5.336,729,4.231,734,5.279,1500,5.676,1570,5.279,1770,4.982,2086,4.745,2229,5.676,2262,7.209,2263,6.484,2290,7.388,3557,5.676,3696,9.086,3697,8.173,3698,6.28,3699,8.173,3700,6.28,3701,6.28,3702,6.28,3703,6.28,3704,6.28,3705,6.28,3706,8.173,3707,6.28,3708,6.28,3709,6.28,3710,6.28,3711,6.28,3712,6.28,3713,6.28,3714,6.28,3715,6.28,3716,6.28,3717,6.28,3718,6.28,3719,6.28,3720,6.28,3721,6.28,3722,6.28,3723,6.28,3724,6.28,3725,6.28,3726,6.28]],["title/miscellaneous/enumerations.html",[3727,3.002,3728,5.833]],["body/miscellaneous/enumerations.html",[3,0.038,6,4.463,8,0.105,11,5.308,22,0.918,25,0.003,83,0.125,87,0.002,88,0.002,92,2.952,110,0.207,133,2.762,313,3.208,556,4.032,585,4.485,596,1.565,599,1.668,670,2.328,757,0.91,828,2.41,833,4.823,834,4.823,897,4.823,899,4.823,901,4.823,910,4.485,912,4.823,919,4.823,946,4.485,955,4.823,969,2.028,975,4.823,1055,3.864,1094,4.032,1197,4.374,1251,2.249,1271,3.483,1404,4.545,1405,4.545,1409,3.864,1727,2.905,1750,4.823,1771,2.742,2215,4.823,2294,6.624,2391,4.823,2959,3.123,2961,5.891,3239,4.823,3727,2.328,3728,3.123,3729,3.455,3730,5.335,3731,3.455,3732,3.455,3733,5.335,3734,3.455,3735,5.335,3736,5.335,3737,5.335,3738,5.335,3739,6.517,3740,5.335,3741,5.335,3742,7.328,3743,5.335,3744,3.455,3745,8.371,3746,3.455,3747,3.455,3748,5.335,3749,3.455,3750,6.517,3751,5.335,3752,5.335,3753,5.335,3754,5.335,3755,3.455,3756,3.455,3757,3.455,3758,3.455,3759,3.455,3760,3.455,3761,3.455,3762,3.455,3763,3.455,3764,3.455,3765,3.455,3766,5.335,3767,5.335,3768,5.335,3769,5.335,3770,5.335,3771,3.455,3772,3.455,3773,3.455,3774,3.455,3775,3.455,3776,7.328,3777,5.335,3778,5.335,3779,7.328,3780,5.335,3781,7.328,3782,5.335,3783,5.335,3784,5.335,3785,3.455,3786,5.335,3787,5.335,3788,5.335,3789,3.455,3790,5.335,3791,5.335,3792,3.455,3793,5.335,3794,5.335,3795,3.455,3796,5.335,3797,5.335,3798,5.335,3799,5.335,3800,6.517,3801,7.328,3802,5.335,3803,5.335,3804,5.335,3805,5.335,3806,5.335,3807,5.335]],["title/miscellaneous/functions.html",[3727,3.002,3808,5.833]],["body/miscellaneous/functions.html",[8,0.253,25,0.003,87,0.003,88,0.003,113,1.575,114,1.768,3727,5.641,3808,7.567,3809,10.33,3810,8.371,3811,8.371]],["title/index.html",[8,0.135,1836,3.107,3661,3.367]],["body/index.html",[25,0.003,87,0.003,88,0.003,97,3.32,152,5.006,289,4.338,371,5.031,396,5.724,910,6.065,3693,6.521,3812,7.214,3813,7.214,3814,7.214,3815,7.214,3816,7.214,3817,7.214,3818,7.214,3819,7.214,3820,7.214,3821,7.214,3822,7.214,3823,7.214,3824,7.214,3825,7.214,3826,10.406,3827,7.214,3828,8.925,3829,7.214,3830,7.214,3831,7.214,3832,7.214,3833,7.214,3834,7.214,3835,7.214,3836,9.691,3837,7.214,3838,7.214,3839,7.214,3840,7.214,3841,7.214,3842,8.925,3843,7.214]],["title/license.html",[1836,3.107,3661,3.367,3844,4.027]],["body/license.html",[25,0.003,87,0.003,88,0.003]],["title/modules.html",[151,4.122]],["body/modules.html",[25,0.003,87,0.003,88,0.003,150,5.265,151,3.908,156,4.189,157,4.859,266,5.265,316,5.265,320,5.265,321,5.265,322,5.265,323,5.265,324,5.265,325,5.265,438,5.528,2129,6.298,3845,11.019,3846,11.019,3847,11.019,3848,11.073,3849,6.967]],["title/overview.html",[3850,6.643]],["body/overview.html",[2,1.85,25,0.003,87,0.002,88,0.002,91,1.911,123,5.353,150,7.686,151,2.221,152,3.318,153,3.579,154,3.579,155,3.579,156,6.224,157,6.928,158,3.56,159,5.445,160,3.558,161,2.381,162,2.381,208,1.943,259,5.353,266,7.686,267,3.579,269,3.579,297,5.13,316,8.244,317,3.579,318,3.579,319,3.579,320,7.975,321,5.353,322,6.356,323,7.264,324,7.264,325,7.264,414,5.353,438,7.002,439,3.579,440,3.579,601,2.868,643,6.624,719,3.579,720,3.579,721,3.579,723,5.62,724,5.62,725,5.62,935,0.227,1478,5.353,2092,3.579,2093,3.579,2436,5.353,2494,3.579,2496,3.579,2634,5.353,2709,3.579,2711,3.579,2903,3.141,3069,5.353,3117,3.579,3119,3.579,3850,3.579,3851,3.959,3852,3.959,3853,3.959,3854,3.959,3855,3.959]],["title/properties.html",[9,0.775,3695,4.027]],["body/properties.html",[9,1.006,25,0.003,87,0.003,88,0.003,289,5.033,1111,7.037,2353,7.567,3663,7.567,3844,7.567,3856,8.371]],["title/todo.html",[1836,3.107,3661,3.367,3857,4.455]],["body/todo.html",[25,0.003,26,0.897,76,2.08,84,5.694,87,0.003,88,0.003,97,2.581,112,3.974,312,5.812,396,5.978,610,6.889,640,6.811,847,5.254,2263,5.978,2985,6.811,3227,7.706,3537,6.811,3680,9.684,3692,6.811,3858,7.534,3859,7.534,3860,7.534,3861,7.534,3862,7.534,3863,9.166,3864,9.166,3865,7.534,3866,9.166]],["title/miscellaneous/typealiases.html",[3727,3.002,3867,6.453]],["body/miscellaneous/typealiases.html",[8,0.249,24,0.273,25,0.003,87,0.003,88,0.003,936,4.263,937,3.676,1241,4.833,1242,6.741,2148,8.738,2153,8.738,2154,7.444,3727,5.549,3868,8.235,3869,8.235]],["title/miscellaneous/variables.html",[3727,3.002,3870,5.833]],["body/miscellaneous/variables.html",[3,0.045,8,0.188,22,1.648,24,0.206,25,0.003,55,2.747,81,0.398,87,0.002,88,0.002,100,1.322,114,1.31,131,5.463,133,3.211,138,1.991,139,0.517,144,2.603,159,5.002,207,2.275,222,1.395,224,1.798,247,3.083,602,3.211,621,5.002,653,4.922,940,2.652,942,3.827,1197,3.16,1499,6.816,3727,4.18,3870,5.607,3871,6.203,3872,8.108,3873,6.203,3874,6.203,3875,6.203,3876,8.108,3877,6.203,3878,6.203,3879,6.203,3880,6.203,3881,6.203,3882,6.203,3883,6.203,3884,6.203,3885,6.203,3886,6.203,3887,6.203,3888,6.203,3889,6.203,3890,6.203,3891,6.203,3892,6.203,3893,6.203,3894,6.203,3895,6.203,3896,6.203,3897,6.203,3898,6.203,3899,6.203,3900,6.203,3901,6.203,3902,6.203,3903,6.203,3904,6.203]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":876,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["0.0.1",{"_index":306,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{}}}],["0.0.10",{"_index":3663,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.0.2",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":2643,"title":{},"body":{"controllers/ProfileController.html":{},"changelog.html":{}}}],["0.0.9",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":3719,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3712,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":3724,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":2133,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":3711,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3713,"title":{},"body":{"dependencies.html":{}}}],["02",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":2268,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["1.0.0",{"_index":3715,"title":{},"body":{"dependencies.html":{}}}],["1.0.35",{"_index":3708,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":601,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"changelog.html":{},"overview.html":{}}}],["10.0.2",{"_index":3700,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":2119,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["12",{"_index":3851,"title":{},"body":{"overview.html":{}}}],["15",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":2646,"title":{},"body":{"controllers/ProfileController.html":{}}}],["2.3.0",{"_index":3725,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":3697,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1450,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/UpdateUserDto.html":{}}}],["20)@isnotempty",{"_index":3398,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["200",{"_index":288,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["2023",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["20})@column({unique",{"_index":2799,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["21",{"_index":3853,"title":{},"body":{"overview.html":{}}}],["22",{"_index":3852,"title":{},"body":{"overview.html":{}}}],["224",{"_index":3854,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":3773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["255",{"_index":86,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":31,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{}}}],["29",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":3855,"title":{},"body":{"overview.html":{}}}],["3.0.8",{"_index":3707,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":3726,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2065,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":2059,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":2123,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":2118,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3001",{"_index":2512,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["300mb",{"_index":2114,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3101",{"_index":200,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3102",{"_index":203,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3103",{"_index":206,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["3201",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["3202",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":1441,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["4.0.1",{"_index":3714,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":3723,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{}}}],["401",{"_index":1817,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["404",{"_index":1582,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/OccupationNotFoundException.html":{}}}],["409",{"_index":1702,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["4210",{"_index":2809,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["5",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":3710,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2128,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["500",{"_index":943,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/EntityCreationException.html":{},"classes/QueryErrorException.html":{}}}],["500000",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1513,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1433,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{}}}],["6.2.1",{"_index":3703,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3720,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":3717,"title":{},"body":{"dependencies.html":{}}}],["89f4011bb96d",{"_index":2825,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["89f4011bb96d'})@primarygeneratedcolumn('uuid",{"_index":2811,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["8e24",{"_index":2810,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["9.0.0",{"_index":3696,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":3705,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":3699,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":3704,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":3701,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":925,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":3558,"title":{},"body":{"entities/UserEntity.html":{}}}],["abc123",{"_index":2797,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1431,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["accesstokencookie",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.auth",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.token",{"_index":695,"title":{},"body":{"controllers/AuthController.html":{}}}],["active",{"_index":3787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":3680,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["addprofile",{"_index":3559,"title":{},"body":{"entities/UserEntity.html":{}}}],["address",{"_index":84,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["address.company",{"_index":977,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["address.entity",{"_index":1003,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["address.user",{"_index":3525,"title":{},"body":{"entities/UserEntity.html":{}}}],["addressentity",{"_index":1,"title":{"entities/AddressEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/UserEntity.html":{}}}],["addresses",{"_index":966,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["addressrepository",{"_index":520,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["admin",{"_index":2961,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["agent",{"_index":1775,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent']?.split('(')[1]?.split(')')[0]?.split",{"_index":2901,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":3868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":2121,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["alphanumeric",{"_index":1427,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["already",{"_index":1404,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":2169,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":3819,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":3786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":97,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"controllers/HealthCheckController.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["api.log",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/auth/auth.module",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["api/entities",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["api/occupation/domain/entities/occupation.entity",{"_index":1502,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/occupation/occupation.module",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["api/profile/domain/entities/profile.entity",{"_index":1503,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/profile/profile.module",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["api/social",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/user/domain/entities/user.entity",{"_index":1504,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["api_landing_page",{"_index":755,"title":{},"body":{"modules/AuthModule.html":{}}}],["api_log",{"_index":195,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["api_mail",{"_index":201,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["api_name",{"_index":1082,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_type",{"_index":1083,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_version",{"_index":1084,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_waiting_list",{"_index":204,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["apidescription",{"_index":307,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apigroup",{"_index":303,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apilandingpagecontroller",{"_index":90,"title":{"controllers/ApiLandingPageController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["apilandingpagemodule",{"_index":150,"title":{"modules/ApiLandingPageModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apilandingpageservice",{"_index":123,"title":{"injectables/ApiLandingPageService.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"overview.html":{}}}],["apiloggerservice",{"_index":1725,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":156,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":158,"title":{"injectables/ApiLogService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["apimailcontroller",{"_index":250,"title":{"controllers/ApiMailController.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["apimailmodule",{"_index":266,"title":{"modules/ApiMailModule.html":{}},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apimailservice",{"_index":259,"title":{"injectables/ApiMailService.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"overview.html":{}}}],["apiname",{"_index":302,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apiokresponse",{"_index":125,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apioperation",{"_index":126,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apiproperty",{"_index":1053,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail",{"_index":1444,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":1446,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":1448,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@length(5",{"_index":1449,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({enum",{"_index":1056,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({example",{"_index":2796,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["apiproperty({nullable",{"_index":1065,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":1059,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["apiresponse",{"_index":299,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apisuccess",{"_index":308,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["apisuccessexample",{"_index":310,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":127,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["apitags('api",{"_index":137,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apitags('auth",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('healthcheck",{"_index":2090,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":300,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('mail",{"_index":262,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["apitags('occupation",{"_index":2445,"title":{},"body":{"controllers/OccupationController.html":{}}}],["apitags('profile",{"_index":2642,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('socialnetwork",{"_index":3076,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["apitags('user",{"_index":3485,"title":{},"body":{"controllers/UserController.html":{}}}],["apitype",{"_index":1042,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":1055,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":1113,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["apiversion",{"_index":305,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["app",{"_index":415,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":298,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":284,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["application",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["application/json",{"_index":2645,"title":{},"body":{"controllers/ProfileController.html":{}}}],["appmodule",{"_index":316,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":297,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":384,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["appteste2emodule",{"_index":438,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":414,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":2230,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":1747,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":3816,"title":{},"body":{"index.html":{}}}],["array",{"_index":854,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":100,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{},"todo.html":{}}}],["auth.controller",{"_index":732,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":2249,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["auth.service",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/dto/sign",{"_index":3266,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["auth/guards/role.guard",{"_index":132,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":2636,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authcontroller",{"_index":608,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":707,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication=${token",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationservice",{"_index":2287,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authenticationtoken",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":2250,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":2251,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":2282,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":320,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2353,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["authservice",{"_index":643,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["available",{"_index":2129,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":222,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["banner_url",{"_index":967,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":968,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":2491,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":531,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":1999,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["bcrypt.compare(query.refreshtoken",{"_index":1983,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["bcrypt.hash(command.refreshtoken",{"_index":2998,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["bcrypt.hashsync(command.password",{"_index":2863,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":600,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["before",{"_index":3535,"title":{},"body":{"entities/UserEntity.html":{}}}],["beforeinsert",{"_index":3556,"title":{},"body":{"entities/UserEntity.html":{}}}],["bf55",{"_index":2808,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["birthday",{"_index":815,"title":{},"body":{"entities/CardEntity.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/NotificationEntity.html":{},"classes/ProfileResponse.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":3809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boundary",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":3814,"title":{},"body":{"index.html":{}}}],["browse",{"_index":3848,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3845,"title":{},"body":{"modules.html":{}}}],["call",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["canactivate(context",{"_index":3898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canceled",{"_index":3781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":556,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":453,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{}}}],["card.entity.ts",{"_index":1005,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:27",{"_index":1016,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":1013,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":1009,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":1011,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":1014,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":1017,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":1015,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":911,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":3745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":2694,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":2698,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":2707,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":445,"title":{"entities/CardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cardentity.connectedcardone",{"_index":1008,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":1010,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":2067,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":2333,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":2354,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":2479,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":3101,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":1006,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":1007,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":2325,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardrepository",{"_index":500,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["cards",{"_index":2477,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":40,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["catch",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["catch(async",{"_index":1834,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["catch(error",{"_index":3082,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["catch(exception",{"_index":1746,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["catcherror",{"_index":1568,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["catcherror(err",{"_index":1575,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["category",{"_index":3764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":3662,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":2163,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["charset",{"_index":1430,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["check",{"_index":2081,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":2096,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":2080,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller.ts:27",{"_index":2084,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":2094,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":1489,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.query.ts",{"_index":2100,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check.response",{"_index":1492,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":2135,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:3",{"_index":2139,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":2140,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":2088,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":1482,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:10",{"_index":1486,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":1485,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":2101,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["check/cqrs/query/health",{"_index":2099,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check/custom",{"_index":1480,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/domain/response/health",{"_index":2134,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check/health",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["checkhealth",{"_index":1483,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":10,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["class",{"_index":81,"title":{"classes/CommandErrorException.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["class.exception",{"_index":1161,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["classdesc",{"_index":3111,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":935,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["classic",{"_index":3776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cleardatabasetest",{"_index":389,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":1090,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["client_address",{"_index":2181,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":2183,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":2185,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":2170,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":2171,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":1088,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["clientsmodule",{"_index":166,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["clientsmodule.register",{"_index":194,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["clientvatnumber",{"_index":2172,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilandingpagemodule",{"_index":153,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_imports",{"_index":155,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_providers",{"_index":154,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilogmodule",{"_index":226,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_imports",{"_index":228,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_providers",{"_index":227,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apimailmodule",{"_index":267,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_apimailmodule_imports",{"_index":268,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cluster_apimailmodule_providers",{"_index":269,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":439,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":441,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":440,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":719,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":721,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":722,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":720,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":2092,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":2093,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_occupationmodule",{"_index":2494,"title":{},"body":{"modules/OccupationModule.html":{},"overview.html":{}}}],["cluster_occupationmodule_imports",{"_index":2495,"title":{},"body":{"modules/OccupationModule.html":{}}}],["cluster_occupationmodule_providers",{"_index":2496,"title":{},"body":{"modules/OccupationModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":2709,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":2710,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":2711,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_socialnetworkmodule",{"_index":3117,"title":{},"body":{"modules/SocialNetworkModule.html":{},"overview.html":{}}}],["cluster_socialnetworkmodule_imports",{"_index":3118,"title":{},"body":{"modules/SocialNetworkModule.html":{}}}],["cluster_socialnetworkmodule_providers",{"_index":3119,"title":{},"body":{"modules/SocialNetworkModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3588,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":3589,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":3590,"title":{},"body":{"modules/UserModule.html":{}}}],["cmd",{"_index":713,"title":{},"body":{"controllers/AuthController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["code",{"_index":1428,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"changelog.html":{}}}],["code.entity",{"_index":458,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["code.entity.ts",{"_index":1665,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:19",{"_index":2812,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:21",{"_index":1682,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:25",{"_index":2801,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":1678,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:29",{"_index":2822,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":1676,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:33",{"_index":2815,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":1684,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:37",{"_index":2817,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":1681,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:43",{"_index":2806,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":1689,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:47",{"_index":2803,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:51",{"_index":2819,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":1686,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":1672,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":1687,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":1673,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.enum.ts",{"_index":3735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["color",{"_index":1295,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["column",{"_index":70,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":853,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@column({unique",{"_index":3554,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":863,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":28,"title":{},"body":{"entities/AddressEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":839,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":874,"title":{},"body":{"entities/CardEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":3225,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":944,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.createoccupationdto",{"_index":1175,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["command.createoccupationdto.name",{"_index":1172,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["command.createprofiledto",{"_index":1253,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.createuserdto",{"_index":1413,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.mail",{"_index":1406,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":1401,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.email",{"_index":2980,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command.id",{"_index":1623,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["command.mail",{"_index":2859,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.mail).pipe",{"_index":1574,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["command.name",{"_index":1316,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["command.occupationid",{"_index":1606,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["command.occupations",{"_index":3301,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupations.map(async",{"_index":3297,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupationsid.length",{"_index":1254,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.occupationsid.map(async",{"_index":1256,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.profileid",{"_index":2926,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["command.roles",{"_index":3411,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["command.updateoccupationdto",{"_index":3281,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["command.updateoccupationdto.name",{"_index":3278,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["command.updateprofiledto",{"_index":3310,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["command.updateusercredentialdto.newpassword",{"_index":3376,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.updateusercredentialdto.password",{"_index":3377,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.user",{"_index":3351,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.mail",{"_index":3346,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.username",{"_index":3344,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.userid",{"_index":1249,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.username",{"_index":2861,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/create",{"_index":1098,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["command/delete",{"_index":1565,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{}}}],["command/register.command",{"_index":2854,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":2874,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["command/restore",{"_index":2911,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{}}}],["command/send",{"_index":2977,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command/set",{"_index":2996,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["command/shift",{"_index":3010,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["command/soft",{"_index":3166,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["command/update",{"_index":3276,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["commandbus",{"_index":212,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["commanderrorexception",{"_index":934,"title":{"classes/CommandErrorException.html":{}},"body":{"classes/CommandErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["commandhandler",{"_index":1097,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["commandhandler(createlogcommand",{"_index":1102,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["commandhandler(createoccupationcommand",{"_index":1166,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["commandhandler(createprofilecommand",{"_index":1246,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["commandhandler(createsocialnetworkcommand",{"_index":1311,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":1395,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(deletemailcommand",{"_index":1571,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["commandhandler(deleteoccupationcommand",{"_index":1605,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["commandhandler(deleteprofilecommand",{"_index":1621,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["commandhandler(deletesocialnetworkcommand",{"_index":1638,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":1656,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["commandhandler(registercommand",{"_index":2855,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":2875,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["commandhandler(restoreoccupationcommand",{"_index":2914,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["commandhandler(restoreprofilecommand",{"_index":2925,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["commandhandler(restoresocialnetworkcommand",{"_index":2940,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["commandhandler(restoreusercommand",{"_index":2952,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["commandhandler(sendmailcommand",{"_index":2978,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":2997,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["commandhandler(shiftprofileownercommand",{"_index":3011,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["commandhandler(softdeleteoccupationcommand",{"_index":3167,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["commandhandler(softdeleteprofilecommand",{"_index":3176,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["commandhandler(softdeletesocialnetworkcommand",{"_index":3188,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["commandhandler(softdeleteusercommand",{"_index":3200,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["commandhandler(updateoccupationcommand",{"_index":3277,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["commandhandler(updateoccupationsprofilecommand",{"_index":3296,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["commandhandler(updateprofilecommand",{"_index":3309,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["commandhandler(updatesocialnetworkcommand",{"_index":3318,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":3343,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["commandhandler(updateusercredentialcommand",{"_index":3372,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["commandhandler(updateuserrolecommand",{"_index":3410,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["communicate",{"_index":919,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":2478,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":11,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":948,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":77,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{}}}],["company_account",{"_index":3797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":2187,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_employee",{"_index":559,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["company_name",{"_index":2189,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":2191,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":2173,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":2678,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":2679,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":448,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["companyemployeeentity.company",{"_index":988,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyemployeerepository",{"_index":502,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyentity",{"_index":34,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["companyentity.addresses",{"_index":36,"title":{},"body":{"entities/AddressEntity.html":{}}}],["companyentity.bannerpicture",{"_index":2335,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":2481,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":2692,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":2337,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":2326,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":816,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":2327,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyrepository",{"_index":501,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyvatnumber",{"_index":2174,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":3829,"title":{},"body":{"index.html":{}}}],["config",{"_index":735,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["configmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":3533,"title":{},"body":{"entities/UserEntity.html":{}}}],["confirming",{"_index":3863,"title":{},"body":{"todo.html":{}}}],["connect",{"_index":1557,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":908,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connected_card",{"_index":561,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":844,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":845,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":849,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":451,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connectedcardentity.conversation",{"_index":1022,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":817,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardrepository",{"_index":503,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["connectedcardtwo",{"_index":818,"title":{},"body":{"entities/CardEntity.html":{}}}],["console.log('createlogcommandhandler",{"_index":1115,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["const",{"_index":247,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraintmap",{"_index":2153,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":2156,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":2159,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CommandErrorException.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationDto.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":1103,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(@inject('api_waiting_list",{"_index":1572,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["constructor(apiloggerservice",{"_index":1724,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(apilogservice",{"_index":1206,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["constructor(authenticationservice",{"_index":2285,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(client",{"_index":1087,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(commandbus",{"_index":211,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":1348,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(deletemaildto",{"_index":1590,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["constructor(email",{"_index":1951,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["constructor(errors",{"_index":2149,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(getuserwithcriteriadto",{"_index":2031,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["constructor(healthcheckservice",{"_index":2102,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":2137,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(id",{"_index":1327,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["constructor(jwtservice",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(login",{"_index":3571,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["constructor(occupationrepository",{"_index":1153,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["constructor(partial",{"_index":961,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["constructor(private",{"_index":138,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(profilerepository",{"_index":1234,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["constructor(public",{"_index":1332,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["constructor(querybus",{"_index":1484,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(refreshtoken",{"_index":1974,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(socialnetworkrepository",{"_index":1306,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["constructor(updateuserrolecommand",{"_index":3415,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["constructor(userid",{"_index":1458,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["constructor(username",{"_index":1964,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":498,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["constructor(users",{"_index":3566,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":2255,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["consumer",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":2162,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":292,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{},"controllers/ProfileController.html":{}}}],["context.switchtohttp().getrequest",{"_index":3901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":3694,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":3813,"title":{},"body":{"index.html":{}}}],["controller",{"_index":89,"title":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["controller('/auth",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('/occupation",{"_index":2444,"title":{},"body":{"controllers/OccupationController.html":{}}}],["controller('api",{"_index":136,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{}}}],["controller('health",{"_index":2089,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('profile",{"_index":2641,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('social",{"_index":3075,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["controller('user",{"_index":3484,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":91,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":563,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversation.entity",{"_index":468,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":2234,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:21",{"_index":2240,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":2243,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":2242,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":2237,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":2238,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":2244,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":2239,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":2052,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":2246,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":2236,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":2357,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":454,"title":{"entities/ConversationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversationentity.notifications",{"_index":2379,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["conversationrepository",{"_index":504,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["conversations",{"_index":2046,"title":{},"body":{"entities/GroupEntity.html":{}}}],["cookie",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["country",{"_index":12,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["cqrs/command/create",{"_index":245,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/delete",{"_index":218,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/register.command",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["cqrs/command/remove",{"_index":3640,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/restore",{"_index":2556,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/send",{"_index":283,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["cqrs/command/set",{"_index":3641,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/shift",{"_index":2770,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cqrs/command/soft",{"_index":2554,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":2552,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/event",{"_index":746,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/create",{"_index":230,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/delete",{"_index":180,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/register.handler",{"_index":738,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/remove",{"_index":3594,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/restore",{"_index":2500,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/send",{"_index":272,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/command/set",{"_index":3593,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/shift",{"_index":2715,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/command/soft",{"_index":2502,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/update",{"_index":2507,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/create",{"_index":2503,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/delete",{"_index":183,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/login",{"_index":3597,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/remove",{"_index":3595,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/restore",{"_index":2509,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{}}}],["cqrs/handler/event/send",{"_index":274,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/event/set",{"_index":3596,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/shift",{"_index":2722,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/event/soft",{"_index":2505,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{}}}],["cqrs/handler/event/update",{"_index":2511,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/get",{"_index":186,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":2098,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/get",{"_index":220,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["cqrs/query/health",{"_index":1488,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":169,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":1198,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserEvent.html":{},"changelog.html":{}}}],["create/address.entity",{"_index":492,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/address.entity.ts",{"_index":7,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:17",{"_index":52,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:22",{"_index":60,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:27",{"_index":33,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:32",{"_index":59,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:37",{"_index":42,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:42",{"_index":68,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:47",{"_index":57,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:52",{"_index":58,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:55",{"_index":56,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:58",{"_index":47,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:61",{"_index":63,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:64",{"_index":50,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:67",{"_index":66,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:70",{"_index":41,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/card.entity",{"_index":446,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["create/card.entity.ts",{"_index":814,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:100",{"_index":850,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":887,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":882,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":861,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":869,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":871,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":890,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":893,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":902,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":898,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":900,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":851,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":894,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":852,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":862,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":888,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":865,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":858,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":866,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":842,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":885,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":857,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":896,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":840,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":872,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":878,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":877,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":891,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":884,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":848,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":449,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity",{"_index":447,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity.ts",{"_index":965,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:104",{"_index":984,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:107",{"_index":1000,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:110",{"_index":985,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:33",{"_index":990,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:36",{"_index":991,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:39",{"_index":999,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:42",{"_index":979,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:45",{"_index":986,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:48",{"_index":1001,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:51",{"_index":976,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:54",{"_index":1002,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:57",{"_index":982,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:60",{"_index":983,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:63",{"_index":996,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:66",{"_index":987,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:73",{"_index":989,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:77",{"_index":993,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:80",{"_index":995,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:86",{"_index":998,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:92",{"_index":981,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":978,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":452,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity",{"_index":455,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":1019,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:24",{"_index":1029,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:27",{"_index":1024,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:33",{"_index":1023,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:36",{"_index":1028,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:39",{"_index":1033,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:42",{"_index":1031,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:45",{"_index":1035,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:52",{"_index":1025,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:55",{"_index":1036,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:58",{"_index":1026,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":457,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{}}}],["create/entities",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/notification",{"_index":3765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/role",{"_index":2959,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":3778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":3789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":3792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":3800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":462,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{}}}],["create/group.entity",{"_index":460,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":2045,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:24",{"_index":2056,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":2061,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":2058,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":2053,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":2063,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":2051,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":2054,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":2064,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":2055,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":465,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":2168,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:103",{"_index":2204,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":2193,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":2212,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":2195,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":2200,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":2180,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":2194,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":2202,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":2190,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":2188,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":2192,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":2184,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":2182,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":2186,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":2196,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":2207,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":2211,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":2209,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":2199,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":467,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity",{"_index":470,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity.ts",{"_index":2324,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:22",{"_index":2345,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":2346,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":2344,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":2342,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":2350,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":2348,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":2334,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":2338,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":2336,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":2339,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":2351,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":2340,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":472,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":2352,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:20",{"_index":2361,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":2356,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":2355,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":2358,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":2359,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":2362,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":2360,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/notification.entity",{"_index":489,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["create/notification.entity.ts",{"_index":2376,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:23",{"_index":2384,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:28",{"_index":2390,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:33",{"_index":2383,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:36",{"_index":2392,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:39",{"_index":2386,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:42",{"_index":2387,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:49",{"_index":2395,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:52",{"_index":2389,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:58",{"_index":2380,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:65",{"_index":2381,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:68",{"_index":2393,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:71",{"_index":2382,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/plan.entity",{"_index":476,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":2568,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:19",{"_index":2579,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":2580,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":2574,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":2581,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":2578,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":2577,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":2583,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":2572,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":2584,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":2573,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/referal",{"_index":491,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["create/strip",{"_index":484,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{}}}],["create/subscription.entity",{"_index":487,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":3209,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:25",{"_index":3219,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":3224,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":3218,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":3226,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":3235,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":3233,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":3223,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":3238,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":3221,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":3217,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":3214,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":3236,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":3215,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["created",{"_index":1187,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["created_at",{"_index":45,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["createdatecolumn",{"_index":71,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":44,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["createdfrom",{"_index":2015,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createdto",{"_index":2016,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createlog",{"_index":232,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":235,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogcommand",{"_index":244,"title":{"classes/CreateLogCommand.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["createlogcommandhandler",{"_index":188,"title":{"classes/CreateLogCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["createlogdto",{"_index":236,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apiname",{"_index":1730,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.apitype",{"_index":1734,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":1731,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.body",{"_index":1783,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":1739,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":1781,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":1793,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":1732,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":1735,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":1792,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":1795,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":1789,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":1787,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":1737,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":1796,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":1785,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogformethode",{"_index":233,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogformethode(log",{"_index":239,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createmethodlogdto",{"_index":240,"title":{"classes/CreateMethodLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateMethodLogDto.html":{}}}],["createoccupation",{"_index":2400,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["createoccupation(@body",{"_index":2454,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createoccupation(createoccupationrequest",{"_index":2408,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createoccupation(occupationrequest",{"_index":2531,"title":{},"body":{"injectables/OccupationService.html":{}}}],["createoccupationcommand",{"_index":1142,"title":{"classes/CreateOccupationCommand.html":{}},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"injectables/OccupationService.html":{}}}],["createoccupationcommandhandler",{"_index":1150,"title":{"classes/CreateOccupationCommandHandler.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"modules/OccupationModule.html":{}}}],["createoccupationdto",{"_index":1145,"title":{"classes/CreateOccupationDto.html":{}},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"injectables/OccupationService.html":{}}}],["createoccupationevent",{"_index":1163,"title":{"classes/CreateOccupationEvent.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{}}}],["createoccupationeventhandler",{"_index":1202,"title":{"classes/CreateOccupationEventHandler.html":{}},"body":{"classes/CreateOccupationEventHandler.html":{},"modules/OccupationModule.html":{}}}],["createoccupationrequest",{"_index":1217,"title":{"classes/CreateOccupationRequest.html":{}},"body":{"classes/CreateOccupationRequest.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["createoccupationrequest).catch(error",{"_index":2459,"title":{},"body":{"controllers/OccupationController.html":{}}}],["createprofile",{"_index":2587,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["createprofile(@body",{"_index":2664,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofile(createprofilerequest",{"_index":2740,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofile(profile",{"_index":2598,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofilecommand",{"_index":1222,"title":{"classes/CreateProfileCommand.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/ProfileService.html":{}}}],["createprofilecommandhandler",{"_index":1231,"title":{"classes/CreateProfileCommandHandler.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofiledto",{"_index":1225,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"injectables/ProfileService.html":{}}}],["createprofileevent",{"_index":1244,"title":{"classes/CreateProfileEvent.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{}}}],["createprofileeventhandler",{"_index":1279,"title":{"classes/CreateProfileEventHandler.html":{}},"body":{"classes/CreateProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofilerequest",{"_index":1284,"title":{"classes/CreateProfileRequest.html":{}},"body":{"classes/CreateProfileRequest.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["createprofilerequest.iduser",{"_index":2777,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.occupationsid",{"_index":2778,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.roleprofile",{"_index":2776,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.usernameprofile",{"_index":2775,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createsocialnetwork",{"_index":3046,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["createsocialnetwork(@body",{"_index":3083,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["createsocialnetwork(createsocialnetworkrequest",{"_index":3053,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["createsocialnetwork(socialnetworkrequest",{"_index":3141,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["createsocialnetworkcommand",{"_index":1292,"title":{"classes/CreateSocialNetworkCommand.html":{}},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["createsocialnetworkcommandhandler",{"_index":1303,"title":{"classes/CreateSocialNetworkCommandHandler.html":{}},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["createsocialnetworkevent",{"_index":1309,"title":{"classes/CreateSocialNetworkEvent.html":{}},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{}}}],["createsocialnetworkevent(socialnetworkentity.id",{"_index":1323,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["createsocialnetworkeventhandler",{"_index":1333,"title":{"classes/CreateSocialNetworkEventHandler.html":{}},"body":{"classes/CreateSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["createsocialnetworkrequest",{"_index":1337,"title":{"classes/CreateSocialNetworkRequest.html":{}},"body":{"classes/CreateSocialNetworkRequest.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["createtimestamp",{"_index":3245,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":1494,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":1424,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":3486,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":3436,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":1345,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["createusercommand(createuserdto",{"_index":3643,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":1351,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["createuserdto",{"_index":399,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto.mail",{"_index":598,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.roles",{"_index":603,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.username",{"_index":597,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserevent",{"_index":1455,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{}}}],["createusereventhandler",{"_index":1462,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["createuserresponse",{"_index":1387,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusertest",{"_index":390,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["createusertest(@body",{"_index":428,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["createusertest(createuserdto",{"_index":398,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["creation",{"_index":1717,"title":{},"body":{"classes/EntityCreationException.html":{},"entities/SocialNetworkEntity.html":{}}}],["creation.exception",{"_index":3152,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["creation.exception.ts",{"_index":1715,"title":{},"body":{"classes/EntityCreationException.html":{}}}],["creation.exception.ts:3",{"_index":1716,"title":{},"body":{"classes/EntityCreationException.html":{}}}],["credential",{"_index":3391,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.command",{"_index":3367,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["credential.command.ts",{"_index":3361,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:4",{"_index":3364,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:5",{"_index":3363,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.dto",{"_index":3365,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential.dto.ts",{"_index":3383,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:2",{"_index":3387,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:3",{"_index":3386,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:5",{"_index":3385,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.event",{"_index":3371,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["credential.event.ts",{"_index":3389,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:2",{"_index":3392,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:3",{"_index":3390,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:4",{"_index":3393,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credentials",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["criteria",{"_index":1879,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria')@httpcode(201)@useguards(undefined",{"_index":2421,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["criteria.dto",{"_index":1883,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["criteria.dto.ts",{"_index":1872,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:1",{"_index":1874,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{}}}],["criteria.dto.ts:10",{"_index":2027,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:12",{"_index":2028,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:14",{"_index":2029,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:15",{"_index":2022,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:2",{"_index":2023,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:3",{"_index":2024,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:4",{"_index":1912,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:5",{"_index":1911,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:6",{"_index":1876,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:7",{"_index":1875,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:8",{"_index":2025,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:9",{"_index":2026,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.isdeleted",{"_index":2564,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria.name",{"_index":2563,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria.query",{"_index":1885,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["criteria.query.ts",{"_index":1878,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:1",{"_index":1934,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["criteria.query.ts:3",{"_index":1880,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:4",{"_index":1914,"title":{},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:6",{"_index":1935,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["criteria.query.ts:7",{"_index":1881,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{}}}],["criteria.query.ts:8",{"_index":1936,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["criteria.request",{"_index":2441,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["criteria.request.ts",{"_index":1898,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["criteria.request.ts:1",{"_index":1899,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["criteria.request.ts:4",{"_index":1928,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:5",{"_index":1927,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:6",{"_index":1901,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["criteria.request.ts:7",{"_index":1900,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["cron",{"_index":3865,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":1751,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":1754,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1753,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":2175,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current",{"_index":2993,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["current_timestamp",{"_index":3251,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["currenthashedrefreshtoken",{"_index":1980,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/UserEntity.html":{}}}],["custom",{"_index":2087,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":177,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["custom.event.ts",{"_index":1719,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:1",{"_index":1720,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:6",{"_index":1723,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:7",{"_index":1722,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:8",{"_index":1721,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":3230,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":1478,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}],["data",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["database",{"_index":396,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{},"index.html":{},"todo.html":{}}}],["databaseconfiguration",{"_index":335,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["date",{"_index":43,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["date'})@isdate",{"_index":1680,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":1760,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":3257,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date})@createdatecolumn",{"_index":2802,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["date})@updatedatecolumn",{"_index":2818,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["david",{"_index":3817,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":3798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":2197,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":2206,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/MailDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":55,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":3100,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":32,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":106,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AppTestE2eController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["delete('/admin/:id",{"_index":3510,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/admin/delete",{"_index":2602,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('/admin/delete/:id",{"_index":2460,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["delete('/admin/delete/:id')@httpcode(204)@useguards(undefined",{"_index":2412,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["delete('/admin/full",{"_index":3516,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/admin/soft",{"_index":2428,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete('/api/test/remove",{"_index":431,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["delete('/delete",{"_index":104,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["delete('/public/delete",{"_index":3513,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(socialnetwork.id",{"_index":1640,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["delete/:id",{"_index":2463,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/UserController.html":{}}}],["delete/:id')@httpcode(204)@useguards(undefined",{"_index":2429,"title":{},"body":{"controllers/OccupationController.html":{}}}],["delete/:id')@useguards(undefined",{"_index":3453,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":1608,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["deleted_at",{"_index":49,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":14,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":72,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn({name",{"_index":48,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["deletedfrom",{"_index":2017,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletedto",{"_index":2018,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletemail",{"_index":101,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemail(@body",{"_index":147,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["deletemail(mail",{"_index":103,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemailcommand",{"_index":217,"title":{"classes/DeleteMailCommand.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"injectables/UserService.html":{}}}],["deletemailcommandhandler",{"_index":179,"title":{"classes/DeleteMailCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailCommandHandler.html":{}}}],["deletemaildto",{"_index":1589,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["deletemailevent",{"_index":1566,"title":{"classes/DeleteMailEvent.html":{}},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deletemailevent(command",{"_index":1586,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["deletemaileventhandler",{"_index":182,"title":{"classes/DeleteMailEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deleteme",{"_index":3425,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteme(@req",{"_index":3514,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(requestuser",{"_index":3439,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(userid",{"_index":3614,"title":{},"body":{"injectables/UserService.html":{}}}],["deletemyprofile",{"_index":2588,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(@req",{"_index":2668,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(requestuser",{"_index":2601,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteoccupation",{"_index":2401,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupation(@param('id",{"_index":2461,"title":{},"body":{"controllers/OccupationController.html":{}}}],["deleteoccupation(occupationid",{"_index":2411,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupationcommand",{"_index":1598,"title":{"classes/DeleteOccupationCommand.html":{}},"body":{"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/OccupationService.html":{}}}],["deleteoccupationcommandhandler",{"_index":1602,"title":{"classes/DeleteOccupationCommandHandler.html":{}},"body":{"classes/DeleteOccupationCommandHandler.html":{},"modules/OccupationModule.html":{}}}],["deleteoccupationevent",{"_index":1609,"title":{"classes/DeleteOccupationEvent.html":{}},"body":{"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{}}}],["deleteoccupationeventhandler",{"_index":1612,"title":{"classes/DeleteOccupationEventHandler.html":{}},"body":{"classes/DeleteOccupationEventHandler.html":{},"modules/OccupationModule.html":{}}}],["deleteprofile",{"_index":2589,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["deleteprofile(@param('id",{"_index":2666,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofile(id",{"_index":2742,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteprofile(profileid",{"_index":2605,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofilecommand",{"_index":1615,"title":{"classes/DeleteProfileCommand.html":{}},"body":{"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"injectables/ProfileService.html":{}}}],["deleteprofilecommandhandler",{"_index":1618,"title":{"classes/DeleteProfileCommandHandler.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["deleteprofileevent",{"_index":1620,"title":{"classes/DeleteProfileEvent.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{}}}],["deleteprofileeventhandler",{"_index":1627,"title":{"classes/DeleteProfileEventHandler.html":{}},"body":{"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["deletesocialnetwork",{"_index":3047,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["deletesocialnetwork(@param('id",{"_index":3085,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["deletesocialnetwork(socialnetworkid",{"_index":3055,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["deletesocialnetworkcommand",{"_index":1632,"title":{"classes/DeleteSocialNetworkCommand.html":{}},"body":{"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["deletesocialnetworkcommandhandler",{"_index":1634,"title":{"classes/DeleteSocialNetworkCommandHandler.html":{}},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["deletesocialnetworkevent",{"_index":1637,"title":{"classes/DeleteSocialNetworkEvent.html":{}},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{}}}],["deletesocialnetworkevent(socialnetwork.id",{"_index":1641,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["deletesocialnetworkeventhandler",{"_index":1643,"title":{"classes/DeleteSocialNetworkEventHandler.html":{}},"body":{"classes/DeleteSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["deletetimestamp",{"_index":3246,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deleteusercommand",{"_index":1646,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["deleteusercommandhandler",{"_index":1649,"title":{"classes/DeleteUserCommandHandler.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["deleteuserevent",{"_index":1653,"title":{"classes/DeleteUserEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{}}}],["deleteuserevent(command.userid",{"_index":1658,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["deleteusereventhandler",{"_index":1662,"title":{"classes/DeleteUserEventHandler.html":{}},"body":{"classes/DeleteUserEventHandler.html":{},"modules/UserModule.html":{}}}],["deleteusertest",{"_index":391,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(@body",{"_index":432,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(useriddto",{"_index":402,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deletion",{"_index":3116,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":289,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1544,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":1777,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":3804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["discount",{"_index":1707,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":1674,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":565,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":1677,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":1666,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":456,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discountcodeentity.subscriptions",{"_index":3216,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcoderepository",{"_index":505,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["discountcodes",{"_index":3210,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":2575,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":2569,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":1667,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":2125,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":2106,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":3828,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":3839,"title":{},"body":{"index.html":{}}}],["documentation:serveapplication",{"_index":3840,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":242,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/generate",{"_index":3480,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/get",{"_index":1882,"title":{},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"injectables/OccupationService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/list",{"_index":3481,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/dto/mail",{"_index":1810,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["domain/dto/mail.dto",{"_index":261,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["domain/dto/occupation.dto",{"_index":1158,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["domain/dto/social",{"_index":1854,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["domain/dto/update",{"_index":2550,"title":{},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/user",{"_index":3483,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/entities/occupation.entity",{"_index":1156,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["domain/entities/profile.entity",{"_index":1238,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["domain/entities/social",{"_index":1308,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["domain/entities/user.entity",{"_index":1381,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["domain/enum/api",{"_index":1079,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["domain/enum/logging",{"_index":1077,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["domain/enum/user",{"_index":1390,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/enum/verbose",{"_index":1099,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["domain/request/create",{"_index":2640,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/request/get",{"_index":2637,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/request/shift",{"_index":2771,"title":{},"body":{"injectables/ProfileService.html":{}}}],["domain/request/update",{"_index":2638,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/create",{"_index":1388,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":1491,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["domain/response/mail.response",{"_index":130,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["domain/response/profile.response",{"_index":1237,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/user",{"_index":2006,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["domain/response/user.response",{"_index":2004,"title":{},"body":{"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dotenv",{"_index":736,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["double",{"_index":3862,"title":{},"body":{"todo.html":{}}}],["dto/sign",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate",{"_index":2567,"title":{},"body":{"injectables/OccupationService.html":{}}}],["duplicate_category_name",{"_index":3763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":3757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":3756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicated",{"_index":3161,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["duplicatemailexception",{"_index":1385,"title":{"classes/DuplicateMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duplicatenameexception",{"_index":1698,"title":{"classes/DuplicateNameException.html":{}},"body":{"classes/DuplicateNameException.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["duplicateusernameexception",{"_index":1382,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":2570,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e",{"_index":715,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["e.message",{"_index":1189,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["e2e",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["e2e.controller",{"_index":443,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":388,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:14",{"_index":397,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:20",{"_index":401,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:27",{"_index":406,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:33",{"_index":409,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:39",{"_index":411,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":442,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":416,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":494,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:105",{"_index":524,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:114",{"_index":529,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:118",{"_index":527,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:126",{"_index":525,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:30",{"_index":521,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:78",{"_index":523,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":856,"title":{},"body":{"entities/CardEntity.html":{}}}],["eb823d92",{"_index":2807,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["email",{"_index":969,"title":{},"body":{"entities/CompanyEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/MailDto.html":{},"classes/RegisterHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"miscellaneous/enumerations.html":{}}}],["email.query",{"_index":1956,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["email.query.ts",{"_index":1950,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:1",{"_index":1952,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:2",{"_index":1953,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["emails",{"_index":819,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":3774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":450,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":947,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:27",{"_index":952,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":956,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":949,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":954,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":950,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":957,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":951,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":959,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":3737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":970,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["empty",{"_index":3859,"title":{},"body":{"todo.html":{}}}],["end_date",{"_index":1679,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":1668,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":3587,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["entitiestomovemodule",{"_index":321,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["entity('company_employee",{"_index":960,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":2214,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":2492,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity('referral_code",{"_index":2824,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["entity.exception",{"_index":1243,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["entity.exception.ts",{"_index":2148,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":2151,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":3244,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:11",{"_index":3249,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":3253,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":3255,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":3254,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":3248,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":3252,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":1533,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":3243,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entitycreationexception",{"_index":1713,"title":{"classes/EntityCreationException.html":{}},"body":{"classes/EntityCreationException.html":{},"injectables/SocialNetworkService.html":{}}}],["entity{.ts,.js",{"_index":1521,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":892,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":1137,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":1138,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/notification",{"_index":2396,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["enum/role",{"_index":958,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["enum/transferable",{"_index":923,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":914,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/user",{"_index":1453,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["enum/who",{"_index":909,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":3728,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":419,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":2224,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment.pipe.ts:5",{"_index":2231,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":386,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["err",{"_index":1176,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.length",{"_index":1178,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.message",{"_index":1579,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["err.status",{"_index":1576,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["error",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/QueryErrorException.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["error('duplicated",{"_index":1173,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["error('error",{"_index":1835,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["error('invalid",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('mail",{"_index":3652,"title":{},"body":{"injectables/UserService.html":{}}}],["error('new",{"_index":3378,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('node_env",{"_index":1558,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error('not",{"_index":3649,"title":{},"body":{"injectables/UserService.html":{}}}],["error('occupation",{"_index":1186,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('occupations",{"_index":3298,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('profile",{"_index":1624,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error('response",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{}}}],["error('socialnetwork",{"_index":1324,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["error('user",{"_index":1250,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["error(e",{"_index":2779,"title":{},"body":{"injectables/ProfileService.html":{}}}],["error(error",{"_index":1265,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error(error.message",{"_index":3413,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["error.constraints",{"_index":2157,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.exception",{"_index":2545,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["error.exception.ts",{"_index":939,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/QueryErrorException.html":{}}}],["error.exception.ts:3",{"_index":941,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/QueryErrorException.html":{}}}],["error.message",{"_index":1791,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.message.split(':')[0",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.message.split(':')[1",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.status",{"_index":3488,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":1162,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["errorcustomeventhandler",{"_index":174,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["errorenum",{"_index":3730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":1742,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{}}}],["errorloggingmiddleware",{"_index":352,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":2152,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":2155,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":2893,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":1813,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":1210,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["event.createuserdto.mail",{"_index":1467,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event.deletemaildto.mail",{"_index":1597,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["event.deleteprofilecommand.id",{"_index":1631,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["event.email",{"_index":2990,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["event.entity",{"_index":485,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":3206,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.entity.ts:16",{"_index":3207,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.error",{"_index":1740,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.handler",{"_index":1738,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.id",{"_index":1336,"title":{},"body":{"classes/CreateSocialNetworkEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["event.listofoccupationid.join",{"_index":3307,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.localisation",{"_index":1736,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.method",{"_index":1215,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.module",{"_index":1214,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.occupationid",{"_index":1216,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["event.owner",{"_index":3026,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event.profileid",{"_index":2934,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.profileresponse.id",{"_index":1282,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.profileresponse.userid",{"_index":1283,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.updateprofilecommand.updateprofiledto",{"_index":3312,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["event.updateuserrolecommand.roles.join",{"_index":3422,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.updateuserrolecommand.userid",{"_index":3421,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.userid",{"_index":1466,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.username",{"_index":2303,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["event/create",{"_index":1164,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{}}}],["event/delete",{"_index":1567,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{}}}],["event/login",{"_index":1993,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["event/register.event",{"_index":2838,"title":{},"body":{"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["event/remove",{"_index":2887,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["event/restore",{"_index":2913,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["event/send",{"_index":2976,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["event/set",{"_index":3003,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["event/shift",{"_index":3023,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event/soft",{"_index":3165,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["event/update",{"_index":3289,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventbus",{"_index":1154,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["eventshandler",{"_index":1211,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventshandler(createoccupationevent",{"_index":1212,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{}}}],["eventshandler(createprofileevent",{"_index":1281,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["eventshandler(createsocialnetworkevent",{"_index":1335,"title":{},"body":{"classes/CreateSocialNetworkEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":1465,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(deletemailevent",{"_index":1596,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["eventshandler(deleteoccupationevent",{"_index":1614,"title":{},"body":{"classes/DeleteOccupationEventHandler.html":{}}}],["eventshandler(deleteprofileevent",{"_index":1630,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["eventshandler(deletesocialnetworkevent",{"_index":1645,"title":{},"body":{"classes/DeleteSocialNetworkEventHandler.html":{}}}],["eventshandler(deleteuserevent",{"_index":1664,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":1728,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(loginofuserevent",{"_index":2302,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["eventshandler(registerevent",{"_index":2839,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["eventshandler(removerefreshtokenevent",{"_index":2888,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["eventshandler(restoreoccupationevent",{"_index":2919,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{}}}],["eventshandler(restoreprofileevent",{"_index":2933,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{}}}],["eventshandler(restoresocialnetworkevent",{"_index":2946,"title":{},"body":{"classes/RestoreSocialNetworkEventHandler.html":{}}}],["eventshandler(restoreuserevent",{"_index":2958,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["eventshandler(sendmailevent",{"_index":2988,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["eventshandler(setcurrentrefreshtokenevent",{"_index":3004,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["eventshandler(shiftprofileownerevent",{"_index":3024,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["eventshandler(softdeleteoccupationevent",{"_index":3172,"title":{},"body":{"classes/SoftDeleteOccupationEventHandler.html":{}}}],["eventshandler(softdeleteprofileevent",{"_index":3183,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["eventshandler(softdeletesocialnetworkevent",{"_index":3193,"title":{},"body":{"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["eventshandler(softdeleteuserevent",{"_index":3205,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["eventshandler(updateoccupationevent",{"_index":3290,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{}}}],["eventshandler(updateoccupationsprofileevent",{"_index":3306,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["eventshandler(updateprofileevent",{"_index":3311,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["eventshandler(updatesocialnetworkevent",{"_index":3323,"title":{},"body":{"classes/UpdateSocialNetworkEventHandler.html":{}}}],["eventshandler(updateusercredentialevent",{"_index":3396,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["eventshandler(updateuserevent",{"_index":3401,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["eventshandler(updateuserroleevent",{"_index":3420,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["example",{"_index":314,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{}}}],["exceed",{"_index":2127,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":1749,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/InvalidUsernameException.html":{}}}],["exception.filter.ts",{"_index":1744,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts:6",{"_index":1748,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1756,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/command",{"_index":938,"title":{},"body":{"classes/CommandErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["exception/duplicate",{"_index":1383,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"injectables/OccupationService.html":{},"classes/RegisterHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["exception/entity",{"_index":1714,"title":{},"body":{"classes/EntityCreationException.html":{},"injectables/SocialNetworkService.html":{}}}],["exception/invalid",{"_index":1241,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["exception/mail",{"_index":2317,"title":{},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["exception/no",{"_index":2364,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["exception/not",{"_index":2372,"title":{},"body":{"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{}}}],["exception/occupation",{"_index":2515,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{}}}],["exception/query",{"_index":2544,"title":{},"body":{"injectables/OccupationService.html":{},"classes/QueryErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["exception/same",{"_index":2967,"title":{},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["exception/unauthorized",{"_index":3269,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["exception/user",{"_index":2765,"title":{},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["exceptionfilter",{"_index":1745,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":3538,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":1086,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(command",{"_index":1095,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(new",{"_index":2561,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["execute(query",{"_index":1805,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["execution",{"_index":945,"title":{},"body":{"classes/CommandErrorException.html":{}}}],["executioncontext",{"_index":3899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1581,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["exists",{"_index":1405,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":3782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresat",{"_index":2794,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["expiresin",{"_index":753,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":85,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":727,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":940,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/OccupationEntity.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"interfaces/RequestUser.html":{},"classes/SamePasswordException.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":1518,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["extractjwt",{"_index":2260,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":2266,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["failed",{"_index":946,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/EntityCreationException.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":864,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"entities/GroupEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["false})@column({type",{"_index":2804,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["false})@exclude",{"_index":3528,"title":{},"body":{"entities/UserEntity.html":{}}}],["false})@manytoone(undefined",{"_index":2816,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["feature",{"_index":3866,"title":{},"body":{"todo.html":{}}}],["features",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["filename",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1830,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["findall",{"_index":3426,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findme",{"_index":3606,"title":{},"body":{"injectables/UserService.html":{}}}],["findme(userid",{"_index":3617,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":3427,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":3496,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":3445,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findoneorfail",{"_index":1248,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["findwithcriteria",{"_index":3428,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findwithcriteria(getuserwithcriteriadto",{"_index":3448,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":820,"title":{},"body":{"entities/CardEntity.html":{}}}],["firstvaluefrom",{"_index":1569,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["fix",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":3227,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["float",{"_index":2576,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1251,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception",{"_index":2546,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["found.exception.ts",{"_index":2516,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"classes/UserNotFoundException.html":{}}}],["found.exception.ts:3",{"_index":2517,"title":{},"body":{"classes/OccupationNotFoundException.html":{},"classes/UserNotFoundException.html":{}}}],["france",{"_index":2222,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["fulldelete",{"_index":3429,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fulldelete(@param('id",{"_index":3517,"title":{},"body":{"controllers/UserController.html":{}}}],["fulldelete(id",{"_index":3451,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["function",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["functions",{"_index":3808,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1425,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["generatecode",{"_index":1355,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatecode(length",{"_index":1365,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatepassword",{"_index":3607,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuniquereferralcode",{"_index":1356,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generateuserdto",{"_index":1797,"title":{"classes/GenerateUserDto.html":{}},"body":{"classes/GenerateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserdto.mail",{"_index":3653,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserdto.roles",{"_index":3655,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserfrommail",{"_index":3430,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserfrommail(@body",{"_index":3489,"title":{},"body":{"controllers/UserController.html":{}}}],["generateuserfrommail(generateuserdto",{"_index":3455,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":2082,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/actual",{"_index":706,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/admin",{"_index":2644,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/admin/')@apiresponse({status",{"_index":2609,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/admin/')@useguards(undefined",{"_index":3443,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id",{"_index":3495,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id')@useguards(undefined",{"_index":3446,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/with",{"_index":2619,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/api/test/clear",{"_index":425,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/api/test/get",{"_index":434,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/getall",{"_index":140,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/getall')@apioperation({summary",{"_index":115,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/public",{"_index":2446,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/')@httpcode(201)@useguards(undefined",{"_index":2414,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/:id",{"_index":2449,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/:id')@httpcode(201)@useguards(undefined",{"_index":2417,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["get('/public/get",{"_index":2613,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/refresh",{"_index":709,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":287,"title":{},"body":{"controllers/AppController.html":{}}}],["getall",{"_index":102,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["getallmailquery",{"_index":219,"title":{"classes/GetAllMailQuery.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getallmailqueryhandler",{"_index":185,"title":{"classes/GetAllMailQueryHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getalloccupation",{"_index":2528,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getalloccupationquery",{"_index":1820,"title":{"classes/GetAllOccupationQuery.html":{}},"body":{"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getalloccupationquery({})).then((occupationsdto",{"_index":2557,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getalloccupationqueryhandler",{"_index":1826,"title":{"classes/GetAllOccupationQueryHandler.html":{}},"body":{"classes/GetAllOccupationQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getalloccupations",{"_index":2402,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getallprofilequery",{"_index":1837,"title":{"classes/GetAllProfileQuery.html":{}},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getallprofilequeryhandler",{"_index":1840,"title":{"classes/GetAllProfileQueryHandler.html":{}},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getallprofiles",{"_index":2590,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getallsocialnetwork",{"_index":3138,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["getallsocialnetworkquery",{"_index":1847,"title":{"classes/GetAllSocialNetworkQuery.html":{}},"body":{"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["getallsocialnetworkqueryhandler",{"_index":1850,"title":{"classes/GetAllSocialNetworkQueryHandler.html":{}},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["getallsocialnetworks",{"_index":3048,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getallusers",{"_index":495,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getalluserstest",{"_index":392,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getcookieforlogout",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":705,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":286,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getme",{"_index":3431,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getme(@req",{"_index":3500,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(requestuser",{"_index":3459,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(userid",{"_index":3624,"title":{},"body":{"injectables/UserService.html":{}}}],["getmyprofile",{"_index":2734,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getmyprofile(userid",{"_index":2744,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getmyprofiles",{"_index":2591,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(@req",{"_index":2655,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(requestuser",{"_index":2612,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getoccupationbyid",{"_index":2403,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyid(@param('id",{"_index":2450,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationbyid(occupationid",{"_index":2416,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyidquery",{"_index":1861,"title":{"classes/GetOccupationByIdQuery.html":{}},"body":{"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getoccupationbyidqueryhandler",{"_index":1865,"title":{"classes/GetOccupationByIdQueryHandler.html":{}},"body":{"classes/GetOccupationByIdQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getoccupationswithcriteria",{"_index":2404,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationswithcriteria(getoccupationswithcriteriarequest",{"_index":2419,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationswithcriteriarequest",{"_index":2423,"title":{},"body":{"controllers/OccupationController.html":{}}}],["getoccupationwithcriteria",{"_index":2529,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getoccupationwithcriteria(criteria",{"_index":2537,"title":{},"body":{"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriadto",{"_index":1870,"title":{"classes/GetOccupationWithCriteriaDto.html":{}},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriaquery",{"_index":1877,"title":{"classes/GetOccupationWithCriteriaQuery.html":{}},"body":{"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"injectables/OccupationService.html":{}}}],["getoccupationwithcriteriaqueryhandler",{"_index":1884,"title":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{}}}],["getoccupationwithcriteriarequest",{"_index":1896,"title":{"classes/GetOccupationWithCriteriaRequest.html":{}},"body":{"classes/GetOccupationWithCriteriaRequest.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["getprofile",{"_index":2735,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile(id",{"_index":2746,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilebyid",{"_index":2592,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(@req",{"_index":2648,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(requestuser",{"_index":2616,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyidquery",{"_index":1902,"title":{"classes/GetProfileByIdQuery.html":{}},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyidqueryhandler",{"_index":1904,"title":{"classes/GetProfileByIdQueryHandler.html":{}},"body":{"classes/GetProfileByIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilebyuserid",{"_index":2593,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyuserid(@param('id",{"_index":2653,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyuserid(userid",{"_index":2618,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofiles",{"_index":2736,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilesbyuseridquery",{"_index":1921,"title":{"classes/GetProfilesByUserIdQuery.html":{}},"body":{"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilesbyuseridqueryhandler",{"_index":1922,"title":{"classes/GetProfilesByUserIdQueryHandler.html":{}},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofileswithcriteria",{"_index":2594,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofileswithcriteria(getprofileswithcriteriarequest",{"_index":2622,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileswithcriteria(getprofilewithcriteriarequest",{"_index":2750,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileswithcriteriarequest",{"_index":1925,"title":{"classes/GetProfilesWithCriteriaRequest.html":{}},"body":{"classes/GetProfilesWithCriteriaRequest.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriadto",{"_index":1909,"title":{"classes/GetProfileWithCriteriaDto.html":{}},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaquery",{"_index":1913,"title":{"classes/GetProfileWithCriteriaQuery.html":{}},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaqueryhandler",{"_index":1915,"title":{"classes/GetProfileWithCriteriaQueryHandler.html":{}},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilewithcriteriarequest",{"_index":2752,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.isdeleted",{"_index":2792,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.roleprofile",{"_index":2791,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.usernameprofile",{"_index":2790,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getsocialnetworkbyid",{"_index":3049,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkbyid(@param('id",{"_index":3078,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkbyid(socialnetworkid",{"_index":3059,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkbyidquery",{"_index":1929,"title":{"classes/GetSocialNetworkByIdQuery.html":{}},"body":{"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkbyidqueryhandler",{"_index":1930,"title":{"classes/GetSocialNetworkByIdQueryHandler.html":{}},"body":{"classes/GetSocialNetworkByIdQueryHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["getsocialnetworkswithcriteria",{"_index":3050,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkswithcriteria(getsocialnetworkswithcriteriarequest",{"_index":3061,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkswithcriteriarequest",{"_index":3063,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkwithcriteria",{"_index":3139,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkwithcriteria(criteria",{"_index":3147,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkwithcriteria(getsocialnetworkswithcriteriarequest",{"_index":3081,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["getsocialnetworkwithcriteriaquery",{"_index":1933,"title":{"classes/GetSocialNetworkWithCriteriaQuery.html":{}},"body":{"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["getsocialnetworkwithcriteriaqueryhandler",{"_index":1937,"title":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["getsocialnetworkwithcriteriarequest",{"_index":1946,"title":{"classes/GetSocialNetworkWithCriteriaRequest.html":{}},"body":{"classes/GetSocialNetworkWithCriteriaRequest.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["getting",{"_index":1836,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["getuser",{"_index":496,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuser(userid",{"_index":526,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuserbyemailquery",{"_index":1948,"title":{"classes/GetUserByEmailQuery.html":{}},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{}}}],["getuserbyemailqueryhandler",{"_index":1954,"title":{"classes/GetUserByEmailQueryHandler.html":{}},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserbyreferralcode",{"_index":1357,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyreferralcode(referralcode",{"_index":1368,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyusernamequery",{"_index":1962,"title":{"classes/GetUserByUsernameQuery.html":{}},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{}}}],["getuserbyusernamequeryhandler",{"_index":1967,"title":{"classes/GetUserByUsernameQueryHandler.html":{}},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserfromauthtoken",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromauthtoken(authenticationtoken",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserifrefreshtokenmatches",{"_index":3608,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":3626,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":1971,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":3644,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesqueryhandler",{"_index":1977,"title":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserloginquery",{"_index":787,"title":{"classes/GetUserLoginQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["getuserloginquery(username",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserloginqueryhandler",{"_index":742,"title":{"classes/GetUserLoginQueryHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserquery",{"_index":784,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserquery(id",{"_index":3647,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery(payload.userid",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserquery(userid",{"_index":3657,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserqueryhandler",{"_index":2003,"title":{"classes/GetUserQueryHandler.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{}}}],["getusertest",{"_index":393,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(@body",{"_index":436,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(userid",{"_index":410,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getuserwithcriteriadto",{"_index":2013,"title":{"classes/GetUserWithCriteriaDto.html":{}},"body":{"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery",{"_index":2030,"title":{"classes/GetUserWithCriteriaQuery.html":{}},"body":{"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery(getuserwithcriteriadto",{"_index":3656,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserwithcriteriaqueryhandler",{"_index":2032,"title":{"classes/GetUserWithCriteriaQueryHandler.html":{}},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/UserModule.html":{}}}],["given",{"_index":1429,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["google",{"_index":3537,"title":{},"body":{"entities/UserEntity.html":{},"todo.html":{}}}],["graph",{"_index":3849,"title":{},"body":{"modules.html":{}}}],["group",{"_index":567,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["group.bannerpicture",{"_index":2341,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":1037,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":2343,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":569,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":2328,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":459,"title":{"entities/GroupEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["groupentity.conversations",{"_index":1027,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":2071,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":859,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":860,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":2057,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":461,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupmembershiprepository",{"_index":507,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["groupmemberships",{"_index":821,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":2329,"title":{},"body":{"entities/MediaEntity.html":{}}}],["grouprepository",{"_index":506,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["guards/auth.guard",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/role.guard",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":1205,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handle(event",{"_index":1208,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handled",{"_index":3650,"title":{},"body":{"injectables/UserService.html":{}}}],["handler",{"_index":178,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":1080,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:10",{"_index":1564,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:100",{"_index":1366,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:104",{"_index":3339,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:11",{"_index":1091,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["handler.ts:110",{"_index":1367,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:118",{"_index":1369,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:12",{"_index":1093,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:123",{"_index":1374,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:129",{"_index":1372,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:13",{"_index":1092,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:135",{"_index":1378,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:139",{"_index":1380,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:14",{"_index":1089,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["handler.ts:143",{"_index":1376,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:15",{"_index":1651,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:16",{"_index":1604,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["handler.ts:17",{"_index":1636,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:18",{"_index":1652,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["handler.ts:19",{"_index":1307,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:20",{"_index":1155,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:21",{"_index":2107,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:22",{"_index":3333,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:23",{"_index":1096,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:24",{"_index":1363,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:25",{"_index":1235,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["handler.ts:29",{"_index":1364,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:51",{"_index":3368,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:54",{"_index":1991,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:55",{"_index":3369,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:6",{"_index":1207,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:70",{"_index":3335,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:76",{"_index":3334,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:8",{"_index":1629,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["handler.ts:82",{"_index":3341,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:86",{"_index":3340,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:9",{"_index":1209,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:91",{"_index":3337,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler/error",{"_index":176,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler/register.event",{"_index":747,"title":{},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["handlers",{"_index":2513,"title":{},"body":{"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["hashedpassword",{"_index":1990,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["headers",{"_index":1043,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["health",{"_index":1481,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheck",{"_index":2085,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":2079,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["healthcheckmodule",{"_index":322,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":1487,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckqueryhandler",{"_index":2097,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckresponse",{"_index":1490,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["healthcheckresult",{"_index":2138,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":2103,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":2109,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":2117,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":2136,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":290,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":3818,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1509,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":1752,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":937,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"injectables/SocialNetworkService.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":295,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":119,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":263,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["httpcode(200)@post('/admin/criteria')@useguards(undefined",{"_index":3449,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/login",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(201",{"_index":2447,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["httpcode(204",{"_index":430,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/:id')@useguards(undefined",{"_index":3462,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/full",{"_index":3452,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/public/delete",{"_index":3440,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@post('/admin/restore",{"_index":3465,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@put('/admin/:id/role')@useguards(undefined",{"_index":3477,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@useguards(jwtrefreshguard)@post('/logout",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204)@usepipes(new",{"_index":404,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":146,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["httpexception",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CommandErrorException.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":2232,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpexception('mail",{"_index":1580,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpexception('unreachable",{"_index":1584,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["httpexception('wrong",{"_index":716,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["httponly",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":718,"title":{},"body":{"controllers/AuthController.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.forbidden",{"_index":2233,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"classes/NotTheOwnerException.html":{}}}],["httpstatus.internal_server_error",{"_index":1757,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":1585,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpstatus.unauthorized",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{},"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":1081,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["icon",{"_index":1296,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["id",{"_index":15,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"classes/MailLandingPageDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["id.dto",{"_index":424,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{}}}],["id.dto.ts",{"_index":3562,"title":{},"body":{"interfaces/UserIdDto.html":{}}}],["id.exception",{"_index":1655,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["id.exception.ts",{"_index":2144,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.exception.ts:3",{"_index":2145,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.query",{"_index":1866,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{}}}],["id.query.ts",{"_index":1862,"title":{},"body":{"classes/GetOccupationByIdQuery.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{}}}],["id.query.ts:1",{"_index":1863,"title":{},"body":{"classes/GetOccupationByIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{}}}],["id.query.ts:2",{"_index":1903,"title":{},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["id.query.ts:6",{"_index":1864,"title":{},"body":{"classes/GetOccupationByIdQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{}}}],["id/:id",{"_index":2652,"title":{},"body":{"controllers/ProfileController.html":{}}}],["id/:id')@httpcode(201)@useguards(undefined",{"_index":2620,"title":{},"body":{"controllers/ProfileController.html":{}}}],["idprofiledto",{"_index":2141,"title":{"classes/IdProfileDto.html":{}},"body":{"classes/IdProfileDto.html":{}}}],["iduser",{"_index":1287,"title":{},"body":{"classes/CreateProfileRequest.html":{}}}],["ieventhandler",{"_index":1204,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["ignore",{"_index":301,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["import",{"_index":69,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailRequiredException.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["in.dto",{"_index":3267,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["in.dto.ts",{"_index":3033,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:10",{"_index":3035,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":3036,"title":{},"body":{"classes/SignInDto.html":{}}}],["inactive",{"_index":3788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":3228,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":913,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":3752,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":2218,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":1101,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":208,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":530,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["injectrepository(addressentity",{"_index":553,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(cardentity",{"_index":533,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyemployeeentity",{"_index":535,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyentity",{"_index":534,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(connectedcardentity",{"_index":536,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(conversationentity",{"_index":537,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(discountcodeentity",{"_index":538,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupentity",{"_index":539,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupmembershipentity",{"_index":540,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(invoicesentity",{"_index":541,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(joinedconversation",{"_index":542,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(mediaentity",{"_index":543,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(messageentity",{"_index":544,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(notificationentity",{"_index":551,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(occupationentity",{"_index":545,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["injectrepository(planentity",{"_index":546,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(profileentity",{"_index":547,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["injectrepository(referralcodeentity",{"_index":552,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(socialnetworkentity",{"_index":548,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["injectrepository(stripevententity",{"_index":549,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(subscriptionentity",{"_index":550,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(userentity",{"_index":532,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["inserteduser",{"_index":2864,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["installation",{"_index":3834,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":3835,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1755,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["int",{"_index":1693,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":1675,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":875,"title":{},"body":{"entities/CardEntity.html":{}}}],["interceptors",{"_index":3861,"title":{},"body":{"todo.html":{}}}],["interface",{"_index":2902,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}}}],["interface/request",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["interface/token",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2903,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{},"overview.html":{}}}],["invalid",{"_index":1409,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":3759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":3758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidclassexception",{"_index":1159,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["invalidclassexception('parameter",{"_index":1179,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["invalididexception",{"_index":1654,"title":{"classes/InvalidIdException.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["invalidmailexception",{"_index":1393,"title":{"classes/InvalidMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidMailException.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception",{"_index":1239,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception(err",{"_index":1261,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["invalidpasswordexception",{"_index":1391,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["invalidusernameexception",{"_index":1394,"title":{"classes/InvalidUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidUsernameException.html":{},"classes/RegisterHandler.html":{}}}],["inversejoincolumn",{"_index":2690,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":3740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":2201,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":2176,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":571,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":1708,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":464,"title":{"entities/InvoicesEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity.subscription",{"_index":3220,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoicesrepository",{"_index":508,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["ip",{"_index":1044,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":1804,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["is_active",{"_index":54,"title":{},"body":{"entities/AddressEntity.html":{}}}],["is_not_transferable",{"_index":3791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_read",{"_index":2385,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["is_transferable",{"_index":3790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactive",{"_index":16,"title":{},"body":{"entities/AddressEntity.html":{}}}],["isdate",{"_index":1690,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isdatestring",{"_index":2823,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["isdeleted",{"_index":1873,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"injectables/OccupationService.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["isduplicatedemail",{"_index":1358,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedemail(email",{"_index":1371,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername",{"_index":1359,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername(username",{"_index":1373,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail",{"_index":3331,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail(mail",{"_index":3336,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername",{"_index":3332,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername(username",{"_index":3338,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isemail",{"_index":915,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":3040,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":2308,"title":{},"body":{"classes/MailDto.html":{}}}],["isemailconfirmed",{"_index":3520,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":2217,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":79,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":3034,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":1691,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isoptional",{"_index":1452,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["isownerpro",{"_index":822,"title":{},"body":{"entities/CardEntity.html":{}}}],["isread",{"_index":2377,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["isrefreshtokenmatching",{"_index":1982,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["isregisteredwithgoogle",{"_index":3521,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["istestenvironmentpipe",{"_index":417,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["istestenvironmentpipe())@delete('/api/test/remove",{"_index":405,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":395,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/get",{"_index":407,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@post('/api/test/create",{"_index":400,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":916,"title":{},"body":{"entities/CardEntity.html":{}}}],["isvalidemail",{"_index":1360,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidemail(email",{"_index":1375,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidpassword",{"_index":1361,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidpassword(password",{"_index":1377,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidusername",{"_index":1362,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidusername(username",{"_index":1379,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["jest",{"_index":3831,"title":{},"body":{"index.html":{}}}],["join",{"_index":1498,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":1520,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join_new_group",{"_index":3768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joincolumn",{"_index":1018,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":1038,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["joined_conversation",{"_index":573,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":466,"title":{"entities/JoinedConversation.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joinedconversation.conversation",{"_index":1030,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":2684,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversationrepository",{"_index":509,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["joinedconversations",{"_index":2673,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":1020,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":903,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":1060,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":2263,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"todo.html":{}}}],["jwtauthenticationguard",{"_index":2247,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["jwtfromrequest",{"_index":2265,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":733,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":749,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":653,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"miscellaneous/variables.html":{}}}],["jwtrefreshtokenstrategy",{"_index":723,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"overview.html":{}}}],["jwtservice",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":724,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwttoken",{"_index":3522,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":2330,"title":{},"body":{"entities/MediaEntity.html":{}}}],["la",{"_index":2221,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["landing",{"_index":93,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["lastname",{"_index":823,"title":{},"body":{"entities/CardEntity.html":{}}}],["latitude",{"_index":17,"title":{},"body":{"entities/AddressEntity.html":{}}}],["length",{"_index":30,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["length(2",{"_index":2493,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["length(5",{"_index":1454,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"classes/UpdateUserDto.html":{}}}],["length(6",{"_index":2826,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["letter",{"_index":2166,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":3824,"title":{},"body":{"index.html":{}}}],["license",{"_index":3844,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["link",{"_index":2378,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["list",{"_index":1578,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"controllers/ProfileController.html":{}}}],["list.response",{"_index":2007,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["list.response.ts",{"_index":3564,"title":{},"body":{"classes/UserListResponse.html":{}}}],["list.response.ts:4",{"_index":3567,"title":{},"body":{"classes/UserListResponse.html":{}}}],["listofoccupationid",{"_index":3300,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["listrolesdto",{"_index":2276,"title":{"classes/ListRolesDto.html":{}},"body":{"classes/ListRolesDto.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["local",{"_index":2290,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":731,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":2284,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:15",{"_index":2289,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":2286,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":648,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["localisation",{"_index":1188,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["localstrategy",{"_index":725,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["log",{"_index":238,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["log.command",{"_index":190,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["log.command.ts",{"_index":1041,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:11",{"_index":1054,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:14",{"_index":1068,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:17",{"_index":1058,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:20",{"_index":1057,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:23",{"_index":1069,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:26",{"_index":1074,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:29",{"_index":1064,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:32",{"_index":1061,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:35",{"_index":1076,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:38",{"_index":1073,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:41",{"_index":1072,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:44",{"_index":1063,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:47",{"_index":1070,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:5",{"_index":1052,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:50",{"_index":1071,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:53",{"_index":1075,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:56",{"_index":1066,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.dto",{"_index":243,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":1118,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:1",{"_index":1139,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:11",{"_index":1120,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:14",{"_index":1127,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":1122,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:20",{"_index":1121,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:23",{"_index":1128,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:26",{"_index":1134,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:29",{"_index":1125,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:32",{"_index":1123,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:35",{"_index":1129,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:38",{"_index":1136,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:41",{"_index":1133,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:44",{"_index":1132,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:47",{"_index":1124,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:5",{"_index":1119,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:50",{"_index":1130,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:53",{"_index":1131,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:56",{"_index":1135,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:59",{"_index":1126,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:6",{"_index":1141,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:7",{"_index":1140,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.enum",{"_index":1100,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.enum.ts",{"_index":3742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.method",{"_index":248,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.module",{"_index":172,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["log.module.ts",{"_index":229,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":191,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log.service.ts",{"_index":231,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:10",{"_index":237,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:18",{"_index":241,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":234,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":171,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log/cqrs/command/create",{"_index":1040,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log/cqrs/handler/command/create",{"_index":189,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["log/domain/dto/create",{"_index":1117,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log/domain/enum/api",{"_index":1727,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":1726,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["log/domain/enum/status",{"_index":3785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log/domain/enum/verbose",{"_index":1771,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":2304,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["logger",{"_index":1499,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{},"miscellaneous/variables.html":{}}}],["logger('registereventhandler",{"_index":2836,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.config",{"_index":1501,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{}}}],["logger.config.ts",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":1554,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":1553,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.info('new",{"_index":2840,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.info('node_env",{"_index":1507,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":2835,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logging",{"_index":1524,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":1763,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:10",{"_index":2907,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":1765,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":2891,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:16",{"_index":1768,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:17",{"_index":2908,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:18",{"_index":2892,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtype",{"_index":1045,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":1067,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtypeenum.error",{"_index":1733,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":2898,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["login",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/UserLoginDto.html":{},"changelog.html":{}}}],["login(username",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":3570,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:10",{"_index":3573,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:12",{"_index":3574,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:3",{"_index":3572,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.query",{"_index":744,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["login.query.ts",{"_index":1985,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:1",{"_index":1986,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:2",{"_index":1987,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.response",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.response.ts",{"_index":3577,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:11",{"_index":3581,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:12",{"_index":3586,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:13",{"_index":3580,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:14",{"_index":3579,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:15",{"_index":3585,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:16",{"_index":3584,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:17",{"_index":3583,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:18",{"_index":3582,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:4",{"_index":3578,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["logindto",{"_index":3264,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["loginofuserevent",{"_index":1992,"title":{"classes/LoginOfUserEvent.html":{}},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["loginofuserevent(userusername.id",{"_index":1998,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["loginofusereventhandler",{"_index":2300,"title":{"classes/LoginOfUserEventHandler.html":{}},"body":{"classes/LoginOfUserEventHandler.html":{},"modules/UserModule.html":{}}}],["logout",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":700,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":18,"title":{},"body":{"entities/AddressEntity.html":{}}}],["lowercase",{"_index":2167,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":3820,"title":{},"body":{"index.html":{}}}],["mail",{"_index":112,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/ApiMailController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{}}}],["mail')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail')@useguards(undefined",{"_index":3457,"title":{},"body":{"controllers/UserController.html":{}}}],["mail'})@apiokresponse({type",{"_index":107,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail.command",{"_index":181,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/SendMailCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.command.ts",{"_index":1560,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:1",{"_index":1561,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:10",{"_index":2972,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:6",{"_index":1562,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:8",{"_index":2973,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.controller",{"_index":275,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.controller.ts",{"_index":252,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.controller.ts:16",{"_index":257,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.event",{"_index":184,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["mail.event.ts",{"_index":1588,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:1",{"_index":2982,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:11",{"_index":2986,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:13",{"_index":2984,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:3",{"_index":1591,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:5",{"_index":1592,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:6",{"_index":1594,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:7",{"_index":1593,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:9",{"_index":2983,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.exception",{"_index":1386,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.exception.ts",{"_index":1695,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.exception.ts:3",{"_index":1696,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.module",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["mail.module.ts",{"_index":270,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.query",{"_index":187,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["mail.query.ts",{"_index":1802,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["mail.service",{"_index":260,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["mail.service.ts",{"_index":279,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:10",{"_index":281,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:7",{"_index":280,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail/api",{"_index":251,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{}}}],["mail/cqrs/command/send",{"_index":2971,"title":{},"body":{"classes/SendMailCommand.html":{}}}],["mail/cqrs/event/send",{"_index":2981,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail/cqrs/handler/command/send",{"_index":2974,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["mail/cqrs/handler/event/send",{"_index":2987,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["mail/domain/dto/mail.dto.ts",{"_index":2305,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:12",{"_index":2309,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:15",{"_index":2311,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:18",{"_index":2310,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:4",{"_index":2307,"title":{},"body":{"classes/MailDto.html":{}}}],["mail_api",{"_index":3754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maildto",{"_index":255,"title":{"classes/MailDto.html":{}},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"classes/MailDto.html":{}}}],["maillandingpagedto",{"_index":1809,"title":{"classes/MailLandingPageDto.html":{}},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{}}}],["mailrequiredexception",{"_index":2316,"title":{"classes/MailRequiredException.html":{}},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["mailresponse",{"_index":129,"title":{"classes/MailResponse.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"classes/MailResponse.html":{}}}],["mails",{"_index":142,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mails'})@apiokresponse({type",{"_index":116,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mailslandingpagelist",{"_index":1819,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["manytomany",{"_index":904,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":879,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":73,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":35,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["match",{"_index":1961,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["matches.query",{"_index":1978,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["matches.query.ts",{"_index":1972,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:1",{"_index":1975,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:2",{"_index":1976,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":88,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring().split('.')[1",{"_index":3357,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["math.random().tostring(10).split('.')[1",{"_index":3660,"title":{},"body":{"injectables/UserService.html":{}}}],["max",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":917,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":3038,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(255",{"_index":926,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["me')@useguards(undefined",{"_index":3441,"title":{},"body":{"controllers/UserController.html":{}}}],["media",{"_index":575,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":868,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":921,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["media.groupbannerpicture",{"_index":2049,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":2062,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":980,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":997,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":469,"title":{"entities/MediaEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediarepository",{"_index":510,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["member",{"_index":2962,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":3112,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":2047,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":463,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":2066,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:17",{"_index":2073,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":2075,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":2068,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":2072,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":2069,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":2076,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":2070,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":2077,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":2960,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:2",{"_index":2964,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":2963,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":2965,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":2115,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":2105,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":577,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/ConversationEntity.html":{},"classes/EntityCreationException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/MailDto.html":{},"entities/MessageEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"controllers/UserController.html":{}}}],["message.author",{"_index":870,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":1032,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":922,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":471,"title":{"entities/MessageEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{}}}],["messagepatern",{"_index":712,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagerepository",{"_index":511,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["messages",{"_index":824,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":2229,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":246,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":3864,"title":{},"body":{"todo.html":{}}}],["minlength",{"_index":2798,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":3037,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":3727,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["mixin(roleguardmixin",{"_index":3904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":149,"title":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllOccupationQuery.html":{},"modules/HealthCheckModule.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["module:entities",{"_index":3113,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":151,"title":{"modules.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2113,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":1706,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":83,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateNameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["name.exception",{"_index":2547,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{}}}],["name.exception.ts",{"_index":1699,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["name.exception.ts:3",{"_index":1700,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["nameoccupation",{"_index":1893,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["namesocialnetwork",{"_index":1943,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["nestjs",{"_index":3692,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/common",{"_index":122,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommandErrorException.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NotTheOwnerException.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"classes/RegisterEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":3698,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":2368,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":1160,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["nestjs/cqrs",{"_index":170,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":734,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":168,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/SendMailCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":729,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3702,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":128,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthCheckController.html":{},"classes/MailDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":2086,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":277,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1769,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":1330,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/RestoreSocialNetworkEvent.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"changelog.html":{}}}],["network.command",{"_index":1305,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["network.command.ts",{"_index":1294,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:1",{"_index":1298,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:10",{"_index":3315,"title":{},"body":{"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:6",{"_index":1301,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:7",{"_index":1302,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:8",{"_index":1300,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.command.ts:9",{"_index":1299,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommand.html":{}}}],["network.controller",{"_index":3121,"title":{},"body":{"modules/SocialNetworkModule.html":{}}}],["network.controller.ts",{"_index":3045,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:19",{"_index":3058,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:28",{"_index":3060,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:37",{"_index":3062,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:50",{"_index":3054,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:59",{"_index":3068,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:73",{"_index":3056,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.controller.ts:82",{"_index":3065,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["network.dto",{"_index":1855,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["network.dto.ts",{"_index":3090,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:1",{"_index":3091,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:10",{"_index":3092,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:11",{"_index":3097,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:12",{"_index":3093,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:6",{"_index":3095,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:7",{"_index":3096,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:8",{"_index":3098,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.dto.ts:9",{"_index":3094,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network.entity",{"_index":482,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["network.entity.ts",{"_index":3099,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:39",{"_index":3107,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:42",{"_index":3108,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:45",{"_index":3110,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:48",{"_index":3106,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:51",{"_index":3103,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:58",{"_index":3102,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:65",{"_index":3104,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:68",{"_index":3109,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:71",{"_index":3105,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.event",{"_index":1310,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["network.event.ts",{"_index":1326,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.event.ts:2",{"_index":1331,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.event.ts:3",{"_index":1328,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.event.ts:4",{"_index":1329,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{}}}],["network.module",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["network.module.ts",{"_index":3120,"title":{},"body":{"modules/SocialNetworkModule.html":{}}}],["network.query",{"_index":1852,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{}}}],["network.query.ts",{"_index":1849,"title":{},"body":{"classes/GetAllSocialNetworkQuery.html":{}}}],["network.request",{"_index":3071,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["network.request.ts",{"_index":1339,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:1",{"_index":1340,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:10",{"_index":3325,"title":{},"body":{"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:6",{"_index":1343,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:7",{"_index":1344,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:8",{"_index":1342,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.request.ts:9",{"_index":1341,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["network.response",{"_index":3074,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["network.response.ts",{"_index":3127,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:1",{"_index":3128,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:10",{"_index":3129,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:11",{"_index":3130,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:12",{"_index":3135,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:14",{"_index":3131,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:6",{"_index":3133,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:7",{"_index":3134,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:8",{"_index":3136,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.response.ts:9",{"_index":3132,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["network.service",{"_index":3070,"title":{},"body":{"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{}}}],["network.service.ts",{"_index":3137,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:107",{"_index":3144,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:120",{"_index":3149,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:23",{"_index":3140,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:26",{"_index":3145,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:40",{"_index":3146,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:53",{"_index":3148,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:72",{"_index":3142,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network.service.ts:90",{"_index":3150,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["network/cqrs/command/create",{"_index":1293,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{}}}],["network/cqrs/command/delete",{"_index":1633,"title":{},"body":{"classes/DeleteSocialNetworkCommand.html":{}}}],["network/cqrs/command/restore",{"_index":2936,"title":{},"body":{"classes/RestoreSocialNetworkCommand.html":{}}}],["network/cqrs/command/soft",{"_index":3185,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommand.html":{}}}],["network/cqrs/command/update",{"_index":3314,"title":{},"body":{"classes/UpdateSocialNetworkCommand.html":{}}}],["network/cqrs/event/create",{"_index":1325,"title":{},"body":{"classes/CreateSocialNetworkEvent.html":{}}}],["network/cqrs/event/delete",{"_index":1642,"title":{},"body":{"classes/DeleteSocialNetworkEvent.html":{}}}],["network/cqrs/event/restore",{"_index":2943,"title":{},"body":{"classes/RestoreSocialNetworkEvent.html":{}}}],["network/cqrs/event/soft",{"_index":3191,"title":{},"body":{"classes/SoftDeleteSocialNetworkEvent.html":{}}}],["network/cqrs/event/update",{"_index":3321,"title":{},"body":{"classes/UpdateSocialNetworkEvent.html":{}}}],["network/cqrs/handler/command/create",{"_index":1304,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/delete",{"_index":1635,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/restore",{"_index":2938,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/soft",{"_index":3186,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/command/update",{"_index":3316,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["network/cqrs/handler/event/create",{"_index":1334,"title":{},"body":{"classes/CreateSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/delete",{"_index":1644,"title":{},"body":{"classes/DeleteSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/restore",{"_index":2945,"title":{},"body":{"classes/RestoreSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/soft",{"_index":3192,"title":{},"body":{"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/event/update",{"_index":3322,"title":{},"body":{"classes/UpdateSocialNetworkEventHandler.html":{}}}],["network/cqrs/handler/query/get",{"_index":1851,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["network/cqrs/query/get",{"_index":1848,"title":{},"body":{"classes/GetAllSocialNetworkQuery.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{}}}],["network/domain/dto/social",{"_index":3089,"title":{},"body":{"classes/SocialNetworkDto.html":{}}}],["network/domain/entities/social",{"_index":481,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["network/social",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{}}}],["network/web/request/create",{"_index":1338,"title":{},"body":{"classes/CreateSocialNetworkRequest.html":{}}}],["network/web/request/get",{"_index":1947,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaRequest.html":{}}}],["network/web/request/update",{"_index":3324,"title":{},"body":{"classes/UpdateSocialNetworkRequest.html":{}}}],["network/web/response/social",{"_index":3126,"title":{},"body":{"classes/SocialNetworkResponse.html":{}}}],["networks",{"_index":1860,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["never",{"_index":2228,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":224,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["new_call",{"_index":3770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_group_message",{"_index":3769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_message",{"_index":3767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newoccupationentity",{"_index":1174,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["newpassword",{"_index":3384,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["newprofile",{"_index":1252,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newprofile.occupations",{"_index":1259,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newsocialnetworkentity",{"_index":1317,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["newuser",{"_index":1412,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["next",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":1767,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":3760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":3802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":3825,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":3830,"title":{},"body":{"index.html":{}}}],["none",{"_index":3799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_diffusible",{"_index":3805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":825,"title":{},"body":{"entities/CardEntity.html":{}}}],["notification",{"_index":591,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["notification.conversation",{"_index":1034,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["notification.entity",{"_index":1039,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["notification.profile",{"_index":2686,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["notification.user",{"_index":3541,"title":{},"body":{"entities/UserEntity.html":{}}}],["notificationentity",{"_index":488,"title":{"entities/NotificationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationrepository",{"_index":518,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["notifications",{"_index":1021,"title":{},"body":{"entities/ConversationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationtypeenum",{"_index":2391,"title":{},"body":{"entities/NotificationEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.info",{"_index":2397,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["nottheownerexception",{"_index":2371,"title":{"classes/NotTheOwnerException.html":{}},"body":{"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{}}}],["nousertraceexception",{"_index":2363,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{}}}],["npm",{"_index":3826,"title":{},"body":{"index.html":{}}}],["null",{"_index":847,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"todo.html":{}}}],["null'})@joincolumn",{"_index":2050,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":881,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":2689,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":37,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":873,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"classes/RegisterHandler.html":{}}}],["number(process.env.port_api_log",{"_index":199,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_mail",{"_index":202,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_waiting_list",{"_index":205,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["numberofshares",{"_index":826,"title":{},"body":{"entities/CardEntity.html":{}}}],["object",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/ProfileController.html":{}}}],["object(log.body",{"_index":249,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["object.assign(partial",{"_index":1149,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["object.assign(this",{"_index":963,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["object.keys(constraints).map(key",{"_index":2158,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":579,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"changelog.html":{}}}],["occupation.cards",{"_index":880,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.command",{"_index":1152,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.command.ts",{"_index":1144,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:1",{"_index":1600,"title":{},"body":{"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{}}}],["occupation.command.ts:3",{"_index":1146,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:6",{"_index":1601,"title":{},"body":{"classes/DeleteOccupationCommand.html":{},"classes/RestoreOccupationCommand.html":{},"classes/SoftDeleteOccupationCommand.html":{}}}],["occupation.command.ts:8",{"_index":1147,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.command.ts:9",{"_index":3274,"title":{},"body":{"classes/UpdateOccupationCommand.html":{}}}],["occupation.controller",{"_index":2498,"title":{},"body":{"modules/OccupationModule.html":{}}}],["occupation.dto",{"_index":1148,"title":{},"body":{"classes/CreateOccupationCommand.html":{},"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{}}}],["occupation.dto.ts",{"_index":1191,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.dto.ts:1",{"_index":1192,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.dto.ts:6",{"_index":1193,"title":{},"body":{"classes/CreateOccupationDto.html":{},"classes/UpdateOccupationDto.html":{}}}],["occupation.event",{"_index":1165,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["occupation.event.ts",{"_index":1195,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:1",{"_index":1196,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:6",{"_index":1201,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:7",{"_index":1611,"title":{},"body":{"classes/DeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:8",{"_index":1200,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationEvent.html":{}}}],["occupation.event.ts:9",{"_index":1199,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/RestoreOccupationEvent.html":{}}}],["occupation.id",{"_index":3279,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.name",{"_index":1171,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupation.profiles",{"_index":2688,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation.query",{"_index":1828,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{}}}],["occupation.query.ts",{"_index":1822,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:1",{"_index":1823,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:6",{"_index":1825,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.query.ts:7",{"_index":1824,"title":{},"body":{"classes/GetAllOccupationQuery.html":{}}}],["occupation.request",{"_index":2443,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["occupation.request.ts",{"_index":1219,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.request.ts:1",{"_index":1220,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.request.ts:6",{"_index":1221,"title":{},"body":{"classes/CreateOccupationRequest.html":{},"classes/UpdateOccupationRequest.html":{}}}],["occupation.service",{"_index":2437,"title":{},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{}}}],["occupation/domain/entities/occupation.entity",{"_index":918,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupation_id",{"_index":2708,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationcontroller",{"_index":2398,"title":{"controllers/OccupationController.html":{}},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{}}}],["occupationdto",{"_index":1157,"title":{"classes/OccupationDto.html":{}},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/OccupationDto.html":{},"injectables/OccupationService.html":{}}}],["occupationdto(occupation",{"_index":1833,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{}}}],["occupationentity",{"_index":473,"title":{"entities/OccupationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationentity.companies",{"_index":1004,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":992,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.id",{"_index":1185,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["occupationid",{"_index":1184,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/GetOccupationByIdQuery.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationlist",{"_index":1167,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationlist.foreach(occupation",{"_index":1170,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationlist.length",{"_index":1169,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["occupationmodule",{"_index":323,"title":{"modules/OccupationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OccupationModule.html":{},"modules.html":{},"overview.html":{}}}],["occupationnotfoundexception",{"_index":2514,"title":{"classes/OccupationNotFoundException.html":{}},"body":{"classes/OccupationNotFoundException.html":{},"injectables/OccupationService.html":{}}}],["occupationpromises",{"_index":1255,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationrepository",{"_index":512,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationrequest",{"_index":2533,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationrequest.name",{"_index":2566,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationresponse",{"_index":2438,"title":{"classes/OccupationResponse.html":{}},"body":{"controllers/OccupationController.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{}}}],["occupationresponse(occupationdto",{"_index":2559,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupations",{"_index":827,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["occupations.length",{"_index":1258,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupations.map",{"_index":1895,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["occupations.map(occupation",{"_index":1832,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["occupationsdto.map(occupationdto",{"_index":2558,"title":{},"body":{"injectables/OccupationService.html":{}}}],["occupationservice",{"_index":2436,"title":{"injectables/OccupationService.html":{}},"body":{"controllers/OccupationController.html":{},"modules/OccupationModule.html":{},"injectables/OccupationService.html":{},"overview.html":{}}}],["occupationsid",{"_index":1226,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileRequest.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileRequest.html":{}}}],["occurred",{"_index":1555,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["old",{"_index":2970,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["ondelete",{"_index":39,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":2164,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":905,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":843,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":906,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["onetoone(undefined",{"_index":867,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":3807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":3806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":3801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":3803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":3250,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":197,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["organisation",{"_index":3822,"title":{},"body":{"index.html":{}}}],["os",{"_index":1046,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":3850,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":828,"title":{},"body":{"entities/CardEntity.html":{},"classes/NotTheOwnerException.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/ShiftProfileOwnerEvent.html":{},"miscellaneous/enumerations.html":{}}}],["owner.command",{"_index":2716,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["owner.command.ts",{"_index":3006,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:2",{"_index":3008,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:3",{"_index":3007,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.event",{"_index":2723,"title":{},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["owner.event.ts",{"_index":3016,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:2",{"_index":3018,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:3",{"_index":3021,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:5",{"_index":3020,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:6",{"_index":3017,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.exception",{"_index":2773,"title":{},"body":{"injectables/ProfileService.html":{}}}],["owner.exception.ts",{"_index":2373,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["owner.exception.ts:3",{"_index":2374,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["owner.request",{"_index":2772,"title":{},"body":{"injectables/ProfileService.html":{}}}],["owner.request.ts",{"_index":3028,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:2",{"_index":3030,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:3",{"_index":3029,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["ownercompanies",{"_index":2674,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":971,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":3695,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":98,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"changelog.html":{}}}],["page.controller",{"_index":173,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.controller.ts",{"_index":95,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:17",{"_index":117,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:26",{"_index":109,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.dto",{"_index":1811,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page.dto.ts",{"_index":2313,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:1",{"_index":2314,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:2",{"_index":2315,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.module",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.ts",{"_index":163,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.service",{"_index":124,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["page.service.ts",{"_index":209,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:11",{"_index":215,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:19",{"_index":216,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:8",{"_index":214,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page/api",{"_index":94,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{}}}],["page/cqrs/command/delete",{"_index":1559,"title":{},"body":{"classes/DeleteMailCommand.html":{},"injectables/UserService.html":{}}}],["page/cqrs/event/delete",{"_index":1587,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["page/cqrs/handler/command/delete",{"_index":1563,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["page/cqrs/handler/event/delete",{"_index":1595,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["page/cqrs/handler/query/get",{"_index":1803,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page/cqrs/query/get",{"_index":1801,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["page/domain/dto/mail",{"_index":2312,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page/domain/response/mail.response.ts",{"_index":2321,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:1",{"_index":2322,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:6",{"_index":2323,"title":{},"body":{"classes/MailResponse.html":{}}}],["param",{"_index":2434,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":2457,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["parameter",{"_index":1242,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":1547,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":1529,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":1512,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":1538,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":962,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["passport",{"_index":2262,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":728,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2259,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2264,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":2270,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":599,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidPasswordException.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["password')@useguards(undefined",{"_index":3474,"title":{},"body":{"controllers/UserController.html":{}}}],["password.exception",{"_index":1392,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["password.exception.ts",{"_index":2160,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["password.exception.ts:3",{"_index":2161,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["passwordfield",{"_index":2292,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["path",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["payload",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":3261,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["payload.userid",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["paymententity",{"_index":3208,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":3779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":2675,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":3716,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":972,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":829,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":2048,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipe",{"_index":1816,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["pipetransform",{"_index":2225,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plaintextpassword",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["plan",{"_index":581,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":1709,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":475,"title":{"entities/PlanEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity.subscriptions",{"_index":3222,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["planrepository",{"_index":513,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["platform",{"_index":1047,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["port",{"_index":198,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["post",{"_index":258,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["post('/')@httpcode(200)@useguards(undefined",{"_index":256,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["post('/admin/create",{"_index":2453,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["post('/admin/create')@httpcode(204)@useguards(undefined",{"_index":2409,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["post('/admin/create')@useguards(undefined",{"_index":3437,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/criteria",{"_index":3498,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/generate",{"_index":3456,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/get",{"_index":2420,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["post('/admin/restore",{"_index":3491,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/api/test/create",{"_index":427,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["post('/login",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":699,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@useguards(undefined",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1508,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgreserrorcode",{"_index":3733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgresql",{"_index":3827,"title":{},"body":{"index.html":{}}}],["pour",{"_index":2220,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":1526,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":96,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":3777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prettier",{"_index":3833,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":3534,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":2571,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":74,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":51,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":221,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["process",{"_index":748,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["process.env.api_name",{"_index":1108,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.api_version",{"_index":1110,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.jwt_access_token_expiration_time",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":754,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":751,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1505,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":1550,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":1532,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":1516,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":1541,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":1545,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":1527,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":1510,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":1536,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":1551,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":1535,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":1525,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":1543,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":1549,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":1531,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":1515,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":1540,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":1546,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":1528,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":1511,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":1537,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":1552,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":1534,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":1523,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":1542,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":1548,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":1530,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":1514,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":1539,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":1772,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":1729,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["process.env.verbose_log",{"_index":1105,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["prod",{"_index":1506,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":583,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["profile')@httpcode(201)@useguards(undefined",{"_index":2599,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile')@httpcode(204)@useguards(undefined",{"_index":2603,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile).catch(error",{"_index":2661,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.command",{"_index":1233,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.command.ts",{"_index":1224,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/RestoreProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:1",{"_index":2922,"title":{},"body":{"classes/RestoreProfileCommand.html":{}}}],["profile.command.ts:2",{"_index":1617,"title":{},"body":{"classes/DeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:3",{"_index":3293,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:4",{"_index":1229,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:5",{"_index":1228,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:6",{"_index":1227,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/RestoreProfileCommand.html":{}}}],["profile.companies",{"_index":953,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.controller",{"_index":2713,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1230,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.dto.ts",{"_index":1267,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/IdProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:2",{"_index":2143,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["profile.dto.ts:4",{"_index":1272,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:5",{"_index":1270,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.enum",{"_index":1273,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.enum.ts",{"_index":3738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["profile.event",{"_index":1245,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["profile.event.ts",{"_index":1275,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:1",{"_index":2929,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.event.ts:2",{"_index":3180,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:3",{"_index":3181,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:4",{"_index":1278,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:5",{"_index":1277,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:6",{"_index":1276,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:8",{"_index":2931,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.event.ts:9",{"_index":2930,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["profile.id",{"_index":3178,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["profile.personalcards",{"_index":883,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.query",{"_index":1842,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.query.ts",{"_index":1839,"title":{},"body":{"classes/GetAllProfileQuery.html":{}}}],["profile.request",{"_index":2639,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["profile.request.ts",{"_index":1286,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:4",{"_index":1291,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:5",{"_index":1289,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:6",{"_index":1290,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:7",{"_index":1288,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.savedcard",{"_index":886,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.service",{"_index":2635,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile.user",{"_index":3012,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profile.user?.id",{"_index":1908,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["profile.userid",{"_index":2786,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/:id",{"_index":2658,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/:id')@httpcode(204)@useguards(undefined",{"_index":2606,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/domain/entities/profile.entity",{"_index":907,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profile_id",{"_index":2706,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profilecontroller",{"_index":2585,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profileentity",{"_index":477,"title":{"entities/ProfileEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteProfileCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profileentity.bannerpicture",{"_index":2347,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":2245,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":2241,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.notifications",{"_index":2388,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["profileentity.occupations",{"_index":2488,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":994,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":2349,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":2331,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":2332,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileid",{"_index":2608,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profileid).catch(error",{"_index":2651,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profilemodule",{"_index":324,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepicture",{"_index":973,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profilerepository",{"_index":514,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["profileresponse",{"_index":1236,"title":{"classes/ProfileResponse.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{}}}],["profileresponse(savedprofile",{"_index":1264,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["profiles",{"_index":1844,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/OccupationEntity.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/UserEntity.html":{}}}],["profiles')@httpcode(201)@useguards(undefined",{"_index":2614,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profiles.map",{"_index":1846,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["profileservice",{"_index":2634,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["profileswhosavedcard",{"_index":830,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":3693,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":114,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.all(occupationpromises",{"_index":1257,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["property",{"_index":3114,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":717,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/NoUserTraceException.html":{}}}],["providers",{"_index":164,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":3659,"title":{},"body":{"injectables/UserService.html":{}}}],["public",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"classes/ProfileResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":2435,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["put('/admin/:id",{"_index":3502,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id')@useguards(undefined",{"_index":3469,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id/role",{"_index":3504,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/restore",{"_index":2625,"title":{},"body":{"controllers/ProfileController.html":{}}}],["put('/admin/restore/:id",{"_index":2466,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/admin/restore/:id')@httpcode(204)@useguards(undefined",{"_index":2425,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/admin/update",{"_index":2632,"title":{},"body":{"controllers/ProfileController.html":{}}}],["put('/admin/update/:id",{"_index":2456,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/admin/update/:id')@httpcode(204)@useguards(undefined",{"_index":2432,"title":{},"body":{"controllers/OccupationController.html":{},"controllers/SocialNetworkController.html":{}}}],["put('/public/update",{"_index":2629,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["query",{"_index":1806,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["query.criteria.isdeleted",{"_index":1889,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["query.criteria.name",{"_index":1891,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["query.email",{"_index":1959,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.isdeleted",{"_index":1918,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.usernameprofile",{"_index":1919,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdfrom",{"_index":2036,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdto",{"_index":2038,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedfrom",{"_index":2042,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedto",{"_index":2043,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.isdeleted",{"_index":2035,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedfrom",{"_index":2039,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedto",{"_index":2040,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.id",{"_index":1906,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["query.isdeleted",{"_index":1940,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["query.name",{"_index":1941,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["query.occupationid",{"_index":1868,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["query.userid",{"_index":1981,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{}}}],["query.username",{"_index":1970,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["query/get",{"_index":1808,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query/health",{"_index":2108,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybuilder",{"_index":1887,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.createdat",{"_index":2037,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.deletedat",{"_index":2044,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.updatedat",{"_index":2041,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.getmany",{"_index":1894,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["querybuilder.setfindoptions",{"_index":1890,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('occupation.name",{"_index":1892,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('profile.usernameprofile",{"_index":1920,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('socialnetwork.name",{"_index":1942,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["querybus",{"_index":213,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["queryerrorexception",{"_index":2543,"title":{"classes/QueryErrorException.html":{}},"body":{"injectables/OccupationService.html":{},"classes/QueryErrorException.html":{},"injectables/SocialNetworkService.html":{}}}],["queryhandler",{"_index":1807,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(getallmailquery",{"_index":1812,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["queryhandler(getalloccupationquery",{"_index":1829,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["queryhandler(getallprofilequery",{"_index":1843,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["queryhandler(getallsocialnetworkquery",{"_index":1856,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["queryhandler(getoccupationbyidquery",{"_index":1867,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["queryhandler(getoccupationwithcriteriaquery",{"_index":1886,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["queryhandler(getprofilebyidquery",{"_index":1905,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["queryhandler(getprofilesbyuseridquery",{"_index":1923,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["queryhandler(getprofilewithcriteriaquery",{"_index":1916,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["queryhandler(getsocialnetworkbyidquery",{"_index":1931,"title":{},"body":{"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["queryhandler(getsocialnetworkwithcriteriaquery",{"_index":1938,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["queryhandler(getuserbyemailquery",{"_index":1957,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["queryhandler(getuserbyusernamequery",{"_index":1969,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":1979,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["queryhandler(getuserloginquery",{"_index":1994,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["queryhandler(getuserquery",{"_index":2008,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["queryhandler(getuserwithcriteriaquery",{"_index":2033,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":2110,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["random",{"_index":1426,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["readme.md",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":2154,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":1711,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["referral",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["referral_code",{"_index":593,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcode",{"_index":1370,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"classes/RegisterHandler.html":{},"entities/UserEntity.html":{}}}],["referralcode.owner",{"_index":3546,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcode.usedby",{"_index":3552,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcodeentity",{"_index":490,"title":{"entities/ReferralCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["referralcoderepository",{"_index":519,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcodes",{"_index":3523,"title":{},"body":{"entities/UserEntity.html":{}}}],["reflect",{"_index":3718,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["refresh(@req",{"_index":710,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":1973,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":693,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":3783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp('^(?=.*[a",{"_index":1397,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["regexp('^(?=.*\\\\d)(?=.*[a",{"_index":3373,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["regexvalidatepassword",{"_index":1354,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["register",{"_index":1403,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["registercommand",{"_index":782,"title":{"classes/RegisterCommand.html":{}},"body":{"injectables/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{}}}],["registercommand(signupdto.username",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":2841,"title":{},"body":{"classes/RegisterEventHandler.html":{},"entities/UserEntity.html":{}}}],["registerevent",{"_index":2830,"title":{"classes/RegisterEvent.html":{}},"body":{"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["registerevent(inserteduser.id",{"_index":2865,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registereventhandler",{"_index":745,"title":{"classes/RegisterEventHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["registerhandler",{"_index":737,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{}}}],["rejected",{"_index":3784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":1519,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":928,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["remove",{"_index":2881,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@req",{"_index":3511,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":3628,"title":{},"body":{"injectables/UserService.html":{}}}],["remove(requestuser",{"_index":3461,"title":{},"body":{"controllers/UserController.html":{}}}],["removed",{"_index":2889,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtoken",{"_index":3609,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":3630,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":2866,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["removerefreshtokencommand(userid",{"_index":3645,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommandhandler",{"_index":2871,"title":{"classes/RemoveRefreshTokenCommandHandler.html":{}},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["removerefreshtokenevent",{"_index":2877,"title":{"classes/RemoveRefreshTokenEvent.html":{}},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtokeneventhandler",{"_index":2884,"title":{"classes/RemoveRefreshTokenEventHandler.html":{}},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["removeuser",{"_index":497,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["removeuser(userid",{"_index":528,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["repository",{"_index":499,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["req",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["req.baseurl",{"_index":1780,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":1784,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":1782,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":2895,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":2899,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":1794,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":1779,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req?.headers['user",{"_index":2900,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["request",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"miscellaneous/variables.html":{}}}],["request.exception.ts",{"_index":3270,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.exception.ts:3",{"_index":3271,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.res",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.res.setheader('set",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.url",{"_index":1761,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["request.user",{"_index":708,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.headers?.authorization?.split",{"_index":2267,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["requestloggingmiddleware",{"_index":347,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["requestuser",{"_index":618,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"interfaces/RequestUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requestuser.user",{"_index":2649,"title":{},"body":{"controllers/ProfileController.html":{}}}],["required",{"_index":2320,"title":{},"body":{"classes/MailRequiredException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["required.exception",{"_index":3642,"title":{},"body":{"injectables/UserService.html":{}}}],["required.exception.ts",{"_index":2318,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["required.exception.ts:3",{"_index":2319,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["res",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":1788,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":1790,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":1786,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":312,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"todo.html":{}}}],["response.send(user",{"_index":697,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(204",{"_index":704,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":702,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus).json",{"_index":1758,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["response.ts",{"_index":2520,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:1",{"_index":2521,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:10",{"_index":2523,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:6",{"_index":2524,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:7",{"_index":2525,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:8",{"_index":2522,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["response.ts:9",{"_index":2526,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["responsebody",{"_index":1048,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":1049,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":350,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["rest",{"_index":3821,"title":{},"body":{"index.html":{}}}],["restore",{"_index":2917,"title":{},"body":{"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{}}}],["restore(socialnetwork.id",{"_index":2941,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["restored",{"_index":2920,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["restoreoccupation",{"_index":2405,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["restoreoccupation(@param('id",{"_index":2467,"title":{},"body":{"controllers/OccupationController.html":{}}}],["restoreoccupation(occupationid",{"_index":2424,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["restoreoccupationcommand",{"_index":2555,"title":{"classes/RestoreOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{}}}],["restoreoccupationcommandhandler",{"_index":2499,"title":{"classes/RestoreOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/RestoreOccupationCommandHandler.html":{}}}],["restoreoccupationevent",{"_index":2912,"title":{"classes/RestoreOccupationEvent.html":{}},"body":{"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{}}}],["restoreoccupationeventhandler",{"_index":2508,"title":{"classes/RestoreOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/RestoreOccupationEventHandler.html":{}}}],["restoreprofile",{"_index":2595,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["restoreprofile(@param('id",{"_index":2670,"title":{},"body":{"controllers/ProfileController.html":{}}}],["restoreprofile(id",{"_index":2753,"title":{},"body":{"injectables/ProfileService.html":{}}}],["restoreprofile(profileid",{"_index":2624,"title":{},"body":{"controllers/ProfileController.html":{}}}],["restoreprofilecommand",{"_index":2774,"title":{"classes/RestoreProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{}}}],["restoreprofilecommandhandler",{"_index":2726,"title":{"classes/RestoreProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/RestoreProfileCommandHandler.html":{}}}],["restoreprofileevent",{"_index":2924,"title":{"classes/RestoreProfileEvent.html":{}},"body":{"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{}}}],["restoreprofileeventhandler",{"_index":2727,"title":{"classes/RestoreProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/RestoreProfileEventHandler.html":{}}}],["restoresocialnetwork",{"_index":3051,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["restoresocialnetwork(@param('id",{"_index":3087,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["restoresocialnetwork(socialnetworkid",{"_index":3064,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["restoresocialnetworkcommand",{"_index":2935,"title":{"classes/RestoreSocialNetworkCommand.html":{}},"body":{"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"injectables/SocialNetworkService.html":{}}}],["restoresocialnetworkcommandhandler",{"_index":2937,"title":{"classes/RestoreSocialNetworkCommandHandler.html":{}},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["restoresocialnetworkevent",{"_index":2939,"title":{"classes/RestoreSocialNetworkEvent.html":{}},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{}}}],["restoresocialnetworkevent(command.id",{"_index":2942,"title":{},"body":{"classes/RestoreSocialNetworkCommandHandler.html":{}}}],["restoresocialnetworkeventhandler",{"_index":2944,"title":{"classes/RestoreSocialNetworkEventHandler.html":{}},"body":{"classes/RestoreSocialNetworkEventHandler.html":{},"modules/SocialNetworkModule.html":{}}}],["restoreuser",{"_index":3432,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreuser(@body",{"_index":3492,"title":{},"body":{"controllers/UserController.html":{}}}],["restoreuser(userid",{"_index":3464,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreusercommand",{"_index":2947,"title":{"classes/RestoreUserCommand.html":{}},"body":{"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["restoreusercommandhandler",{"_index":2949,"title":{"classes/RestoreUserCommandHandler.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["restoreuserevent",{"_index":2951,"title":{"classes/RestoreUserEvent.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{}}}],["restoreuserevent(command.id",{"_index":2954,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["restoreusereventhandler",{"_index":2956,"title":{"classes/RestoreUserEventHandler.html":{}},"body":{"classes/RestoreUserEventHandler.html":{}}}],["results",{"_index":87,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":144,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":2019,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{},"entities/GroupMembershipEntity.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.command",{"_index":3407,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["role.command.ts",{"_index":3403,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:4",{"_index":3405,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:5",{"_index":3404,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.enum",{"_index":135,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["role.enum.ts",{"_index":3748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["role.event",{"_index":3409,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.event.ts",{"_index":3414,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:4",{"_index":3417,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:5",{"_index":3416,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:6",{"_index":3418,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["rolecompanyemployeeenum",{"_index":955,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":964,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":2074,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["rolegroupmembershipenum.member",{"_index":2078,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roleguard",{"_index":131,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["roleguardmixin",{"_index":3897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleprofile",{"_index":1268,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["roleprofileenum",{"_index":1271,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{},"miscellaneous/enumerations.html":{}}}],["roleprofileenum.classic",{"_index":2705,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["roles",{"_index":602,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/ListRolesDto.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.dto",{"_index":3482,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.dto.ts",{"_index":2278,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:3",{"_index":2279,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:8",{"_index":2280,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.roles",{"_index":3507,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.some(role",{"_index":3902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":1050,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["routes",{"_index":3841,"title":{},"body":{"index.html":{}}}],["rss",{"_index":2120,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":3836,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":2366,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1570,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"dependencies.html":{}}}],["same",{"_index":2969,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["samepasswordexception",{"_index":2966,"title":{"classes/SamePasswordException.html":{}},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["save(newoccupationentity",{"_index":1181,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["save(newsocialnetworkentity",{"_index":1320,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["saved",{"_index":2699,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":2676,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedprofile",{"_index":1262,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["saveduser",{"_index":1416,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":1418,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.mail",{"_index":1420,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.referralcode",{"_index":1423,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.roles",{"_index":1421,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":1419,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["schema",{"_index":3843,"title":{},"body":{"index.html":{}}}],["screensize",{"_index":1051,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["secret",{"_index":750,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":2269,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":912,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1960,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["send",{"_index":2985,"title":{},"body":{"classes/SendMailEvent.html":{},"todo.html":{}}}],["sendmail",{"_index":253,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmail(@body",{"_index":264,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["sendmail(maildto",{"_index":254,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmailcommand",{"_index":282,"title":{"classes/SendMailCommand.html":{}},"body":{"injectables/ApiMailService.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailcommandhandler",{"_index":271,"title":{"classes/SendMailCommandHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailevent",{"_index":2975,"title":{"classes/SendMailEvent.html":{}},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{}}}],["sendmaileventhandler",{"_index":273,"title":{"classes/SendMailEventHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailEventHandler.html":{}}}],["sent",{"_index":2989,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["serialize",{"_index":3858,"title":{},"body":{"todo.html":{}}}],["serializing",{"_index":3860,"title":{},"body":{"todo.html":{}}}],["service",{"_index":1712,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":846,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{}}}],["setcurrentrefreshtoken",{"_index":3610,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":3633,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":2991,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":3646,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommandhandler",{"_index":2994,"title":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["setcurrentrefreshtokenevent",{"_index":2999,"title":{"classes/SetCurrentRefreshTokenEvent.html":{}},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["setcurrentrefreshtokeneventhandler",{"_index":3001,"title":{"classes/SetCurrentRefreshTokenEventHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["share",{"_index":910,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["shift",{"_index":3019,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["shifted",{"_index":3025,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileowner",{"_index":2737,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileowner(shiftprofileownerrequest",{"_index":2755,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownercommand",{"_index":2769,"title":{"classes/ShiftProfileOwnerCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownercommandhandler",{"_index":2714,"title":{"classes/ShiftProfileOwnerCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownerevent",{"_index":3014,"title":{"classes/ShiftProfileOwnerEvent.html":{}},"body":{"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownereventhandler",{"_index":2721,"title":{"classes/ShiftProfileOwnerEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownerrequest",{"_index":2756,"title":{"classes/ShiftProfileOwnerRequest.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerRequest.html":{}}}],["shiftprofileownerrequest.profileid",{"_index":2787,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownerrequest.userid",{"_index":2788,"title":{},"body":{"injectables/ProfileService.html":{}}}],["signin",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":3031,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/TransferProfileToUserCommand.html":{}}}],["signoptions",{"_index":752,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":632,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{}}}],["signupdto.mail",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["siret",{"_index":974,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":2896,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":2897,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":924,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"controllers/SocialNetworkController.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"changelog.html":{}}}],["social_network",{"_index":585,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":831,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":832,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["socialnetwork.cards",{"_index":889,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.foreach(socialnetwork",{"_index":1314,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["socialnetwork.length",{"_index":1313,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["socialnetwork.name",{"_index":1315,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["socialnetworkcontroller",{"_index":3044,"title":{"controllers/SocialNetworkController.html":{}},"body":{"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{}}}],["socialnetworkdto",{"_index":1853,"title":{"classes/SocialNetworkDto.html":{}},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/SocialNetworkDto.html":{},"injectables/SocialNetworkService.html":{}}}],["socialnetworkdto(socialnetwork",{"_index":1859,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["socialnetworkentity",{"_index":479,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["socialnetworkid",{"_index":3057,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["socialnetworkmodule",{"_index":325,"title":{"modules/SocialNetworkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SocialNetworkModule.html":{},"modules.html":{},"overview.html":{}}}],["socialnetworkrepository",{"_index":515,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["socialnetworkrequest",{"_index":3143,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.color",{"_index":3160,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.icon",{"_index":3159,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.name",{"_index":3157,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkrequest.url",{"_index":3158,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkresponse",{"_index":3072,"title":{"classes/SocialNetworkResponse.html":{}},"body":{"controllers/SocialNetworkController.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{}}}],["socialnetworkresponse(socialnetworkdto",{"_index":3155,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworks",{"_index":1944,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["socialnetworks.map",{"_index":1945,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["socialnetworks.map(socialnetwork",{"_index":1858,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["socialnetworksdto.map(socialnetworkdto",{"_index":3154,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["socialnetworkservice",{"_index":3069,"title":{"injectables/SocialNetworkService.html":{}},"body":{"controllers/SocialNetworkController.html":{},"modules/SocialNetworkModule.html":{},"injectables/SocialNetworkService.html":{},"overview.html":{}}}],["socketid",{"_index":2235,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["soft",{"_index":3169,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdelete(socialnetwork.id",{"_index":3189,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeleteoccupation",{"_index":2406,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["softdeleteoccupation(@param('id",{"_index":2464,"title":{},"body":{"controllers/OccupationController.html":{}}}],["softdeleteoccupation(occupationid",{"_index":2427,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["softdeleteoccupationcommand",{"_index":2553,"title":{"classes/SoftDeleteOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["softdeleteoccupationcommandhandler",{"_index":2501,"title":{"classes/SoftDeleteOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["softdeleteoccupationevent",{"_index":3164,"title":{"classes/SoftDeleteOccupationEvent.html":{}},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{}}}],["softdeleteoccupationeventhandler",{"_index":2504,"title":{"classes/SoftDeleteOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/SoftDeleteOccupationEventHandler.html":{}}}],["softdeleteprofile",{"_index":2738,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofile(id",{"_index":2758,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofilecommand",{"_index":2767,"title":{"classes/SoftDeleteProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofilecommandhandler",{"_index":2724,"title":{"classes/SoftDeleteProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofileevent",{"_index":3175,"title":{"classes/SoftDeleteProfileEvent.html":{}},"body":{"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeleteprofileeventhandler",{"_index":2720,"title":{"classes/SoftDeleteProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeletesocialnetworkcommand",{"_index":3184,"title":{"classes/SoftDeleteSocialNetworkCommand.html":{}},"body":{"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeletesocialnetworkcommandhandler",{"_index":3125,"title":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeletesocialnetworkevent",{"_index":3187,"title":{"classes/SoftDeleteSocialNetworkEvent.html":{}},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["softdeletesocialnetworkevent(command.id",{"_index":3190,"title":{},"body":{"classes/SoftDeleteSocialNetworkCommandHandler.html":{}}}],["softdeletesocialnetworkeventhandler",{"_index":3122,"title":{"classes/SoftDeleteSocialNetworkEventHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{}}}],["softdeleteusercommand",{"_index":3194,"title":{"classes/SoftDeleteUserCommand.html":{}},"body":{"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["softdeleteusercommand(id",{"_index":3651,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommand(userid",{"_index":3658,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommandhandler",{"_index":3197,"title":{"classes/SoftDeleteUserCommandHandler.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["softdeleteuserevent",{"_index":3199,"title":{"classes/SoftDeleteUserEvent.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdeleteuserevent(command.userid",{"_index":3201,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["softdeleteusereventhandler",{"_index":3203,"title":{"classes/SoftDeleteUserEventHandler.html":{}},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/EntityCreationException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"modules/OccupationModule.html":{},"classes/OccupationNotFoundException.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/QueryErrorException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["space",{"_index":2130,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../api",{"_index":3729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../errorenum.ts",{"_index":3731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":3869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":3810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":3732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres",{"_index":3734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":3736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.guard.ts",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status",{"_index":3739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":3744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":3746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":3747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../verbose",{"_index":3749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":3750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":92,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:24",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:41",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:60",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:69",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:75",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:89",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":726,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:14",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:17",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:23",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:31",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:43",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:56",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:60",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":2827,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":2828,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:2",{"_index":2829,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/event",{"_index":2834,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["src/api/auth/cqrs/event/register.event.ts",{"_index":2831,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:1",{"_index":2832,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:2",{"_index":2833,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts",{"_index":2843,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:103",{"_index":2853,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:107",{"_index":2851,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:113",{"_index":2846,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:123",{"_index":2847,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:131",{"_index":2848,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:19",{"_index":2844,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:29",{"_index":2845,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:87",{"_index":2850,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:93",{"_index":2849,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:99",{"_index":2852,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":3771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":3032,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":2281,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["src/api/auth/guards/jwt",{"_index":2248,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["src/api/auth/guards/role.guard.ts",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/auth/interface/request",{"_index":2904,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["src/api/auth/interface/token",{"_index":3260,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["src/api/auth/strategy/jwt",{"_index":2253,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":2272,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:11",{"_index":2273,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:26",{"_index":2275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":2283,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/api/entities",{"_index":6,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":1479,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["src/api/occupation/cqrs/command/create",{"_index":1143,"title":{},"body":{"classes/CreateOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/delete",{"_index":1599,"title":{},"body":{"classes/DeleteOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/restore",{"_index":2909,"title":{},"body":{"classes/RestoreOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/soft",{"_index":3162,"title":{},"body":{"classes/SoftDeleteOccupationCommand.html":{}}}],["src/api/occupation/cqrs/command/update",{"_index":3273,"title":{},"body":{"classes/UpdateOccupationCommand.html":{}}}],["src/api/occupation/cqrs/event/create",{"_index":1194,"title":{},"body":{"classes/CreateOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/delete",{"_index":1610,"title":{},"body":{"classes/DeleteOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/restore",{"_index":2916,"title":{},"body":{"classes/RestoreOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/soft",{"_index":3170,"title":{},"body":{"classes/SoftDeleteOccupationEvent.html":{}}}],["src/api/occupation/cqrs/event/update",{"_index":3287,"title":{},"body":{"classes/UpdateOccupationEvent.html":{}}}],["src/api/occupation/cqrs/handler/command/create",{"_index":1151,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/delete",{"_index":1603,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/restore",{"_index":2910,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/soft",{"_index":3163,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/command/update",{"_index":3275,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/create",{"_index":1203,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/delete",{"_index":1613,"title":{},"body":{"classes/DeleteOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/restore",{"_index":2918,"title":{},"body":{"classes/RestoreOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/soft",{"_index":3171,"title":{},"body":{"classes/SoftDeleteOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/event/update",{"_index":3288,"title":{},"body":{"classes/UpdateOccupationEventHandler.html":{}}}],["src/api/occupation/cqrs/handler/query/get",{"_index":1827,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["src/api/occupation/cqrs/query/get",{"_index":1821,"title":{},"body":{"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaQuery.html":{}}}],["src/api/occupation/domain/dto/create",{"_index":1190,"title":{},"body":{"classes/CreateOccupationDto.html":{}}}],["src/api/occupation/domain/dto/get",{"_index":1871,"title":{},"body":{"classes/GetOccupationWithCriteriaDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts",{"_index":2469,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:1",{"_index":2470,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:10",{"_index":2472,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:6",{"_index":2473,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:7",{"_index":2474,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:8",{"_index":2471,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/occupation.dto.ts:9",{"_index":2475,"title":{},"body":{"classes/OccupationDto.html":{}}}],["src/api/occupation/domain/dto/update",{"_index":3285,"title":{},"body":{"classes/UpdateOccupationDto.html":{}}}],["src/api/occupation/domain/entities/occupation.entity",{"_index":474,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts",{"_index":2476,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:29",{"_index":2485,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:33",{"_index":2487,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:40",{"_index":2489,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:43",{"_index":2482,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:46",{"_index":2480,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:53",{"_index":2483,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:56",{"_index":2490,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/domain/entities/occupation.entity.ts:59",{"_index":2484,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["src/api/occupation/occupation.controller.ts",{"_index":2399,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:18",{"_index":2415,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:27",{"_index":2418,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:36",{"_index":2422,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:47",{"_index":2410,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:56",{"_index":2433,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:68",{"_index":2413,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:77",{"_index":2430,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.controller.ts:86",{"_index":2426,"title":{},"body":{"controllers/OccupationController.html":{}}}],["src/api/occupation/occupation.module.ts",{"_index":2497,"title":{},"body":{"modules/OccupationModule.html":{}}}],["src/api/occupation/occupation.service.ts",{"_index":2527,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:108",{"_index":2534,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:122",{"_index":2540,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:136",{"_index":2539,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:25",{"_index":2530,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:28",{"_index":2535,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:40",{"_index":2536,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:53",{"_index":2538,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:74",{"_index":2532,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/occupation.service.ts:90",{"_index":2542,"title":{},"body":{"injectables/OccupationService.html":{}}}],["src/api/occupation/web/request/create",{"_index":1218,"title":{},"body":{"classes/CreateOccupationRequest.html":{}}}],["src/api/occupation/web/request/get",{"_index":1897,"title":{},"body":{"classes/GetOccupationWithCriteriaRequest.html":{}}}],["src/api/occupation/web/request/update",{"_index":3291,"title":{},"body":{"classes/UpdateOccupationRequest.html":{}}}],["src/api/occupation/web/response/occupation",{"_index":2519,"title":{},"body":{"classes/OccupationResponse.html":{}}}],["src/api/profile/cqrs/command/create",{"_index":1223,"title":{},"body":{"classes/CreateProfileCommand.html":{}}}],["src/api/profile/cqrs/command/delete",{"_index":1616,"title":{},"body":{"classes/DeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/restore",{"_index":2921,"title":{},"body":{"classes/RestoreProfileCommand.html":{}}}],["src/api/profile/cqrs/command/shift",{"_index":3005,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["src/api/profile/cqrs/command/soft",{"_index":3173,"title":{},"body":{"classes/SoftDeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/transfer",{"_index":3263,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["src/api/profile/cqrs/command/update",{"_index":3292,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["src/api/profile/cqrs/event/create",{"_index":1274,"title":{},"body":{"classes/CreateProfileEvent.html":{}}}],["src/api/profile/cqrs/event/delete",{"_index":1626,"title":{},"body":{"classes/DeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/restore",{"_index":2928,"title":{},"body":{"classes/RestoreProfileEvent.html":{}}}],["src/api/profile/cqrs/event/shift",{"_index":3015,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["src/api/profile/cqrs/event/soft",{"_index":3179,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/update",{"_index":3304,"title":{},"body":{"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["src/api/profile/cqrs/handler/command/create",{"_index":1232,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/delete",{"_index":1619,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/restore",{"_index":2923,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/shift",{"_index":3009,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/soft",{"_index":3174,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/update",{"_index":3294,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/event/create",{"_index":1280,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/delete",{"_index":1628,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/restore",{"_index":2932,"title":{},"body":{"classes/RestoreProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/shift",{"_index":3022,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/soft",{"_index":3182,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/update",{"_index":3305,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/query/get",{"_index":1841,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["src/api/profile/cqrs/query/get",{"_index":1838,"title":{},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["src/api/profile/domain/dto/create",{"_index":1266,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["src/api/profile/domain/dto/get",{"_index":1910,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["src/api/profile/domain/dto/id",{"_index":2142,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["src/api/profile/domain/dto/update",{"_index":3303,"title":{},"body":{"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["src/api/profile/domain/entities/profile.entity",{"_index":478,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts",{"_index":2672,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:100",{"_index":2677,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:106",{"_index":2685,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:112",{"_index":2693,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:118",{"_index":2687,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:125",{"_index":2681,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:128",{"_index":2701,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:131",{"_index":2682,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:31",{"_index":2683,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:34",{"_index":2704,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:40",{"_index":2697,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:47",{"_index":2703,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:53",{"_index":2695,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:68",{"_index":2700,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:82",{"_index":2691,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:88",{"_index":2680,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:94",{"_index":2696,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/enum/role",{"_index":3775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/profile/domain/request/create",{"_index":1285,"title":{},"body":{"classes/CreateProfileRequest.html":{}}}],["src/api/profile/domain/request/get",{"_index":1926,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["src/api/profile/domain/request/shift",{"_index":3027,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["src/api/profile/domain/request/update",{"_index":3313,"title":{},"body":{"classes/UpdateProfileRequest.html":{}}}],["src/api/profile/domain/response/profile.response.ts",{"_index":2728,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:2",{"_index":2730,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:3",{"_index":2731,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:4",{"_index":2732,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:6",{"_index":2729,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/profile.controller.ts",{"_index":2586,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:108",{"_index":2600,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:117",{"_index":2607,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:126",{"_index":2604,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:135",{"_index":2626,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:40",{"_index":2611,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:49",{"_index":2617,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:59",{"_index":2621,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:68",{"_index":2615,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:78",{"_index":2623,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:89",{"_index":2633,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:98",{"_index":2630,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.module.ts",{"_index":2712,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/api/profile/profile.service.ts",{"_index":2733,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:102",{"_index":2761,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:142",{"_index":2757,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:158",{"_index":2747,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:171",{"_index":2749,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:179",{"_index":2751,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:197",{"_index":2748,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:210",{"_index":2745,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:231",{"_index":2754,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:25",{"_index":2739,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:28",{"_index":2741,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:48",{"_index":2743,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:61",{"_index":2759,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:74",{"_index":2763,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/social",{"_index":480,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/GetAllSocialNetworkQuery.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"modules/SocialNetworkModule.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["src/api/user/cqrs/command/create",{"_index":1346,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":1647,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":2867,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/restore",{"_index":2948,"title":{},"body":{"classes/RestoreUserCommand.html":{}}}],["src/api/user/cqrs/command/set",{"_index":2992,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/soft",{"_index":3195,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/update",{"_index":3327,"title":{},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserRoleCommand.html":{}}}],["src/api/user/cqrs/event/create",{"_index":1456,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["src/api/user/cqrs/event/delete",{"_index":1659,"title":{},"body":{"classes/DeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/login",{"_index":2299,"title":{},"body":{"classes/LoginOfUserEvent.html":{}}}],["src/api/user/cqrs/event/remove",{"_index":2878,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/restore",{"_index":2955,"title":{},"body":{"classes/RestoreUserEvent.html":{}}}],["src/api/user/cqrs/event/set",{"_index":3000,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/soft",{"_index":3202,"title":{},"body":{"classes/SoftDeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/update",{"_index":3388,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":1352,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/delete",{"_index":1650,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/remove",{"_index":2872,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/restore",{"_index":2950,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/set",{"_index":2995,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/soft",{"_index":3198,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/update",{"_index":3330,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":1463,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/delete",{"_index":1663,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/login",{"_index":2301,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/remove",{"_index":2885,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/restore",{"_index":2957,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/set",{"_index":3002,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/soft",{"_index":3204,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/update",{"_index":3395,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["src/api/user/cqrs/handler/query/get",{"_index":1955,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["src/api/user/cqrs/query/get",{"_index":1949,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["src/api/user/domain/dto/create",{"_index":420,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{}}}],["src/api/user/domain/dto/generate",{"_index":1798,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["src/api/user/domain/dto/get",{"_index":2014,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["src/api/user/domain/dto/list",{"_index":2277,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["src/api/user/domain/dto/update",{"_index":3382,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{}}}],["src/api/user/domain/dto/user",{"_index":423,"title":{},"body":{"controllers/AppTestE2eController.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{}}}],["src/api/user/domain/entities/user.entity",{"_index":422,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":3519,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:101",{"_index":3542,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:106",{"_index":3526,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:112",{"_index":3527,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:115",{"_index":3551,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:118",{"_index":3530,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:34",{"_index":3531,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:37",{"_index":3540,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:41",{"_index":3555,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:49",{"_index":3543,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:57",{"_index":3532,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:64",{"_index":3529,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:67",{"_index":3539,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:70",{"_index":3545,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:77",{"_index":3536,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:80",{"_index":3548,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:87",{"_index":3544,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:90",{"_index":3550,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:93",{"_index":3547,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:96",{"_index":3553,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/enum/user",{"_index":3795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/create",{"_index":1468,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["src/api/user/domain/response/user",{"_index":3563,"title":{},"body":{"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":3599,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:10",{"_index":3601,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:11",{"_index":3603,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:12",{"_index":3604,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:13",{"_index":3602,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":3600,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.module.ts",{"_index":3591,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":3605,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:111",{"_index":3632,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:120",{"_index":3620,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:124",{"_index":3625,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:128",{"_index":3639,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:136",{"_index":3637,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:150",{"_index":3615,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:155",{"_index":3618,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:160",{"_index":3622,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:164",{"_index":3621,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:33",{"_index":3612,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:36",{"_index":3613,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:40",{"_index":3627,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:44",{"_index":3631,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:48",{"_index":3634,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:52",{"_index":3616,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:56",{"_index":3619,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:64",{"_index":3635,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:77",{"_index":3629,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:86",{"_index":3623,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/web/user.controller.ts",{"_index":3424,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:112",{"_index":3450,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:129",{"_index":3460,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:145",{"_index":3470,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:164",{"_index":3478,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:179",{"_index":3472,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:197",{"_index":3475,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:216",{"_index":3463,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:232",{"_index":3442,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:248",{"_index":3454,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:36",{"_index":3438,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:51",{"_index":3458,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:67",{"_index":3467,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:81",{"_index":3444,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:96",{"_index":3447,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app.controller.ts",{"_index":285,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:31",{"_index":294,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":444,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:54",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":382,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":383,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":3811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":1762,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["src/middleware/request",{"_index":2890,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["src/middleware/response",{"_index":2906,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["src/util/config/database.configuration.ts",{"_index":1493,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/database.configuration.ts:31",{"_index":1495,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":936,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateNameException.html":{},"classes/DuplicateUsernameException.html":{},"classes/EntityCreationException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/NotTheOwnerException.html":{},"classes/OccupationNotFoundException.html":{},"classes/QueryErrorException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":1718,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["src/util/exception/errorenum.ts",{"_index":3755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":1743,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["src/util/global/extend",{"_index":3242,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["src/util/pipe/is",{"_index":418,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["ssl",{"_index":1517,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":1683,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":1669,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":3661,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":3837,"title":{},"body":{"index.html":{}}}],["state",{"_index":19,"title":{},"body":{"entities/AddressEntity.html":{}}}],["static",{"_index":2295,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":313,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"classes/CommandErrorException.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/EntityCreationException.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"controllers/ProfileController.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1759,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":2215,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":2216,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":3741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":3239,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":3240,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":2126,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["strategy",{"_index":2261,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":739,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":741,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":730,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":20,"title":{},"body":{"entities/AddressEntity.html":{}}}],["string",{"_index":26,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"todo.html":{}}}],["strip",{"_index":1710,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":587,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":3211,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":3229,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":483,"title":{"entities/StripEventEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{}}}],["stripeventrepository",{"_index":516,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscription",{"_index":589,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/InvoicesEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":1692,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["subscription.enum.ts",{"_index":3743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":3549,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":486,"title":{"entities/SubscriptionEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscriptionentity.discountcodes",{"_index":1694,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":1685,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":2223,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":2203,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":2582,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptionrepository",{"_index":517,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscriptions",{"_index":1670,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":311,"title":{},"body":{"controllers/AppController.html":{}}}],["summary",{"_index":141,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["super",{"_index":942,"title":{},"body":{"classes/CommandErrorException.html":{},"classes/EntityCreationException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["super('duplicate",{"_index":1701,"title":{},"body":{"classes/DuplicateNameException.html":{}}}],["super('invalid",{"_index":2146,"title":{},"body":{"classes/InvalidIdException.html":{},"classes/InvalidUsernameException.html":{}}}],["super('mail",{"_index":1697,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{},"classes/MailRequiredException.html":{}}}],["super('new",{"_index":2968,"title":{},"body":{"classes/SamePasswordException.html":{}}}],["super('not",{"_index":2375,"title":{},"body":{"classes/NotTheOwnerException.html":{}}}],["super('occupation",{"_index":2518,"title":{},"body":{"classes/OccupationNotFoundException.html":{}}}],["super('query",{"_index":2793,"title":{},"body":{"classes/QueryErrorException.html":{}}}],["super('unauthorized",{"_index":3272,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":3598,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":1705,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":2369,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super.canactivate(context",{"_index":3900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super_admin",{"_index":3796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":3832,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":2219,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":3846,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":3847,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3721,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1522,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["tax_rate",{"_index":2205,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":2177,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["tcp",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":2095,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":387,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"changelog.html":{}}}],["test/test",{"_index":385,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["testapi",{"_index":3838,"title":{},"body":{"index.html":{}}}],["text",{"_index":1062,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["text/html",{"_index":309,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["then((mailslandingpagelist",{"_index":1818,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["then((occupationdto",{"_index":2562,"title":{},"body":{"injectables/OccupationService.html":{}}}],["then((occupationsdto",{"_index":2565,"title":{},"body":{"injectables/OccupationService.html":{}}}],["then((socialnetworkdto",{"_index":3156,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["then((socialnetworksdto",{"_index":3153,"title":{},"body":{"injectables/SocialNetworkService.html":{}}}],["then(async",{"_index":1639,"title":{},"body":{"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["then(occupation",{"_index":1869,"title":{},"body":{"classes/GetOccupationByIdQueryHandler.html":{}}}],["then(occupationentity",{"_index":1182,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["then(occupations",{"_index":1831,"title":{},"body":{"classes/GetAllOccupationQueryHandler.html":{}}}],["then(profile",{"_index":1907,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["then(socialnetwork",{"_index":1932,"title":{},"body":{"classes/GetSocialNetworkByIdQueryHandler.html":{}}}],["then(socialnetworkentity",{"_index":1321,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["then(socialnetworks",{"_index":1857,"title":{},"body":{"classes/GetAllSocialNetworkQueryHandler.html":{}}}],["thibaud",{"_index":3815,"title":{},"body":{"index.html":{}}}],["things",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["this.addressrepository.query('delete",{"_index":594,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.api_name",{"_index":1107,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_type",{"_index":1112,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_version",{"_index":1109,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.apilandingpageservice.deletemail(mail",{"_index":148,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apilandingpageservice.getall",{"_index":145,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":1741,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apilogservice.createlogformethode",{"_index":1213,"title":{},"body":{"classes/CreateOccupationEventHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["this.apimailservice.sendmail(maildto",{"_index":265,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["this.appservice.cleardatabasetest",{"_index":426,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.createusertest(createuserdto",{"_index":429,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.getallusers",{"_index":435,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":315,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getuser(userid",{"_index":437,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.removeuser(useriddto.userid",{"_index":433,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.authenticationservice.login(login",{"_index":2293,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":703,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(request.user.id",{"_index":711,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromauthtoken(data",{"_index":714,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardrepository.query('delete",{"_index":555,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.client.emit('create",{"_index":1116,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["this.client.emit('send",{"_index":2979,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["this.client.send",{"_index":1573,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["this.commandbus.execute",{"_index":223,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{},"injectables/UserService.html":{}}}],["this.commandbus.execute(new",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.companyemployeerepository.query('delete",{"_index":558,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.companyrepository.query('delete",{"_index":557,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.connectedcardrepository.query('delete",{"_index":560,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.conversationrepository.query('delete",{"_index":562,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.createdat",{"_index":3256,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":2091,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":3259,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.discountcoderepository.query('delete",{"_index":564,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":2131,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.eventbus.publish",{"_index":1183,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.eventbus.publish(new",{"_index":1322,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.generatecode(number(process.env.length_referral_code",{"_index":1432,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.generatepassword",{"_index":3654,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateuniquereferralcode",{"_index":1414,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.getuserbyreferralcode(code",{"_index":1434,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.groupmembershiprepository.query('delete",{"_index":568,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.grouprepository.query('delete",{"_index":566,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.healthcheckservice.check",{"_index":2111,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.invoicesrepository.query('delete",{"_index":570,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.isduplicatedemail(command.createuserdto.mail",{"_index":1407,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedemail(command.mail",{"_index":2857,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicatedemail(command.user.mail",{"_index":3347,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.createuserdto.username",{"_index":1402,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.user.username",{"_index":3345,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.username",{"_index":2856,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicateofdeletedmail(command.user.mail",{"_index":3349,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicateofdeletedusername(command.user.username",{"_index":3348,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isvalidemail(command.createuserdto.mail",{"_index":1410,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidemail(command.mail",{"_index":2860,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.createuserdto.password",{"_index":1408,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidpassword(command.password",{"_index":2858,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.updateusercredentialdto.newpassword",{"_index":3379,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.isvalidusername(command.createuserdto.username",{"_index":1411,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidusername(command.username",{"_index":2862,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.joinedconversationrepository.query('delete",{"_index":572,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.jwtservice.sign(payload",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(authenticationtoken",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger_console.log('new",{"_index":2842,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["this.login",{"_index":3575,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.mediarepository.query('delete",{"_index":574,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":2116,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":2122,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.messagerepository.query('delete",{"_index":576,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.notificationrepository.query('delete",{"_index":590,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository",{"_index":1180,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["this.occupationrepository.createquerybuilder('occupation",{"_index":1888,"title":{},"body":{"classes/GetOccupationWithCriteriaQueryHandler.html":{}}}],["this.occupationrepository.delete(occupation.id).catch",{"_index":1607,"title":{},"body":{"classes/DeleteOccupationCommandHandler.html":{}}}],["this.occupationrepository.find",{"_index":1168,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["this.occupationrepository.query('delete",{"_index":578,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository.restore(command.occupationid",{"_index":2915,"title":{},"body":{"classes/RestoreOccupationCommandHandler.html":{}}}],["this.occupationrepository.softdelete(occupation.id).catch",{"_index":3168,"title":{},"body":{"classes/SoftDeleteOccupationCommandHandler.html":{}}}],["this.occupationservice.createoccupation(createoccupationrequest).catch(error",{"_index":2455,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.deleteoccupation(occupationid).catch(error",{"_index":2462,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getalloccupation().catch(error",{"_index":2448,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getoccupationbyid(occupationid).catch(error",{"_index":2451,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.getoccupationwithcriteria(getoccupationswithcriteriarequest).catch(error",{"_index":2452,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.restoreoccupation(occupationid).catch(error",{"_index":2468,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.softdeleteoccupation(occupationid).catch(error",{"_index":2465,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.occupationservice.updateoccupation(occupationid",{"_index":2458,"title":{},"body":{"controllers/OccupationController.html":{}}}],["this.password",{"_index":3576,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.planrepository.query('delete",{"_index":580,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository",{"_index":1622,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profilerepository.createquerybuilder('profile",{"_index":1917,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["this.profilerepository.find",{"_index":1845,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["this.profilerepository.query('delete",{"_index":582,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository.remove(profile",{"_index":1625,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["this.profilerepository.restore(command.profileid",{"_index":2927,"title":{},"body":{"classes/RestoreProfileCommandHandler.html":{}}}],["this.profilerepository.save(newprofile).then(profile",{"_index":1263,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["this.profilerepository.save(profile",{"_index":3013,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["this.profilerepository.softdelete",{"_index":3177,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["this.profilerepository.update(profile.id",{"_index":3299,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profiles",{"_index":3560,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.profiles.push(profile",{"_index":3561,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.profileservice.createprofile(profile).catch(error",{"_index":2665,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(profileid).catch(error",{"_index":2667,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(requestuser.user.id).catch(error",{"_index":2669,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getmyprofile(id",{"_index":2650,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(id).catch(error",{"_index":2656,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(userid).catch(error",{"_index":2654,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofiles().catch(error",{"_index":2647,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofileswithcriteria(getprofileswithcriteriarequest).catch(error",{"_index":2657,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.restoreprofile(profileid).catch(error",{"_index":2671,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(id",{"_index":2663,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(profileid",{"_index":2660,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.querybus",{"_index":2560,"title":{},"body":{"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/SocialNetworkService.html":{}}}],["this.querybus.execute",{"_index":2789,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.querybus.execute(new",{"_index":225,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.referralcoderepository.query('delete",{"_index":592,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.regexvalidatepassword",{"_index":1396,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.regexvalidatepassword.test(password",{"_index":1439,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.socialnetworkrepository",{"_index":1319,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["this.socialnetworkrepository.createquerybuilder('socialnetwork",{"_index":1939,"title":{},"body":{"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{}}}],["this.socialnetworkrepository.find",{"_index":1312,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["this.socialnetworkrepository.query('delete",{"_index":584,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.socialnetworkservice",{"_index":3080,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.createsocialnetwork(createsocialnetworkrequest).catch(error",{"_index":3084,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.deletesocialnetwork(socialnetworkid).catch(error",{"_index":3086,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.getallsocialnetwork().catch(error",{"_index":3077,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.getsocialnetworkbyid(socialnetworkid).catch(error",{"_index":3079,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.socialnetworkservice.restoresocialnetwork(socialnetworkid).catch(error",{"_index":3088,"title":{},"body":{"controllers/SocialNetworkController.html":{}}}],["this.stripeventrepository.query('delete",{"_index":586,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.subscriptionrepository.query('delete",{"_index":588,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":2112,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":3258,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userlist",{"_index":3568,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository",{"_index":1247,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.createquerybuilder('user",{"_index":2034,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["this.userrepository.delete(command.userid",{"_index":1657,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["this.userrepository.find",{"_index":606,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.find().then(userlist",{"_index":2009,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["this.userrepository.find().then(users",{"_index":1435,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.findone",{"_index":605,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":1958,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.query('delete",{"_index":554,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.restore(command.id",{"_index":2953,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["this.userrepository.save",{"_index":595,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save(newuser",{"_index":1417,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.userrepository.softdelete",{"_index":604,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":2876,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.userrepository.update(verifyduplicatemailwithdeleted.id",{"_index":3355,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":3487,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteme(requestuser.user.id",{"_index":3515,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":3494,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findme(user.id",{"_index":3501,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":3497,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findwithcriteria(getuserwithcriteriadto",{"_index":3499,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.fulldelete(id",{"_index":3518,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generateuserfrommail(generateuserdto",{"_index":3490,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserifrefreshtokenmatches(refreshtoken",{"_index":2271,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":3512,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":701,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.restoreuser(userid.userid",{"_index":3493,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setcurrentrefreshtoken(refreshtokencookie.token",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.update(requestuser.user.id",{"_index":3508,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":3503,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(requestuser.user.id",{"_index":3509,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateroles(id",{"_index":3506,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":1104,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.verifypassword(command.updateusercredentialdto.password",{"_index":3380,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.verifypassword(query.plaintextpassword",{"_index":1996,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["thresholdpercent",{"_index":2132,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"entities/AddressEntity.html":{},"classes/ErrorExceptionFilter.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":3241,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["timestamps",{"_index":933,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["title",{"_index":2306,"title":{},"body":{"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{}}}],["todo",{"_index":3857,"title":{"todo.html":{}},"body":{}}],["token",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command",{"_index":2873,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command.ts",{"_index":2868,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:1",{"_index":2869,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":2870,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.event",{"_index":2886,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["token.event.ts",{"_index":2879,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:2",{"_index":2882,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:3",{"_index":2880,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:4",{"_index":2883,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.guard",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.guard.ts",{"_index":2252,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["token.strategy",{"_index":740,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":2254,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:12",{"_index":2256,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:25",{"_index":2258,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":779,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{}}}],["total_amount",{"_index":2208,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":2210,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":2178,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":2179,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":2370,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":2365,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts:3",{"_index":2367,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":833,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":927,"title":{},"body":{"entities/CardEntity.html":{}}}],["transferprofiletousercommand",{"_index":3262,"title":{"classes/TransferProfileToUserCommand.html":{}},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["transform",{"_index":2226,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":2227,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":3557,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":167,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["transport.tcp",{"_index":196,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["transports",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":3231,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":3234,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":3212,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":3213,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":38,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":3232,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":2198,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@isoptional()@isdatestring",{"_index":2805,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@isstring()@length(6",{"_index":2800,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@joincolumn",{"_index":1012,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@length(2",{"_index":2486,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["true})@maxlength(255",{"_index":841,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["trying",{"_index":1556,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":24,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateOccupationCommand.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateOccupationDto.html":{},"classes/CreateOccupationEvent.html":{},"classes/CreateOccupationEventHandler.html":{},"classes/CreateOccupationRequest.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateSocialNetworkEventHandler.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteOccupationCommand.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteOccupationEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteSocialNetworkCommand.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteSocialNetworkEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQuery.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaDto.html":{},"classes/GetOccupationWithCriteriaQuery.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetOccupationWithCriteriaRequest.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetSocialNetworkByIdQuery.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"controllers/OccupationController.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"injectables/OccupationService.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreOccupationCommand.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreOccupationEventHandler.html":{},"classes/RestoreProfileCommand.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreProfileEventHandler.html":{},"classes/RestoreSocialNetworkCommand.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreSocialNetworkEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"controllers/SocialNetworkController.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/SoftDeleteOccupationCommand.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteOccupationEventHandler.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteSocialNetworkCommand.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteSocialNetworkEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationDto.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationRequest.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateSocialNetworkRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1078,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":2294,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":2297,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":2298,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":2296,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":3867,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":834,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":929,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":76,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteSocialNetworkCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreOccupationCommandHandler.html":{},"classes/RestoreProfileCommandHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteSocialNetworkCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"todo.html":{}}}],["typeormhealthindicator",{"_index":2104,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":276,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":493,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":278,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1496,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":1497,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":2894,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/passport",{"_index":3706,"title":{},"body":{"dependencies.html":{}}}],["types/useragent",{"_index":3709,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":1773,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":1778,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":1776,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":3722,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":3268,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{}}}],["undefined",{"_index":293,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["undefined})@httpcode(201)@useguards(undefined",{"_index":2610,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@isemail",{"_index":855,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":895,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@useguards(undefined",{"_index":108,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["unique",{"_index":2060,"title":{},"body":{"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["uniqueviolation",{"_index":3772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":1750,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":3856,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":1583,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["unused",{"_index":1814,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["up.dto",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":3039,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:14",{"_index":3042,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":3043,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":3041,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":3115,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update(command.occupationid",{"_index":3283,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["update(socialnetwork.id",{"_index":3319,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["update(userid",{"_index":3468,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":3284,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateOccupationEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updated_at",{"_index":62,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":21,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"classes/OccupationDto.html":{},"entities/OccupationEntity.html":{},"classes/OccupationResponse.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["updatedatecolumn",{"_index":75,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":61,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["updatedfrom",{"_index":2020,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updatedoccupationentity",{"_index":3280,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["updatedto",{"_index":2021,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updateme",{"_index":3433,"title":{},"body":{"controllers/UserController.html":{}}}],["updateme(requestuser",{"_index":3471,"title":{},"body":{"controllers/UserController.html":{}}}],["updatemyprofile",{"_index":2596,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updatemyprofile(@req",{"_index":2662,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updatemyprofile(id",{"_index":2760,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatemyprofile(requestuser",{"_index":2627,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateoccupation",{"_index":2407,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["updateoccupation(occupationid",{"_index":2431,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["updateoccupationcommand",{"_index":2551,"title":{"classes/UpdateOccupationCommand.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["updateoccupationcommandhandler",{"_index":2506,"title":{"classes/UpdateOccupationCommandHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/UpdateOccupationCommandHandler.html":{}}}],["updateoccupationdto",{"_index":2549,"title":{"classes/UpdateOccupationDto.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationCommand.html":{},"classes/UpdateOccupationDto.html":{}}}],["updateoccupationevent",{"_index":3286,"title":{"classes/UpdateOccupationEvent.html":{}},"body":{"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["updateoccupationeventhandler",{"_index":2510,"title":{"classes/UpdateOccupationEventHandler.html":{}},"body":{"modules/OccupationModule.html":{},"classes/UpdateOccupationEventHandler.html":{}}}],["updateoccupationrequest",{"_index":2541,"title":{"classes/UpdateOccupationRequest.html":{}},"body":{"injectables/OccupationService.html":{},"classes/UpdateOccupationRequest.html":{}}}],["updateoccupationsprofilecommand",{"_index":2768,"title":{"classes/UpdateOccupationsProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofilecommandhandler",{"_index":2717,"title":{"classes/UpdateOccupationsProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofiledto",{"_index":3302,"title":{"classes/UpdateOccupationsProfileDto.html":{}},"body":{"classes/UpdateOccupationsProfileDto.html":{}}}],["updateoccupationsprofileevent",{"_index":3295,"title":{"classes/UpdateOccupationsProfileEvent.html":{}},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updateoccupationsprofileeventhandler",{"_index":2725,"title":{"classes/UpdateOccupationsProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updatepassword",{"_index":3434,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassword(requestuser",{"_index":3473,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(userid",{"_index":3636,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile",{"_index":2597,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updateprofile(@param('id",{"_index":2659,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(id",{"_index":2762,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofile(profileid",{"_index":2631,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofilecommand",{"_index":2766,"title":{"classes/UpdateProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["updateprofilecommandhandler",{"_index":2719,"title":{"classes/UpdateProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["updateprofiledto",{"_index":2783,"title":{"classes/UpdateProfileDto.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{}}}],["updateprofileevent",{"_index":3308,"title":{"classes/UpdateProfileEvent.html":{}},"body":{"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofileeventhandler",{"_index":2718,"title":{"classes/UpdateProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofilerequest",{"_index":2628,"title":{"classes/UpdateProfileRequest.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileRequest.html":{}}}],["updateprofilerequest.id",{"_index":2781,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.occupationsid",{"_index":2782,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.occupationsid.length",{"_index":2780,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.roleprofile",{"_index":2785,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.usernameprofile",{"_index":2784,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updaterole",{"_index":3435,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(@param('id",{"_index":3505,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(id",{"_index":3476,"title":{},"body":{"controllers/UserController.html":{}}}],["updateroles",{"_index":3611,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(userid",{"_index":3638,"title":{},"body":{"injectables/UserService.html":{}}}],["updatesocialnetwork",{"_index":3052,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["updatesocialnetwork(socialnetworkid",{"_index":3066,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["updatesocialnetworkcommand",{"_index":3151,"title":{"classes/UpdateSocialNetworkCommand.html":{}},"body":{"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["updatesocialnetworkcommandhandler",{"_index":3123,"title":{"classes/UpdateSocialNetworkCommandHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["updatesocialnetworkevent",{"_index":3317,"title":{"classes/UpdateSocialNetworkEvent.html":{}},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["updatesocialnetworkevent(command.id",{"_index":3320,"title":{},"body":{"classes/UpdateSocialNetworkCommandHandler.html":{}}}],["updatesocialnetworkeventhandler",{"_index":3124,"title":{"classes/UpdateSocialNetworkEventHandler.html":{}},"body":{"modules/SocialNetworkModule.html":{},"classes/UpdateSocialNetworkEventHandler.html":{}}}],["updatesocialnetworkrequest",{"_index":3067,"title":{"classes/UpdateSocialNetworkRequest.html":{}},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["updatetimestamp",{"_index":3247,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updateusercommand",{"_index":3326,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercommand(userid",{"_index":3648,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercommandhandler",{"_index":3329,"title":{"classes/UpdateUserCommandHandler.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialcommand",{"_index":3360,"title":{"classes/UpdateUserCredentialCommand.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercredentialcommandhandler",{"_index":3366,"title":{"classes/UpdateUserCredentialCommandHandler.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialdto",{"_index":3362,"title":{"classes/UpdateUserCredentialDto.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateusercredentialevent",{"_index":3370,"title":{"classes/UpdateUserCredentialEvent.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateusercredentialevent(command.userid",{"_index":3381,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["updateusercredentialeventhandler",{"_index":3394,"title":{"classes/UpdateUserCredentialEventHandler.html":{}},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateuserdto",{"_index":3328,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserevent",{"_index":3342,"title":{"classes/UpdateUserEvent.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{}}}],["updateuserevent(command.userid",{"_index":3352,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateuserevent(verifyduplicatemailwithdeleted.id",{"_index":3358,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateusereventhandler",{"_index":3400,"title":{"classes/UpdateUserEventHandler.html":{}},"body":{"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["updateuserrolecommand",{"_index":3402,"title":{"classes/UpdateUserRoleCommand.html":{}},"body":{"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"injectables/UserService.html":{}}}],["updateuserrolecommandhandler",{"_index":3406,"title":{"classes/UpdateUserRoleCommandHandler.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateuserroleevent",{"_index":3408,"title":{"classes/UpdateUserRoleEvent.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updateuserroleevent(command",{"_index":3412,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["updateuserroleeventhandler",{"_index":3419,"title":{"classes/UpdateUserRoleEventHandler.html":{}},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["uppercase",{"_index":2165,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":1297,"title":{},"body":{"classes/CreateSocialNetworkCommand.html":{},"classes/CreateSocialNetworkRequest.html":{},"classes/SocialNetworkDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SocialNetworkResponse.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateSocialNetworkCommand.html":{},"classes/UpdateSocialNetworkRequest.html":{}}}],["urls",{"_index":835,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":1688,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":1671,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":1764,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":1766,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2124,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usedby",{"_index":2795,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["usedreferralcodes",{"_index":3524,"title":{},"body":{"entities/UserEntity.html":{}}}],["useguards",{"_index":121,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":698,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/actual",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/refresh",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthenticationguard",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard([userroleenum.admin",{"_index":143,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":413,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":394,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":22,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user')@useguards(undefined",{"_index":3466,"title":{},"body":{"controllers/UserController.html":{}}}],["user.command",{"_index":1353,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.command.ts",{"_index":1347,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:1",{"_index":3196,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":1648,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":1349,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:4",{"_index":1350,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:5",{"_index":3265,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["user.currenthashedrefreshtoken",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":421,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1442,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GenerateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:10",{"_index":3399,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1451,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1447,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1443,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":1800,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1799,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:6",{"_index":3397,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1445,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.event",{"_index":1464,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["user.event.ts",{"_index":1457,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:2",{"_index":1661,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:3",{"_index":1660,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:4",{"_index":1461,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:5",{"_index":1459,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:6",{"_index":1460,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.id",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.interface",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.interface.ts",{"_index":2905,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["user.jwttoken",{"_index":694,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.mail",{"_index":1438,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user.password",{"_index":696,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["user.profiles",{"_index":2702,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.profiles.map(profile",{"_index":1924,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["user.query",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.query.ts",{"_index":2000,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:1",{"_index":2001,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":2002,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.referralcodes",{"_index":2814,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.response",{"_index":1389,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":1469,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:10",{"_index":1473,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:11",{"_index":1477,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":1474,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":1472,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":1476,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:16",{"_index":1475,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:3",{"_index":1470,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":3479,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.usedreferralcodes",{"_index":2821,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.username",{"_index":1437,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user/cqrs/handler/query/get",{"_index":743,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/cqrs/query/get",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/domain/entities/user.entity",{"_index":78,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"interfaces/RequestUser.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"entities/SubscriptionEntity.html":{}}}],["user/domain/enum/user",{"_index":134,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{}}}],["user/domain/response/user",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/domain/response/user.response",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":192,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{}}}],["user/user.service",{"_index":193,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user?.currenthashedrefreshtoken",{"_index":1984,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["user?.roles.includes(role",{"_index":3903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":3762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":1770,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":1774,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":3423,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userentity",{"_index":64,"title":{"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"modules/OccupationModule.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"modules/SocialNetworkModule.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{}}}],["userentity.addresses",{"_index":65,"title":{},"body":{"entities/AddressEntity.html":{}}}],["userentity.notifications",{"_index":2394,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["userentity.subscriptions",{"_index":3237,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userentity})@manytoone(undefined",{"_index":2813,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userentity})@onetoone(undefined",{"_index":2820,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userid",{"_index":412,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{},"injectables/UserService.html":{}}}],["useriddto",{"_index":403,"title":{"interfaces/UserIdDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{}}}],["userlist",{"_index":3565,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach(user",{"_index":2010,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse",{"_index":2005,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"classes/UserListResponse.html":{}}}],["userlistresponse.userlist",{"_index":2012,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse.userlist.push(new",{"_index":2011,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlogindto",{"_index":3569,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{}}}],["userloginresponse",{"_index":658,"title":{"classes/UserLoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponse.html":{}}}],["usermodule",{"_index":157,"title":{"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":596,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/InvalidUsernameException.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":1384,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["username.exception.ts",{"_index":1703,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.exception.ts:3",{"_index":1704,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.length",{"_index":1440,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["username.query",{"_index":1968,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["username.query.ts",{"_index":1963,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:1",{"_index":1965,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:2",{"_index":1966,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["usernamefield",{"_index":2291,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernameprofile",{"_index":1269,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["usernotfoundexception",{"_index":2764,"title":{"classes/UserNotFoundException.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":522,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["userresponse",{"_index":661,"title":{"classes/UserResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["userroleenum",{"_index":133,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.public",{"_index":1422,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/OccupationController.html":{},"controllers/ProfileController.html":{},"controllers/SocialNetworkController.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["users",{"_index":408,"title":{},"body":{"controllers/AppTestE2eController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{}}}],["users.some(user",{"_index":1436,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["usersenderid",{"_index":3761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":159,"title":{"injectables/UserService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userusername",{"_index":1995,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["userusername.password",{"_index":1997,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["util/config/database.configuration",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["util/config/winston",{"_index":2837,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["util/exception/custom",{"_index":1240,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/OccupationService.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/SocialNetworkService.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["util/exception/error",{"_index":175,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteOccupationCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllOccupationQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetAllSocialNetworkQueryHandler.html":{},"classes/GetOccupationByIdQueryHandler.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkByIdQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteOccupationCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["v_0.0.4",{"_index":3842,"title":{},"body":{"index.html":{}}}],["v_card",{"_index":3794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valid",{"_index":2147,"title":{},"body":{"classes/InvalidMailException.html":{}}}],["validate",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{}}}],["validate(command.user",{"_index":3350,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["validate(login",{"_index":2288,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(newoccupationentity",{"_index":1177,"title":{},"body":{"classes/CreateOccupationCommandHandler.html":{}}}],["validate(newprofile",{"_index":1260,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["validate(newsocialnetworkentity",{"_index":1318,"title":{},"body":{"classes/CreateSocialNetworkCommandHandler.html":{}}}],["validate(newuser",{"_index":1415,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":2274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":2257,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validate(updatedoccupationentity",{"_index":3282,"title":{},"body":{"classes/UpdateOccupationCommandHandler.html":{}}}],["validated",{"_index":3780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":2213,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validatetoken",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{}}}],["validatetoken(data",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationerror",{"_index":2150,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":82,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateOccupationCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateSocialNetworkCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":1197,"title":{},"body":{"classes/CreateOccupationEvent.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateSocialNetworkEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteOccupationEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteSocialNetworkEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllOccupationQuery.html":{},"classes/GetSocialNetworkWithCriteriaQuery.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreOccupationEvent.html":{},"classes/RestoreProfileEvent.html":{},"classes/RestoreSocialNetworkEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteOccupationEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteSocialNetworkEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateOccupationEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateSocialNetworkEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":29,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["variables",{"_index":3870,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1815,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":1085,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verboselogenum",{"_index":1094,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["verboselogenum.debug",{"_index":1114,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["verboselogenum.none",{"_index":1106,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verification",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["verifyduplicatemailwithdeleted",{"_index":3353,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.deletedat",{"_index":3354,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.mail",{"_index":3356,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.username",{"_index":3359,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifypassword",{"_index":1988,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["verifypassword(plaintextpassword",{"_index":1989,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["version",{"_index":1111,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"properties.html":{}}}],["void",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserEventHandler.html":{}}}],["waiting",{"_index":1577,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["wallet",{"_index":3812,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":3793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":3753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":2083,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":3823,"title":{},"body":{"index.html":{}}}],["warning",{"_index":3766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["web/request/create",{"_index":2442,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/request/get",{"_index":2440,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/request/update",{"_index":2548,"title":{},"body":{"injectables/OccupationService.html":{},"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/response/occupation",{"_index":2439,"title":{},"body":{"controllers/OccupationController.html":{},"injectables/OccupationService.html":{}}}],["web/response/social",{"_index":3073,"title":{},"body":{"controllers/SocialNetworkController.html":{},"injectables/SocialNetworkService.html":{}}}],["web/user.controller",{"_index":3592,"title":{},"body":{"modules/UserModule.html":{}}}],["website",{"_index":975,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":899,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":932,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":897,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":931,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":836,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":837,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":901,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":930,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":838,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":1500,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":920,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":3751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["withdeleted",{"_index":607,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetOccupationWithCriteriaQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreSocialNetworkCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["world",{"_index":291,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1471,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/GetUserQuery.html":{},"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["z\\\\d@$!%*#?&]{6",{"_index":1400,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z])(?=.*[a",{"_index":3374,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["z])(?=.*\\\\d)(?=.*[@$!%*#?&])[a",{"_index":1399,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z]).{4",{"_index":3375,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["za",{"_index":1398,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["zip_code",{"_index":67,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["zipcode",{"_index":23,"title":{},"body":{"entities/AddressEntity.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/OccupationModule.html":{},"modules/ProfileModule.html":{},"modules/SocialNetworkModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AddressEntity.html":{"url":"entities/AddressEntity.html","title":"entity - AddressEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AddressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                company\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'city', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, companyEntity => companyEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'country', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_active', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'latitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'longitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'state', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'street', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'zip_code', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@Entity({ name: 'address' })\nexport class AddressEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'street', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  street: string;\n\n  @Column({ name: 'city', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  city: string;\n\n  @Column({ name: 'state', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  state: string;\n\n  @Column({ name: 'country', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  country: string;\n\n  @Column({ name: 'zip_code', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  zipCode: string;\n\n  @Column({ name: 'latitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  latitude: string;\n\n  @Column({ name: 'longitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  longitude: string;\n\n  @Column({ name: 'is_active', type: 'boolean', default: true })\n  isActive: boolean;\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => CompanyEntity, companyEntity => companyEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  company: CompanyEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiLandingPageController.html":{"url":"controllers/ApiLandingPageController.html","title":"controller - ApiLandingPageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiLandingPageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-landing-page\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete-mail')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete mail'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@ApiOperation({summary: 'Get all mails'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { MailResponse } from './domain/response/mail.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\n\n@Controller('api-landing-page')\n@ApiTags('api-landing-page')\nexport class ApiLandingPageController {\n  constructor(private readonly apiLandingPageService: ApiLandingPageService) {}\n\n  @Get('/getAll')\n  @ApiOperation({ summary: 'Get all mails' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAll(): Promise {\n    return this.apiLandingPageService.getAll();\n  }\n\n  @Delete('/delete-mail')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Delete mail' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMail(@Body() mail: string): Promise {\n    return this.apiLandingPageService.deleteMail(mail);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLandingPageModule.html":{"url":"modules/ApiLandingPageModule.html","title":"module - ApiLandingPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLandingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLandingPageService\n                        \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiLandingPageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLandingPageController } from './api-landing-page.controller';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { DeleteMailCommandHandler } from './cqrs/handler/command/delete-mail.command-handler';\nimport { DeleteMailEventHandler } from './cqrs/handler/event/delete-mail.event-handler';\nimport { GetAllMailQueryHandler } from './cqrs/handler/query/get-all-mail.query-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_WAITING_LIST',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiLandingPageController],\n  providers: [\n    ApiLandingPageService,\n    ApiLogService,\n    UserService,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n    DeleteMailCommandHandler,\n    DeleteMailEventHandler,\n    GetAllMailQueryHandler,\n  ],\n})\nexport class ApiLandingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLandingPageService.html":{"url":"injectables/ApiLandingPageService.html","title":"injectable - ApiLandingPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLandingPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/api-landing-page.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from './cqrs/command/delete-mail.command';\nimport { MailResponse } from './domain/response/mail.response';\nimport { GetAllMailQuery } from './cqrs/query/get-all-mail.query';\n\n@Injectable()\nexport class ApiLandingPageService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async deleteMail(mail: string): Promise {\n    await this.commandBus.execute(\n      new DeleteMailCommand({\n        mail: mail,\n      }),\n    );\n  }\n\n  async getAll(): Promise {\n    return await this.queryBus.execute(new GetAllMailQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\ncluster_ApiLogModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CreateLogCommandHandler } from './cqrs/handler/command/create-log.command-handler';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  controllers: [],\n  providers: [ApiLogService, ErrorCustomEventHandler, CreateLogCommandHandler],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                createLogForMethode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLogForMethode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogForMethode(log: CreateMethodLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateMethodLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateLogCommand } from './cqrs/command/create-log.command';\nimport { CreateMethodLogDto } from './domain/dto/create-method-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(private readonly commandBus: CommandBus) {}\n  async createLog(log: CreateLogDto): Promise {\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...log,\n      }),\n    );\n  }\n\n  async createLogForMethode(log: CreateMethodLogDto): Promise {\n    const createLogDto: CreateLogDto = new CreateLogDto({\n      method: log.method,\n      module: log.module,\n      body: Object(log.body),\n    });\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...createLogDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiMailController.html":{"url":"controllers/ApiMailController.html","title":"controller - ApiMailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiMailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@HttpCode(200)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-mail/api-mail.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post, UseGuards } from '@nestjs/common';\nimport { ApiMailService } from './api-mail.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Controller('api-mail')\n@ApiTags('Mail')\nexport class ApiMailController {\n  constructor(private readonly apiMailService: ApiMailService) {}\n\n  @Post('/')\n  @HttpCode(200)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async sendMail(@Body() mailDto: MailDto): Promise {\n    await this.apiMailService.sendMail(mailDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiMailModule.html":{"url":"modules/ApiMailModule.html","title":"module - ApiMailModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiMailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_imports\n\n\n\ncluster_ApiMailModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-mail/api-mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ApiMailService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiMailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { SendMailCommandHandler } from './cqrs/handler/command/send-mail.command';\nimport { SendMailEventHandler } from './cqrs/handler/event/send-mail.event-handler';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiMailController } from './api-mail.controller';\nimport { ApiMailService } from './api-mail.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiMailController],\n  providers: [\n    ApiLogService,\n    ApiMailService,\n    UserService,\n    ErrorCustomEventHandler,\n    SendMailCommandHandler,\n    SendMailEventHandler,\n    CreateLogCommandHandler,\n  ],\n})\nexport class ApiMailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiMailService.html":{"url":"injectables/ApiMailService.html","title":"injectable - ApiMailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiMailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/api-mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/api-mail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { SendMailCommand } from './cqrs/command/send-mail.command';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Injectable()\nexport class ApiMailService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async sendMail(mailDto: MailDto): Promise {\n    await this.commandBus.execute(\n      new SendMailCommand({\n        ...mailDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nOccupationModule\n\nOccupationModule\n\nAppModule -->\n\nOccupationModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSocialNetworkModule\n\nSocialNetworkModule\n\nAppModule -->\n\nSocialNetworkModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLandingPageModule\n                        \n                        \n                            ApiLogModule\n                        \n                        \n                            ApiMailModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            OccupationModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SocialNetworkModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from './api/api-log/api-log.service';\nimport { AuthModule } from './api/auth/auth.module';\nimport { ApiMailModule } from './api/api-mail/api-mail.module';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLandingPageModule } from './api/api-landing-page/api-landing-page.module';\nimport { ProfileModule } from './api/profile/profile.module';\nimport { OccupationModule } from './api/occupation/occupation.module';\nimport { SocialNetworkModule } from './api/social-network/social-network.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: 3202 } },\n    ]),\n    CqrsModule,\n    // ________ Module ________\n    ApiMailModule,\n    ApiLogModule,\n    HealthCheckModule,\n    ApiLandingPageModule,\n\n    // ________ Module Application ________\n    UserModule,\n    AuthModule,\n    ProfileModule,\n    OccupationModule,\n    SocialNetworkModule,\n    EntitiesToMoveModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                            \n                                createUserTest\n                            \n                            \n                                deleteUserTest\n                            \n                            \n                                getAllUsersTest\n                            \n                            \n                                getUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserTest\n                        \n                    \n                \n            \n            \n                \ncreateUserTest(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Post('/api/test/create-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserTest\n                        \n                    \n                \n            \n            \n                \ndeleteUserTest(userIdDto: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UsePipes(new IsTestEnvironmentPipe())@Delete('/api/test/remove-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdDto\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsersTest\n                        \n                    \n                \n            \n            \n                \ngetAllUsersTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-all-users-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTest\n                        \n                    \n                \n            \n            \n                \ngetUserTest(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Post, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { UserIdDto } from '../../src/api/user/domain/dto/user-id.dto';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Post('/api/test/create-user-test')\n  createUserTest(@Body() createUserDto: CreateUserDto): Promise {\n    return this.appService.createUserTest(createUserDto);\n  }\n\n  @HttpCode(204)\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Delete('/api/test/remove-user-test')\n  deleteUserTest(@Body() userIdDto: UserIdDto): Promise {\n    return this.appService.removeUser(userIdDto.userId);\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-all-users-test')\n  getAllUsersTest(): Promise {\n    return this.appService.getAllUsers();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-user-test')\n  getUserTest(@Body() userId: string): Promise {\n    return this.appService.getUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../src/api/occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../src/api/social-network/domain/entities/social-network.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\n\n@Module({\n  imports: [\n    AppModule,\n    TypeOrmModule.forFeature([\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n      NotificationEntity,\n      ReferralCodeEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                            \n                                    Async\n                                createUserTest\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                removeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, cardRepository: Repository, companyRepository: Repository, companyEmployeeRepository: Repository, connectedCardRepository: Repository, conversationRepository: Repository, discountCodeRepository: Repository, groupRepository: Repository, groupMembershipRepository: Repository, invoicesRepository: Repository, joinedConversationRepository: Repository, mediaRepository: Repository, messageRepository: Repository, occupationRepository: Repository, planRepository: Repository, profileRepository: Repository, socialNetworkRepository: Repository, stripEventRepository: Repository, subscriptionRepository: Repository, notificationRepository: Repository, referralCodeRepository: Repository, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in test/test-environment/app-test-e2e.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyEmployeeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupMembershipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinedConversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripEventRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referralCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserTest(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { SocialNetworkEntity } from '../../src/api/social-network/domain/entities/social-network.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { OccupationEntity } from '../../src/api/occupation/domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AppTestE2eService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(CompanyEntity)\n    private readonly companyRepository: Repository,\n    @InjectRepository(CompanyEmployeeEntity)\n    private readonly companyEmployeeRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    @InjectRepository(ConversationEntity)\n    private readonly conversationRepository: Repository,\n    @InjectRepository(DiscountCodeEntity)\n    private readonly discountCodeRepository: Repository,\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n    @InjectRepository(GroupMembershipEntity)\n    private readonly groupMembershipRepository: Repository,\n    @InjectRepository(InvoicesEntity)\n    private readonly invoicesRepository: Repository,\n    @InjectRepository(JoinedConversation)\n    private readonly joinedConversationRepository: Repository,\n    @InjectRepository(MediaEntity)\n    private readonly mediaRepository: Repository,\n    @InjectRepository(MessageEntity)\n    private readonly messageRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(PlanEntity)\n    private readonly planRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    @InjectRepository(StripEventEntity)\n    private readonly stripEventRepository: Repository,\n    @InjectRepository(SubscriptionEntity)\n    private readonly subscriptionRepository: Repository,\n    @InjectRepository(NotificationEntity)\n    private readonly notificationRepository: Repository,\n    @InjectRepository(ReferralCodeEntity)\n    private readonly referralCodeRepository: Repository,\n    @InjectRepository(AddressEntity)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  async clearDatabaseTest(): Promise {\n    await this.userRepository.query('DELETE FROM \"user\";');\n    await this.cardRepository.query('DELETE FROM \"card\";');\n    await this.companyRepository.query('DELETE FROM \"company\";');\n    await this.companyEmployeeRepository.query('DELETE FROM \"company_employee\";');\n    await this.connectedCardRepository.query('DELETE FROM \"connected_card\";');\n    await this.conversationRepository.query('DELETE FROM \"conversation\";');\n    await this.discountCodeRepository.query('DELETE FROM \"discount_codes\";');\n    await this.groupRepository.query('DELETE FROM \"group\";');\n    await this.groupMembershipRepository.query('DELETE FROM \"group_membership\";');\n    await this.invoicesRepository.query('DELETE FROM \"invoices\";');\n    await this.joinedConversationRepository.query('DELETE FROM \"joined_conversation\";');\n    await this.mediaRepository.query('DELETE FROM \"media\";');\n    await this.messageRepository.query('DELETE FROM \"message\";');\n    await this.occupationRepository.query('DELETE FROM \"occupation\";');\n    await this.planRepository.query('DELETE FROM \"plan\";');\n    await this.profileRepository.query('DELETE FROM \"profile\";');\n    await this.socialNetworkRepository.query('DELETE FROM \"social_network\";');\n    await this.stripEventRepository.query('DELETE FROM \"strip_event\";');\n    await this.subscriptionRepository.query('DELETE FROM \"subscription\";');\n    await this.notificationRepository.query('DELETE FROM \"notification\";');\n    await this.referralCodeRepository.query('DELETE FROM \"referral_code\";');\n    await this.addressRepository.query('DELETE FROM \"address\";');\n\n    return;\n  }\n\n  async createUserTest(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.save({\n      username: createUserDto.username,\n      mail: createUserDto.mail,\n      password: bcrypt.hashSync(createUserDto.password, 10),\n      roles: createUserDto.roles,\n    });\n  }\n\n  async removeUser(userId: string): Promise {\n    await this.userRepository.softDelete({ id: userId });\n  }\n\n  async getUser(userId: string): Promise {\n    return await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n  }\n\n  async getAllUsers(): Promise {\n    return await this.userRepository.find({\n      withDeleted: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UseGuards(JwtRefreshGuard)@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'validate-token'})\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport { Body, Controller, Get, HttpCode, HttpException, HttpStatus, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Controller('/auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly userService: UserService, private readonly authService: AuthService) {}\n\n  @Post('/register')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    try {\n      return await this.authService.signup(signUpDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        400,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/login')\n  async signIn(@Req() request: RequestUser, @Res() response: Response): Promise {\n    const { user } = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(user.id);\n    await this.userService.setCurrentRefreshToken(refreshTokenCookie.token, user.id);\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', [accessTokenCookie.auth, refreshTokenCookie.cookie]);\n    user.currentHashedRefreshToken = refreshTokenCookie.token;\n    user.jwtToken = accessTokenCookie.token;\n    user.password = '';\n    return response.send(user);\n  }\n\n  @HttpCode(204)\n  @UseGuards(JwtRefreshGuard)\n  @Post('/logout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response): Promise {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(204);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('/actual')\n  authenticate(@Req() request: RequestUser): UserEntity {\n    return request.user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh')\n  refresh(@Req() request: RequestUser): UserEntity {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(request.user.id);\n\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie.token);\n    return request.user;\n  }\n\n  // MessagePatern\n\n  @MessagePattern({ cmd: 'validate-token' })\n  async validateToken(data: string): Promise {\n    try {\n      return await this.authService.getUserFromAuthToken(data);\n    } catch (e) {\n      throw new HttpException('Wrong token provided', HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/command/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from '../user/user.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { GetUserLoginQueryHandler } from '../user/cqrs/handler/query/get-user-login.query-handler';\nimport { RegisterEventHandler } from './cqrs/event-handler/register.event-handler';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport * as process from 'process';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_LANDING_PAGE',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    PassportModule,\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    ApiLogService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    GetUserLoginQueryHandler,\n    RegisterEventHandler,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                getUserFromAuthToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromAuthToken(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\nimport { GetUserLoginQuery } from '../user/cqrs/query/get-user-login.query';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService, private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async signup(signUpDto: SignUpDto): Promise {\n    return new UserResponse({\n      ...(await this.commandBus.execute(new RegisterCommand(signUpDto.username, signUpDto.mail, signUpDto.password))),\n    });\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserLoginQuery(username, plainTextPassword));\n    } catch (error) {\n      throw new HttpException('Wrong credentials provided', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  public getCookieWithJwtToken(userId: string): { token: string; auth: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    });\n    return {\n      token: token,\n      auth: `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    };\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string): { cookie: string; token: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut(): string[] {\n    return ['Authentication=; HttpOnly; Path=/; Max-Age=0', 'Refresh=; HttpOnly; Path=/; Max-Age=0'];\n  }\n\n  async getUserFromAuthToken(authenticationToken: string): Promise {\n    const payload: TokenPayload = this.jwtService.verify(authenticationToken, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n    });\n    if (payload.userId) {\n      return this.queryBus.execute(new GetUserQuery(payload.userId));\n    }\n    throw new Error('Invalid token');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from '../social-network/domain/entities/social-network.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandErrorException.html":{"url":"classes/CommandErrorException.html","title":"class - CommandErrorException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandErrorException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/command-error.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/command-error.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class CommandErrorException extends HttpException {\n  constructor() {\n    super(\n      {\n        status: 500,\n        message: 'Command execution failed',\n      },\n      500,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                addresses\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.company, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { MediaEntity } from './media.entity';\nimport { AddressEntity } from './address.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => AddressEntity, address => address.company, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                notifications\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.conversation, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.conversation, { nullable: true })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommand.html":{"url":"classes/CreateLogCommand.html","title":"class - CreateLogCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/command/create-log.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LoggingTypeEnum } from '../../domain/enum/logging-type.enum';\nimport { ApiTypeEnum } from '../../domain/enum/api-type.enum';\n\nexport class CreateLogCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommandHandler.html":{"url":"classes/CreateLogCommandHandler.html","title":"class - CreateLogCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                verbose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verbose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateLogCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateLogCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateLogCommand } from '../../command/create-log.command';\nimport { VerboseLogEnum } from '../../../domain/enum/verbose-log.enum';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport * as process from 'process';\nimport { ApiTypeEnum } from '../../../domain/enum/api-type.enum';\n\n@CommandHandler(CreateLogCommand)\nexport class CreateLogCommandHandler implements ICommandHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum;\n  private readonly verbose: VerboseLogEnum;\n\n  constructor(@Inject('API_LOG') private client: ClientProxy) {\n    this.verbose = (process.env.VERBOSE_LOG as VerboseLogEnum) || VerboseLogEnum.NONE;\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.API_TYPE = ApiTypeEnum.WALLET_SHARE_API;\n  }\n\n  async execute(command: CreateLogCommand): Promise {\n    if (this.verbose === VerboseLogEnum.NONE) return;\n    if (this.verbose === VerboseLogEnum.DEBUG) console.log('CreateLogCommandHandler: ', command);\n    this.client.emit('create-log', command);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                    Optional\n                                method\n                            \n                            \n                                    Optional\n                                module\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                    Optional\n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from '../enum/logging-type.enum';\n\nexport class CreateLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method?: string;\n\n  @ApiProperty()\n  route?: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty()\n  module?: string;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMethodLogDto.html":{"url":"classes/CreateMethodLogDto.html","title":"class - CreateMethodLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMethodLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-method-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                method\n                            \n                            \n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMethodLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n  module: string;\n  method: string;\n  body: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationCommand.html":{"url":"classes/CreateOccupationCommand.html","title":"class - CreateOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/create-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createOccupationDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/create-occupation.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createOccupationDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOccupationDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/create-occupation.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateOccupationDto } from '../../domain/dto/create-occupation.dto';\n\nexport class CreateOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly createOccupationDto: CreateOccupationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationCommandHandler.html":{"url":"classes/CreateOccupationCommandHandler.html","title":"class - CreateOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/create-occupation.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateOccupationCommand } from '../../command/create-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { CreateOccupationEvent } from '../../event/create-occupation.event';\n\n@CommandHandler(CreateOccupationCommand)\nexport class CreateOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateOccupationCommand): Promise {\n    try {\n      const occupationList: OccupationEntity[] = await this.occupationRepository.find();\n\n      if (occupationList.length > 0) {\n        occupationList.forEach(occupation => {\n          if (occupation.name === command.createOccupationDto.name) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n      const newOccupationEntity: OccupationEntity = new OccupationEntity({\n        ...command.createOccupationDto,\n      });\n      const err = await validate(newOccupationEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      return this.occupationRepository\n        .save(newOccupationEntity)\n        .then(occupationEntity => {\n          this.eventBus.publish(\n            new CreateOccupationEvent({\n              occupationId: occupationEntity.id,\n            }),\n          );\n          return new OccupationDto({\n            ...occupationEntity,\n          });\n        })\n        .catch(() => {\n          throw new Error('Occupation not created');\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'CreateOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationDto.html":{"url":"classes/CreateOccupationDto.html","title":"class - CreateOccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/create-occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/create-occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/create-occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationEvent.html":{"url":"classes/CreateOccupationEvent.html","title":"class - CreateOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/create-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/create-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'create-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationEventHandler.html":{"url":"classes/CreateOccupationEventHandler.html","title":"class - CreateOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/create-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateOccupationEvent } from '../../event/create-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateOccupationEvent)\nexport class CreateOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been created',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOccupationRequest.html":{"url":"classes/CreateOccupationRequest.html","title":"class - CreateOccupationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOccupationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/create-occupation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/create-occupation.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/create-occupation.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOccupationRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommand.html":{"url":"classes/CreateProfileCommand.html","title":"class - CreateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/create-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createProfileDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateProfileDto } from '../../domain/dto/create-profile.dto';\n\nexport class CreateProfileCommand {\n  public readonly userId: string;\n  public readonly occupationsId: string[];\n  public readonly createProfileDto: CreateProfileDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommandHandler.html":{"url":"classes/CreateProfileCommandHandler.html","title":"class - CreateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/create-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { CreateProfileCommand } from '../../command/create-profile.command';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\n\n@CommandHandler(CreateProfileCommand)\nexport class CreateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateProfileCommand): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      const newProfile = new ProfileEntity({\n        user: user,\n        ...command.createProfileDto,\n      });\n\n      if (command.occupationsId.length > 0) {\n        const occupationPromises: Promise[] = command.occupationsId.map(async occupationId => {\n          return await this.occupationRepository\n            .findOneOrFail({\n              where: [{ id: occupationId }],\n            })\n            .catch(() => {\n              throw new Error('Occupation not found');\n            });\n        });\n        const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n        if (occupations.length > 0) {\n          newProfile.occupations = occupations;\n        }\n      }\n\n      const err = await validate(newProfile);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedProfile = await this.profileRepository.save(newProfile).then(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n      this.eventBus.publish(\n        new CreateProfileEvent({\n          profileResponse: new ProfileResponse(savedProfile),\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileDto {\n  public readonly usernameProfile: string;\n  public readonly roleProfile: RoleProfileEnum;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEvent.html":{"url":"classes/CreateProfileEvent.html","title":"class - CreateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/create-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileResponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProfileResponse } from '../../domain/response/profile.response';\n\nexport class CreateProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'create-profile';\n  public readonly profileResponse: ProfileResponse;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEventHandler.html":{"url":"classes/CreateProfileEventHandler.html","title":"class - CreateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/create-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateProfileEvent)\nexport class CreateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' + event.profileResponse.id + ' created for user with id: ' + event.profileResponse.userId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileRequest.html":{"url":"classes/CreateProfileRequest.html","title":"class - CreateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/create-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                idUser\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileRequest {\n  public readonly usernameProfile: string;\n  public readonly idUser: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkCommand.html":{"url":"classes/CreateSocialNetworkCommand.html","title":"class - CreateSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/create-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/create-social-network.command.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkCommandHandler.html":{"url":"classes/CreateSocialNetworkCommandHandler.html","title":"class - CreateSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/create-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/create-social-network.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/create-social-network.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateSocialNetworkCommand } from '../../command/create-social-network.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { CreateSocialNetworkEvent } from '../../event/create-social-network.event';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { validate } from 'class-validator';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(CreateSocialNetworkCommand)\nexport class CreateSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateSocialNetworkCommand): Promise {\n    try {\n      const socialNetwork = await this.socialNetworkRepository.find();\n      if (socialNetwork.length > 0) {\n        socialNetwork.forEach(socialNetwork => {\n          if (socialNetwork.name === command.name) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n\n      const newSocialNetworkEntity: SocialNetworkEntity = new SocialNetworkEntity({\n        ...command,\n      });\n\n      const err = await validate(newSocialNetworkEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      this.socialNetworkRepository\n        .save(newSocialNetworkEntity)\n        .then(socialNetworkEntity => {\n          this.eventBus.publish(new CreateSocialNetworkEvent(socialNetworkEntity.id));\n        })\n        .catch(() => {\n          throw new Error('SocialNetwork not created');\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'CreateSocialNetworkCommandHandler',\n          localisation: 'SocialNetwork',\n          error: e.message,\n        }),\n      );\n      throw new Error('SocialNetwork not created');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkEvent.html":{"url":"classes/CreateSocialNetworkEvent.html","title":"class - CreateSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/create-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/create-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'create-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkEventHandler.html":{"url":"classes/CreateSocialNetworkEventHandler.html","title":"class - CreateSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/create-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/create-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/create-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { CreateSocialNetworkEvent } from '../../event/create-social-network.event';\n\n@EventsHandler(CreateSocialNetworkEvent)\nexport class CreateSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been created',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSocialNetworkRequest.html":{"url":"classes/CreateSocialNetworkRequest.html","title":"class - CreateSocialNetworkRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSocialNetworkRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/request/create-social-network.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/create-social-network.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSocialNetworkRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventBus\n                            \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\nimport { UserRoleEnum } from '../../../domain/enum/user-role.enum';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n    public readonly eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      if (command.createUserDto.username) {\n        if (await this.isDuplicatedUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.createUserDto.mail) {\n        if (await this.isDuplicatedEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n\n      if (!this.isValidPassword(command.createUserDto.password)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n        );\n        throw new InvalidPasswordException();\n      }\n\n      if (command.createUserDto.mail) {\n        if (!this.isValidEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n          );\n          throw new InvalidMailException();\n        }\n      }\n\n      if (command.createUserDto.username) {\n        if (!this.isValidUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n          );\n          throw new InvalidUsernameException();\n        }\n      }\n\n      const newUser: UserEntity = new UserEntity({\n        ...command.createUserDto,\n        referralCode: await this.generateUniqueReferralCode(),\n      });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        mail: savedUser.mail,\n        roles: savedUser.roles || [UserRoleEnum.PUBLIC],\n        referralCode: savedUser.referralCode,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'CreateUser', error: error }));\n      throw error;\n    }\n  }\n\n  // Generate a random alphanumeric code of a given length\n  private generateCode(length: number): string {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, Length } from 'class-validator';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  mail?: string;\n\n  @ApiProperty()\n  @Length(5, 20)\n  username?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsOptional()\n  roles?: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'create-user';\n  constructor(public readonly userId: string, public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateUserEvent } from '../../event/create-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' created with email: ' + event.createUserDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                referralCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly mail: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n\n  public readonly referralCode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../api/social-network/domain/entities/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\nimport { ReferralCodeEntity } from '../../api/entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../api/entities-to-create/notification.entity';\nimport { AddressEntity } from '../../api/entities-to-create/address.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommand.html":{"url":"classes/DeleteMailCommand.html","title":"class - DeleteMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommandHandler.html":{"url":"classes/DeleteMailCommandHandler.html","title":"class - DeleteMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from '../../command/delete-mail.command';\nimport { HttpException, HttpStatus, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteMailCommand)\nexport class DeleteMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy, private readonly eventBus: EventBus) {}\n\n  async execute(command: DeleteMailCommand): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'delete' }, command.mail).pipe(\n        catchError(err => {\n          if (err.status !== undefined) {\n            this.eventBus.publish(\n              new ErrorCustomEvent({\n                handler: 'DeleteMailCommandHandler',\n                localisation: 'api-waiting-list',\n                error: err.message,\n              }),\n            );\n            throw new HttpException('Mail does not exist', 404);\n          }\n          this.eventBus.publish(\n            new ErrorCustomEvent({\n              handler: 'DeleteMailCommandHandler',\n              localisation: 'api-waiting-list',\n              error: 'unreachable',\n            }),\n          );\n          throw new HttpException('unreachable', HttpStatus.SERVICE_UNAVAILABLE);\n        }),\n      ),\n    ).then(() => {\n      this.eventBus.publish(new DeleteMailEvent(command));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEvent.html":{"url":"classes/DeleteMailEvent.html","title":"class - DeleteMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteMailDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteMailDto: DeleteMailCommand, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteMailDto\n                                                  \n                                                        \n                                                                        DeleteMailCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteMailDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteMailCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-landing-page'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteMailCommand } from '../command/delete-mail.command';\n\nexport class DeleteMailEvent {\n  constructor(\n    public readonly deleteMailDto: DeleteMailCommand,\n    public readonly module: string = 'api-landing-page',\n    public readonly method: string = 'delete-mail',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEventHandler.html":{"url":"classes/DeleteMailEventHandler.html","title":"class - DeleteMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteMailEvent)\nexport class DeleteMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: 'api-landing-page',\n      method: 'delete-mail',\n      body: 'delete user with mail : ' + event.deleteMailDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationCommand.html":{"url":"classes/DeleteOccupationCommand.html","title":"class - DeleteOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/delete-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/delete-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/delete-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationCommandHandler.html":{"url":"classes/DeleteOccupationCommandHandler.html","title":"class - DeleteOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/delete-occupation.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { DeleteOccupationCommand } from '../../command/delete-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteOccupationCommand)\nexport class DeleteOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteOccupationCommand): Promise {\n    try {\n      const occupation = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n      await this.occupationRepository.delete(occupation.id).catch(() => {\n        throw new Error('Occupation not deleted');\n      });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'DeleteOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationEvent.html":{"url":"classes/DeleteOccupationEvent.html","title":"class - DeleteOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/delete-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/delete-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'delete-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOccupationEventHandler.html":{"url":"classes/DeleteOccupationEventHandler.html","title":"class - DeleteOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/delete-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteOccupationEvent } from '../../event/delete-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteOccupationEvent)\nexport class DeleteOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.occupationId + ' have been deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommand.html":{"url":"classes/DeleteProfileCommand.html","title":"class - DeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommandHandler.html":{"url":"classes/DeleteProfileCommandHandler.html","title":"class - DeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteProfileCommand } from '../../command/delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(DeleteProfileCommand)\nexport class DeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.remove(profile);\n      this.eventBus.publish(\n        new DeleteProfileEvent({\n          deleteProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEvent.html":{"url":"classes/DeleteProfileEvent.html","title":"class - DeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteProfileCommand\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteProfileCommand } from '../command/delete-profile.command';\n\nexport class DeleteProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'delete-profile';\n  public readonly deleteProfileCommand: DeleteProfileCommand;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEventHandler.html":{"url":"classes/DeleteProfileEventHandler.html","title":"class - DeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiLogService } from '../../../../api-log/api-log.service';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\n\n@EventsHandler(DeleteProfileEvent)\nexport class DeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.deleteProfileCommand.id + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkCommand.html":{"url":"classes/DeleteSocialNetworkCommand.html","title":"class - DeleteSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/delete-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/delete-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/delete-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkCommandHandler.html":{"url":"classes/DeleteSocialNetworkCommandHandler.html","title":"class - DeleteSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/delete-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/delete-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/delete-social-network.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteSocialNetworkCommand } from '../../command/delete-social-network.command';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DeleteSocialNetworkEvent } from '../../event/delete-social-network.event';\n\n@CommandHandler(DeleteSocialNetworkCommand)\nexport class DeleteSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: command.id }],\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .delete(socialNetwork.id)\n          .then(async () => {\n            await this.eventBus.publish(new DeleteSocialNetworkEvent(socialNetwork.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not deleted');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkEvent.html":{"url":"classes/DeleteSocialNetworkEvent.html","title":"class - DeleteSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/delete-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/delete-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'delete-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSocialNetworkEventHandler.html":{"url":"classes/DeleteSocialNetworkEventHandler.html","title":"class - DeleteSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/delete-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/delete-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/delete-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { DeleteSocialNetworkEvent } from '../../event/delete-social-network.event';\n\n@EventsHandler(DeleteSocialNetworkEvent)\nexport class DeleteSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommandHandler.html":{"url":"classes/DeleteUserCommandHandler.html","title":"class - DeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { DeleteUserCommand } from '../../command/delete-user.command';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { InvalidIdException } from '../../../../../util/exception/custom-http-exception/invalid-id.exception';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    try {\n      await this.userRepository.delete(command.userId);\n      this.eventBus.publish(new DeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw new InvalidIdException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEvent.html":{"url":"classes/DeleteUserEvent.html","title":"class - DeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'delete-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEventHandler.html":{"url":"classes/DeleteUserEventHandler.html","title":"class - DeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteUserEvent)\nexport class DeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateMailException.html":{"url":"classes/DuplicateMailException.html","title":"class - DuplicateMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateMailException extends HttpException {\n  constructor() {\n    super('Mail already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateNameException.html":{"url":"classes/DuplicateNameException.html","title":"class - DuplicateNameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateNameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-name.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-name.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class DuplicateNameException extends HttpException {\n  constructor() {\n    super('Duplicate name', 409);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../social-network/domain/entities/social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { ReferralCodeEntity } from './referal-code.entity';\nimport { NotificationEntity } from './notification.entity';\nimport { AddressEntity } from './address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      ReferralCodeEntity,\n      NotificationEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityCreationException.html":{"url":"classes/EntityCreationException.html","title":"class - EntityCreationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityCreationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/entity-creation.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/entity-creation.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class EntityCreationException extends HttpException {\n  constructor() {\n    super(\n      {\n        status: 500,\n        message: 'Entity creation failed',\n      },\n      500,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                handler\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly localisation: string;\n  public readonly handler: string;\n  public readonly error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { CreateLogDto } from '../../../api/api-log/domain/dto/create-log.dto';\nimport { LoggingTypeEnum } from '../../../api/api-log/domain/enum/logging-type.enum';\nimport { ApiLogService } from '../../../api/api-log/api-log.service';\nimport { ApiTypeEnum } from '../../../api/api-log/domain/enum/api-type.enum';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  handle(event: ErrorCustomEvent): void {\n    const createLogDto = new CreateLogDto({});\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.ERROR;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = event.localisation;\n    createLogDto.route = event.handler;\n    createLogDto.error = event.error;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = process.env.VERBOSE as VerboseLogEnum;\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto({});\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = req.headers || undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateUserDto.html":{"url":"classes/GenerateUserDto.html","title":"class - GenerateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/generate-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class GenerateUserDto {\n  public readonly mail: string;\n  public readonly roles: UserRoleEnum[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQuery.html":{"url":"classes/GetAllMailQuery.html","title":"class - GetAllMailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllMailQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQueryHandler.html":{"url":"classes/GetAllMailQueryHandler.html","title":"class - GetAllMailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllMailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllMailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllMailQuery } from '../../query/get-all-mail.query';\nimport { HttpException, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { MailLandingPageDto } from '../../../domain/dto/mail-landing-page.dto';\n\n@QueryHandler(GetAllMailQuery)\nexport class GetAllMailQueryHandler implements IQueryHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async execute(query: GetAllMailQuery): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'get-all' }, '').pipe(\n        catchError(() => {\n          throw new HttpException('unreachable', 401);\n        }),\n      ),\n    ).then((mailsLandingPageList: MailLandingPageDto[]) => mailsLandingPageList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllOccupationQuery.html":{"url":"classes/GetAllOccupationQuery.html","title":"class - GetAllOccupationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllOccupationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-all-occupation.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'get-all-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-all-occupation.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllOccupationQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'get-all-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllOccupationQueryHandler.html":{"url":"classes/GetAllOccupationQueryHandler.html","title":"class - GetAllOccupationQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllOccupationQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-all-occupation.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllOccupationQuery } from '../../query/get-all-occupation.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetAllOccupationQuery)\nexport class GetAllOccupationQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(): Promise {\n    return await this.occupationRepository\n      .find()\n      .then(occupations => {\n        return occupations.map(occupation => {\n          return new OccupationDto(occupation);\n        });\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetAllOccupationQueryHandler',\n            localisation: 'Occupation',\n            error: error.message,\n          }),\n        );\n        throw new Error('Error while getting all occupations');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQuery.html":{"url":"classes/GetAllProfileQuery.html","title":"class - GetAllProfileQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-all-profile.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllProfileQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQueryHandler.html":{"url":"classes/GetAllProfileQueryHandler.html","title":"class - GetAllProfileQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllProfileQuery } from '../../query/get-all-profile.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\n\n@QueryHandler(GetAllProfileQuery)\nexport class GetAllProfileQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    try {\n      const profiles = await this.profileRepository.find();\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetAllProfileQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllSocialNetworkQuery.html":{"url":"classes/GetAllSocialNetworkQuery.html","title":"class - GetAllSocialNetworkQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllSocialNetworkQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/query/get-all-social-network.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllSocialNetworkQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllSocialNetworkQueryHandler.html":{"url":"classes/GetAllSocialNetworkQueryHandler.html","title":"class - GetAllSocialNetworkQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllSocialNetworkQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/query/get-all-social-network.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/query/get-all-social-network.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/query/get-all-social-network.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllSocialNetworkQuery } from '../../query/get-all-social-network.query';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { SocialNetworkDto } from '../../../domain/dto/social-network.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetAllSocialNetworkQuery)\nexport class GetAllSocialNetworkQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(): Promise {\n    return await this.socialNetworkRepository\n      .find()\n      .then(socialNetworks => {\n        return socialNetworks.map(socialNetwork => {\n          return new SocialNetworkDto(socialNetwork);\n        });\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetAllSocialNetworkQueryHandler',\n            localisation: 'SocialNetwork',\n            error: error.message,\n          }),\n        );\n        throw new Error('Error while getting all social networks');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationByIdQuery.html":{"url":"classes/GetOccupationByIdQuery.html","title":"class - GetOccupationByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-occupation-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-occupation-by-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-occupation-by-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationByIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationByIdQueryHandler.html":{"url":"classes/GetOccupationByIdQueryHandler.html","title":"class - GetOccupationByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetOccupationByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-occupation-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetOccupationByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetOccupationByIdQuery } from '../../query/get-occupation-by-id.query';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetOccupationByIdQuery)\nexport class GetOccupationByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetOccupationByIdQuery): Promise {\n    return await this.occupationRepository\n      .findOneOrFail({\n        where: [{ id: query.occupationId }],\n      })\n      .then(occupation => {\n        return new OccupationDto(occupation);\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetOccupationByIdQueryHandler',\n            localisation: 'Occupation',\n            error: error.message,\n          }),\n        );\n        throw new Error('Occupation not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaDto.html":{"url":"classes/GetOccupationWithCriteriaDto.html","title":"class - GetOccupationWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/get-occupation-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationWithCriteriaDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly isDeleted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaQuery.html":{"url":"classes/GetOccupationWithCriteriaQuery.html","title":"class - GetOccupationWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                criteria\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        criteria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetOccupationWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/query/get-occupation-with-criteria.query.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetOccupationWithCriteriaDto } from '../../domain/dto/get-occupation-with-criteria.dto';\n\nexport class GetOccupationWithCriteriaQuery {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n  public readonly criteria: GetOccupationWithCriteriaDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaQueryHandler.html":{"url":"classes/GetOccupationWithCriteriaQueryHandler.html","title":"class - GetOccupationWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetOccupationWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/query/get-occupation-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetOccupationWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { OccupationDto } from '../../../domain/dto/occupation.dto';\nimport { GetOccupationWithCriteriaQuery } from '../../query/get-occupation-with-criteria.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetOccupationWithCriteriaQuery)\nexport class GetOccupationWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetOccupationWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.occupationRepository.createQueryBuilder('occupation');\n\n      if (query.criteria.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.criteria.name) {\n        queryBuilder.where('occupation.name = :nameOccupation', {\n          nameOccupation: query.criteria.name,\n        });\n      }\n\n      const occupations = await queryBuilder.getMany();\n\n      return occupations.map(\n        occupation =>\n          new OccupationDto({\n            ...occupation,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'occupation',\n          handler: 'GetOccupationWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOccupationWithCriteriaRequest.html":{"url":"classes/GetOccupationWithCriteriaRequest.html","title":"class - GetOccupationWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOccupationWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/get-occupation-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/get-occupation-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetOccupationWithCriteriaRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n  public readonly isDeleted: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQuery.html":{"url":"classes/GetProfileByIdQuery.html","title":"class - GetProfileByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfileByIdQuery {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQueryHandler.html":{"url":"classes/GetProfileByIdQueryHandler.html","title":"class - GetProfileByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileByIdQuery } from '../../query/get-profile-by-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetProfileByIdQuery)\nexport class GetProfileByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileByIdQuery): Promise {\n    try {\n      return await this.profileRepository\n        .findOneOrFail({\n          relations: ['user'],\n          where: [\n            {\n              id: query.id,\n            },\n          ],\n        })\n        .then(profile => new ProfileResponse({ ...profile, userId: profile.user?.id }));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileByIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaDto.html":{"url":"classes/GetProfileWithCriteriaDto.html","title":"class - GetProfileWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/get-profile-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfileWithCriteriaDto {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQuery.html":{"url":"classes/GetProfileWithCriteriaQuery.html","title":"class - GetProfileWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getProfileWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getProfileWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetProfileWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetProfileWithCriteriaDto } from '../../domain/dto/get-profile-with-criteria.dto';\n\nexport class GetProfileWithCriteriaQuery {\n  public readonly getProfileWithCriteriaDto: GetProfileWithCriteriaDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQueryHandler.html":{"url":"classes/GetProfileWithCriteriaQueryHandler.html","title":"class - GetProfileWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileWithCriteriaQuery } from '../../query/get-profile-with-criteria.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetProfileWithCriteriaQuery)\nexport class GetProfileWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.profileRepository.createQueryBuilder('profile');\n\n      if (query.getProfileWithCriteriaDto.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.getProfileWithCriteriaDto.usernameProfile) {\n        queryBuilder.where('profile.usernameProfile = :usernameProfile', {\n          usernameProfile: query.getProfileWithCriteriaDto.usernameProfile,\n        });\n      }\n\n      const profiles = await queryBuilder.getMany();\n\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQuery.html":{"url":"classes/GetProfilesByUserIdQuery.html","title":"class - GetProfilesByUserIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfilesByUserIdQuery {\n  public readonly id: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQueryHandler.html":{"url":"classes/GetProfilesByUserIdQueryHandler.html","title":"class - GetProfilesByUserIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfilesByUserIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfilesByUserIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfilesByUserIdQuery } from '../../query/get-profiles-by-user-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\n\n@QueryHandler(GetProfilesByUserIdQuery)\nexport class GetProfilesByUserIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async execute(query: GetProfilesByUserIdQuery): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: query.id }],\n          relations: ['profile'],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      return user.profiles.map(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesWithCriteriaRequest.html":{"url":"classes/GetProfilesWithCriteriaRequest.html","title":"class - GetProfilesWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/get-profiles-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfilesWithCriteriaRequest {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkByIdQuery.html":{"url":"classes/GetSocialNetworkByIdQuery.html","title":"class - GetSocialNetworkByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/query/get-social-network-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/query/get-social-network-by-id.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/query/get-social-network-by-id.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSocialNetworkByIdQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkByIdQueryHandler.html":{"url":"classes/GetSocialNetworkByIdQueryHandler.html","title":"class - GetSocialNetworkByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/query/get-social-network-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/query/get-social-network-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetSocialNetworkByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/query/get-social-network-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetSocialNetworkByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { SocialNetworkDto } from '../../../domain/dto/social-network.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { GetSocialNetworkByIdQuery } from '../../query/get-social-network-by-id.query';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetSocialNetworkByIdQuery)\nexport class GetSocialNetworkByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetSocialNetworkByIdQuery): Promise {\n    return await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: query.id }],\n      })\n      .then(socialNetwork => {\n        return new SocialNetworkDto(socialNetwork);\n      })\n      .catch(async error => {\n        await this.eventBus.publish(\n          new ErrorCustomEvent({\n            handler: 'GetSocialNetworkByIdQueryHandler',\n            localisation: 'SocialNetwork',\n            error: error.message,\n          }),\n        );\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkWithCriteriaQuery.html":{"url":"classes/GetSocialNetworkWithCriteriaQuery.html","title":"class - GetSocialNetworkWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/query/get-social-network-with-criteria.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSocialNetworkWithCriteriaQuery {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly isDeleted: boolean = false;\n\n  public readonly name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkWithCriteriaQueryHandler.html":{"url":"classes/GetSocialNetworkWithCriteriaQueryHandler.html","title":"class - GetSocialNetworkWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/query/get-social-network-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/query/get-social-network-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetSocialNetworkWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/query/get-social-network-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetSocialNetworkWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { SocialNetworkDto } from '../../../domain/dto/social-network.dto';\nimport { GetSocialNetworkWithCriteriaQuery } from '../../query/get-social-network-with-criteria.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetSocialNetworkWithCriteriaQuery)\nexport class GetSocialNetworkWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetSocialNetworkWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.socialNetworkRepository.createQueryBuilder('socialNetwork');\n      if (query.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.name) {\n        queryBuilder.where('socialNetwork.name = :nameSocialNetwork', {\n          nameSocialNetwork: query.name,\n        });\n      }\n\n      const socialNetworks = await queryBuilder.getMany();\n\n      return socialNetworks.map(\n        socialNetwork =>\n          new SocialNetworkDto({\n            ...socialNetwork,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'socialNetwork',\n          handler: 'GetSocialNetworkWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSocialNetworkWithCriteriaRequest.html":{"url":"classes/GetSocialNetworkWithCriteriaRequest.html","title":"class - GetSocialNetworkWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSocialNetworkWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/request/get-social-network-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/request/get-social-network-with-criteria.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/get-social-network-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/get-social-network-with-criteria.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSocialNetworkWithCriteriaRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly isDeleted: boolean;\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQuery.html":{"url":"classes/GetUserByEmailQuery.html","title":"class - GetUserByEmailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-email.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByEmailQuery {\n  constructor(public readonly email: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQueryHandler.html":{"url":"classes/GetUserByEmailQueryHandler.html","title":"class - GetUserByEmailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByEmailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByEmailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../domain/entities/user.entity';\nimport { GetUserByEmailQuery } from '../../query/get-user-by-email.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\n\n@QueryHandler(GetUserByEmailQuery)\nexport class GetUserByEmailQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByEmailQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ mail: query.email }],\n        select: ['id', 'mail', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQuery.html":{"url":"classes/GetUserByUsernameQuery.html","title":"class - GetUserByUsernameQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-username.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByUsernameQuery {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQueryHandler.html":{"url":"classes/GetUserByUsernameQueryHandler.html","title":"class - GetUserByUsernameQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByUsernameQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByUsernameQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { GetUserByUsernameQuery } from '../../query/get-user-by-username.query';\n\n@QueryHandler(GetUserByUsernameQuery)\nexport class GetUserByUsernameQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByUsernameQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesQueryHandler.html","title":"class - GetUserIfRefreshTokenMatchesQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne({\n        select: ['id', 'username', 'mail', 'currentHashedRefreshToken', 'roles'],\n        where: {\n          id: query.userId,\n        },\n      });\n\n      const isRefreshTokenMatching = await bcrypt.compare(query.refreshToken, user?.currentHashedRefreshToken || '');\n\n      if (isRefreshTokenMatching && user) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'GetUserIfRefreshTokenMatchesQueryHandler',\n          error: error,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQuery.html":{"url":"classes/GetUserLoginQuery.html","title":"class - GetUserLoginQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-login.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                plainTextPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainTextPassword: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainTextPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        plainTextPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserLoginQuery {\n  constructor(public readonly username: string, public readonly plainTextPassword: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQueryHandler.html":{"url":"classes/GetUserLoginQueryHandler.html","title":"class - GetUserLoginQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-login.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserLoginQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserLoginQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserLoginQuery } from '../../query/get-user-login.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { config } from 'dotenv';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\nconfig();\n@QueryHandler(GetUserLoginQuery)\nexport class GetUserLoginQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserLoginQuery): Promise {\n    try {\n      const userUsername = await this.userRepository.findOne({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n      });\n\n      if (userUsername) {\n        if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n          throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n        }\n        this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n\n        return userUsername;\n      } else {\n        const userUsername = await this.userRepository.findOne({\n          where: [{ mail: query.username }],\n          select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n        });\n        if (userUsername) {\n          if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n            throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n          }\n          this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n          return userUsername;\n        } else {\n          throw 'Error: no match found';\n        }\n      }\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQueryHandler.html":{"url":"classes/GetUserQueryHandler.html","title":"class - GetUserQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { UserListResponse } from '../../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery): Promise {\n    if (query.userId) {\n      return {\n        ...(await this.userRepository.findOneOrFail({\n          where: [{ id: query.userId }],\n        })),\n      };\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then(userList => {\n      userList.forEach(user => {\n        userListResponse.userList.push(new UserResponse({ ...user }));\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaDto.html":{"url":"classes/GetUserWithCriteriaDto.html","title":"class - GetUserWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/get-user-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserWithCriteriaDto {\n  public readonly createdFrom?: Date;\n  public readonly createdTo?: Date;\n\n  public readonly updatedFrom?: Date;\n  public readonly updatedTo?: Date;\n\n  public readonly deletedFrom?: Date;\n  public readonly deletedTo?: Date;\n  public readonly isDeleted?: boolean;\n\n  public readonly role?: string;\n\n  public readonly username?: string;\n  public readonly mail?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQuery.html":{"url":"classes/GetUserWithCriteriaQuery.html","title":"class - GetUserWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getUserWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getUserWithCriteriaDto\n                                                  \n                                                        \n                                                                        GetUserWithCriteriaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getUserWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetUserWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetUserWithCriteriaDto } from '../../domain/dto/get-user-with-criteria.dto';\n\nexport class GetUserWithCriteriaQuery {\n  constructor(public readonly getUserWithCriteriaDto: GetUserWithCriteriaDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQueryHandler.html":{"url":"classes/GetUserWithCriteriaQueryHandler.html","title":"class - GetUserWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserWithCriteriaQuery } from '../../query/get-user-with-criteria.query';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetUserWithCriteriaQuery)\nexport class GetUserWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserWithCriteriaQuery): Promise {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n\n    if (query.getUserWithCriteriaDto.isDeleted) {\n      queryBuilder.setFindOptions({ withDeleted: true });\n    }\n\n    if (query.getUserWithCriteriaDto.createdFrom) {\n      queryBuilder.andWhere('user.createdAt >= :from', { from: query.getUserWithCriteriaDto.createdFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.createdTo) {\n      queryBuilder.andWhere('user.createdAt = :from', { from: query.getUserWithCriteriaDto.updatedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.updatedTo) {\n      queryBuilder.andWhere('user.updatedAt = :from', { from: query.getUserWithCriteriaDto.deletedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.deletedTo) {\n      queryBuilder.andWhere('user.deletedAt \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdProfileDto.html":{"url":"classes/IdProfileDto.html","title":"class - IdProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/id-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class IdProfileDto {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIdException.html":{"url":"classes/InvalidIdException.html","title":"class - InvalidIdException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIdException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-id.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-id.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidIdException extends HttpException {\n  constructor() {\n    super('Invalid Id', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidMailException.html":{"url":"classes/InvalidMailException.html","title":"class - InvalidMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidMailException extends HttpException {\n  constructor() {\n    super('Mail is not valid', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUsernameException.html":{"url":"classes/InvalidUsernameException.html","title":"class - InvalidUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidUsernameException extends HttpException {\n  constructor() {\n    super('Invalid username exception', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { RequestUser } from '../interface/request-user.interface';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh-token') {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload): Promise {\n    const refreshToken = request?.headers?.authorization?.split(' ')[1];\n    return await this.userService.getUserIfRefreshTokenMatches(refreshToken || '', payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    return await this.userRepository.findOneOrFail({\n      where: [{ id: payload.userId }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListRolesDto.html":{"url":"classes/ListRolesDto.html","title":"class - ListRolesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListRolesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/list-roles.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class ListRolesDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(login: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'login',\n      passwordField: 'password',\n    });\n  }\n  async validate(login: string, password: string): Promise {\n    return this.authenticationService.login(login, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEvent.html":{"url":"classes/LoginOfUserEvent.html","title":"class - LoginOfUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/login-of-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOfUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'login-user';\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEventHandler.html":{"url":"classes/LoginOfUserEventHandler.html","title":"class - LoginOfUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: LoginOfUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                LoginOfUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(LoginOfUserEvent)\nexport class LoginOfUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: LoginOfUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with username: ' + event.username + ' logged in',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailDto.html":{"url":"classes/MailDto.html","title":"class - MailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/domain/dto/mail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  title?: string;\n\n  @ApiProperty()\n  message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailLandingPageDto.html":{"url":"classes/MailLandingPageDto.html","title":"class - MailLandingPageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailLandingPageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, mail: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailLandingPageDto {\n  constructor(public readonly id: string, public readonly mail: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailRequiredException.html":{"url":"classes/MailRequiredException.html","title":"class - MailRequiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailRequiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/mail-required.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/mail-required.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class MailRequiredException extends HttpException {\n  constructor() {\n    super('Mail is required', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailResponse.html":{"url":"classes/MailResponse.html","title":"class - MailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/response/mail.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotTheOwnerException.html":{"url":"classes/NotTheOwnerException.html","title":"class - NotTheOwnerException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotTheOwnerException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/not-the-owner.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/not-the-owner.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class NotTheOwnerException extends HttpException {\n  constructor() {\n    super('Not the owner', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/NotificationEntity.html":{"url":"entities/NotificationEntity.html","title":"entity - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                link\n                            \n                            \n                                profile\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversationEntity => conversationEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_read', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'link', type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'title', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { NotificationTypeEnum } from './enum/notification-type.enum';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity({ name: 'notification' })\nexport class NotificationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'title', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ type: 'enum', enum: NotificationTypeEnum, default: NotificationTypeEnum.INFO })\n  type: NotificationTypeEnum;\n\n  @Column({ name: 'is_read', type: 'boolean', default: false })\n  isRead: boolean;\n\n  @Column({ name: 'link', type: 'varchar', length: 255, nullable: true })\n  link: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversationEntity => conversationEntity.notifications, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OccupationController.html":{"url":"controllers/OccupationController.html","title":"controller - OccupationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OccupationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/occupation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /occupation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOccupation\n                            \n                            \n                                    Async\n                                deleteOccupation\n                            \n                            \n                                    Async\n                                getAllOccupations\n                            \n                            \n                                    Async\n                                getOccupationById\n                            \n                            \n                                    Async\n                                getOccupationsWithCriteria\n                            \n                            \n                                    Async\n                                restoreOccupation\n                            \n                            \n                                    Async\n                                softDeleteOccupation\n                            \n                            \n                                    Async\n                                updateOccupation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOccupation(createOccupationRequest: CreateOccupationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOccupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOccupations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOccupations()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationById(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationsWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationsWithCriteria(getOccupationsWithCriteriaRequest: GetOccupationWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getOccupationsWithCriteriaRequest\n                                    \n                                                GetOccupationWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteOccupation(occupationId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/soft-delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOccupation(occupationId: string, createOccupationRequest: CreateOccupationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/occupation/occupation.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOccupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { OccupationService } from './occupation.service';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { OccupationResponse } from './web/response/occupation-response';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { GetOccupationWithCriteriaRequest } from './web/request/get-occupation-with-criteria.request';\nimport { CreateOccupationRequest } from './web/request/create-occupation.request';\n\n@Controller('/occupation')\n@ApiTags('Occupation')\nexport class OccupationController {\n  constructor(private readonly occupationService: OccupationService) {}\n\n  @Get('/public/')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getAllOccupations(): Promise {\n    return await this.occupationService.getAllOccupation().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getOccupationById(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.getOccupationById(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getOccupationsWithCriteria(\n    @Body() getOccupationsWithCriteriaRequest: GetOccupationWithCriteriaRequest,\n  ): Promise {\n    return await this.occupationService.getOccupationWithCriteria(getOccupationsWithCriteriaRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/create')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createOccupation(@Body() createOccupationRequest: CreateOccupationRequest): Promise {\n    return await this.occupationService.createOccupation(createOccupationRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateOccupation(\n    @Param('id') occupationId: string,\n    @Body() createOccupationRequest: CreateOccupationRequest,\n  ): Promise {\n    return await this.occupationService.updateOccupation(occupationId, createOccupationRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.deleteOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/soft-delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async softDeleteOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.softDeleteOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreOccupation(@Param('id') occupationId: string): Promise {\n    return await this.occupationService.restoreOccupation(occupationId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationDto.html":{"url":"classes/OccupationDto.html","title":"class - OccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/occupation.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/entities/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})@Length(2, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/entities/occupation.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from '../../../entities-to-create/company.entity';\nimport { CardEntity } from '../../../entities-to-create/card.entity';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { Length } from 'class-validator';\n\n@Entity('occupation')\nexport class OccupationEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  @Length(2, 20)\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OccupationModule.html":{"url":"modules/OccupationModule.html","title":"module - OccupationModule","body":"\n                   \n\n\n\n\n    Modules\n    OccupationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OccupationModule\n\n\n\ncluster_OccupationModule_imports\n\n\n\ncluster_OccupationModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nOccupationModule\n\nOccupationModule\n\nOccupationModule -->\n\nApiLogModule->OccupationModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nOccupationModule -->\n\nApiLogService->OccupationModule\n\n\n\n\n\nOccupationService\n\nOccupationService\n\nOccupationModule -->\n\nOccupationService->OccupationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/occupation/occupation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            OccupationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OccupationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { OccupationEntity } from './domain/entities/occupation.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { OccupationController } from './occupation.controller';\nimport { OccupationService } from './occupation.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { RestoreOccupationCommandHandler } from './cqrs/handler/command/restore-occupation.command-handler';\nimport { SoftDeleteOccupationCommandHandler } from './cqrs/handler/command/soft-delete-occupation.command-handler';\nimport { GetAllOccupationQueryHandler } from './cqrs/handler/query/get-all-occupation.query-handler';\nimport { GetOccupationByIdQueryHandler } from './cqrs/handler/query/get-occupation-by-id.query-handler';\nimport { GetOccupationWithCriteriaQueryHandler } from './cqrs/handler/query/get-occupation-with-criteria.query-handler';\nimport { CreateOccupationEventHandler } from './cqrs/handler/event/create-occupation.event-handler';\nimport { SoftDeleteOccupationEventHandler } from './cqrs/handler/event/soft-delete-occupation.event-handler';\nimport { CreateOccupationCommandHandler } from './cqrs/handler/command/create-occupation.command-handler';\nimport { UpdateOccupationCommandHandler } from './cqrs/handler/command/update-occupation.command-handler';\nimport { RestoreOccupationEventHandler } from './cqrs/handler/event/restore-occupation.event-handler';\nimport { DeleteOccupationCommandHandler } from './cqrs/handler/command/delete-occupation.command-handler';\nimport { UpdateOccupationEventHandler } from './cqrs/handler/event/update-occupation.event-handler';\nimport { DeleteOccupationEventHandler } from './cqrs/handler/event/delete-occupation.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [OccupationController],\n  providers: [\n    OccupationService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateOccupationCommandHandler,\n    DeleteOccupationCommandHandler,\n    RestoreOccupationCommandHandler,\n    SoftDeleteOccupationCommandHandler,\n    UpdateOccupationCommandHandler,\n    // Query handlers\n    GetAllOccupationQueryHandler,\n    GetOccupationByIdQueryHandler,\n    GetOccupationWithCriteriaQueryHandler,\n    // Event handlers\n    CreateOccupationEventHandler,\n    DeleteOccupationEventHandler,\n    SoftDeleteOccupationEventHandler,\n    UpdateOccupationEventHandler,\n    RestoreOccupationEventHandler,\n  ],\n})\nexport class OccupationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationNotFoundException.html":{"url":"classes/OccupationNotFoundException.html","title":"class - OccupationNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/occupation-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/occupation-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class OccupationNotFoundException extends HttpException {\n  constructor() {\n    super('Occupation not found', 404);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OccupationResponse.html":{"url":"classes/OccupationResponse.html","title":"class - OccupationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OccupationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/response/occupation-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/response/occupation-response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/response/occupation-response.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OccupationResponse {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OccupationService.html":{"url":"injectables/OccupationService.html","title":"injectable - OccupationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OccupationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/occupation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOccupation\n                            \n                            \n                                    Async\n                                deleteOccupation\n                            \n                            \n                                    Async\n                                getAllOccupation\n                            \n                            \n                                    Async\n                                getOccupationById\n                            \n                            \n                                    Async\n                                getOccupationWithCriteria\n                            \n                            \n                                    Async\n                                restoreOccupation\n                            \n                            \n                                    Async\n                                softDeleteOccupation\n                            \n                            \n                                    Async\n                                updateOccupation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/occupation.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOccupation(occupationRequest: CreateOccupationRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationRequest\n                                    \n                                                CreateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOccupation()\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationById(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOccupationWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOccupationWithCriteria(criteria: GetOccupationWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                GetOccupationWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteOccupation(occupationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateOccupation\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOccupation(occupationId: string, occupationRequest: UpdateOccupationRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/occupation.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    occupationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    occupationRequest\n                                    \n                                                UpdateOccupationRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { GetAllOccupationQuery } from './cqrs/query/get-all-occupation.query';\nimport { QueryErrorException } from '../../util/exception/custom-http-exception/query-error.exception';\nimport { OccupationDto } from './domain/dto/occupation.dto';\nimport { OccupationResponse } from './web/response/occupation-response';\nimport { OccupationNotFoundException } from '../../util/exception/custom-http-exception/occupation-not-found.exception';\nimport { GetOccupationByIdQuery } from './cqrs/query/get-occupation-by-id.query';\nimport { GetOccupationWithCriteriaRequest } from './web/request/get-occupation-with-criteria.request';\nimport { GetOccupationWithCriteriaQuery } from './cqrs/query/get-occupation-with-criteria.query';\nimport { GetOccupationWithCriteriaDto } from './domain/dto/get-occupation-with-criteria.dto';\nimport { CreateOccupationCommand } from './cqrs/command/create-occupation.command';\nimport { CreateOccupationDto } from './domain/dto/create-occupation.dto';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { DuplicateNameException } from '../../util/exception/custom-http-exception/duplicate-name.exception';\nimport { CreateOccupationRequest } from './web/request/create-occupation.request';\nimport { UpdateOccupationRequest } from './web/request/update-occupation.request';\nimport { UpdateOccupationDto } from './domain/dto/update-occupation.dto';\nimport { UpdateOccupationCommand } from './cqrs/command/update-occupation.command';\nimport { DeleteOccupationCommand } from './cqrs/command/delete-occupation.command';\nimport { SoftDeleteOccupationCommand } from './cqrs/command/soft-delete-occupation.command';\nimport { RestoreOccupationCommand } from './cqrs/command/restore-occupation.command';\n\n@Injectable()\nexport class OccupationService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async getAllOccupation(): Promise {\n    try {\n      return await this.queryBus.execute(new GetAllOccupationQuery({})).then((occupationsDto: OccupationDto[]) => {\n        return occupationsDto.map(occupationDto => {\n          return new OccupationResponse(occupationDto);\n        });\n      });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async getOccupationById(occupationId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(new GetOccupationByIdQuery({ occupationId: occupationId }))\n        .then((occupationDto: OccupationDto) => {\n          return new OccupationResponse(occupationDto);\n        });\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else throw new QueryErrorException();\n    }\n  }\n\n  async getOccupationWithCriteria(criteria: GetOccupationWithCriteriaRequest): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetOccupationWithCriteriaQuery({\n            criteria: new GetOccupationWithCriteriaDto({\n              name: criteria.name,\n              isDeleted: criteria.isDeleted,\n            }),\n          }),\n        )\n        .then((occupationsDto: OccupationDto[]) => {\n          return occupationsDto.map(occupationDto => {\n            return new OccupationResponse(occupationDto);\n          });\n        });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async createOccupation(occupationRequest: CreateOccupationRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateOccupationCommand({\n          createOccupationDto: new CreateOccupationDto({\n            name: occupationRequest.name,\n          }),\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Duplicate name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async updateOccupation(occupationId: string, occupationRequest: UpdateOccupationRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateOccupationCommand({\n          occupationId: occupationId,\n          updateOccupationDto: new UpdateOccupationDto({\n            name: occupationRequest.name,\n          }),\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error.message === 'Duplicate name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async deleteOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async softDeleteOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new SoftDeleteOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n\n  async restoreOccupation(occupationId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreOccupationCommand({\n          occupationId: occupationId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Occupation not found') throw new OccupationNotFoundException();\n      else if (error instanceof InvalidClassException) throw error;\n      else throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteMyProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getAllProfiles\n                            \n                            \n                                    Async\n                                getMyProfiles\n                            \n                            \n                                    Async\n                                getProfileById\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                restoreProfile\n                            \n                            \n                                    Async\n                                updateMyProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(profile: CreateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create-profile')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                CreateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMyProfile(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@ApiResponse({status: 200, description: 'List of profiles', content: undefined})@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyProfiles(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-my-profiles')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileById(requestUser: RequestUser, profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/with-user-id/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfilesWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreProfile(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyProfile(requestUser: RequestUser, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(profileId: string, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, Req, UseGuards } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ProfileService } from './profile.service';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\nimport { CreateProfileRequest } from './domain/request/create-profile.request';\n\n@Controller('profile')\n@ApiTags('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  /**\n   * @api {get} /profile Get all profiles\n   * @apiName GetallProfiles\n   * @apiGroup Profile\n   * @apiVersion 0.0.8\n   * @apiDescription Get all profiles\n   * @apiSuccess {Object[]} profiles List of profiles\n   */\n  @Get('/admin/')\n  @ApiResponse({\n    status: 200,\n    description: 'List of profiles',\n    content: {\n      'application/json': {\n        example: [\n          { id: 1, name: 'Profile 1' },\n          { id: 2, name: 'Profile 2' },\n        ],\n      },\n    },\n  })\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAllProfiles(): Promise {\n    return await this.profileService.getProfiles().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getProfileById(@Req() requestUser: RequestUser, @Param('id') profileId: string): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.getMyProfile(id, profileId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/admin/with-user-id/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfileByUserId(@Param('id') userId: string): Promise {\n    return await this.profileService.getProfileByUserId(userId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/get-my-profiles')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMyProfiles(@Req() requestUser: RequestUser): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.getProfileByUserId(id).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfilesWithCriteria(\n    @Body() getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    return await this.profileService.getProfilesWithCriteria(getProfilesWithCriteriaRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateProfile(@Param('id') profileId: string, @Body() profile: UpdateProfileRequest): Promise {\n    return await this.profileService.updateProfile(profileId, profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/public/update-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMyProfile(@Req() requestUser: RequestUser, @Body() profile: UpdateProfileRequest): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.updateProfile(id, profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/create-profile')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createProfile(@Body() profile: CreateProfileRequest): Promise {\n    return await this.profileService.createProfile(profile).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteProfile(@Param('id') profileId: string): Promise {\n    return await this.profileService.deleteProfile(profileId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Delete('/admin/delete-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMyProfile(@Req() requestUser: RequestUser): Promise {\n    return await this.profileService.deleteProfile(requestUser.user.id).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreProfile(@Param('id') profileId: string): Promise {\n    return await this.profileService.restoreProfile(profileId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/entities/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                notifications\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                roleProfile\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: RoleProfileEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../../../user/domain/entities/user.entity';\nimport { CardEntity } from '../../../entities-to-create/card.entity';\nimport { OccupationEntity } from '../../../occupation/domain/entities/occupation.entity';\nimport { CompanyEmployeeEntity } from '../../../entities-to-create/company-employee.entity';\nimport { MediaEntity } from '../../../entities-to-create/media.entity';\nimport { JoinedConversation } from '../../../entities-to-create/joined-conversation.entity';\nimport CompanyEntity from '../../../entities-to-create/company.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { RoleProfileEnum } from '../enum/role-profile.enum';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  usernameProfile: string;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n  @Column({ type: 'enum', enum: RoleProfileEnum, default: RoleProfileEnum.CLASSIC })\n  roleProfile: RoleProfileEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { OccupationEntity } from '../occupation/domain/entities/occupation.entity';\nimport { ProfileEntity } from './domain/entities/profile.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { CreateProfileCommandHandler } from './cqrs/handler/command/create-profile.command-handler';\nimport { ShiftProfileOwnerCommandHandler } from './cqrs/handler/command/shift-profile-owner.command-handler';\nimport { UpdateOccupationsProfileCommandHandler } from './cqrs/handler/command/update-occupations-profile.command-handler';\nimport { GetProfilesByUserIdQueryHandler } from './cqrs/handler/query/get-profiles-by-user-id.query-handler';\nimport { GetAllProfileQueryHandler } from './cqrs/handler/query/get-all-profile.query-handler';\nimport { GetProfileWithCriteriaQueryHandler } from './cqrs/handler/query/get-profile-with-criteria.query-handler';\nimport { DeleteProfileEventHandler } from './cqrs/handler/event/delete-profile.event-handler';\nimport { UpdateProfileEventHandler } from './cqrs/handler/event/update-profile.event-handler';\nimport { DeleteProfileCommandHandler } from './cqrs/handler/command/delete-profile.command-handler';\nimport { GetProfileByIdQueryHandler } from './cqrs/handler/query/get-profile-by-id.query-handler';\nimport { UpdateProfileCommandHandler } from './cqrs/handler/command/update-profile.command-handler';\nimport { SoftDeleteProfileEventHandler } from './cqrs/handler/event/soft-delete-profile.event-handler';\nimport { CreateProfileEventHandler } from './cqrs/handler/event/create-profile.event-handler';\nimport { ShiftProfileOwnerEventHandler } from './cqrs/handler/event/shift-profile-owner.event-handler';\nimport { SoftDeleteProfileCommandHandler } from './cqrs/handler/command/soft-delete-profile.command-handler';\nimport { UpdateOccupationsProfileEventHandler } from './cqrs/handler/event/update-occupations-profile.event-handler';\nimport { RestoreProfileCommandHandler } from './cqrs/handler/command/restore-profile.command-handler';\nimport { RestoreProfileEventHandler } from './cqrs/handler/event/restore-profile.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, ProfileEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [ProfileController],\n  providers: [\n    ProfileService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateProfileCommandHandler,\n    DeleteProfileCommandHandler,\n    ShiftProfileOwnerCommandHandler,\n    SoftDeleteProfileCommandHandler,\n    UpdateProfileCommandHandler,\n    UpdateOccupationsProfileCommandHandler,\n    RestoreProfileCommandHandler,\n    // Query handlers\n    GetProfileByIdQueryHandler,\n    GetProfilesByUserIdQueryHandler,\n    GetAllProfileQueryHandler,\n    GetProfileWithCriteriaQueryHandler,\n    // Event handlers\n    CreateProfileEventHandler,\n    DeleteProfileEventHandler,\n    ShiftProfileOwnerEventHandler,\n    SoftDeleteProfileEventHandler,\n    UpdateProfileEventHandler,\n    UpdateOccupationsProfileEventHandler,\n    RestoreProfileEventHandler,\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileResponse.html":{"url":"classes/ProfileResponse.html","title":"class - ProfileResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/response/profile.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProfileResponse {\n  public readonly id: string;\n  public readonly userId: string;\n  public readonly usernameProfile: string;\n\n  public readonly isDeleted?: boolean;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getMyProfile\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfiles\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                restoreProfile\n                            \n                            \n                                    Async\n                                shiftProfileOwner\n                            \n                            \n                                    Async\n                                softDeleteProfile\n                            \n                            \n                                    Async\n                                updateMyProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/profile.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(createProfileRequest: CreateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileRequest\n                                    \n                                                CreateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyProfile(userId: string, profileId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfiles()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfileWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        shiftProfileOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shiftProfileOwnerRequest\n                                    \n                                                ShiftProfileOwnerRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyProfile(id: string, updateProfileRequest: UpdateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileRequest\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, updateProfileRequest: UpdateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileRequest\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { CreateProfileCommand } from './cqrs/command/create-profile.command';\nimport { InvalidIdException } from '../../util/exception/custom-http-exception/invalid-id.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { InvalidParameterEntityException } from '../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { DeleteProfileCommand } from './cqrs/command/delete-profile.command';\nimport { UpdateProfileCommand } from './cqrs/command/update-profile.command';\nimport { CreateProfileRequest } from './domain/request/create-profile.request';\nimport { SoftDeleteProfileCommand } from './cqrs/command/soft-delete-profile.command';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\nimport { UpdateOccupationsProfileCommand } from './cqrs/command/update-occupations-profile.command';\nimport { ShiftProfileOwnerCommand } from './cqrs/command/shift-profile-owner.command';\nimport { ShiftProfileOwnerRequest } from './domain/request/shift-profile-owner.request';\nimport { GetProfileByIdQuery } from './cqrs/query/get-profile-by-id.query';\nimport { GetAllProfileQuery } from './cqrs/query/get-all-profile.query';\nimport { GetProfileWithCriteriaQuery } from './cqrs/query/get-profile-with-criteria.query';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { GetProfilesByUserIdQuery } from './cqrs/query/get-profiles-by-user-id.query';\nimport { NotTheOwnerException } from '../../util/exception/custom-http-exception/not-the-owner.exception';\nimport { RestoreProfileCommand } from './cqrs/command/restore-profile.command';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createProfile(createProfileRequest: CreateProfileRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateProfileCommand({\n          createProfileDto: {\n            usernameProfile: createProfileRequest.usernameProfile,\n            roleProfile: createProfileRequest.roleProfile,\n          },\n          userId: createProfileRequest.idUser,\n          occupationsId: createProfileRequest.occupationsId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async deleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async softDeleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new SoftDeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async updateProfile(id: string, updateProfileRequest: UpdateProfileRequest): Promise {\n    try {\n      if (updateProfileRequest.occupationsId.length > 0) {\n        await this.commandBus.execute(\n          new UpdateOccupationsProfileCommand({\n            id: updateProfileRequest.id,\n            occupations: updateProfileRequest.occupationsId,\n          }),\n        );\n      }\n      await this.commandBus.execute(\n        new UpdateProfileCommand({\n          updateProfileDto: {\n            usernameProfile: updateProfileRequest.usernameProfile,\n            roleProfile: updateProfileRequest.roleProfile,\n          },\n          id: updateProfileRequest.id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async updateMyProfile(id: string, updateProfileRequest: UpdateProfileRequest): Promise {\n    try {\n      await this.queryBus\n        .execute(\n          new GetProfileByIdQuery({\n            id: updateProfileRequest.id,\n          }),\n        )\n        .then(profile => {\n          if (profile.userId !== id) {\n            throw new Error('User is not he owner of the profile');\n          }\n        });\n      if (updateProfileRequest.occupationsId.length > 0) {\n        await this.commandBus.execute(\n          new UpdateOccupationsProfileCommand({\n            id: id,\n            occupations: updateProfileRequest.occupationsId,\n          }),\n        );\n      }\n      await this.commandBus.execute(\n        new UpdateProfileCommand({\n          updateProfileDto: {\n            usernameProfile: updateProfileRequest.usernameProfile,\n            roleProfile: updateProfileRequest.roleProfile,\n          },\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else if (e.message === 'User is not he owner of the profile') throw new NotTheOwnerException();\n      else throw new Error(e);\n    }\n  }\n\n  async shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new ShiftProfileOwnerCommand({\n          profileId: shiftProfileOwnerRequest.profileId,\n          userId: shiftProfileOwnerRequest.userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else throw new Error(e);\n    }\n  }\n\n  // Get\n  async getProfile(id: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileByIdQuery({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async getProfiles(): Promise {\n    try {\n      return await this.queryBus.execute(new GetAllProfileQuery());\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfilesWithCriteria(\n    getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileWithCriteriaQuery({\n          getProfileWithCriteriaDto: {\n            usernameProfile: getProfileWithCriteriaRequest.usernameProfile,\n            roleProfile: getProfileWithCriteriaRequest.roleProfile,\n            isDeleted: getProfileWithCriteriaRequest.isDeleted,\n          },\n        }),\n      );\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfileByUserId(userId: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfilesByUserIdQuery({\n          id: userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      throw new Error(e);\n    }\n  }\n\n  async getMyProfile(userId: string, profileId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetProfileByIdQuery({\n            id: profileId,\n          }),\n        )\n        .then(profile => {\n          if (profile.userId !== userId) {\n            throw new Error('User is not he owner of the profile');\n          }\n          return profile;\n        });\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e.message === 'User is not he owner of the profile') throw new NotTheOwnerException();\n      else throw new Error(e);\n    }\n  }\n\n  async restoreProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreProfileCommand({\n          profileId: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryErrorException.html":{"url":"classes/QueryErrorException.html","title":"class - QueryErrorException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryErrorException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/query-error.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/query-error.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport class QueryErrorException extends HttpException {\n  constructor() {\n    super('Query Error', 500);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReferralCodeEntity.html":{"url":"entities/ReferralCodeEntity.html","title":"entity - ReferralCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReferralCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/referal-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                subscription\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ABC123', minLength: 6, maxLength: 20})@Column({unique: true})@IsString()@Length(6, 10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, required: false})@Column({type: 'timestamp', nullable: true})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eb823d92-bf55-4210-8e24-89f4011bb96d'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@ManyToOne(undefined, user => user.referralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SubscriptionEntity, required: false})@ManyToOne(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@OneToOne(undefined, user => user.usedReferralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsOptional, IsString, Length } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity('referral_code')\nexport class ReferralCodeEntity {\n  @ApiProperty({ example: 'eb823d92-bf55-4210-8e24-89f4011bb96d' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({ example: 'ABC123', minLength: 6, maxLength: 20 })\n  @Column({ unique: true })\n  @IsString()\n  @Length(6, 10)\n  code: string;\n\n  @ApiProperty({ type: () => UserEntity })\n  @OneToOne(() => UserEntity, user => user.usedReferralCodes)\n  usedBy: UserEntity;\n\n  @ApiProperty({ type: () => UserEntity })\n  @ManyToOne(() => UserEntity, user => user.referralCodes)\n  owner: UserEntity;\n\n  @ApiProperty({ type: () => SubscriptionEntity, required: false })\n  @ManyToOne(() => SubscriptionEntity, { nullable: true })\n  subscription: SubscriptionEntity;\n\n  @ApiProperty({ type: () => Date, required: false })\n  @Column({ type: 'timestamp', nullable: true })\n  @IsOptional()\n  @IsDateString()\n  expiresAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, mail: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(public readonly username: string, public readonly mail: string, public readonly password: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEvent.html":{"url":"classes/RegisterEvent.html","title":"class - RegisterEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event/register.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/event/register.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event/register.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterEvent {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEventHandler.html":{"url":"classes/RegisterEventHandler.html","title":"class - RegisterEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event-handler/register.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterEventHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RegisterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RegisterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\nimport { RegisterEvent } from '../event/register.event';\n\n@EventsHandler(RegisterEvent)\nexport class RegisterEventHandler implements IEventHandler {\n  logger_console = new Logger('RegisterEventHandler');\n\n  handle(event: RegisterEvent): void {\n    logger.info('New user have registered  with id ' + event.userId);\n\n    this.logger_console.log('New user have registered with id ' + event.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/command/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../../command/register.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { RegisterEvent } from '../../event/register.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as bcrypt from 'bcrypt';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: RegisterCommand): Promise {\n    if (await this.isDuplicatedUsername(command.username)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n      );\n      throw new DuplicateUsernameException();\n    }\n    if (await this.isDuplicatedEmail(command.mail)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n      );\n      throw new DuplicateMailException();\n    }\n\n    if (this.isValidPassword(command.password)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n      );\n      throw new InvalidPasswordException();\n    }\n\n    if (command.mail) {\n      if (!this.isValidEmail(command.mail)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n        );\n        throw new InvalidMailException();\n      }\n    }\n\n    if (command.username) {\n      if (!this.isValidUsername(command.username)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n        );\n        throw new InvalidUsernameException();\n      }\n    }\n\n    const newUser = new UserEntity({\n      mail: command.mail,\n      password: bcrypt.hashSync(command.password, 10),\n      username: command.username,\n      referralCode: await this.generateUniqueReferralCode(),\n    });\n    const err = await validate(newUser);\n    if (err.length > 0) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid parameters :' + err }),\n      );\n      throw new InvalidParameterEntityException(err);\n    }\n\n    const insertedUser = await this.userRepository.save(newUser);\n    this.eventBus.publish(new RegisterEvent(insertedUser.id));\n    return insertedUser;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return !this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommandHandler.html":{"url":"classes/RemoveRefreshTokenCommandHandler.html","title":"class - RemoveRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: undefined,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RemoveRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEvent.html":{"url":"classes/RemoveRefreshTokenEvent.html","title":"class - RemoveRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/remove-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-refresh-token'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'remove-refresh-token';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEventHandler.html":{"url":"classes/RemoveRefreshTokenEventHandler.html","title":"class - RemoveRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenEvent } from '../../event/remove-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RemoveRefreshTokenEvent)\nexport class RemoveRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: RemoveRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' removed',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = this.VERBOSE == VerboseLogEnum.DEBUG ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req?.headers['user-agent']?.split('(')[1]?.split(')')[0]?.split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationCommand.html":{"url":"classes/RestoreOccupationCommand.html","title":"class - RestoreOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/restore-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/restore-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/restore-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationCommandHandler.html":{"url":"classes/RestoreOccupationCommandHandler.html","title":"class - RestoreOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/restore-occupation.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Repository } from 'typeorm';\nimport { RestoreOccupationCommand } from '../../command/restore-occupation.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreOccupationEvent } from '../../event/restore-occupation.event';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\n\n@CommandHandler(RestoreOccupationCommand)\nexport class RestoreOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreOccupationCommand): Promise {\n    try {\n      await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n\n      await this.occupationRepository.restore(command.occupationId);\n      this.eventBus.publish(\n        new RestoreOccupationEvent({\n          occupationId: command.occupationId,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationEvent.html":{"url":"classes/RestoreOccupationEvent.html","title":"class - RestoreOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/restore-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/restore-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly occupationId: string;\n\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'restore-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreOccupationEventHandler.html":{"url":"classes/RestoreOccupationEventHandler.html","title":"class - RestoreOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/restore-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreOccupationEvent } from '../../event/restore-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreOccupationEvent)\nexport class RestoreOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileCommand.html":{"url":"classes/RestoreProfileCommand.html","title":"class - RestoreProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/restore-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/restore-profile.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/restore-profile.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreProfileCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileCommandHandler.html":{"url":"classes/RestoreProfileCommandHandler.html","title":"class - RestoreProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/restore-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreProfileEvent } from '../../event/restore-profile.event';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreProfileCommand } from '../../command/restore-profile.command';\n\n@CommandHandler(RestoreProfileCommand)\nexport class RestoreProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreProfileCommand): Promise {\n    try {\n      await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.profileId }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.restore(command.profileId);\n      this.eventBus.publish(\n        new RestoreProfileEvent({\n          profileId: command.profileId,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileEvent.html":{"url":"classes/RestoreProfileEvent.html","title":"class - RestoreProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/restore-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/restore-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreProfileEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly profileId: string;\n\n  public readonly module: string = 'profile';\n  public readonly method: string = 'restore-profile';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreProfileEventHandler.html":{"url":"classes/RestoreProfileEventHandler.html","title":"class - RestoreProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/restore-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { RestoreProfileEvent } from '../../event/restore-profile.event';\n\n@EventsHandler(RestoreProfileEvent)\nexport class RestoreProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.profileId + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkCommand.html":{"url":"classes/RestoreSocialNetworkCommand.html","title":"class - RestoreSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/restore-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/restore-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/restore-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkCommandHandler.html":{"url":"classes/RestoreSocialNetworkCommandHandler.html","title":"class - RestoreSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/restore-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/restore-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/restore-social-network.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreSocialNetworkCommand } from '../../command/restore-social-network.command';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RestoreSocialNetworkEvent } from '../../event/restore-social-network.event';\n\n@CommandHandler(RestoreSocialNetworkCommand)\nexport class RestoreSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: command.id }],\n        withDeleted: true,\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .restore(socialNetwork.id)\n          .then(async () => {\n            await this.eventBus.publish(new RestoreSocialNetworkEvent(command.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not restored');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkEvent.html":{"url":"classes/RestoreSocialNetworkEvent.html","title":"class - RestoreSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/restore-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/restore-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'restore-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreSocialNetworkEventHandler.html":{"url":"classes/RestoreSocialNetworkEventHandler.html","title":"class - RestoreSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/restore-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/restore-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/restore-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreSocialNetworkEvent } from '../../event/restore-social-network.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreSocialNetworkEvent)\nexport class RestoreSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommand.html":{"url":"classes/RestoreUserCommand.html","title":"class - RestoreUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/restore-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommandHandler.html":{"url":"classes/RestoreUserCommandHandler.html","title":"class - RestoreUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/restore-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreUserCommand } from '../../command/restore-user.command';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(RestoreUserCommand)\nexport class RestoreUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreUserCommand): Promise {\n    try {\n      if (!command.id) throw new Error('User id is required');\n      try {\n        await this.userRepository.findOneOrFail({ where: [{ id: command.id }], withDeleted: true });\n      } catch (e) {\n        throw new Error('User not found');\n      }\n      await this.userRepository.restore(command.id);\n      this.eventBus.publish(new RestoreUserEvent(command.id));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RestoreUserCommandHandler', error }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEvent.html":{"url":"classes/RestoreUserEvent.html","title":"class - RestoreUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/restore-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'restore-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEventHandler.html":{"url":"classes/RestoreUserEventHandler.html","title":"class - RestoreUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/restore-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreUserEvent)\nexport class RestoreUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SamePasswordException.html":{"url":"classes/SamePasswordException.html","title":"class - SamePasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SamePasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/same-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/same-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class SamePasswordException extends HttpException {\n  constructor() {\n    super('New password is the same as old password', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommand.html":{"url":"classes/SendMailCommand.html","title":"class - SendMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/command/send-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly email: string;\n\n  public readonly title?: string | undefined;\n\n  public readonly message?: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommandHandler.html":{"url":"classes/SendMailCommandHandler.html","title":"class - SendMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SendMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SendMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { SendMailCommand } from '../../command/send-mail.command';\n\n@CommandHandler(SendMailCommand)\nexport class SendMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_LOG') private client: ClientProxy, private readonly eventBus: EventBus) {}\n  async execute(command: SendMailCommand): Promise {\n    this.client.emit('send-email', command);\n    this.eventBus.publish(\n      new SendMailEvent({\n        email: command.email,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEvent.html":{"url":"classes/SendMailEvent.html","title":"class - SendMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/event/send-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'send-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly module: string = 'api-mail';\n  public readonly method: string = 'send-mail';\n\n  public readonly email: string;\n\n  public readonly title?: string;\n\n  public readonly message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEventHandler.html":{"url":"classes/SendMailEventHandler.html","title":"class - SendMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SendMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SendMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SendMailEvent)\nexport class SendMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: SendMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Mail sent to: ' + event.email,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommandHandler.html":{"url":"classes/SetCurrentRefreshTokenCommandHandler.html","title":"class - SetCurrentRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(command.refreshToken, 10);\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'SetCurrentRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEvent.html":{"url":"classes/SetCurrentRefreshTokenEvent.html","title":"class - SetCurrentRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/set-current-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEventHandler.html":{"url":"classes/SetCurrentRefreshTokenEventHandler.html","title":"class - SetCurrentRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: SetCurrentRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SetCurrentRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenEvent } from '../../event/set-current-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SetCurrentRefreshTokenEvent)\nexport class SetCurrentRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: SetCurrentRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' set',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommand.html":{"url":"classes/ShiftProfileOwnerCommand.html","title":"class - ShiftProfileOwnerCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/shift-profile-owner.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerCommand {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommandHandler.html":{"url":"classes/ShiftProfileOwnerCommandHandler.html","title":"class - ShiftProfileOwnerCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: ShiftProfileOwnerCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                ShiftProfileOwnerCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerCommand } from '../../command/shift-profile-owner.command';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\n\n@CommandHandler(ShiftProfileOwnerCommand)\nexport class ShiftProfileOwnerCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: ShiftProfileOwnerCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.profileId }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      profile.user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n      await this.profileRepository.save(profile);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEvent.html":{"url":"classes/ShiftProfileOwnerEvent.html","title":"class - ShiftProfileOwnerEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/shift-profile-owner.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'shift-profile-owner'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerEvent {\n  public readonly id: string;\n  public readonly owner: string;\n\n  public readonly module: string = 'profile';\n  public readonly method: string = 'shift-profile-owner';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEventHandler.html":{"url":"classes/ShiftProfileOwnerEventHandler.html","title":"class - ShiftProfileOwnerEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: ShiftProfileOwnerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ShiftProfileOwnerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerEvent } from '../../event/shift-profile-owner.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(ShiftProfileOwnerEvent)\nexport class ShiftProfileOwnerEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: ShiftProfileOwnerEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' have been shifted to user with id: ' + event.owner + '',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerRequest.html":{"url":"classes/ShiftProfileOwnerRequest.html","title":"class - ShiftProfileOwnerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/shift-profile-owner.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerRequest {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  mail: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SocialNetworkController.html":{"url":"controllers/SocialNetworkController.html","title":"controller - SocialNetworkController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SocialNetworkController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/social-network.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                social-network\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSocialNetwork\n                            \n                            \n                                    Async\n                                deleteSocialNetwork\n                            \n                            \n                                    Async\n                                getAllSocialNetworks\n                            \n                            \n                                    Async\n                                getSocialNetworkById\n                            \n                            \n                                    Async\n                                getSocialNetworksWithCriteria\n                            \n                            \n                                    Async\n                                restoreSocialNetwork\n                            \n                            \n                                    Async\n                                updateSocialNetwork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSocialNetwork(createSocialNetworkRequest: CreateSocialNetworkRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSocialNetworkRequest\n                                    \n                                                CreateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSocialNetwork(socialNetworkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSocialNetworks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSocialNetworks()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworkById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworkById(socialNetworkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworksWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworksWithCriteria(getSocialNetworksWithCriteriaRequest: GetSocialNetworkWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getSocialNetworksWithCriteriaRequest\n                                    \n                                                GetSocialNetworkWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSocialNetwork(socialNetworkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/restore/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSocialNetwork(socialNetworkId: string, createSocialNetworkRequest: UpdateSocialNetworkRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/social-network/social-network.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createSocialNetworkRequest\n                                    \n                                                UpdateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { SocialNetworkService } from './social-network.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateSocialNetworkRequest } from './web/request/create-social-network.request';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { SocialNetworkResponse } from './web/response/social-network.response';\nimport { GetSocialNetworkWithCriteriaRequest } from './web/request/get-social-network-with-criteria.request';\nimport { UpdateSocialNetworkRequest } from './web/request/update-social-network.request';\n\n@Controller('social-network')\n@ApiTags('SocialNetwork')\nexport class SocialNetworkController {\n  constructor(private readonly socialNetworkService: SocialNetworkService) {}\n\n  @Get('/public/')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getAllSocialNetworks(): Promise {\n    return await this.socialNetworkService.getAllSocialNetwork().catch(error => {\n      throw error;\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getSocialNetworkById(@Param('id') socialNetworkId: string): Promise {\n    return await this.socialNetworkService.getSocialNetworkById(socialNetworkId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getSocialNetworksWithCriteria(\n    @Body() getSocialNetworksWithCriteriaRequest: GetSocialNetworkWithCriteriaRequest,\n  ): Promise {\n    return await this.socialNetworkService\n      .getSocialNetworkWithCriteria(getSocialNetworksWithCriteriaRequest)\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  @Post('/admin/create')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createSocialNetwork(@Body() createSocialNetworkRequest: CreateSocialNetworkRequest): Promise {\n    return await this.socialNetworkService.createSocialNetwork(createSocialNetworkRequest).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/update/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateSocialNetwork(\n    @Param('id') socialNetworkId: string,\n    @Body() createSocialNetworkRequest: UpdateSocialNetworkRequest,\n  ): Promise {\n    return await this.socialNetworkService\n      .updateSocialNetwork(socialNetworkId, createSocialNetworkRequest)\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  @Delete('/admin/delete/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteSocialNetwork(@Param('id') socialNetworkId: string): Promise {\n    return await this.socialNetworkService.deleteSocialNetwork(socialNetworkId).catch(error => {\n      throw error;\n    });\n  }\n\n  @Put('/admin/restore/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreSocialNetwork(@Param('id') socialNetworkId: string): Promise {\n    return await this.socialNetworkService.restoreSocialNetwork(socialNetworkId).catch(error => {\n      throw error;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialNetworkDto.html":{"url":"classes/SocialNetworkDto.html","title":"class - SocialNetworkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialNetworkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/domain/dto/social-network.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/dto/social-network.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialNetworkDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/domain/entities/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                color\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/domain/entities/social-network.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from '../../../entities-to-create/card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity extends BaseEntity {\n  constructor(partial: Partial) {\n    super();\n    Object.assign(this, partial);\n  }\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  @Column()\n  color: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialNetworkModule.html":{"url":"modules/SocialNetworkModule.html","title":"module - SocialNetworkModule","body":"\n                   \n\n\n\n\n    Modules\n    SocialNetworkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SocialNetworkModule\n\n\n\ncluster_SocialNetworkModule_imports\n\n\n\ncluster_SocialNetworkModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nSocialNetworkModule\n\nSocialNetworkModule\n\nSocialNetworkModule -->\n\nApiLogModule->SocialNetworkModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nSocialNetworkModule -->\n\nApiLogService->SocialNetworkModule\n\n\n\n\n\nSocialNetworkService\n\nSocialNetworkService\n\nSocialNetworkModule -->\n\nSocialNetworkService->SocialNetworkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/social-network/social-network.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            SocialNetworkService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SocialNetworkController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SocialNetworkEntity } from './domain/entities/social-network.entity';\nimport { SocialNetworkController } from './social-network.controller';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { GetAllSocialNetworkQueryHandler } from './cqrs/handler/query/get-all-social-network.query-handler';\nimport { GetSocialNetworkWithCriteriaQueryHandler } from './cqrs/handler/query/get-social-network-with-criteria.query-handler';\nimport { RestoreSocialNetworkEventHandler } from './cqrs/handler/event/restore-social-network.event-handler';\nimport { SoftDeleteSocialNetworkEventHandler } from './cqrs/handler/event/soft-delete-social-network.event-handler';\nimport { DeleteSocialNetworkCommandHandler } from './cqrs/handler/command/delete-social-network.command-handler';\nimport { CreateSocialNetworkEventHandler } from './cqrs/handler/event/create-social-network.event-handler';\nimport { CreateSocialNetworkCommandHandler } from './cqrs/handler/command/create-social-network.command-handler';\nimport { GetSocialNetworkByIdQueryHandler } from './cqrs/handler/query/get-social-network-by-id.query-handler';\nimport { DeleteSocialNetworkEventHandler } from './cqrs/handler/event/delete-social-network.event-handler';\nimport { RestoreSocialNetworkCommandHandler } from './cqrs/handler/command/restore-social-network.command-handler';\nimport { SocialNetworkService } from './social-network.service';\nimport { UpdateSocialNetworkCommandHandler } from './cqrs/handler/command/update-social-network.command-handler';\nimport { UpdateSocialNetworkEventHandler } from './cqrs/handler/event/update-social-network.event-handler';\nimport { SoftDeleteSocialNetworkCommandHandler } from './cqrs/handler/command/soft-delete-social-network.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, SocialNetworkEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [SocialNetworkController],\n  providers: [\n    SocialNetworkService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateSocialNetworkCommandHandler,\n    DeleteSocialNetworkCommandHandler,\n    RestoreSocialNetworkCommandHandler,\n    SoftDeleteSocialNetworkCommandHandler,\n    UpdateSocialNetworkCommandHandler,\n    // Query handlers\n    GetAllSocialNetworkQueryHandler,\n    GetSocialNetworkByIdQueryHandler,\n    GetSocialNetworkWithCriteriaQueryHandler,\n    // Event handlers\n    CreateSocialNetworkEventHandler,\n    DeleteSocialNetworkEventHandler,\n    SoftDeleteSocialNetworkEventHandler,\n    UpdateSocialNetworkEventHandler,\n    RestoreSocialNetworkEventHandler,\n  ],\n})\nexport class SocialNetworkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialNetworkResponse.html":{"url":"classes/SocialNetworkResponse.html","title":"class - SocialNetworkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialNetworkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/response/social-network.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/response/social-network.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/response/social-network.response.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialNetworkResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n\n  public readonly deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialNetworkService.html":{"url":"injectables/SocialNetworkService.html","title":"injectable - SocialNetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialNetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/social-network.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSocialNetwork\n                            \n                            \n                                    Async\n                                deleteSocialNetwork\n                            \n                            \n                                    Async\n                                getAllSocialNetwork\n                            \n                            \n                                    Async\n                                getSocialNetworkById\n                            \n                            \n                                    Async\n                                getSocialNetworkWithCriteria\n                            \n                            \n                                    Async\n                                restoreSocialNetwork\n                            \n                            \n                                    Async\n                                updateSocialNetwork\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/social-network.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSocialNetwork(socialNetworkRequest: CreateSocialNetworkRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkRequest\n                                    \n                                                CreateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSocialNetwork(socialNetworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSocialNetwork()\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworkById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworkById(socialNetworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSocialNetworkWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSocialNetworkWithCriteria(criteria: GetSocialNetworkWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                GetSocialNetworkWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreSocialNetwork(socialNetworkId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSocialNetwork\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSocialNetwork(socialNetworkId: string, socialNetworkRequest: UpdateSocialNetworkRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/social-network.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socialNetworkId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    socialNetworkRequest\n                                    \n                                                UpdateSocialNetworkRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateSocialNetworkRequest } from './web/request/create-social-network.request';\nimport { CreateSocialNetworkCommand } from './cqrs/command/create-social-network.command';\nimport { UpdateSocialNetworkRequest } from './web/request/update-social-network.request';\nimport { GetSocialNetworkWithCriteriaQuery } from './cqrs/query/get-social-network-with-criteria.query';\nimport { DeleteSocialNetworkCommand } from './cqrs/command/delete-social-network.command';\nimport { GetAllSocialNetworkQuery } from './cqrs/query/get-all-social-network.query';\nimport { GetSocialNetworkWithCriteriaRequest } from './web/request/get-social-network-with-criteria.request';\nimport { QueryErrorException } from '../../util/exception/custom-http-exception/query-error.exception';\nimport { RestoreSocialNetworkCommand } from './cqrs/command/restore-social-network.command';\nimport { SocialNetworkDto } from './domain/dto/social-network.dto';\nimport { SocialNetworkResponse } from './web/response/social-network.response';\nimport { UpdateSocialNetworkCommand } from './cqrs/command/update-social-network.command';\nimport { GetSocialNetworkByIdQuery } from './cqrs/query/get-social-network-by-id.query';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { EntityCreationException } from '../../util/exception/custom-http-exception/entity-creation.exception';\nimport { DuplicateNameException } from '../../util/exception/custom-http-exception/duplicate-name.exception';\nimport { CommandErrorException } from '../../util/exception/custom-http-exception/command-error.exception';\nimport { InvalidIdException } from '../../util/exception/custom-http-exception/invalid-id.exception';\n\n@Injectable()\nexport class SocialNetworkService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async getAllSocialNetwork(): Promise {\n    try {\n      return await this.queryBus\n        .execute(new GetAllSocialNetworkQuery())\n        .then((socialNetworksDto: SocialNetworkDto[]) => {\n          return socialNetworksDto.map(socialNetworkDto => {\n            return new SocialNetworkResponse(socialNetworkDto);\n          });\n        });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async getSocialNetworkById(socialNetworkId: string): Promise {\n    try {\n      return await this.queryBus\n        .execute(new GetSocialNetworkByIdQuery({ id: socialNetworkId }))\n        .then((socialNetworkDto: SocialNetworkDto) => {\n          return new SocialNetworkResponse(socialNetworkDto);\n        });\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new QueryErrorException();\n    }\n  }\n\n  async getSocialNetworkWithCriteria(criteria: GetSocialNetworkWithCriteriaRequest): Promise {\n    try {\n      return await this.queryBus\n        .execute(\n          new GetSocialNetworkWithCriteriaQuery({\n            name: criteria.name,\n            isDeleted: criteria.isDeleted,\n          }),\n        )\n        .then((socialNetworksDto: SocialNetworkDto[]) => {\n          return socialNetworksDto.map(socialNetworkDto => {\n            return new SocialNetworkResponse(socialNetworkDto);\n          });\n        });\n    } catch (error) {\n      throw new QueryErrorException();\n    }\n  }\n\n  async createSocialNetwork(socialNetworkRequest: CreateSocialNetworkRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateSocialNetworkCommand({\n          name: socialNetworkRequest.name,\n          url: socialNetworkRequest.url,\n          icon: socialNetworkRequest.icon,\n          color: socialNetworkRequest.color,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'Duplicated name') throw new DuplicateNameException();\n      else if (error instanceof InvalidClassException) throw error;\n      else if (error.message === 'SocialNetwork not created') throw new EntityCreationException();\n      else throw new CommandErrorException();\n    }\n  }\n\n  async updateSocialNetwork(socialNetworkId: string, socialNetworkRequest: UpdateSocialNetworkRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateSocialNetworkCommand({\n          color: socialNetworkRequest.color,\n          icon: socialNetworkRequest.icon,\n          url: socialNetworkRequest.url,\n          name: socialNetworkRequest.name,\n          id: socialNetworkId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new CommandErrorException();\n    }\n  }\n\n  async deleteSocialNetwork(socialNetworkId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteSocialNetworkCommand({\n          id: socialNetworkId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new CommandErrorException();\n    }\n  }\n\n  async restoreSocialNetwork(socialNetworkId: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new RestoreSocialNetworkCommand({\n          id: socialNetworkId,\n        }),\n      );\n    } catch (error) {\n      if (error.message === 'SocialNetwork not found') throw new InvalidIdException();\n      else throw new CommandErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationCommand.html":{"url":"classes/SoftDeleteOccupationCommand.html","title":"class - SoftDeleteOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/soft-delete-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/soft-delete-occupation.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/soft-delete-occupation.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationCommandHandler.html":{"url":"classes/SoftDeleteOccupationCommandHandler.html","title":"class - SoftDeleteOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/soft-delete-occupation.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SoftDeleteOccupationEvent } from '../../event/soft-delete-occupation.event';\nimport { SoftDeleteOccupationCommand } from '../../command/soft-delete-occupation.command';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\n\n@CommandHandler(SoftDeleteOccupationCommand)\nexport class SoftDeleteOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteOccupationCommand): Promise {\n    try {\n      const occupation = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        });\n      await this.occupationRepository.softDelete(occupation.id).catch(() => {\n        throw new Error('Occupation not soft deleted');\n      });\n      this.eventBus.publish(\n        new SoftDeleteOccupationEvent({\n          occupationId: command.occupationId,\n        }),\n      );\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'SoftDeleteOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationEvent.html":{"url":"classes/SoftDeleteOccupationEvent.html","title":"class - SoftDeleteOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/soft-delete-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/soft-delete-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'soft-delete-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteOccupationEventHandler.html":{"url":"classes/SoftDeleteOccupationEventHandler.html","title":"class - SoftDeleteOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/soft-delete-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteOccupationEvent } from '../../event/soft-delete-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteOccupationEvent)\nexport class SoftDeleteOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommand.html":{"url":"classes/SoftDeleteProfileCommand.html","title":"class - SoftDeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/soft-delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommandHandler.html":{"url":"classes/SoftDeleteProfileCommandHandler.html","title":"class - SoftDeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileCommand } from '../../command/soft-delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\n\n@CommandHandler(SoftDeleteProfileCommand)\nexport class SoftDeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.softDelete({\n        id: profile.id,\n      });\n      this.eventBus.publish(\n        new SoftDeleteProfileEvent({\n          id: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEvent.html":{"url":"classes/SoftDeleteProfileEvent.html","title":"class - SoftDeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/soft-delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileEvent {\n  public readonly id: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'soft-delete-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEventHandler.html":{"url":"classes/SoftDeleteProfileEventHandler.html","title":"class - SoftDeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteProfileEvent)\nexport class SoftDeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkCommand.html":{"url":"classes/SoftDeleteSocialNetworkCommand.html","title":"class - SoftDeleteSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/soft-delete-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/soft-delete-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/soft-delete-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkCommandHandler.html":{"url":"classes/SoftDeleteSocialNetworkCommandHandler.html","title":"class - SoftDeleteSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/soft-delete-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/soft-delete-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/soft-delete-social-network.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteSocialNetworkCommand } from '../../command/soft-delete-social-network.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\nimport { Repository } from 'typeorm';\nimport { SoftDeleteSocialNetworkEvent } from '../../event/soft-delete-social-network.event';\n\n@CommandHandler(SoftDeleteSocialNetworkCommand)\nexport class SoftDeleteSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: command.id }],\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .softDelete(socialNetwork.id)\n          .then(async () => {\n            await this.eventBus.publish(new SoftDeleteSocialNetworkEvent(command.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not deleted');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkEvent.html":{"url":"classes/SoftDeleteSocialNetworkEvent.html","title":"class - SoftDeleteSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/soft-delete-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/soft-delete-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'soft-delete-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteSocialNetworkEventHandler.html":{"url":"classes/SoftDeleteSocialNetworkEventHandler.html","title":"class - SoftDeleteSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/soft-delete-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/soft-delete-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/soft-delete-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { SoftDeleteSocialNetworkEvent } from '../../event/soft-delete-social-network.event';\n\n@EventsHandler(SoftDeleteSocialNetworkEvent)\nexport class SoftDeleteSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommand.html":{"url":"classes/SoftDeleteUserCommand.html","title":"class - SoftDeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/soft-delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommandHandler.html":{"url":"classes/SoftDeleteUserCommandHandler.html","title":"class - SoftDeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserCommand } from '../../command/soft-delete-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\n\n@CommandHandler(SoftDeleteUserCommand)\nexport class SoftDeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteUserCommand): Promise {\n    try {\n      await this.userRepository\n        .findOneOrFail({\n          where: { id: command.userId },\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      await this.userRepository.softDelete({\n        id: command.userId,\n      });\n      this.eventBus.publish(new SoftDeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEvent.html":{"url":"classes/SoftDeleteUserEvent.html","title":"class - SoftDeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/soft-delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEventHandler.html":{"url":"classes/SoftDeleteUserEventHandler.html","title":"class - SoftDeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteUserEvent)\nexport class SoftDeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferProfileToUserCommand.html":{"url":"classes/TransferProfileToUserCommand.html","title":"class - TransferProfileToUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferProfileToUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/transfer-profile-to-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loginDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loginDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SignInDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SignInDto } from '../../../auth/dto/sign-in.dto';\n\nexport class TransferProfileToUserCommand {\n  public readonly userId: string;\n  public readonly loginDto: SignInDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationCommand.html":{"url":"classes/UpdateOccupationCommand.html","title":"class - UpdateOccupationCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/command/update-occupation.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateOccupationDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateOccupationDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateOccupationDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/command/update-occupation.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateOccupationDto } from '../../domain/dto/update-occupation.dto';\n\nexport class UpdateOccupationCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly updateOccupationDto: UpdateOccupationDto;\n  public readonly occupationId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationCommandHandler.html":{"url":"classes/UpdateOccupationCommandHandler.html","title":"class - UpdateOccupationCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateOccupationCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/command/update-occupation.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateOccupationCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { OccupationEntity } from '../../../domain/entities/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UpdateOccupationCommand } from '../../command/update-occupation.command';\n\n@CommandHandler(UpdateOccupationCommand)\nexport class UpdateOccupationCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateOccupationCommand): Promise {\n    try {\n      const occupationList: OccupationEntity[] = await this.occupationRepository.find();\n\n      if (occupationList.length > 0) {\n        occupationList.forEach(occupation => {\n          if (occupation.name === command.updateOccupationDto.name && occupation.id !== command.occupationId) {\n            throw new Error('Duplicated name');\n          }\n        });\n      }\n\n      const updatedOccupationEntity: OccupationEntity = await this.occupationRepository\n        .findOneOrFail({\n          where: [{ id: command.occupationId }],\n        })\n        .catch(() => {\n          throw new Error('Occupation not found');\n        })\n        .then(occupationEntity => {\n          return new OccupationEntity({\n            ...occupationEntity,\n            ...command.updateOccupationDto,\n          });\n        });\n      const err = await validate(updatedOccupationEntity);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n\n      await this.occupationRepository\n        .update(command.occupationId, updatedOccupationEntity)\n        .catch(() => {\n          throw new Error('Occupation not updated');\n        })\n        .then(async () => {\n          await this.eventBus.publish(\n            new UpdateOccupationCommand({\n              occupationId: command.occupationId,\n            }),\n          );\n        });\n    } catch (e) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          handler: 'UpdateOccupationCommandHandler',\n          localisation: 'Occupation',\n          error: e.message,\n        }),\n      );\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationDto.html":{"url":"classes/UpdateOccupationDto.html","title":"class - UpdateOccupationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/domain/dto/update-occupation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/domain/dto/update-occupation.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/domain/dto/update-occupation.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationDto {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationEvent.html":{"url":"classes/UpdateOccupationEvent.html","title":"class - UpdateOccupationEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/event/update-occupation.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'occupation'\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/cqrs/event/update-occupation.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationEvent {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly occupationId: string;\n  public readonly module: string = 'occupation';\n  public readonly method: string = 'update-occupation';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationEventHandler.html":{"url":"classes/UpdateOccupationEventHandler.html","title":"class - UpdateOccupationEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateOccupationEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/occupation/cqrs/handler/event/update-occupation.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateOccupationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationEvent } from '../../event/update-occupation.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateOccupationEvent)\nexport class UpdateOccupationEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateOccupationEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Occupation with id: ' + event.occupationId + ' have been updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationRequest.html":{"url":"classes/UpdateOccupationRequest.html","title":"class - UpdateOccupationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/occupation/web/request/update-occupation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/occupation/web/request/update-occupation.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/occupation/web/request/update-occupation.request.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationRequest {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommand.html":{"url":"classes/UpdateOccupationsProfileCommand.html","title":"class - UpdateOccupationsProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-occupations-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileCommand {\n  public readonly id: string;\n  public readonly occupations: string[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommandHandler.html":{"url":"classes/UpdateOccupationsProfileCommandHandler.html","title":"class - UpdateOccupationsProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateOccupationsProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateOccupationsProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileCommand } from '../../command/update-occupations-profile.command';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../../occupation/domain/entities/occupation.entity';\n\n@CommandHandler(UpdateOccupationsProfileCommand)\nexport class UpdateOccupationsProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateOccupationsProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      const occupationPromises: Promise[] = command.occupations.map(async occupationId => {\n        return await this.occupationRepository\n          .findOneOrFail({\n            where: [{ id: occupationId }],\n          })\n          .catch(() => {\n            throw new Error('Occupation not found');\n          });\n      });\n      const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n      if (occupations.length == 0) {\n        throw new Error('Occupations not found');\n      }\n\n      await this.profileRepository.update(profile.id, {\n        occupations: occupations,\n      });\n      this.eventBus.publish(\n        new UpdateOccupationsProfileEvent({\n          listOfOccupationId: command.occupations,\n          profileId: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileDto.html":{"url":"classes/UpdateOccupationsProfileDto.html","title":"class - UpdateOccupationsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-occupations-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateOccupationsProfileDto {\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEvent.html":{"url":"classes/UpdateOccupationsProfileEvent.html","title":"class - UpdateOccupationsProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-occupations-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                listOfOccupationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        listOfOccupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-occupations-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileEvent {\n  public readonly listOfOccupationId: string[];\n  public readonly profileId: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-occupations-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEventHandler.html":{"url":"classes/UpdateOccupationsProfileEventHandler.html","title":"class - UpdateOccupationsProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateOccupationsProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateOccupationsProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateOccupationsProfileEvent)\nexport class UpdateOccupationsProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: UpdateOccupationsProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' +\n        event.profileId +\n        ' occupation have been updated with id: ' +\n        event.listOfOccupationId.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommand.html":{"url":"classes/UpdateProfileCommand.html","title":"class - UpdateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileDto } from '../../domain/dto/update-profile.dto';\n\nexport class UpdateProfileCommand {\n  public readonly id: string;\n  public readonly updateProfileDto: UpdateProfileDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommandHandler.html":{"url":"classes/UpdateProfileCommandHandler.html","title":"class - UpdateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { UpdateProfileCommand } from '../../command/update-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateProfileCommand)\nexport class UpdateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      await this.profileRepository.update(profile.id, command.updateProfileDto);\n      this.eventBus.publish(\n        new UpdateProfileEvent({\n          updateProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileDto {\n  public readonly usernameProfile?: string;\n  public readonly roleProfile?: RoleProfileEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEvent.html":{"url":"classes/UpdateProfileEvent.html","title":"class - UpdateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileCommand } from '../command/update-profile.command';\n\nexport class UpdateProfileEvent {\n  public readonly updateProfileCommand: UpdateProfileCommand;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEventHandler.html":{"url":"classes/UpdateProfileEventHandler.html","title":"class - UpdateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateProfileEvent)\nexport class UpdateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.updateProfileCommand.updateProfileDto + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileRequest.html":{"url":"classes/UpdateProfileRequest.html","title":"class - UpdateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/update-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileRequest {\n  public readonly id: string;\n  public readonly usernameProfile: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkCommand.html":{"url":"classes/UpdateSocialNetworkCommand.html","title":"class - UpdateSocialNetworkCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/command/update-social-network.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/command/update-social-network.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateSocialNetworkCommand {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkCommandHandler.html":{"url":"classes/UpdateSocialNetworkCommandHandler.html","title":"class - UpdateSocialNetworkCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/command/update-social-network.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialNetworkRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/command/update-social-network.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateSocialNetworkCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/command/update-social-network.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateSocialNetworkCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateSocialNetworkCommand } from '../../command/update-social-network.command';\nimport { Repository } from 'typeorm';\nimport { UpdateSocialNetworkEvent } from '../../event/update-social-network.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SocialNetworkEntity } from '../../../domain/entities/social-network.entity';\n\n@CommandHandler(UpdateSocialNetworkCommand)\nexport class UpdateSocialNetworkCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateSocialNetworkCommand): Promise {\n    await this.socialNetworkRepository\n      .findOneOrFail({\n        where: [{ id: command.id }],\n      })\n      .then(async socialNetwork => {\n        await this.socialNetworkRepository\n          .update(socialNetwork.id, {\n            ...command,\n          })\n          .then(async () => {\n            await this.eventBus.publish(new UpdateSocialNetworkEvent(command.id));\n          })\n          .catch(() => {\n            throw new Error('SocialNetwork not updated');\n          });\n      })\n      .catch(() => {\n        throw new Error('SocialNetwork not found');\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkEvent.html":{"url":"classes/UpdateSocialNetworkEvent.html","title":"class - UpdateSocialNetworkEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/event/update-social-network.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'social-network'\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/cqrs/event/update-social-network.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateSocialNetworkEvent {\n  public readonly module: string = 'social-network';\n  public readonly method: string = 'update-social-network';\n  constructor(public readonly id: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkEventHandler.html":{"url":"classes/UpdateSocialNetworkEventHandler.html","title":"class - UpdateSocialNetworkEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/cqrs/handler/event/update-social-network.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/cqrs/handler/event/update-social-network.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateSocialNetworkEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/social-network/cqrs/handler/event/update-social-network.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateSocialNetworkEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateSocialNetworkEvent } from '../../event/update-social-network.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateSocialNetworkEvent)\nexport class UpdateSocialNetworkEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateSocialNetworkEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'SocialNetwork with id: ' + event.id + ' have been updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSocialNetworkRequest.html":{"url":"classes/UpdateSocialNetworkRequest.html","title":"class - UpdateSocialNetworkRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSocialNetworkRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/social-network/web/request/update-social-network.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                color\n                            \n                            \n                                    Public\n                                    Readonly\n                                icon\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/social-network/web/request/update-social-network.request.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateSocialNetworkRequest {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly id: string;\n  public readonly name: string;\n  public readonly url: string;\n  public readonly icon: string;\n  public readonly color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(public readonly userId: string, public readonly user: UpdateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommandHandler.html":{"url":"classes/UpdateUserCommandHandler.html","title":"class - UpdateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedMail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../../command/update-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      if (command.user.username) {\n        if (await this.isDuplicatedUsername(command.user.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.user.mail) {\n        if (await this.isDuplicatedEmail(command.user.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n      if ((await this.userRepository.findOne({ where: [{ id: command.userId }] })) === undefined) {\n        throw new Error('User not found');\n      }\n\n      await this.isDuplicateOfDeletedUsername(command.user.username || '');\n      await this.isDuplicateOfDeletedMail(command.user.mail || '');\n\n      const err = await validate(command.user);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: UserEntity = await this.userRepository.findOneOrFail({\n        where: [{ id: command.userId }],\n      });\n      this.eventBus.publish(new UpdateUserEvent(command.userId));\n      return new UserResponse({ ...user });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'UpdateUserCommandHandler',\n          error: error,\n        }),\n      );\n      throw error;\n    }\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ mail: mail }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null && verifyDuplicateMailWithDeleted.deletedAt !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        mail: 'deleted' + verifyDuplicateMailWithDeleted.mail + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n\n  private async isDuplicateOfDeletedUsername(username: string): Promise {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ username: username }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        username: 'deleted' + verifyDuplicateMailWithDeleted.username + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommand.html":{"url":"classes/UpdateUserCredentialCommand.html","title":"class - UpdateUserCredentialCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-credential.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                updateUserCredentialDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserCredentialDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserCredentialDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserCredentialDto } from '../../domain/dto/update-user-credential.dto';\n\nexport class UpdateUserCredentialCommand {\n  public readonly userId: string;\n  public readonly updateUserCredentialDto: UpdateUserCredentialDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommandHandler.html":{"url":"classes/UpdateUserCredentialCommandHandler.html","title":"class - UpdateUserCredentialCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCredentialCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCredentialCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCredentialCommand } from '../../command/update-user-credential.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(UpdateUserCredentialCommand)\nexport class UpdateUserCredentialCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,}$');\n  }\n\n  async execute(command: UpdateUserCredentialCommand): Promise {\n    try {\n      if (command.updateUserCredentialDto.newPassword == command.updateUserCredentialDto.password) {\n        throw new Error('New password is the same as old password');\n      }\n      if (!this.isValidPassword(command.updateUserCredentialDto.newPassword)) {\n        throw new Error('Invalid password');\n      }\n      const user = await this.userRepository.findOne({\n        where: { id: command.userId },\n        select: ['id', 'password'],\n      });\n      if (!user) {\n        throw new Error('User not found');\n      }\n\n      if (!(await this.verifyPassword(command.updateUserCredentialDto.password, user.password))) {\n        throw new Error('Invalid old password');\n      }\n\n      await this.userRepository.update(command.userId, { password: command.updateUserCredentialDto.newPassword });\n      await this.eventBus.publish(new UpdateUserCredentialEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserCredentialCommandHandler', error: error }),\n      );\n      throw error;\n    }\n  }\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialDto.html":{"url":"classes/UpdateUserCredentialDto.html","title":"class - UpdateUserCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialDto {\n  public readonly username: string;\n  public readonly password: string;\n\n  public readonly newPassword: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEvent.html":{"url":"classes/UpdateUserCredentialEvent.html","title":"class - UpdateUserCredentialEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-credential.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-credential'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-credential';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEventHandler.html":{"url":"classes/UpdateUserCredentialEventHandler.html","title":"class - UpdateUserCredentialEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserCredentialEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserCredentialEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\n\n@EventsHandler(UpdateUserCredentialEvent)\nexport class UpdateUserCredentialEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserCredentialEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  mail?: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username?: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEvent.html":{"url":"classes/UpdateUserEvent.html","title":"class - UpdateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEventHandler.html":{"url":"classes/UpdateUserEventHandler.html","title":"class - UpdateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: UpdateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserEvent)\nexport class UpdateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  handle(event: UpdateUserEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommand.html":{"url":"classes/UpdateUserRoleCommand.html","title":"class - UpdateUserRoleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-role.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../../domain/enum/user-role.enum';\n\nexport class UpdateUserRoleCommand {\n  public readonly userId: string;\n  public readonly roles: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommandHandler.html":{"url":"classes/UpdateUserRoleCommandHandler.html","title":"class - UpdateUserRoleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-role.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserRoleCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserRoleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleCommand } from '../../command/update-user-role.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateUserRoleCommand)\nexport class UpdateUserRoleCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserRoleCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, { roles: command.roles });\n      await this.eventBus.publish(new UpdateUserRoleEvent(command));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserRoleCommandHandler', error: error }),\n      );\n      throw new Error(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEvent.html":{"url":"classes/UpdateUserRoleEvent.html","title":"class - UpdateUserRoleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-role.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateUserRoleCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateUserRoleCommand: UpdateUserRoleCommand)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateUserRoleCommand\n                                                  \n                                                        \n                                                                        UpdateUserRoleCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-role'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserRoleCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserRoleCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserRoleCommand } from '../command/update-user-role.command';\n\nexport class UpdateUserRoleEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-role';\n  constructor(public readonly updateUserRoleCommand: UpdateUserRoleCommand) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEventHandler.html":{"url":"classes/UpdateUserRoleEventHandler.html","title":"class - UpdateUserRoleEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-role.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserRoleEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserRoleEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserRoleEvent)\nexport class UpdateUserRoleEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserRoleEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'User with id: ' +\n        event.updateUserRoleCommand.userId +\n        ' updated role with ' +\n        event.updateUserRoleCommand.roles.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/web/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMe\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/public/delete-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@Post('/admin/criteria')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/full-delete/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/generate-user-from-mail')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(requestUser: RequestUser, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Post('/admin/restore-user')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMe(requestUser: RequestUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(requestUser: RequestUser, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-password')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRole(id: string, roles: ListRolesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Put('/admin/:id/role')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                ListRolesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from '../user.service';\nimport { CreateUserDto } from '../domain/dto/create-user.dto';\nimport { CreateUserResponse } from '../domain/response/create-user.response';\nimport { UpdateUserDto } from '../domain/dto/update-user.dto';\nimport { RequestUser } from '../../auth/interface/request-user.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserResponse } from '../domain/response/user.response';\nimport { RoleGuard } from '../../auth/guards/role.guard';\nimport { UserRoleEnum } from '../domain/enum/user-role.enum';\nimport { GetUserWithCriteriaDto } from '../domain/dto/get-user-with-criteria.dto';\nimport { UpdateUserCredentialDto } from '../domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from '../domain/dto/generate-user.dto';\nimport { ListRolesDto } from '../domain/dto/list-roles.dto';\nimport { UserIdDto } from '../domain/dto/user-id.dto';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/admin/create')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Post('/admin/generate-user-from-mail')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async generateUserFromMail(@Body() generateUserDto: GenerateUserDto): Promise {\n    try {\n      return await this.userService.generateUserFromMail(generateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Post('/admin/restore-user')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreUser(@Body() userId: UserIdDto): Promise {\n    try {\n      return await this.userService.restoreUser(userId.userId);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n  @Get('/admin/')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findAll(): Promise {\n    try {\n      return await this.userService.findAll();\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findOne(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.findOne(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @Post('/admin/criteria')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findWithCriteria(\n    @Body() getUserWithCriteriaDto: GetUserWithCriteriaDto,\n  ): Promise {\n    try {\n      return await this.userService.findWithCriteria(getUserWithCriteriaDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/public/get-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      const { user } = requestUser;\n      return await this.userService.findMe(user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async update(\n    @Param('id') userId: string,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(userId, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Put('/admin/:id/role')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateRole(@Param('id') id: string, @Body() roles: ListRolesDto): Promise {\n    try {\n      return await this.userService.updateRoles(id, roles.roles);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMe(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(requestUser.user.id, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-password')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updatePassword(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserCredentialDto: UpdateUserCredentialDto,\n  ): Promise {\n    try {\n      return await this.userService.updatePassword(requestUser.user.id, updateUserCredentialDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  remove(@Req() requestUser: RequestUser, @Param('id') id: string): Promise {\n    try {\n      return this.userService.remove(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/public/delete-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async deleteMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      return await this.userService.deleteMe(requestUser.user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/full-delete/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async fullDelete(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.fullDelete(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                notifications\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                    Public\n                                    Optional\n                                referralCode\n                            \n                            \n                                referralCodes\n                            \n                            \n                                roles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedReferralCodes\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:57\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:77\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:49\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedReferralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.usedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  BeforeInsert,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\nimport { ReferralCodeEntity } from '../../../entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { AddressEntity } from '../../../entities-to-create/address.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true, nullable: true })\n  mail?: string;\n\n  @Column()\n  @Column({ unique: true, nullable: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  @Column({ unique: true, nullable: true })\n  public referralCode?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  roles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.owner)\n  referralCodes: ReferralCodeEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.usedBy)\n  usedReferralCodes: ReferralCodeEntity;\n\n  @OneToMany(() => NotificationEntity, notification => notification.user, {\n    cascade: true,\n  })\n  notifications: NotificationEntity[];\n\n  @OneToMany(() => AddressEntity, address => address.user, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  // ______________________________________________________\n  // Methods\n  // ______________________________________________________\n  @BeforeInsert()\n  private async addProfile(): Promise {\n    if (!this.profiles) {\n      this.profiles = [];\n    }\n    const profile = new ProfileEntity({});\n    this.profiles.push(profile);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserIdDto.html":{"url":"interfaces/UserIdDto.html","title":"interface - UserIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-id.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserIdDto {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                login\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  constructor(login: string, password: string) {\n    this.login = login;\n    this.password = password;\n  }\n\n  @ApiProperty()\n  public readonly login: string;\n  @ApiProperty()\n  public readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponse.html":{"url":"classes/UserLoginResponse.html","title":"class - UserLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-login.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-login.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../entities/user.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserLoginResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username?: string;\n  public readonly email?: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public token: string;\n  public readonly roles: UserRoleEnum[];\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './web/user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\nimport { GetUserByEmailQueryHandler } from './cqrs/handler/query/get-user-by-email.query-handler';\nimport { GetUserByUsernameQueryHandler } from './cqrs/handler/query/get-user-by-username.query-handler';\nimport { GetUserLoginQueryHandler } from './cqrs/handler/query/get-user-login.query-handler';\nimport { GetUserIfRefreshTokenMatchesQueryHandler } from './cqrs/handler/query/get-user-if-refresh-token-matches.query-handler';\nimport { GetUserQueryHandler } from './cqrs/handler/query/get-user.query-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SetCurrentRefreshTokenCommandHandler } from './cqrs/handler/command/set-current-refresh-token.command-handler';\nimport { UpdateUserCommandHandler } from './cqrs/handler/command/update-user.command-handler';\nimport { RemoveRefreshTokenCommandHandler } from './cqrs/handler/command/remove-refresh-token.command-handler';\nimport { CreateUserEventHandler } from './cqrs/handler/event/create-user.event-handler';\nimport { DeleteUserEventHandler } from './cqrs/handler/event/delete-user.event-handler';\nimport { RemoveRefreshTokenEventHandler } from './cqrs/handler/event/remove-refresh-token.event-handler';\nimport { SetCurrentRefreshTokenEventHandler } from './cqrs/handler/event/set-current-refresh-token.event-handler';\nimport { LoginOfUserEventHandler } from './cqrs/handler/event/login-of-user.event-handler';\nimport { UpdateUserEventHandler } from './cqrs/handler/event/update-user.event-handler';\nimport { SoftDeleteUserCommandHandler } from './cqrs/handler/command/soft-delete-user.command-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { GetUserWithCriteriaQueryHandler } from './cqrs/handler/query/get-user-with-criteria.query-handler';\nimport { UpdateUserCredentialCommandHandler } from './cqrs/handler/command/update-user-credential.command-handler';\nimport { UpdateUserRoleCommandHandler } from './cqrs/handler/command/update-user-role.command-handler';\nimport { RestoreUserCommandHandler } from './cqrs/handler/command/restore-user.command-handler';\nimport { DeleteUserCommandHandler } from './cqrs/handler/command/delete-user.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateUserCommandHandler,\n    RemoveRefreshTokenCommandHandler,\n    SetCurrentRefreshTokenCommandHandler,\n    UpdateUserCommandHandler,\n    SoftDeleteUserCommandHandler,\n    UpdateUserCredentialCommandHandler,\n    UpdateUserRoleCommandHandler,\n    RestoreUserCommandHandler,\n    DeleteUserCommandHandler,\n    // Query handlers\n    GetUserByUsernameQueryHandler,\n    GetUserByEmailQueryHandler,\n    GetUserLoginQueryHandler,\n    GetUserIfRefreshTokenMatchesQueryHandler,\n    GetUserQueryHandler,\n    GetUserWithCriteriaQueryHandler,\n    // Event handlers\n    CreateUserEventHandler,\n    DeleteUserEventHandler,\n    RemoveRefreshTokenEventHandler,\n    SetCurrentRefreshTokenEventHandler,\n    LoginOfUserEventHandler,\n    UpdateUserEventHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly roles: UserRoleEnum[];\n  public readonly username?: string;\n  public readonly mail?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Private\n                                generatePassword\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRoles(userId: string, roles: UserRoleEnum[])\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                UserRoleEnum[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { UserResponse } from './domain/response/user.response';\nimport { SoftDeleteUserCommand } from './cqrs/command/soft-delete-user.command';\nimport { GetUserWithCriteriaQuery } from './cqrs/query/get-user-with-criteria.query';\nimport { GetUserWithCriteriaDto } from './domain/dto/get-user-with-criteria.dto';\nimport { RestoreUserCommand } from './cqrs/command/restore-user.command';\nimport { UserRoleEnum } from './domain/enum/user-role.enum';\nimport { UpdateUserRoleCommand } from './cqrs/command/update-user-role.command';\nimport { UpdateUserCredentialCommand } from './cqrs/command/update-user-credential.command';\nimport { UpdateUserCredentialDto } from './domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from './domain/dto/generate-user.dto';\nimport { DeleteMailCommand } from '../api-landing-page/cqrs/command/delete-mail.command';\nimport { DuplicateMailException } from '../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { MailRequiredException } from '../../util/exception/custom-http-exception/mail-required.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { DuplicateUsernameException } from '../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { SamePasswordException } from '../../util/exception/custom-http-exception/same-password.exception';\nimport { InvalidPasswordException } from '../../util/exception/custom-http-exception/invalid-password.exception';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return await this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string): Promise {\n    return await this.queryBus.execute(new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId));\n  }\n\n  async removeRefreshToken(userId: string): Promise {\n    return await this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  async setCurrentRefreshToken(token: string, userId: string): Promise {\n    return await this.commandBus.execute(new SetCurrentRefreshTokenCommand(token, userId));\n  }\n\n  async findAll(): Promise {\n    return await this.queryBus.execute(new GetUserQuery());\n  }\n\n  async findOne(id: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserQuery(id));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async update(userId: string, updateUserDto: UpdateUserDto): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserCommand(userId, updateUserDto));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Mail already exists' || error instanceof DuplicateMailException)\n        throw new DuplicateMailException();\n      else if (error instanceof DuplicateUsernameException || error.message === 'Username already exists') {\n        throw new DuplicateUsernameException();\n      } else throw Error('not handled error');\n    }\n  }\n\n  async remove(id: string): Promise {\n    try {\n      return await this.commandBus.execute(new SoftDeleteUserCommand(id));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async generateUserFromMail(generateUserDto: GenerateUserDto): Promise {\n    try {\n      if (!generateUserDto) throw new Error('Mail is required');\n      if ((await this.queryBus.execute(new GetUserWithCriteriaQuery({ mail: generateUserDto.mail }))).length > 0)\n        throw new Error('Mail already exists');\n      const user = await this.commandBus.execute(\n        new CreateUserCommand(\n          new CreateUserDto({\n            mail: generateUserDto.mail,\n            password: this.generatePassword(),\n            roles: generateUserDto.roles ? generateUserDto.roles : [UserRoleEnum.PUBLIC],\n          }),\n        ),\n      );\n      try {\n        await this.commandBus.execute(new DeleteMailCommand({ mail: generateUserDto.mail }));\n      } catch (error) {}\n      return user;\n    } catch (error) {\n      if (error.message === 'Mail is required') throw new MailRequiredException();\n      else if (error.message === 'Mail already exists') throw new DuplicateMailException();\n      else throw error;\n    }\n  }\n\n  async restoreUser(userId: string): Promise {\n    try {\n      return await this.commandBus.execute(new RestoreUserCommand({ id: userId }));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto): Promise {\n    return await this.queryBus.execute(new GetUserWithCriteriaQuery(getUserWithCriteriaDto));\n  }\n\n  async getMe(userId: string): Promise {\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  async updateRoles(userId: string, roles: UserRoleEnum[]): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserRoleCommand({ userId: userId, roles: roles }));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateUserCredentialCommand({ userId: userId, updateUserCredentialDto: updateUserCredentialDto }),\n      );\n    } catch (error) {\n      if (error.message === 'New password is the same as old password') throw new SamePasswordException();\n      else if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Invalid password') throw new InvalidPasswordException();\n      else if (error.message === 'Invalid old password') throw new InvalidPasswordException();\n      else throw error;\n    }\n  }\n\n  async deleteMe(userId: string): Promise {\n    if (!!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.commandBus.execute(new SoftDeleteUserCommand(userId));\n  }\n\n  async findMe(userId: string): Promise {\n    if (!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  private generatePassword(): string {\n    return 'Pt' + Math.random().toString(10).split('.')[1] + '!';\n  }\n\n  async fullDelete(id: string): Promise {\n    return await this.commandBus.execute(new DeleteUserCommand({ userId: id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.10 - 2023-04-02\nFeatures\n\nmodule social-network\n\n0.0.9 - 2023-04-02\nFeatures\n\nmodule occupation\n\n0.0.8 - 2023-03-29\nFeatures\n\nmodule profile\nno test e2e\n\n0.0.7 - 2023-03-29\nFeatures\n\nmodule user\ntest e2e\n\n0.0.6 - 2023-03-18\nFeatures\n\napi-mail module\napi-landing-page module\nrefactor api-log\nfix things\n\n0.0.5 - 2023-03-15\nFeatures\n\nadd auth verification\nadd tcp validate-login\nadd e2e auth test\n\n0.0.4 - 2023-03-10\nFeatures\n\nadd referral code entity\nadd notification entity\nupdate README.md\n\n0.0.3 - 2023-03-10\nFeatures\n\nadd call to api-log\n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/passport-jwt : ^3.0.8\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../notification-type.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            RoleProfileEnum   (src/.../role-profile.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            VerboseLogEnum   (src/.../verbose-log.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                 JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                Value : JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                 NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                 NEW_CALL\n                            \n                        \n                        \n                            \n                                Value : NEW_CALL\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/profile/domain/enum/role-profile.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleProfileEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 PREMIUM\n                            \n                        \n                        \n                            \n                                Value : PREMIUM\n                            \n                        \n                        \n                            \n                                 COMPANY\n                            \n                        \n                        \n                            \n                                Value : COMPANY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n                        \n                            \n                                 V_CARD\n                            \n                        \n                        \n                            \n                                Value : V_CARD\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/verbose-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        VerboseLogEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\nAPI Routes V_0.0.4\n\n\nDatabase Schema V_0.0.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLandingPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiMailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OccupationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SocialNetworkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\ncluster_OccupationModule\n\n\n\ncluster_OccupationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SocialNetworkModule\n\n\n\ncluster_SocialNetworkModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nOccupationModule\n\nOccupationModule\n\nOccupationModule -->\n\nApiLogModule->OccupationModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\n\n\nSocialNetworkModule\n\nSocialNetworkModule\n\nSocialNetworkModule -->\n\nApiLogModule->SocialNetworkModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\nOccupationModule -->\n\nApiLogService->OccupationModule\n\n\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\nSocialNetworkModule -->\n\nApiLogService->SocialNetworkModule\n\n\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\nAppModule -->\n\nOccupationModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nSocialNetworkModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\nOccupationService\n\nOccupationService\n\nOccupationModule -->\n\nOccupationService->OccupationModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nSocialNetworkService\n\nSocialNetworkService\n\nSocialNetworkModule -->\n\nSocialNetworkService->SocialNetworkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    224 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.10\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n Serialize response to send empty string when data is null api-nestjs-serializing-response-interceptors\n add auth jwt\n add double auth\n add auth with Google \n add confirming mail confirming-mail-address\n add database migrations and cron typeorm-migrations\n add flag feature flag-feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/api/auth/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles: UserRoleEnum[]): Type => {\n  @Injectable()\n  class RoleGuardMixin extends JwtRefreshGuard {\n    constructor(private readonly userService: UserService) {\n      super();\n    }\n    async canActivate(context: ExecutionContext): Promise {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      return roles.some(role => user?.roles.includes(role));\n    }\n  }\n  return mixin(RoleGuardMixin);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
