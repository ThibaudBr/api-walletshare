var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AddressEntity.html",[0,1.592,1,3.308]],["body/entities/AddressEntity.html",[0,1.5,1,3.116,2,1.254,3,0.032,4,0.038,5,0.038,6,4.077,7,3.04,8,0.107,9,0.586,10,6.49,11,4.158,12,6.49,13,2.466,14,2.701,15,1.235,16,5.878,17,7.227,18,7.227,19,7.227,20,7.227,21,2.509,22,1.312,23,5.878,24,0.407,25,0.005,26,1.18,27,3.177,28,5.87,29,7.247,30,5.509,31,6.66,32,0.279,33,3.04,34,4.55,35,2.749,36,4.766,37,4.305,38,3.543,39,4.07,40,3.949,41,3.04,42,3.04,43,3.332,44,2.73,45,3.96,46,5.679,47,3.04,48,2.73,49,3.96,50,3.04,51,2.233,52,3.04,53,3.736,54,4.766,55,1.704,56,3.04,57,3.04,58,3.04,59,3.04,60,3.04,61,2.73,62,3.96,63,3.04,64,2.624,65,4.766,66,3.04,67,4.28,68,3.04,69,0.424,70,3.999,71,2.233,72,2.278,73,3.3,74,1.397,75,2.233,76,0.871,77,2.252,78,1.549,79,5.242,80,6.479,81,0.302,82,1.484,83,0.428,84,2.252,85,0.038,86,6.258,87,0.002,88,0.002]],["title/controllers/ApiLandingPageController.html",[89,2.639,90,4.205]],["body/controllers/ApiLandingPageController.html",[3,0.052,4,0.061,5,0.061,8,0.176,24,0.311,25,0.005,26,0.977,27,2.345,32,0.206,69,0.584,81,0.315,83,0.235,85,0.061,87,0.003,88,0.003,89,2.592,90,5.694,91,2.427,92,3.289,93,5.378,94,6.122,95,4.972,96,3.517,97,2.487,98,6.122,99,1.423,100,2.257,101,6.154,102,7.59,103,4.465,104,6.853,105,4.972,106,3.675,107,4.972,108,6.853,109,4.972,110,0.399,111,0.354,112,3.371,113,1.406,114,2.056,115,4.972,116,4.972,117,4.972,118,2.05,119,3.251,120,2.479,121,3.682,122,1.354,123,5.808,124,4.465,125,7.842,126,7.842,127,3.375,128,2.721,129,6.122,130,4.465,131,3.517,132,3.882,133,2.534,134,3.882,135,2.654,136,4.465,137,4.972,138,1.701,139,0.587,140,4.972,141,6.853,142,4.972,143,5.076,144,2.247,145,4.972,146,4.972,147,4.972,148,4.972]],["title/modules/ApiLandingPageModule.html",[149,1.294,150,3.748]],["body/modules/ApiLandingPageModule.html",[3,0.046,4,0.054,5,0.054,25,0.005,69,0.633,81,0.276,83,0.345,85,0.054,87,0.003,88,0.003,90,6.063,91,3.047,92,1.826,93,4.362,94,3.399,97,3.063,122,1.185,123,6.504,124,3.909,149,1.596,150,7.36,151,2.444,152,3.505,153,3.909,154,3.909,155,3.909,156,5.371,157,5.96,158,3.391,159,5.211,160,3.818,161,2.663,162,2.663,163,4.353,164,3.818,165,3.818,166,2.955,167,5.41,168,2.444,169,4.081,170,1.046,171,2.489,172,2.955,173,4.353,174,4.415,175,2.125,176,2.04,177,2.081,178,3.804,179,5.186,180,3.617,181,2.846,182,5.186,183,3.617,184,3.079,185,5.186,186,3.617,187,3.617,188,4.081,189,3.079,190,2.846,191,1.765,192,3.909,193,3.224,194,2.955,195,2.955,196,4.953,197,4.953,198,4.771,199,3.399,200,3.399,201,3.399,202,3.617,203,3.617,204,4.353,205,3.909,206,3.909]],["title/injectables/ApiLandingPageService.html",[123,3.748,207,1.757]],["body/injectables/ApiLandingPageService.html",[3,0.056,4,0.065,5,0.065,8,0.187,24,0.284,25,0.005,26,1.01,32,0.244,69,0.578,81,0.336,83,0.339,85,0.065,87,0.003,88,0.003,92,3.642,93,5.315,94,6.778,99,1.487,100,2.301,101,6.43,102,7.796,103,6.43,110,0.575,111,0.51,112,3.233,113,1.469,114,2.112,122,1.444,123,5.303,129,4.139,130,4.761,138,1.814,139,0.846,144,1.739,170,1.274,181,3.466,187,4.405,207,2.486,208,2.535,209,5.302,210,0.426,211,3.927,212,6.609,213,6.756,214,5.302,215,5.302,216,5.302,217,5.065,218,4.405,219,5.59,220,4.405,221,1.739,222,1.877,223,3.927,224,1.668,225,3.927]],["title/modules/ApiLogModule.html",[149,1.294,156,3.095]],["body/modules/ApiLogModule.html",[3,0.061,4,0.072,5,0.072,25,0.005,69,0.611,81,0.369,83,0.275,85,0.072,87,0.003,88,0.003,91,2.837,92,2.438,97,2.11,122,1.582,149,1.946,151,3.263,152,4.273,156,6.234,158,3.703,160,4.655,161,3.555,162,3.555,164,4.655,165,4.655,166,3.945,167,5.166,168,3.263,169,4.976,170,1.396,171,2.318,174,5.384,175,2.837,176,2.723,177,2.779,178,3.431,188,4.976,190,3.8,191,2.357,194,3.945,195,3.945,196,3.945,197,3.945,198,3.8,199,4.537,200,4.537,226,5.812,227,5.812,228,5.812,229,5.812,230,4.829]],["title/injectables/ApiLogService.html",[158,1.954,207,1.757]],["body/injectables/ApiLogService.html",[3,0.054,4,0.064,5,0.064,8,0.183,24,0.317,25,0.005,32,0.241,69,0.573,81,0.328,83,0.379,85,0.064,87,0.003,88,0.003,92,3.606,99,1.463,100,2.285,110,0.643,111,0.57,113,1.445,114,2.091,118,2.135,122,1.41,138,1.772,139,0.612,149,1.324,158,2.721,170,1.244,171,3.429,172,3.515,190,3.386,207,2.447,208,2.476,210,0.416,211,3.835,212,6.563,222,1.847,223,5.219,224,2.52,231,5.178,232,7.046,233,7.046,234,5.178,235,7.046,236,6.557,237,5.178,238,5.933,239,7.046,240,7.143,241,5.178,242,4.984,243,5.219,244,6.253,245,4.302,246,2.411,247,2,248,5.178,249,5.178]],["title/controllers/ApiMailController.html",[89,2.639,250,4.205]],["body/controllers/ApiMailController.html",[3,0.062,4,0.073,5,0.073,8,0.208,24,0.233,25,0.005,27,2.012,32,0.177,69,0.613,81,0.373,83,0.278,85,0.073,87,0.003,88,0.003,89,3.066,91,2.87,92,3.217,96,4.159,97,2.784,99,1.592,100,2.102,110,0.472,111,0.419,112,3.059,113,1.206,114,1.866,118,2.425,119,3.845,121,4.355,122,1.601,127,3.991,128,3.218,131,4.159,132,4.591,133,2.997,134,4.591,135,3.14,136,5.281,138,2.012,139,0.694,143,4.355,222,1.541,250,6.372,251,5.988,252,5.88,253,6.887,254,5.281,255,7.511,256,5.88,257,5.88,258,5.681,259,6.322,260,5.281,261,5.281,262,5.88,263,4.355,264,5.88,265,5.88]],["title/modules/ApiMailModule.html",[149,1.294,266,3.748]],["body/modules/ApiMailModule.html",[3,0.047,4,0.056,5,0.056,25,0.005,64,1.54,69,0.641,78,2.294,81,0.285,83,0.302,85,0.056,87,0.003,88,0.003,91,3.12,92,1.888,97,3.102,122,1.225,149,1.634,151,2.527,152,3.589,156,5.431,157,6.027,158,3.429,159,5.269,160,3.909,161,2.753,162,2.753,164,3.909,165,3.909,166,3.055,167,5.045,168,2.527,169,4.179,170,1.081,171,2.549,172,3.055,174,4.521,175,2.197,176,2.109,177,2.152,178,3.351,181,2.943,184,3.183,188,4.179,189,3.183,190,2.943,191,1.825,192,4.042,193,3.334,194,3.055,195,3.055,196,4.339,197,4.339,198,4.179,199,3.514,200,3.514,201,3.514,202,3.74,203,3.74,250,6.176,251,3.514,259,6.576,260,4.042,266,7.399,267,4.042,268,4.501,269,4.042,270,4.501,271,5.311,272,4.501,273,5.311,274,4.501,275,4.501,276,3.055,277,1.609,278,3.514]],["title/injectables/ApiMailService.html",[207,1.757,259,3.748]],["body/injectables/ApiMailService.html",[3,0.061,4,0.072,5,0.072,8,0.207,24,0.303,25,0.005,32,0.23,69,0.576,81,0.372,83,0.362,85,0.072,87,0.003,88,0.003,92,3.575,99,1.589,100,2.099,110,0.614,111,0.545,113,1.203,114,1.862,122,1.596,138,2.006,139,0.904,170,1.409,181,3.833,207,2.658,208,2.803,210,0.471,211,4.343,212,6.8,213,6.926,221,1.923,222,1.537,223,4.343,224,1.845,251,6.654,253,6.874,254,6.874,255,7.505,259,5.67,261,5.265,279,5.863,280,5.863,281,5.863,282,5.976,283,5.863]],["title/controllers/AppController.html",[89,2.639,284,4.205]],["body/controllers/AppController.html",[3,0.057,4,0.067,5,0.067,8,0.192,25,0.005,26,1.024,27,1.864,32,0.164,69,0.524,81,0.345,85,0.067,87,0.003,88,0.003,89,3.802,91,2.659,97,1.977,99,1.514,113,1.117,119,3.561,122,1.483,127,3.697,128,2.981,138,1.864,139,0.643,144,1.786,263,4.034,284,6.058,285,5.447,286,8.217,287,5.447,288,7.293,289,4.206,290,8.776,291,8.776,292,5.4,293,2.908,294,5.447,295,7.291,296,7.291,297,5.813,298,4.891,299,6.058,300,5.447,301,5.447,302,4.034,303,4.526,304,5.447,305,4.034,306,4.526,307,4.526,308,4.891,309,7.381,310,5.447,311,5.447,312,3.561,313,3.331,314,4.252,315,5.447]],["title/modules/AppModule.html",[149,1.294,316,3.748]],["body/modules/AppModule.html",[3,0.039,4,0.046,5,0.046,24,0.22,25,0.005,32,0.112,38,1.588,69,0.637,81,0.236,83,0.315,85,0.046,87,0.002,88,0.002,91,2.715,93,3.044,94,2.904,99,0.772,110,0.299,111,0.265,113,0.763,122,1.013,144,1.22,149,1.89,150,6.152,151,2.089,152,3.123,156,5.08,157,5.638,158,3.207,160,3.402,161,2.275,162,2.275,164,3.402,165,3.402,166,2.525,167,4.523,168,2.089,169,3.637,170,0.894,171,2.219,172,2.525,191,1.508,194,2.525,195,2.525,196,3.776,197,3.776,198,3.637,201,2.904,251,2.904,266,6.152,276,2.525,277,1.33,284,5.536,297,5.875,298,3.341,316,7.496,317,3.341,318,3.341,319,3.341,320,6.152,321,6.152,322,6.152,323,3.72,324,3.72,325,5.563,326,7.394,327,3.72,328,3.72,329,2.35,330,5.563,331,3.72,332,4.622,333,3.72,334,3.72,335,3.341,336,3.72,337,3.091,338,3.72,339,3.341,340,3.341,341,3.72,342,3.72,343,5.477,344,3.091,345,3.72,346,6.663,347,4.622,348,3.72,349,3.091,350,3.72,351,3.72,352,3.72,353,3.72,354,3.72,355,3.72,356,3.72,357,3.72,358,3.72,359,3.72,360,4.622,361,1,362,2.525,363,2.631,364,2.631,365,2.631,366,2.631,367,4.622,368,3.091,369,3.091,370,2.904,371,3.72,372,3.72]],["title/injectables/AppService.html",[207,1.757,297,3.579]],["body/injectables/AppService.html",[3,0.076,4,0.089,5,0.089,8,0.255,25,0.005,26,1.087,32,0.217,69,0.46,81,0.458,85,0.089,87,0.004,88,0.004,99,1.812,113,1.481,122,1.966,144,2.368,207,3.03,208,3.453,286,8.748,290,6.485,291,6.485,297,6.172,373,7.221,374,7.221]],["title/controllers/AppTestE2eController.html",[89,2.639,375,4.205]],["body/controllers/AppTestE2eController.html",[3,0.044,4,0.052,5,0.052,8,0.148,22,1.935,24,0.283,25,0.005,26,0.89,27,2.844,32,0.25,64,1.434,69,0.552,81,0.266,83,0.338,85,0.052,87,0.003,88,0.003,89,3.165,91,2.045,99,1.26,106,1.963,110,0.573,111,0.508,113,1.705,114,2.305,118,1.727,119,2.739,122,1.141,138,1.434,139,0.495,144,2.726,258,3.103,297,2.963,375,5.044,376,7.201,377,7.201,378,7.149,379,4.189,380,7.031,381,5.452,382,6.071,383,7.83,384,6.071,385,9.332,386,4.189,387,4.74,388,4.189,389,3.762,390,5.666,391,4.189,392,4.189,393,4.189,394,6.766,395,4.189,396,4.189,397,4.189,398,6.071,399,5.044,400,4.189,401,4.189,402,4.189,403,2.344,404,4.189,405,4.497,406,3.762,407,3.762,408,7.201,409,3.762,410,4.189,411,3.48,412,2.843,413,3.48,414,3.48,415,3.762,416,4.189,417,4.189,418,4.189,419,4.189,420,4.189,421,3.27,422,4.189,423,4.189,424,4.189,425,6.071,426,4.189,427,4.189,428,4.189]],["title/modules/AppTestE2eModule.html",[149,1.294,429,3.951]],["body/modules/AppTestE2eModule.html",[1,3.945,3,0.043,4,0.051,5,0.051,6,4.424,25,0.005,34,3.581,64,2.065,69,0.662,81,0.263,85,0.051,87,0.003,88,0.003,91,2.945,122,1.131,149,1.543,151,2.332,152,3.388,160,3.691,161,2.541,162,2.541,164,3.691,165,3.691,276,2.82,277,1.485,316,6.401,375,5.904,376,3.451,377,3.451,378,5.027,405,6.401,406,5.419,407,3.73,413,3.451,429,7.132,430,3.73,431,3.73,432,4.154,433,4.154,434,4.154,435,4.154,436,3.388,437,3.243,438,3.243,439,3.945,440,3.077,441,2.938,442,3.945,443,3.243,444,2.396,445,3.581,446,3.451,447,4.096,448,3.243,449,4.268,450,3.811,451,3.451,452,3.945,453,3.243,454,2.938,455,4.096,456,3.451,457,3.945,458,3.077,459,2.465,460,3.691,461,3.243,462,3.945,463,3.451,464,3.481,465,2.82,466,4.096,467,3.451,468,2.622,469,3.73,470,4.096,471,3.243,472,3.077,473,4.268,474,3.243,475,3.243,476,3.581,477,3.243,478,3.811,479,3.077,480,4.096,481,3.077,482,3.243,483,3.73]],["title/injectables/AppTestE2eService.html",[207,1.757,405,3.748]],["body/injectables/AppTestE2eService.html",[1,1.541,3,0.025,4,0.029,5,0.029,6,4.047,8,0.083,11,1.667,15,0.816,22,0.526,24,0.228,25,0.005,26,0.852,32,0.206,34,1.399,38,1.006,64,0.807,69,0.618,76,0.676,81,0.15,83,0.272,84,1.746,85,0.029,87,0.002,88,0.002,99,0.806,100,2.181,110,0.461,111,0.409,112,0.94,113,1.303,114,1.961,122,0.642,139,1.116,144,1.884,207,1.349,208,1.127,210,0.312,221,3.098,222,2.532,277,0.843,376,6.005,377,6.005,378,5.113,380,5.159,381,3.488,389,3.488,390,4.153,403,2.218,405,2.877,411,1.959,412,1.6,413,1.959,436,1.324,437,1.84,438,1.84,439,1.541,440,1.746,441,1.667,442,1.541,443,1.84,444,1.36,445,1.399,446,1.959,447,1.6,448,1.84,449,2.747,450,1.489,451,1.959,452,1.541,453,1.84,454,1.667,455,1.6,456,1.959,457,1.541,458,1.746,459,1.399,460,1.442,461,1.84,462,1.541,463,1.959,464,1.36,465,1.6,466,1.6,467,1.959,468,1.024,469,2.117,470,1.6,471,1.84,472,1.746,473,1.667,474,1.84,475,1.84,476,1.399,477,1.84,478,1.489,479,1.746,480,1.6,481,1.746,482,1.84,484,2.357,485,5.744,486,3.884,487,3.884,488,1.175,489,4.309,490,4.953,491,4.953,492,4.953,493,4.953,494,4.953,495,4.953,496,4.953,497,4.953,498,4.953,499,4.953,500,4.953,501,4.953,502,4.116,503,4.953,504,2.94,505,4.953,506,4.953,507,4.953,508,4.953,509,4.953,510,4.953,511,2.357,512,1.82,513,2.357,514,2.357,515,2.357,516,3.884,517,2.357,518,3.884,519,2.357,520,0.972,521,2.636,522,1.105,523,2.357,524,2.357,525,2.357,526,2.357,527,2.357,528,2.357,529,2.357,530,2.357,531,2.357,532,2.357,533,2.357,534,2.357,535,1.959,536,2.357,537,1.399,538,2.357,539,2.357,540,2.357,541,2.357,542,2.357,543,2.357,544,2.357,545,2.357,546,1.746,547,2.357,548,2.357,549,2.357,550,2.357,551,2.117,552,2.357,553,1.6,554,2.357,555,2.117,556,2.357,557,1.541,558,2.357,559,2.117,560,2.357,561,2.117,562,2.357,563,2.117,564,2.357,565,1.667,566,2.357,567,1.489,568,2.357,569,1.746,570,2.357,571,1.959,572,2.357,573,0.819,574,2.357,575,1.959,576,2.357,577,2.117,578,2.357,579,1.746,580,2.357,581,1.667,582,2.357,583,2.357,584,2.357,585,2.357,586,0.989,587,2.357,588,2.357,589,1.063,590,2.357,591,1.667,592,1.151,593,2.357,594,2.117,595,1.6,596,2.357,597,1.746]],["title/controllers/AuthController.html",[89,2.639,598,4.205]],["body/controllers/AuthController.html",[3,0.032,4,0.038,5,0.038,8,0.108,22,0.68,24,0.318,25,0.005,26,0.733,27,2.626,32,0.231,64,2.475,69,0.598,78,1.552,81,0.193,83,0.363,85,0.038,87,0.002,88,0.002,89,1.588,91,1.486,96,2.154,99,0.991,100,2.228,110,0.616,111,0.546,113,1.574,114,2.02,118,1.255,119,1.991,120,1.518,121,2.255,122,0.829,127,2.067,128,1.666,131,2.154,133,1.552,134,2.377,135,1.625,138,1.042,139,0.564,143,2.255,144,2.516,159,3.492,168,1.709,193,2.255,221,0.998,222,1.746,224,2.096,247,2.572,258,2.255,263,2.255,312,5.998,421,2.377,598,3.964,599,3.044,600,2.067,601,4.771,602,4.771,603,2.934,604,4.771,605,4.285,606,4.771,607,3.044,608,6.227,609,3.044,610,3.044,611,5.067,612,3.044,613,3.044,614,3.044,615,3.044,616,3.044,617,3.044,618,3.044,619,3.044,620,3.044,621,2.734,622,5.99,623,3.044,624,3.044,625,4.771,626,3.044,627,3.014,628,3.22,629,3.044,630,2.734,631,2.734,632,2.734,633,4.162,634,2.53,635,2.329,636,2.154,637,4.594,638,2.53,639,3.044,640,2.734,641,2.255,642,1.923,643,2.377,644,3.044,645,3.044,646,3.044,647,4.771,648,2.377,649,2.734,650,2.734,651,1.923,652,2.734,653,3.044,654,3.044,655,3.044,656,3.044,657,1.903,658,3.044,659,1.872,660,1.706,661,2.572,662,3.044,663,3.044,664,3.044,665,3.044,666,3.044,667,3.044,668,4.771,669,3.044,670,3.044,671,3.044,672,3.044,673,3.044,674,4.771,675,4.771,676,3.725,677,4.771,678,4.771,679,5.284,680,3.044,681,3.044,682,3.044,683,3.044,684,3.044,685,4.771,686,2.734,687,3.044,688,5.884,689,3.044,690,3.044,691,3.044,692,3.044,693,3.044,694,3.044,695,3.044,696,3.044,697,3.044,698,4.771,699,3.044,700,3.044,701,3.044,702,3.044,703,2.53,704,3.044,705,2.53,706,2.53,707,2.377,708,1.756]],["title/modules/AuthModule.html",[149,1.294,320,3.748]],["body/modules/AuthModule.html",[3,0.039,4,0.046,5,0.046,22,0.84,25,0.005,64,1.288,69,0.646,78,1.918,81,0.239,83,0.317,85,0.046,87,0.002,88,0.002,91,2.738,97,2.435,122,1.024,149,1.434,151,2.112,152,3.15,156,5.101,158,3.221,159,4.95,160,3.431,161,2.301,162,2.301,164,3.431,165,3.431,166,2.554,167,5.047,168,2.112,169,3.668,170,0.904,171,2.237,172,2.554,174,3.968,175,1.836,176,1.763,177,1.799,178,3.352,188,3.668,189,2.661,190,2.46,191,1.525,193,2.787,194,2.554,195,2.554,196,4.553,197,4.553,198,4.386,199,2.937,200,2.937,201,2.937,202,3.126,203,3.126,205,3.379,206,3.379,276,2.554,277,1.345,278,2.937,320,7.412,598,5.574,603,1.876,633,6.717,634,3.126,709,3.379,710,3.379,711,3.379,712,3.762,713,6.512,714,6.512,715,6.512,716,3.762,717,5.61,718,5.61,719,2.46,720,3.762,721,3.762,722,3.762,723,3.762,724,3.126,725,4.661,726,3.126,727,4.661,728,3.762,729,3.762,730,3.762,731,3.762,732,4.38,733,3.762,734,2.937,735,4.661,736,3.762,737,3.379,738,4.38,739,3.762,740,3.379,741,3.379,742,3.762,743,3.379,744,3.762,745,3.762]],["title/injectables/AuthService.html",[207,1.757,633,3.579]],["body/injectables/AuthService.html",[3,0.034,4,0.04,5,0.04,8,0.114,22,0.72,24,0.335,25,0.005,26,1.232,32,0.247,64,1.104,69,0.576,78,1.645,81,0.205,83,0.372,85,0.04,87,0.002,88,0.002,99,1.036,100,2.14,110,0.631,111,0.559,113,1.612,114,1.912,120,1.609,122,0.879,138,1.104,144,2.577,170,0.775,207,1.733,208,1.543,210,0.259,212,5.797,213,5.797,221,1.637,222,1.309,224,1.921,225,3.698,247,3.035,403,2.654,586,1.354,600,3.389,603,1.609,605,4.483,621,4.483,622,5.802,628,4.633,631,2.898,632,2.898,633,3.531,635,1.575,648,2.519,649,2.898,650,2.898,651,3.153,652,2.898,657,1.287,659,1.266,660,1.154,661,1.928,679,5.483,706,2.681,707,2.519,724,2.681,734,2.519,740,5.483,743,4.483,746,3.227,747,1.719,748,6.872,749,4.992,750,4.992,751,4.992,752,3.698,753,3.227,754,7.859,755,3.227,756,3.227,757,4.992,758,3.227,759,4.992,760,4.992,761,3.227,762,4.992,763,3.227,764,3.227,765,4.992,766,5.365,767,3.227,768,3.227,769,5.09,770,2.681,771,2.681,772,2.519,773,3.227,774,2.39,775,4.992,776,2.519,777,2.519,778,2.898,779,3.227,780,3.227,781,3.227,782,3.227,783,2.898,784,2.898,785,5.073,786,4.992,787,3.227,788,3.227,789,3.227,790,6.872,791,5.365,792,6.872,793,3.227,794,4.483,795,3.227,796,3.227,797,3.227,798,3.227,799,4.992,800,3.227,801,2.681,802,3.227,803,2.898]],["title/entities/CardEntity.html",[0,1.592,436,2.841]],["body/entities/CardEntity.html",[0,0.972,2,0.741,3,0.019,4,0.022,5,0.022,6,4.11,8,0.063,9,0.5,13,1.705,14,1.868,15,0.854,21,1.735,24,0.376,25,0.005,26,1.093,27,3.221,32,0.283,35,1.782,37,3.77,38,4.132,39,4.933,40,4.323,43,2.918,51,1.448,53,1.735,55,3.103,69,0.514,70,3.413,71,1.905,72,1.944,73,2.283,74,0.826,75,1.905,76,0.515,81,0.196,82,0.877,83,0.085,85,0.022,87,0.001,88,0.001,111,0.611,293,3.171,313,1.099,436,1.735,442,4.157,444,1.036,452,3.156,454,1.271,460,2.952,462,3.156,464,2.784,468,2.763,470,3.276,472,1.331,546,2.289,557,1.175,565,3.847,567,1.952,569,4.028,573,1.676,804,1.797,805,4.065,806,3.651,807,4.065,808,4.065,809,4.065,810,4.065,811,4.065,812,4.065,813,4.065,814,3.651,815,4.065,816,4.065,817,2.413,818,3.011,819,4.065,820,4.065,821,4.065,822,5.438,823,5.334,824,6.029,825,4.065,826,4.065,827,4.065,828,4.065,829,4.638,830,1.797,831,5.438,832,1.797,833,3.049,834,4.335,835,3.09,836,5.273,837,5.364,838,1.797,839,3.09,840,1.797,841,1.797,842,1.797,843,6.515,844,6.297,845,1.797,846,4.827,847,1.797,848,1.797,849,2.775,850,3.09,851,1.797,852,1.797,853,1.614,854,2.097,855,1.797,856,1.797,857,1.22,858,3.09,859,1.797,860,3.09,861,1.797,862,1.797,863,1.952,864,2.412,865,3.09,866,2.02,867,1.797,868,1.797,869,2.186,870,3.09,871,1.797,872,1.797,873,3.09,874,1.797,875,1.797,876,3.09,877,1.797,878,1.797,879,3.09,880,1.797,881,1.797,882,3.691,883,1.797,884,1.797,885,1.797,886,1.797,887,3.651,888,1.797,889,3.651,890,1.797,891,3.651,892,1.797,893,2.412,894,2.876,895,3.435,896,2.02,897,1.135,898,1.493,899,4.065,900,1.493,901,4.065,902,1.614,903,1.797,904,1.797,905,2.289,906,3.09,907,1.403,908,1.493,909,1.614,910,1.797,911,1.403,912,1.493,913,1.797,914,1.493,915,3.21,916,5.438,917,1.797,918,0.877,919,1.797,920,1.797,921,1.797,922,1.797,923,0.877]],["title/entities/CompanyEmployeeEntity.html",[0,1.592,439,3.308]],["body/entities/CompanyEmployeeEntity.html",[0,1.419,2,1.86,3,0.047,4,0.056,5,0.056,6,4.058,8,0.159,9,0.915,11,6.285,13,3.122,14,3.42,15,1.564,21,3.177,24,0.362,25,0.005,26,0.798,27,3.127,32,0.275,34,4.807,35,3.693,38,2.733,43,3.861,51,3,55,2.289,69,0.516,70,2.114,71,3.487,72,3.558,73,4.179,74,2.073,75,3.487,76,1.293,77,3.341,81,0.286,85,0.056,87,0.003,88,0.003,293,2.408,439,4.186,440,6.917,468,3.52,573,2.97,592,3.632,843,4.998,844,4.998,897,2.849,915,4.248,918,2.202,923,2.202,924,4.511,925,6.402,926,4.511,927,4.511,928,4.511,929,4.511,930,6.402,931,4.511,932,6.683,933,4.511,934,4.511,935,2.759,936,4.511,937,4.511,938,1.327,939,2.19,940,1.345,941,4.511]],["title/entities/CompanyEntity.html",[0,1.592,34,3.003]],["body/entities/CompanyEntity.html",[0,1.317,1,3.967,2,1.065,3,0.027,4,0.032,5,0.032,6,4.171,8,0.091,9,0.649,10,4.739,11,2.961,12,4.739,13,2.213,14,2.425,15,1.109,21,2.253,24,0.378,25,0.005,26,1.209,27,3.265,32,0.287,34,2.484,35,1.49,37,4.772,38,4.214,39,3.711,40,4.236,43,3.101,51,1.961,55,0.924,67,4.739,69,0.455,70,4.06,71,2.473,72,2.523,73,2.35,74,1.187,75,2.473,76,0.741,81,0.164,83,0.287,84,4.938,85,0.032,87,0.002,88,0.002,111,0.697,289,3.044,439,4.666,441,1.827,460,4.597,464,4.117,468,3.101,565,4.292,817,3.132,829,6.636,833,2.644,836,3.967,837,4.119,857,2.841,869,1.827,893,3.268,894,2.961,895,3.333,896,3.45,897,1.632,908,2.146,911,2.017,915,3.412,918,1.261,923,1.261,938,0.76,939,1.553,940,0.77,942,2.583,943,4.739,944,5.277,945,4.384,946,2.963,947,5.277,948,5.277,949,5.277,950,4.739,951,5.277,952,4.739,953,2.583,954,4.186,955,2.583,956,2.583,957,3.759,958,2.583,959,2.583,960,2.583,961,2.583,962,2.583,963,2.583,964,2.583,965,4.186,966,2.583,967,2.583,968,2.583,969,2.583,970,2.583,971,4.186,972,2.583,973,2.583,974,3.759,975,2.583,976,2.583,977,2.583,978,2.583,979,2.583,980,2.32,981,2.583]],["title/entities/ConnectedCardEntity.html",[0,1.592,442,3.308]],["body/entities/ConnectedCardEntity.html",[0,1.964,2,1.795,3,0.046,4,0.054,5,0.054,6,4.02,8,0.154,9,0.897,13,3.061,14,3.353,15,1.533,21,3.115,24,0.358,25,0.005,26,0.778,27,3.095,32,0.272,35,3.6,38,1.858,39,4.875,40,5.211,43,3.816,51,2.925,69,0.465,71,3.419,72,3.489,73,4.097,74,2,75,3.419,76,1.248,81,0.276,83,0.206,85,0.054,87,0.003,88,0.003,436,5.433,442,4.081,443,7.223,444,2.511,445,4.73,459,2.584,551,3.909,553,6.139,857,2.955,896,4.081,915,4.198,918,2.125,923,2.125,938,1.281,939,2.147,940,1.298,982,4.353,983,7.297,984,7.297,985,6.242,986,4.353,987,6.242,988,4.353,989,3.909,990,4.353,991,4.353,992,4.353,993,4.353,994,4.353,995,4.873]],["title/entities/ConversationEntity.html",[0,1.592,445,3.003]],["body/entities/ConversationEntity.html",[0,1.829,2,1.628,3,0.041,4,0.049,5,0.049,6,4.119,8,0.139,9,0.849,13,2.895,14,3.171,15,1.45,21,2.946,24,0.37,25,0.005,26,0.949,27,3.199,32,0.281,37,3.265,38,2.482,43,3.689,51,2.725,69,0.541,70,3.234,71,3.234,72,3.3,74,1.814,75,3.234,76,1.132,81,0.25,83,0.187,85,0.049,87,0.003,88,0.003,292,5.112,442,5.55,444,2.278,445,3.451,450,5.361,457,5.55,459,2.343,462,4.977,478,4.808,553,2.68,557,4.512,567,3.672,581,4.113,814,6.198,833,4.808,834,6.198,857,2.68,895,5.126,896,3.801,898,3.281,912,3.281,915,4.058,918,1.927,923,1.927,996,3.948,997,6.901,998,5.734,999,5.814,1000,3.948,1001,3.948,1002,3.948,1003,3.948,1004,5.814,1005,3.948,1006,3.948,1007,5.814,1008,3.948,1009,5.814,1010,3.948,1011,5.814,1012,3.948,1013,3.948,1014,3.083,1015,3.546,1016,3.546]],["title/classes/CreateLogCommand.html",[81,0.321,244,3.951]],["body/classes/CreateLogCommand.html",[3,0.034,4,0.04,5,0.04,8,0.114,9,0.614,24,0.393,25,0.005,26,1.211,27,3.278,32,0.291,37,5.331,38,4.198,69,0.389,81,0.205,83,0.153,85,0.04,87,0.002,88,0.002,92,4.077,110,0.259,111,0.704,118,2.518,128,1.766,210,0.259,244,3.898,246,2.09,302,4.522,305,4.522,313,3.734,660,2.183,676,6.61,863,3.153,882,2.19,938,1.469,939,2.187,940,0.962,1017,0.259,1018,9.719,1019,3.227,1020,5.483,1021,5.483,1022,5.483,1023,5.483,1024,4.522,1025,5.483,1026,5.483,1027,5.483,1028,5.483,1029,4.767,1030,3.227,1031,7.026,1032,3.227,1033,5.257,1034,2.898,1035,3.227,1036,3.227,1037,6.175,1038,7.603,1039,3.227,1040,4.483,1041,3.227,1042,3.227,1043,6.674,1044,3.227,1045,4.144,1046,3.227,1047,3.227,1048,3.227,1049,3.227,1050,3.227,1051,3.227,1052,3.227,1053,3.227,1054,3.227,1055,3.227,1056,3.389,1057,2.898]],["title/classes/CreateLogCommandHandler.html",[81,0.321,188,3.308]],["body/classes/CreateLogCommandHandler.html",[3,0.046,4,0.054,5,0.054,8,0.155,9,0.771,24,0.349,25,0.005,26,0.996,32,0.265,69,0.577,81,0.278,83,0.347,85,0.054,87,0.003,88,0.003,92,3.801,99,1.302,100,1.804,110,0.503,111,0.446,113,0.899,114,1.526,122,1.193,139,1.156,144,1.437,168,2.46,170,1.053,188,4.1,189,6.41,190,6.059,210,0.352,221,3.238,238,3.246,244,6.241,361,1.686,738,4.896,1017,0.352,1033,5.18,1056,2.974,1057,3.935,1058,1.324,1059,3.575,1060,6.577,1061,6.577,1062,6.577,1063,5.424,1064,2.461,1065,3.421,1066,6.241,1067,4.1,1068,4.896,1069,3.641,1070,3.246,1071,3.641,1072,5.921,1073,3.061,1074,3.935,1075,3.432,1076,2.139,1077,3.641,1078,4.382,1079,3.421,1080,3.421,1081,4.382,1082,3.935,1083,5.424,1084,4.382,1085,5.211,1086,3.935,1087,3.935,1088,3.935,1089,3.935,1090,3.641,1091,3.935,1092,3.641,1093,3.935,1094,4.382,1095,4.382]],["title/classes/CreateLogDto.html",[81,0.321,236,3.435]],["body/classes/CreateLogDto.html",[3,0.033,4,0.039,5,0.039,8,0.11,9,0.598,24,0.393,25,0.005,26,1.219,27,3.283,32,0.291,37,5.295,38,4.177,69,0.381,81,0.198,83,0.148,85,0.039,87,0.002,88,0.002,92,4.08,110,0.25,111,0.717,118,2.465,128,1.708,149,1.528,210,0.25,236,3.302,246,2.046,302,4.428,305,4.428,313,3.656,660,2.138,676,6.537,863,3.072,882,2.118,938,1.431,939,2.153,940,0.931,1017,0.25,1020,5.368,1021,5.368,1022,5.368,1023,5.368,1024,4.428,1025,5.368,1026,5.368,1027,5.368,1028,5.368,1029,4.667,1031,7.053,1033,5.176,1034,2.803,1037,6.08,1038,7.519,1040,4.368,1043,6.571,1045,4.058,1056,3.302,1096,6.88,1097,2.803,1098,2.803,1099,3.121,1100,3.121,1101,3.121,1102,3.121,1103,3.121,1104,3.121,1105,3.121,1106,3.121,1107,3.121,1108,3.121,1109,3.121,1110,3.121,1111,3.121,1112,3.121,1113,3.121,1114,3.121,1115,3.121,1116,3.121,1117,3.121]],["title/classes/CreateMethodLogDto.html",[81,0.321,240,4.205]],["body/classes/CreateMethodLogDto.html",[3,0.066,4,0.078,5,0.078,8,0.224,9,0.989,24,0.368,25,0.005,26,1.223,32,0.28,81,0.401,83,0.299,85,0.078,87,0.004,88,0.004,92,4.027,110,0.508,111,0.45,118,3.644,149,2.259,210,0.508,240,6.681,246,3.452,938,2.366,939,2.825,940,1.887,1017,0.508,1096,6.79,1097,5.683,1098,5.683,1118,6.328,1119,6.328,1120,6.328]],["title/classes/CreateProfileCommand.html",[81,0.321,1121,3.951]],["body/classes/CreateProfileCommand.html",[3,0.063,4,0.075,5,0.075,8,0.214,9,0.962,24,0.362,25,0.005,26,1.14,32,0.275,69,0.386,81,0.384,83,0.287,85,0.075,87,0.003,88,0.003,110,0.486,111,0.431,139,1.193,210,0.486,242,4.286,403,3.343,747,1.999,938,2.301,939,2.787,940,1.807,1017,0.486,1121,6.105,1122,9.471,1123,4.488,1124,7.572,1125,6.76,1126,7.82,1127,5.441,1128,5.441,1129,5.441]],["title/classes/CreateProfileCommandHandler.html",[81,0.321,1130,4.205]],["body/classes/CreateProfileCommandHandler.html",[2,1.587,3,0.04,4,0.048,5,0.048,8,0.136,15,1.199,22,1.518,24,0.226,25,0.005,32,0.172,64,1.317,69,0.601,76,1.103,78,1.962,81,0.362,82,1.879,83,0.27,85,0.048,87,0.003,88,0.003,99,1.185,100,1.675,110,0.458,111,0.406,113,0.79,114,1.654,139,0.888,144,1.871,170,0.925,210,0.458,221,2.466,222,2.105,224,2.813,247,3.248,277,1.376,361,1.534,464,3.292,465,2.613,468,2.48,489,3.832,502,5.65,504,3.386,512,3.186,520,1.587,522,1.804,535,3.198,537,2.284,573,1.337,627,2.431,657,1.535,659,2.668,660,1.376,661,2.904,817,3.386,866,4.445,1017,0.309,1058,1.163,1059,3.319,1064,2.239,1067,2.517,1073,2.785,1075,1.804,1076,1.879,1077,3.198,1121,5.871,1130,4.741,1131,6.799,1132,4.75,1133,2.354,1134,3.853,1135,3.849,1136,4.159,1137,2.517,1138,2.284,1139,2.723,1140,2.613,1141,1.84,1142,2.22,1143,2.613,1144,3.005,1145,4.455,1146,3.198,1147,2.284,1148,3.849,1149,3.005,1150,3.604,1151,2.851,1152,2.517,1153,2.845,1154,3.849,1155,3.849,1156,3.849,1157,3.457,1158,3.849,1159,5.124,1160,3.457,1161,3.457,1162,3.457,1163,3.457,1164,3.849,1165,3.005,1166,3.849,1167,3.005,1168,3.198,1169,3.849,1170,3.849,1171,1.879,1172,3.849,1173,2.517]],["title/classes/CreateProfileDto.html",[81,0.321,1124,3.951]],["body/classes/CreateProfileDto.html",[3,0.067,4,0.079,5,0.079,8,0.225,9,0.993,24,0.351,25,0.005,26,1.006,32,0.267,69,0.406,81,0.404,83,0.301,85,0.079,87,0.004,88,0.004,110,0.511,111,0.453,139,1.161,210,0.511,747,1.944,935,3.895,938,2.376,939,2.83,940,1.899,1017,0.511,1124,6.303,1174,9.32,1175,4.972,1176,5.598,1177,5.421,1178,7.25,1179,5.598,1180,5.291,1181,4.164]],["title/classes/CreateProfileEvent.html",[81,0.321,1145,3.951]],["body/classes/CreateProfileEvent.html",[3,0.061,4,0.072,5,0.072,8,0.206,9,0.938,24,0.357,25,0.005,26,1.123,32,0.271,55,2.727,69,0.371,81,0.37,83,0.276,85,0.072,87,0.003,88,0.003,110,0.468,111,0.415,139,1.185,149,2.173,210,0.468,246,2.908,573,3.13,747,1.984,938,2.244,939,2.753,940,1.738,1017,0.468,1136,5.87,1137,3.811,1145,5.953,1182,9.356,1183,4.317,1184,6.336,1185,3.314,1186,6.336,1187,4.551,1188,4.317]],["title/classes/CreateProfileEventHandler.html",[81,0.321,1189,4.205]],["body/classes/CreateProfileEventHandler.html",[3,0.06,4,0.071,5,0.071,8,0.203,15,1.587,22,1.283,24,0.299,25,0.005,32,0.227,69,0.538,81,0.364,83,0.357,85,0.071,87,0.003,88,0.003,97,2.085,99,1.568,100,2.078,110,0.606,111,0.538,113,1.178,114,1.837,118,2.369,138,1.966,139,0.678,149,1.469,158,3.691,170,1.38,171,2.291,191,2.329,210,0.461,222,1.506,246,1.966,361,2.031,573,1.995,1017,0.461,1058,1.736,1145,6.999,1146,4.773,1147,5.32,1189,6.276,1190,8.439,1191,4.035,1192,3.611,1193,2.864,1194,2.864,1195,3.611,1196,2.928,1197,2.64,1198,2.747,1199,5.745,1200,2.864,1201,2.928,1202,2.928,1203,5.745,1204,5.159,1205,5.745]],["title/classes/CreateProfileRequest.html",[81,0.321,1206,4.205]],["body/classes/CreateProfileRequest.html",[3,0.06,4,0.071,5,0.071,8,0.204,9,0.932,24,0.37,25,0.005,26,1.193,32,0.281,69,0.368,81,0.366,83,0.273,85,0.071,87,0.003,88,0.003,110,0.464,111,0.411,139,1.21,210,0.464,747,2.027,935,3.534,938,2.231,939,2.745,940,1.723,1017,0.464,1125,6.607,1176,5.345,1177,5.176,1179,5.345,1181,3.778,1206,6.3,1207,9.575,1208,5.189,1209,7.6,1210,6.809,1211,5.189,1212,5.189,1213,5.189]],["title/classes/CreateUserCommand.html",[81,0.321,1214,3.951]],["body/classes/CreateUserCommand.html",[3,0.071,4,0.084,5,0.084,8,0.241,9,1.037,24,0.334,25,0.005,32,0.254,69,0.435,81,0.433,83,0.323,85,0.084,87,0.004,88,0.004,110,0.548,111,0.486,139,1.08,210,0.548,242,4.828,390,6.746,412,4.633,747,1.668,1017,0.548,1214,6.582,1215,9.148,1216,4.828,1217,6.826,1218,6.13,1219,5.672,1220,2.966]],["title/classes/CreateUserCommandHandler.html",[81,0.321,1221,4.205]],["body/classes/CreateUserCommandHandler.html",[3,0.023,4,0.027,5,0.027,8,0.078,9,0.45,15,0.461,22,1.051,24,0.32,25,0.005,26,1.134,27,0.751,30,2.172,32,0.253,53,3.429,64,1.881,69,0.554,76,0.629,81,0.232,82,1.071,83,0.36,85,0.027,87,0.002,88,0.002,99,0.76,100,2.109,110,0.611,111,0.542,112,1.46,113,1.563,114,1.853,133,1.118,135,1.171,139,0.779,144,2.498,170,0.527,175,1.071,176,1.028,177,1.049,178,2.975,210,0.294,221,3.01,222,1.997,224,2.694,247,2.358,277,0.785,361,0.984,488,1.094,489,2.519,512,2.575,520,0.905,522,1.715,586,2.768,589,1.65,592,1.071,595,1.489,600,4.146,627,1.386,657,0.875,659,0.861,660,2.724,661,2.703,747,1.305,863,2.974,866,2.393,946,3.085,1017,0.176,1058,0.663,1059,2.298,1064,1.436,1073,1.786,1074,1.97,1075,1.028,1076,1.071,1077,1.823,1134,3.478,1139,1.552,1140,4.479,1141,3.155,1142,3.17,1143,1.489,1144,1.713,1165,1.713,1167,1.713,1168,1.823,1171,2.981,1214,4.29,1221,3.041,1222,8.562,1223,5.9,1224,3.912,1225,3.287,1226,4.228,1227,3.287,1228,3.041,1229,3.041,1230,3.041,1231,3.041,1232,3.041,1233,3.041,1234,2.194,1235,2.194,1236,3.287,1237,2.194,1238,2.194,1239,3.287,1240,2.194,1241,4.768,1242,3.041,1243,2.194,1244,3.041,1245,2.194,1246,1.823,1247,2.194,1248,3.041,1249,2.194,1250,3.041,1251,2.194,1252,1.144,1253,2.589,1254,2.589,1255,2.857,1256,2.589,1257,2.857,1258,2.711,1259,1.823,1260,1.713,1261,1.713,1262,3.49,1263,2.711,1264,1.823,1265,2.857,1266,2.857,1267,2.194,1268,1.823,1269,1.97,1270,3.041,1271,1.97,1272,1.97,1273,3.66,1274,2.194,1275,3.44,1276,5.075,1277,2.484,1278,2.484,1279,3.66,1280,2.194,1281,2.194,1282,3.33,1283,2.194,1284,2.194,1285,1.97,1286,2.194,1287,1.97,1288,1.97,1289,2.194,1290,1.97,1291,2.194,1292,2.194,1293,2.194,1294,2.194,1295,1.625,1296,2.194,1297,1.342,1298,1.823,1299,2.194,1300,2.194,1301,2.194,1302,4.768,1303,2.194,1304,2.194,1305,2.194,1306,3.287,1307,3.041,1308,1.97,1309,3.041,1310,3.041,1311,1.823,1312,1.823,1313,1.823,1314,3.041,1315,1.713]],["title/classes/CreateUserDto.html",[81,0.321,390,3.308]],["body/classes/CreateUserDto.html",[3,0.058,4,0.068,5,0.068,8,0.194,9,0.902,24,0.363,25,0.005,26,1.176,27,3.014,30,3.259,32,0.276,69,0.526,79,4.63,81,0.465,82,2.68,83,0.26,85,0.068,87,0.003,88,0.003,110,0.441,111,0.686,112,3.291,128,3.005,133,4.206,135,2.932,210,0.441,390,4.793,411,7.843,586,3.462,589,3.721,592,4.028,905,5.43,938,2.157,939,2.7,940,1.638,1017,0.441,1031,6.49,1316,4.563,1317,7.331,1318,5.492,1319,5.492,1320,5.492,1321,5.492,1322,5.492,1323,5.492,1324,6.091,1325,4.932,1326,6.584,1327,3.728,1328,4.563]],["title/classes/CreateUserEvent.html",[81,0.321,1329,4.205]],["body/classes/CreateUserEvent.html",[3,0.058,4,0.069,5,0.069,8,0.197,9,0.91,22,1.977,24,0.365,25,0.005,26,1.224,32,0.277,55,2.646,69,0.355,81,0.353,83,0.264,85,0.069,87,0.003,88,0.003,110,0.447,111,0.396,139,1.204,149,2.124,210,0.447,242,3.939,246,2.844,390,6.564,403,3.419,412,3.78,747,2.002,1017,0.447,1185,3.215,1186,6.148,1220,2.42,1329,6.148,1330,9.476,1331,3.939,1332,3.127,1333,7.399,1334,7.399,1335,3.939]],["title/classes/CreateUserEventHandler.html",[81,0.321,1336,4.205]],["body/classes/CreateUserEventHandler.html",[3,0.06,4,0.071,5,0.071,8,0.204,15,1.211,22,1.286,24,0.3,25,0.005,32,0.228,69,0.538,81,0.365,83,0.358,85,0.071,87,0.003,88,0.003,97,2.091,99,1.571,100,2.081,110,0.607,111,0.539,113,1.182,114,1.841,118,2.376,138,1.972,139,0.68,149,1.473,158,3.694,170,1.384,171,2.298,191,2.336,210,0.462,222,1.51,246,1.972,361,2.034,946,3.235,1017,0.462,1058,1.741,1146,4.787,1191,4.04,1192,3.618,1193,2.873,1194,2.873,1195,3.618,1196,2.937,1197,2.648,1198,2.755,1200,2.873,1201,2.937,1202,2.937,1204,5.174,1329,7.457,1336,6.288,1337,8.451,1338,5.177,1339,5.761,1340,3.639,1341,5.761]],["title/classes/CreateUserResponse.html",[81,0.321,1258,3.748]],["body/classes/CreateUserResponse.html",[3,0.054,4,0.064,5,0.064,8,0.184,9,0.87,13,3.369,15,1.688,24,0.376,25,0.005,26,1.205,32,0.286,43,3.073,69,0.332,81,0.33,83,0.246,85,0.064,87,0.003,88,0.003,110,0.418,111,0.572,112,3.203,133,4.093,135,2.779,139,1.226,210,0.418,586,3.369,592,3.92,747,2.053,938,2.081,939,2.735,940,1.552,1017,0.418,1241,6.27,1258,5.238,1327,3.533,1342,9.672,1343,5.205,1344,5.205,1345,3.855,1346,5.205,1347,5.205,1348,5.205,1349,5.205,1350,5.205,1351,5.205]],["title/injectables/CustomHealthCheckService.html",[207,1.757,1352,3.748]],["body/injectables/CustomHealthCheckService.html",[3,0.065,4,0.076,5,0.076,8,0.218,24,0.244,25,0.005,32,0.238,69,0.587,81,0.391,83,0.292,85,0.076,87,0.004,88,0.004,99,1.643,100,2.151,110,0.495,111,0.439,113,1.266,114,1.925,122,1.68,138,2.112,139,0.729,144,2.024,170,1.483,207,2.747,208,2.951,210,0.495,213,6.894,222,1.618,225,4.571,1352,5.861,1353,6.178,1354,8.734,1355,6.819,1356,6.171,1357,9.213,1358,6.171,1359,6.171,1360,6.171,1361,6.178,1362,6.171,1363,5.128,1364,4.571,1365,5.128,1366,5.128]],["title/injectables/DatabaseConfiguration.html",[207,1.757,332,4.205]],["body/injectables/DatabaseConfiguration.html",[1,3.798,2,2.717,3,0.031,4,0.037,5,0.037,8,0.105,24,0.261,25,0.005,32,0.09,34,3.448,38,3.707,64,1.988,69,0.639,81,0.189,85,0.037,87,0.002,88,0.002,99,0.975,113,0.612,122,0.813,144,2.35,198,4.308,207,1.631,208,1.427,224,0.939,277,1.067,332,3.904,339,8.725,361,0.803,378,3.323,387,5.594,436,3.262,437,2.331,438,2.331,439,3.798,440,2.211,441,2.112,442,3.798,443,2.331,444,1.722,445,3.448,446,2.48,447,3.943,448,2.331,449,3.323,450,3.669,451,2.48,452,3.798,453,2.331,454,2.112,455,3.943,456,2.48,457,3.798,458,2.211,459,1.772,460,3.553,461,2.331,462,3.798,463,2.48,464,3.351,465,2.026,466,3.943,467,2.48,468,2.524,470,3.943,471,2.331,472,2.211,473,4.109,474,2.331,475,2.331,476,3.448,477,2.331,478,3.669,479,2.211,480,3.943,481,2.211,482,2.331,586,2.764,589,2.97,657,1.191,659,1.171,660,2.077,661,1.153,738,3.668,791,2.331,836,3.072,854,3.189,1367,2.985,1368,6.588,1369,2.985,1370,5.809,1371,4.698,1372,2.985,1373,2.48,1374,2.681,1375,2.681,1376,2.985,1377,2.985,1378,5.917,1379,4.698,1380,6.588,1381,6.588,1382,5.917,1383,2.985,1384,2.985,1385,2.985,1386,6.588,1387,2.985,1388,2.985,1389,2.985,1390,6.588,1391,4.698,1392,4.698,1393,4.698,1394,2.985,1395,6.588,1396,2.985,1397,5.917,1398,2.985,1399,4.698,1400,2.985,1401,2.985,1402,2.985,1403,2.985,1404,2.985,1405,2.985,1406,2.985,1407,2.985,1408,2.985,1409,2.985,1410,2.985,1411,2.985,1412,2.985,1413,2.985,1414,2.985,1415,2.985,1416,2.985,1417,4.698,1418,2.985,1419,2.985,1420,2.985,1421,2.985,1422,2.985,1423,2.985,1424,2.985,1425,2.985,1426,2.985,1427,2.985,1428,2.985,1429,2.985,1430,2.681,1431,2.985]],["title/classes/DeleteMailCommand.html",[81,0.321,217,3.579]],["body/classes/DeleteMailCommand.html",[3,0.07,4,0.083,5,0.083,8,0.237,9,1.026,24,0.33,25,0.005,26,1.04,32,0.251,81,0.426,83,0.318,85,0.083,87,0.004,88,0.004,92,3.808,93,4.968,110,0.539,111,0.478,112,3.621,139,1.072,210,0.539,217,5.901,747,1.796,938,2.455,939,2.875,940,2.001,1017,0.539,1432,8.153,1433,5.576,1434,6.027,1435,6.027]],["title/classes/DeleteMailCommandHandler.html",[81,0.321,179,4.205]],["body/classes/DeleteMailCommandHandler.html",[3,0.049,4,0.058,5,0.058,8,0.166,24,0.262,25,0.005,32,0.199,69,0.59,81,0.299,83,0.312,85,0.058,87,0.003,88,0.003,92,3.197,93,4.171,97,2.397,99,1.371,100,1.877,106,2.209,110,0.53,111,0.47,113,0.967,114,1.606,120,2.35,122,1.283,139,0.557,144,1.546,168,2.646,170,1.133,175,2.301,176,2.209,177,2.253,178,2.977,179,6.862,181,5.4,184,3.334,210,0.378,217,5.842,221,2.166,222,1.235,224,2.599,293,2.516,361,1.775,635,2.301,660,2.361,661,2.55,703,3.916,1017,0.378,1058,1.424,1059,3.72,1064,2.591,1065,3.68,1066,6.448,1068,5.155,1070,3.491,1073,3.223,1075,2.209,1076,2.301,1080,3.68,1134,4.095,1171,3.223,1262,3.8,1275,3.443,1297,2.883,1436,7.622,1437,2.579,1438,3.491,1439,3.68,1440,3.334,1441,4.233,1442,5.93,1443,3.916,1444,4.713,1445,4.233,1446,4.233,1447,4.713,1448,4.713,1449,4.713,1450,6.603,1451,5.93,1452,4.713,1453,4.713,1454,4.713,1455,4.713,1456,4.713,1457,4.233,1458,4.713,1459,4.713]],["title/classes/DeleteMailEvent.html",[81,0.321,1439,3.951]],["body/classes/DeleteMailEvent.html",[3,0.058,4,0.068,5,0.068,8,0.195,9,0.903,24,0.349,25,0.005,26,1.221,32,0.265,55,2.626,69,0.351,81,0.349,83,0.261,85,0.068,87,0.003,88,0.003,92,3.852,93,5.277,97,2.666,98,5.734,106,3.442,110,0.442,111,0.392,112,2.929,139,1.172,149,2.348,181,3.6,210,0.589,217,6.496,246,3.143,747,1.962,1017,0.442,1185,3.192,1438,4.079,1439,5.734,1460,9.183,1461,4.945,1462,8.816,1463,5.507,1464,5.507,1465,5.507,1466,4.945,1467,4.945]],["title/classes/DeleteMailEventHandler.html",[81,0.321,182,4.205]],["body/classes/DeleteMailEventHandler.html",[3,0.06,4,0.07,5,0.07,8,0.201,22,1.272,24,0.297,25,0.005,32,0.226,69,0.535,81,0.361,83,0.355,85,0.07,87,0.003,88,0.003,92,3.525,93,4.889,97,2.726,98,4.447,99,1.559,100,2.07,106,3.52,110,0.603,111,0.535,112,2.995,113,1.168,114,1.827,118,2.349,138,1.949,139,0.673,149,1.456,158,3.683,170,1.369,171,2.272,182,6.24,184,6.32,191,2.309,210,0.457,222,1.493,246,1.949,361,2.019,1017,0.457,1058,1.721,1191,4.018,1192,3.591,1193,2.84,1194,2.84,1195,3.591,1196,2.903,1197,2.617,1198,2.723,1200,2.84,1439,6.975,1440,4.029,1468,8.403,1469,5.696,1470,5.696]],["title/classes/DeleteProfileCommand.html",[81,0.321,1471,3.748]],["body/classes/DeleteProfileCommand.html",[3,0.072,4,0.085,5,0.085,8,0.242,9,1.039,15,1.925,24,0.335,25,0.005,26,1.053,32,0.254,81,0.434,83,0.324,85,0.085,87,0.004,88,0.004,110,0.55,111,0.488,139,1.082,210,0.55,747,1.813,938,2.486,939,2.892,940,2.042,1017,0.55,1123,5.073,1471,6.258,1472,9.162,1473,7.02]],["title/classes/DeleteProfileCommandHandler.html",[81,0.321,1474,4.205]],["body/classes/DeleteProfileCommandHandler.html",[3,0.054,4,0.063,5,0.063,8,0.181,15,1.074,24,0.277,25,0.005,32,0.21,69,0.589,76,1.465,81,0.324,83,0.331,85,0.063,87,0.003,88,0.003,99,1.45,100,1.96,110,0.561,111,0.497,113,1.049,114,1.699,139,0.825,170,1.228,210,0.561,221,2.291,222,1.831,224,2.504,247,1.974,277,1.828,361,1.878,468,2.221,489,3.526,504,4.145,520,2.108,537,3.034,573,1.775,657,2.039,659,2.741,660,1.828,661,2.697,1017,0.41,1058,1.545,1059,3.883,1064,2.741,1073,3.409,1075,3.273,1076,2.495,1132,5.401,1133,3.127,1134,4.187,1138,3.034,1147,3.034,1150,3.229,1153,2.549,1171,2.495,1173,3.342,1196,2.605,1438,3.786,1440,3.616,1471,6.631,1474,5.804,1475,7.956,1476,3.616,1477,5.453,1478,5.112,1479,3.616,1480,3.786,1481,3.786,1482,5.112]],["title/classes/DeleteProfileEvent.html",[81,0.321,1477,3.951]],["body/classes/DeleteProfileEvent.html",[3,0.061,4,0.072,5,0.072,8,0.205,9,0.936,24,0.357,25,0.005,26,1.122,32,0.271,55,2.722,69,0.37,81,0.369,83,0.275,85,0.072,87,0.003,88,0.003,106,3.567,110,0.466,111,0.414,139,1.184,149,2.17,210,0.466,246,2.904,573,3.127,747,1.983,938,2.24,939,2.751,940,1.733,1017,0.466,1132,3.671,1183,4.305,1184,6.324,1185,3.307,1187,4.537,1188,4.305,1438,4.305,1471,7.103,1477,5.942,1483,9.347]],["title/classes/DeleteProfileEventHandler.html",[81,0.321,1484,4.205]],["body/classes/DeleteProfileEventHandler.html",[3,0.061,4,0.072,5,0.072,8,0.206,15,1.225,24,0.302,25,0.005,32,0.23,69,0.542,81,0.37,83,0.361,85,0.072,87,0.003,88,0.003,97,2.116,99,1.583,100,2.093,110,0.612,111,0.543,113,1.196,114,1.855,118,2.404,138,1.995,139,0.688,149,1.49,158,3.706,170,1.401,171,2.325,191,2.363,210,0.468,222,1.528,246,1.995,361,2.05,573,2.024,1017,0.468,1058,1.761,1147,5.35,1191,4.063,1192,3.646,1193,2.906,1194,2.906,1195,3.646,1197,2.678,1198,2.787,1200,2.906,1201,2.971,1202,2.971,1440,4.123,1477,7.038,1484,6.336,1485,8.499,1486,3.459,1487,5.829,1488,5.829,1489,4.317]],["title/classes/DeleteUserCommand.html",[81,0.321,1490,3.951]],["body/classes/DeleteUserCommand.html",[3,0.072,4,0.085,5,0.085,8,0.242,9,1.039,24,0.335,25,0.005,26,1.053,32,0.254,81,0.434,83,0.324,85,0.085,87,0.004,88,0.004,110,0.55,111,0.488,139,1.082,210,0.55,403,3.538,747,1.813,938,2.486,939,2.892,940,2.042,1017,0.55,1216,4.845,1490,6.596,1491,9.162,1492,7.02]],["title/classes/DeleteUserCommandHandler.html",[81,0.321,1493,3.951]],["body/classes/DeleteUserCommandHandler.html",[3,0.052,4,0.062,5,0.062,8,0.176,9,0.844,22,1.113,24,0.311,25,0.005,32,0.236,64,1.706,69,0.61,76,1.429,81,0.316,83,0.325,85,0.062,87,0.003,88,0.003,99,1.425,100,1.934,110,0.551,111,0.489,113,1.022,114,1.67,170,1.198,175,2.433,176,2.336,177,2.383,178,2.247,210,0.551,221,1.635,222,1.306,224,1.568,277,1.782,361,1.845,488,2.485,489,3.489,512,3.217,520,2.055,522,2.336,657,1.988,659,1.956,660,2.455,661,1.925,747,1.553,1017,0.4,1058,1.506,1059,3.833,1064,2.694,1069,4.141,1073,3.351,1075,2.336,1076,2.433,1134,4.351,1140,3.383,1141,2.383,1142,2.875,1223,6.023,1252,2.599,1262,3.423,1275,2.599,1297,4.199,1338,2.875,1438,3.692,1440,3.525,1490,6.605,1493,6.13,1494,8.46,1495,4.476,1496,4.141,1497,3.891,1498,5.359,1499,4.476,1500,4.984,1501,4.984,1502,4.984]],["title/classes/DeleteUserEvent.html",[81,0.321,1497,3.951]],["body/classes/DeleteUserEvent.html",[3,0.063,4,0.074,5,0.074,8,0.212,9,0.956,22,2.036,24,0.361,25,0.005,26,1.244,32,0.274,55,2.78,81,0.381,83,0.284,85,0.074,87,0.003,88,0.003,106,3.643,110,0.482,111,0.427,139,1.191,149,2.204,210,0.482,246,2.95,403,3.521,747,1.974,1017,0.482,1185,3.378,1220,2.609,1331,4.247,1332,3.371,1335,4.247,1497,6.069,1503,9.444,1504,5.758,1505,4.447]],["title/classes/DeleteUserEventHandler.html",[81,0.321,1506,4.205]],["body/classes/DeleteUserEventHandler.html",[3,0.061,4,0.072,5,0.072,8,0.206,15,1.225,22,1.301,24,0.302,25,0.005,32,0.23,69,0.542,81,0.37,83,0.361,85,0.072,87,0.003,88,0.003,97,2.116,99,1.583,100,2.093,110,0.612,111,0.543,113,1.196,114,1.855,118,2.404,138,1.995,139,0.688,149,1.49,158,3.706,170,1.401,171,2.325,191,2.363,210,0.468,222,1.528,246,1.995,361,2.05,1017,0.468,1058,1.761,1191,4.063,1192,3.646,1193,2.906,1194,2.906,1195,3.646,1197,2.678,1198,2.787,1200,2.906,1201,2.971,1202,2.971,1338,5.2,1340,3.681,1440,4.123,1486,3.459,1489,4.317,1497,7.038,1506,6.336,1507,8.499,1508,5.829]],["title/entities/DiscountCodeEntity.html",[0,1.592,447,3.435]],["body/entities/DiscountCodeEntity.html",[0,1.814,2,1.609,3,0.041,4,0.048,5,0.048,6,4.109,8,0.138,9,0.843,13,2.875,14,3.15,15,1.44,21,2.926,24,0.4,25,0.005,26,0.718,27,3.19,28,5.712,32,0.281,43,4.158,51,2.701,69,0.437,70,3.961,71,3.212,72,3.277,74,1.793,75,3.212,76,1.119,79,4.781,81,0.366,82,1.905,83,0.4,85,0.048,87,0.003,88,0.003,447,3.912,448,7.382,476,5.016,555,3.504,863,5.339,869,2.76,893,4.5,894,4.077,915,4.041,918,1.905,923,1.905,1509,3.504,1510,6.155,1511,6.854,1512,6.155,1513,6.155,1514,5.695,1515,6.854,1516,3.902,1517,3.902,1518,5.176,1519,6.155,1520,3.902,1521,5.764,1522,3.902,1523,5.176,1524,5.176,1525,3.902,1526,3.902,1527,5.176,1528,3.902,1529,3.902,1530,3.902,1531,3.902,1532,5.764,1533,3.902,1534,6.155,1535,6.798,1536,2.89,1537,5.695,1538,3.902]],["title/classes/DuplicateMailException.html",[81,0.321,1256,3.579]],["body/classes/DuplicateMailException.html",[3,0.075,4,0.088,5,0.088,25,0.005,32,0.215,69,0.455,81,0.453,85,0.088,87,0.004,88,0.004,120,3.562,122,1.945,210,0.749,635,4.556,708,4.121,1017,0.573,1141,4.145,1254,6.132,1256,6.132,1277,4.849,1278,4.849,1539,4.868,1540,6.415,1541,3.909,1542,6.415,1543,5.936]],["title/classes/DuplicateUsernameException.html",[81,0.321,1253,3.579]],["body/classes/DuplicateUsernameException.html",[3,0.075,4,0.088,5,0.088,25,0.005,32,0.215,69,0.455,81,0.453,85,0.088,87,0.004,88,0.004,120,3.562,122,1.945,210,0.749,635,4.556,708,4.121,1017,0.573,1141,4.145,1253,6.132,1254,6.132,1277,4.849,1278,4.849,1539,4.868,1541,3.909,1544,6.415,1545,6.415,1546,7.144]],["title/modules/EntitiesToMoveModule.html",[149,1.294,321,3.748]],["body/modules/EntitiesToMoveModule.html",[0,1.519,1,4.39,3,0.051,4,0.06,5,0.06,6,2.098,11,3.415,25,0.005,34,3.985,69,0.665,77,3.576,81,0.306,85,0.06,87,0.003,88,0.003,91,2.356,122,1.314,149,1.716,151,2.71,164,2.953,165,2.953,276,3.277,277,1.726,321,4.973,340,4.335,360,6.934,436,3.77,439,4.39,441,3.415,442,4.39,444,3.873,445,3.985,447,4.558,449,4.749,450,4.241,452,4.39,454,3.415,455,4.558,457,4.39,459,3.985,460,4.107,462,4.39,464,3.873,466,4.558,468,2.918,470,4.558,472,3.576,473,4.749,475,3.769,476,3.985,478,4.241,480,4.558,483,4.335,557,3.156,897,3.049,898,4.011,908,4.011,911,3.769,912,4.011,914,4.011,980,4.335,1014,3.769,1015,4.335,1016,4.335,1536,3.576,1547,4.827,1548,4.335,1549,4.335,1550,4.335,1551,4.827,1552,4.827,1553,4.335]],["title/classes/ErrorCustomEvent.html",[81,0.321,1262,2.523]],["body/classes/ErrorCustomEvent.html",[3,0.064,4,0.075,5,0.075,8,0.215,9,0.964,24,0.363,25,0.005,26,1.21,32,0.276,81,0.385,83,0.288,85,0.075,87,0.003,88,0.003,110,0.488,111,0.433,139,1.194,176,4.443,178,3.909,210,0.488,660,3.101,747,2,938,2.306,939,2.79,940,1.812,1017,0.488,1262,3.907,1275,4.521,1554,8.514,1555,6.077,1556,6.077,1557,6.077,1558,6.077,1559,6.077]],["title/classes/ErrorCustomEventHandler.html",[81,0.321,174,3.579]],["body/classes/ErrorCustomEventHandler.html",[3,0.044,4,0.052,5,0.052,8,0.15,9,0.753,24,0.345,25,0.005,26,0.982,32,0.262,38,1.811,53,3.44,55,1.517,69,0.555,81,0.269,83,0.34,85,0.052,87,0.003,88,0.003,99,1.272,110,0.492,111,0.436,113,0.87,138,1.452,139,1.159,158,3.041,170,1.019,171,1.692,174,4.334,176,4.205,177,4.393,191,1.72,210,0.34,221,3.19,224,1.335,236,4.882,243,3.142,247,1.638,329,3.87,343,5.834,361,1.647,660,1.517,1017,0.34,1033,5.087,1045,2.88,1056,4.159,1058,1.282,1060,6.458,1061,6.458,1062,6.458,1063,5.327,1067,4.006,1069,3.525,1071,3.525,1083,3.142,1086,5.502,1087,3.81,1088,5.502,1089,3.81,1090,3.525,1091,3.81,1092,5.091,1096,3.001,1185,1.843,1191,3.438,1192,2.929,1195,2.929,1197,1.949,1198,2.028,1262,3.927,1437,2.321,1554,8.059,1560,3.312,1561,4.783,1562,3.81,1563,3.312,1564,3.525,1565,4.242,1566,4.242,1567,4.242,1568,4.242,1569,3.525,1570,3.81,1571,3.81,1572,3.312,1573,4.242,1574,3.312,1575,4.242,1576,3.525,1577,4.242,1578,3.312]],["title/classes/ErrorExceptionFilter.html",[81,0.321,1579,4.544]],["body/classes/ErrorExceptionFilter.html",[3,0.063,4,0.074,5,0.074,8,0.211,24,0.237,25,0.005,32,0.18,46,4.434,69,0.494,81,0.38,83,0.283,85,0.074,87,0.003,88,0.003,99,1.611,110,0.48,111,0.426,113,1.228,120,4.292,122,1.63,224,1.884,247,3.517,312,5.073,329,4.901,361,2.086,611,4.605,635,3.787,642,3.781,659,3.574,791,4.674,1017,0.48,1382,7.731,1579,6.968,1580,7.759,1581,5.986,1582,8.609,1583,7.759,1584,9.107,1585,5.986,1586,6.968,1587,5.376,1588,5.986,1589,5.986,1590,5.986,1591,5.986,1592,4.974,1593,5.986,1594,5.986,1595,5.986,1596,5.986,1597,5.986,1598,5.986]],["title/injectables/ErrorLoggingMiddleware.html",[207,1.757,349,4.205]],["body/injectables/ErrorLoggingMiddleware.html",[3,0.045,4,0.052,5,0.052,8,0.15,9,0.755,24,0.312,25,0.005,32,0.217,69,0.572,81,0.27,83,0.29,85,0.052,87,0.003,88,0.003,99,1.274,100,1.773,110,0.492,111,0.437,113,0.872,122,1.158,138,1.455,139,0.931,144,1.394,149,1.087,158,3.044,171,1.695,191,1.724,207,2.131,208,2.033,210,0.341,221,2.361,222,1.114,224,1.338,236,4.887,243,3.149,247,3.044,293,3.844,312,5.154,343,5.839,349,5.098,361,1.143,362,2.886,363,3.007,364,5.913,365,3.007,366,3.007,367,5.098,368,3.532,369,3.532,370,3.319,611,4.679,636,3.007,637,5.621,642,2.685,657,1.695,659,1.668,660,2.194,661,1.642,1024,4.545,1045,2.886,1056,2.886,1063,5.333,1072,5.839,1079,3.319,1083,4.545,1096,3.007,1560,3.319,1561,4.791,1563,3.319,1569,3.532,1570,3.818,1572,3.319,1574,3.319,1576,3.532,1578,3.319,1599,7.884,1600,3.532,1601,4.791,1602,6.136,1603,5.098,1604,7.884,1605,4.251,1606,5.098,1607,4.791,1608,3.319,1609,3.532,1610,3.532,1611,3.532,1612,3.532,1613,3.532,1614,5.098,1615,3.532,1616,3.532,1617,3.532,1618,3.532,1619,3.532,1620,3.532,1621,3.818,1622,3.818,1623,3.818,1624,3.818,1625,3.818,1626,3.818,1627,3.818,1628,3.007,1629,3.532,1630,3.532,1631,3.532,1632,3.532,1633,3.532]],["title/classes/GenerateUserDto.html",[81,0.321,1634,3.951]],["body/classes/GenerateUserDto.html",[3,0.067,4,0.079,5,0.079,8,0.225,9,0.993,24,0.351,25,0.005,26,1.006,32,0.267,69,0.406,81,0.404,83,0.301,85,0.079,87,0.004,88,0.004,110,0.511,111,0.453,112,3.535,133,4.518,135,3.4,139,1.161,210,0.511,592,4.326,747,1.944,938,2.376,939,2.83,940,1.899,1017,0.511,1316,5.291,1327,4.323,1634,6.303,1635,9.32,1636,8.073,1637,6.368]],["title/classes/GetAllMailQuery.html",[81,0.321,219,3.951]],["body/classes/GetAllMailQuery.html",[3,0.082,4,0.097,5,0.097,25,0.004,81,0.498,85,0.097,87,0.004,88,0.004,92,3.291,93,4.293,219,7.157,1017,0.63,1638,7.846,1639,7.846]],["title/classes/GetAllMailQueryHandler.html",[81,0.321,185,4.205]],["body/classes/GetAllMailQueryHandler.html",[3,0.055,4,0.065,5,0.065,8,0.186,24,0.283,25,0.005,32,0.215,69,0.594,81,0.335,83,0.338,85,0.065,87,0.003,88,0.003,92,3.392,93,4.74,99,1.481,100,1.991,110,0.573,111,0.508,113,1.082,114,1.736,122,1.436,144,1.73,168,2.961,170,1.267,185,5.928,187,7.198,210,0.423,219,6.763,221,1.73,222,1.382,224,1.659,361,1.918,362,3.58,363,3.731,364,3.731,365,3.731,366,3.731,635,2.574,661,2.037,703,4.382,1017,0.423,1058,1.594,1064,2.799,1065,4.118,1066,6.763,1068,5.57,1070,3.906,1080,4.118,1196,2.688,1441,6.407,1442,6.407,1443,4.382,1445,4.736,1446,4.736,1457,4.736,1640,8.085,1641,4.664,1642,4.364,1643,3.042,1644,3.042,1645,3.13,1646,5.928,1647,5.274,1648,5.274,1649,5.274,1650,4.736,1651,4.736,1652,4.736,1653,5.274,1654,5.274,1655,5.274,1656,5.274]],["title/classes/GetAllProfileQuery.html",[81,0.321,1657,3.951]],["body/classes/GetAllProfileQuery.html",[3,0.083,4,0.098,5,0.098,25,0.004,81,0.502,85,0.098,87,0.004,88,0.004,1017,0.635,1657,7.19,1658,6.174,1659,7.908]],["title/classes/GetAllProfileQueryHandler.html",[81,0.321,1660,4.205]],["body/classes/GetAllProfileQueryHandler.html",[3,0.054,4,0.064,5,0.064,8,0.184,24,0.206,25,0.005,32,0.213,69,0.606,76,1.492,81,0.33,83,0.246,85,0.064,87,0.003,88,0.003,99,1.468,100,1.978,110,0.418,111,0.371,113,1.068,114,1.72,139,0.835,144,1.707,170,1.251,175,2.541,176,2.439,177,2.489,178,2.347,210,0.568,221,2.319,222,1.364,224,2.225,247,2.01,277,1.861,361,1.901,468,2.262,489,3.553,504,4.197,520,2.146,537,3.089,573,2.789,657,2.076,659,2.042,660,2.872,661,2.01,1017,0.418,1058,1.573,1064,3.381,1133,3.184,1134,4.207,1136,4.325,1137,3.403,1138,3.089,1171,2.541,1262,3.526,1275,2.714,1437,2.848,1476,3.682,1628,3.682,1641,4.633,1644,3.003,1645,3.089,1657,4.064,1660,6.673,1661,6.27,1662,7.159,1663,5.205,1664,3.184,1665,5.205,1666,4.674]],["title/classes/GetProfileByIdQuery.html",[81,0.321,1667,3.951]],["body/classes/GetProfileByIdQuery.html",[3,0.071,4,0.084,5,0.084,8,0.239,9,1.032,15,1.917,24,0.333,25,0.005,26,1.046,32,0.253,81,0.43,83,0.321,85,0.084,87,0.004,88,0.004,110,0.544,111,0.483,139,1.077,210,0.544,573,3.167,747,1.804,938,2.471,939,2.883,940,2.022,1017,0.544,1658,7.121,1667,6.555,1668,6.088,1669,7.54]],["title/classes/GetProfileByIdQueryHandler.html",[81,0.321,1670,4.205]],["body/classes/GetProfileByIdQueryHandler.html",[3,0.052,4,0.062,5,0.062,8,0.177,15,1.05,24,0.272,25,0.005,32,0.207,69,0.599,76,1.432,81,0.317,83,0.325,85,0.062,87,0.003,88,0.003,99,1.428,100,1.936,110,0.552,111,0.489,113,1.025,114,1.673,139,0.812,144,1.639,170,1.201,175,2.439,176,2.341,177,2.389,178,2.253,210,0.552,221,2.255,222,1.31,224,2.164,277,1.787,361,1.849,468,2.171,489,3.492,504,4.081,520,2.06,537,2.965,573,3.187,657,1.993,659,1.961,660,2.811,661,1.929,1017,0.401,1058,1.51,1064,2.698,1133,3.056,1134,4.161,1136,4.206,1137,3.267,1138,2.965,1150,3.156,1171,2.439,1262,3.429,1275,2.605,1437,2.734,1479,3.534,1628,3.534,1641,4.535,1642,4.206,1643,2.882,1644,2.882,1645,2.965,1661,6.138,1667,6.612,1670,6.533,1671,6.612,1672,3.392,1673,4.997,1674,4.487,1675,4.997]],["title/classes/GetProfileWithCriteriaDto.html",[81,0.321,1676,3.951]],["body/classes/GetProfileWithCriteriaDto.html",[3,0.061,4,0.072,5,0.072,8,0.207,9,0.941,24,0.358,25,0.005,26,0.954,32,0.272,53,4.298,69,0.374,81,0.372,83,0.277,85,0.072,87,0.003,88,0.003,110,0.471,111,0.697,139,1.186,210,0.471,573,3.255,747,1.986,935,3.586,938,2.253,939,2.758,940,1.748,1017,0.471,1176,5.383,1177,5.213,1179,5.383,1181,3.833,1676,5.976,1677,9.373,1678,5.265,1679,6.313,1680,7.655,1681,5.265,1682,5.863]],["title/classes/GetProfileWithCriteriaQuery.html",[81,0.321,1683,3.951]],["body/classes/GetProfileWithCriteriaQuery.html",[3,0.069,4,0.082,5,0.082,8,0.234,9,1.017,24,0.328,25,0.005,32,0.249,69,0.422,81,0.42,83,0.313,85,0.082,87,0.004,88,0.004,110,0.531,111,0.471,139,1.066,210,0.531,573,3.282,747,1.785,938,2.435,939,2.863,940,1.975,1017,0.531,1658,7.045,1676,7.748,1683,6.46,1684,5.947,1685,7.43,1686,5.17,1687,5.17]],["title/classes/GetProfileWithCriteriaQueryHandler.html",[81,0.321,1688,4.205]],["body/classes/GetProfileWithCriteriaQueryHandler.html",[3,0.05,4,0.059,5,0.059,8,0.169,24,0.264,25,0.005,32,0.201,38,2.041,69,0.592,76,1.371,81,0.303,83,0.316,85,0.059,87,0.003,88,0.003,99,1.385,100,1.892,110,0.535,111,0.475,113,0.981,114,1.622,139,0.788,144,1.568,170,1.149,175,2.334,176,2.24,177,2.286,178,2.156,210,0.535,221,2.187,222,1.253,224,2.099,247,2.575,277,1.71,361,1.793,468,2.078,489,3.427,504,3.958,520,1.971,537,2.837,573,3.226,597,3.541,657,1.907,659,1.876,660,2.747,661,1.846,1017,0.384,1058,1.445,1064,2.617,1133,2.924,1134,4.111,1136,4.079,1137,3.126,1138,2.837,1171,2.334,1177,4.079,1262,3.325,1275,2.493,1437,2.616,1628,3.382,1641,4.431,1642,4.079,1643,2.758,1644,2.758,1645,2.837,1661,5.997,1664,2.924,1666,4.294,1672,3.245,1683,6.488,1688,6.382,1689,5.879,1690,4.781,1691,4.294,1692,4.781,1693,4.781,1694,4.294,1695,6.669,1696,4.781,1697,4.781]],["title/classes/GetProfilesByUserIdQuery.html",[81,0.321,1698,3.951]],["body/classes/GetProfilesByUserIdQuery.html",[3,0.07,4,0.083,5,0.083,8,0.237,9,1.026,15,1.908,22,2.027,24,0.33,25,0.005,26,1.04,32,0.251,81,0.426,83,0.318,85,0.083,87,0.004,88,0.004,110,0.539,111,0.478,139,1.072,210,0.539,747,1.796,938,2.455,939,2.875,940,2.001,1017,0.539,1658,7.088,1664,5.553,1668,6.027,1669,7.492,1698,6.514]],["title/classes/GetProfilesByUserIdQueryHandler.html",[81,0.321,1699,4.205]],["body/classes/GetProfilesByUserIdQueryHandler.html",[3,0.052,4,0.061,5,0.061,8,0.174,15,1.034,22,1.972,24,0.27,25,0.005,32,0.205,64,1.685,69,0.597,76,1.411,78,2.509,81,0.312,83,0.322,85,0.061,87,0.003,88,0.003,99,1.413,100,1.921,110,0.546,111,0.484,113,1.01,114,1.656,139,0.804,144,2.232,170,1.183,210,0.546,221,2.232,222,1.29,224,2.455,247,1.901,277,1.76,361,1.83,468,2.139,489,3.862,504,4.039,512,3.656,520,2.03,522,2.307,537,2.921,573,2.363,657,1.963,659,2.671,660,1.76,661,2.628,918,2.403,1017,0.395,1058,1.488,1064,2.671,1133,3.011,1136,4.163,1137,3.218,1138,2.921,1149,3.843,1150,3.109,1152,3.218,1153,2.454,1173,3.218,1437,2.694,1496,4.09,1641,4.5,1642,4.163,1643,2.84,1644,2.84,1645,2.921,1661,6.09,1664,5.147,1671,6.571,1674,4.421,1698,6.571,1699,5.655,1700,4.923,1701,4.923]],["title/classes/GetProfilesWithCriteriaRequest.html",[81,0.321,1702,3.951]],["body/classes/GetProfilesWithCriteriaRequest.html",[3,0.061,4,0.072,5,0.072,8,0.207,9,0.941,24,0.358,25,0.005,26,0.954,32,0.272,53,4.298,69,0.374,81,0.372,83,0.277,85,0.072,87,0.003,88,0.003,110,0.471,111,0.697,139,1.186,210,0.471,747,1.986,935,3.586,938,2.253,939,2.758,940,1.748,1017,0.471,1176,5.383,1177,5.213,1179,5.383,1181,3.833,1664,5.733,1679,6.313,1702,5.976,1703,9.373,1704,5.863,1705,7.655,1706,5.863,1707,5.863]],["title/classes/GetUserByEmailQuery.html",[81,0.321,1708,4.205]],["body/classes/GetUserByEmailQuery.html",[3,0.072,4,0.085,5,0.085,8,0.244,9,1.043,22,2.052,24,0.336,25,0.005,26,1.195,32,0.255,81,0.437,83,0.326,85,0.085,87,0.004,88,0.004,110,0.553,111,0.491,139,1.085,210,0.553,747,1.679,946,5.384,1017,0.553,1220,2.997,1708,7.05,1709,6.501,1710,6.897,1711,6.897,1712,6.897,1713,6.897]],["title/classes/GetUserByEmailQueryHandler.html",[81,0.321,1714,4.205]],["body/classes/GetUserByEmailQueryHandler.html",[3,0.057,4,0.067,5,0.067,8,0.192,13,2.285,15,1.145,21,2.325,22,1.96,24,0.289,25,0.005,32,0.219,64,1.864,69,0.583,76,1.561,81,0.345,83,0.345,85,0.067,87,0.003,88,0.003,99,1.514,100,2.024,110,0.585,111,0.519,112,2.908,113,1.117,114,1.774,144,1.786,170,1.309,210,0.585,221,1.786,222,1.428,277,1.948,361,1.96,488,2.716,489,3.619,512,3.417,520,2.246,522,2.552,589,2.456,592,2.659,657,2.172,659,2.137,660,2.607,661,2.103,1017,0.437,1058,1.646,1064,2.861,1067,3.561,1153,2.716,1252,2.84,1486,3.233,1641,4.741,1642,4.459,1643,3.142,1644,3.142,1645,3.233,1708,7.293,1714,6.058,1715,5.813,1716,7.882,1717,5.447,1718,3.853,1719,5.447,1720,3.853,1721,4.526]],["title/classes/GetUserByUsernameQuery.html",[81,0.321,1722,4.205]],["body/classes/GetUserByUsernameQuery.html",[3,0.072,4,0.085,5,0.085,8,0.244,9,1.043,22,2.052,24,0.336,25,0.005,26,1.195,32,0.255,81,0.437,83,0.326,85,0.085,87,0.004,88,0.004,110,0.553,111,0.491,139,1.085,210,0.553,586,4.022,747,1.679,1017,0.553,1220,2.997,1709,6.501,1722,7.05,1723,6.897,1724,5.384,1725,6.897,1726,6.897]],["title/classes/GetUserByUsernameQueryHandler.html",[81,0.321,1727,4.205]],["body/classes/GetUserByUsernameQueryHandler.html",[3,0.057,4,0.067,5,0.067,8,0.192,13,2.285,15,1.145,21,2.325,22,1.96,24,0.289,25,0.005,32,0.219,64,1.864,69,0.583,76,1.561,81,0.345,83,0.345,85,0.067,87,0.003,88,0.003,99,1.514,100,2.024,110,0.585,111,0.519,113,1.117,114,1.774,144,1.786,170,1.309,210,0.585,221,1.786,222,1.428,277,1.948,361,1.96,488,2.716,489,3.619,512,3.417,520,2.246,522,2.552,586,3.058,589,2.456,592,2.659,657,2.172,659,2.137,660,2.607,661,2.103,1017,0.437,1058,1.646,1064,2.861,1067,3.561,1153,2.716,1252,2.84,1486,3.233,1641,4.741,1642,4.459,1643,3.142,1644,3.142,1645,3.233,1715,5.813,1718,3.853,1720,3.853,1721,4.526,1722,7.293,1727,6.058,1728,7.882,1729,5.447,1730,4.891]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[81,0.321,1731,3.951]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[3,0.066,4,0.077,5,0.077,8,0.221,9,0.983,22,2.069,24,0.348,25,0.004,26,1.255,32,0.265,81,0.398,83,0.297,85,0.077,87,0.004,88,0.004,110,0.503,111,0.446,139,1.156,210,0.503,403,3.696,603,4.62,628,5.071,747,1.893,1017,0.503,1220,2.724,1709,6.554,1731,6.24,1732,6.268,1733,7.234,1734,5.629,1735,6.268,1736,7.992]],["title/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[81,0.321,1737,4.205]],["body/classes/GetUserIfRefreshTokenMatchesQueryHandler.html",[3,0.05,4,0.059,5,0.059,8,0.169,15,1.404,22,2.117,24,0.265,25,0.005,32,0.201,64,1.64,69,0.592,76,1.374,81,0.304,83,0.316,85,0.059,87,0.003,88,0.003,99,1.387,100,1.894,110,0.536,111,0.476,112,1.911,113,0.983,114,1.625,144,1.572,170,1.152,175,2.339,176,2.246,177,2.291,178,2.161,210,0.536,221,2.191,222,1.751,224,1.508,247,2.58,277,1.714,361,1.796,488,2.39,489,3.431,512,3.131,520,1.976,521,4.535,522,2.246,586,2.01,592,2.339,595,3.253,603,4.148,628,4.553,657,1.911,659,1.881,660,2.75,1017,0.385,1058,1.448,1064,2.621,1134,4.114,1171,2.339,1252,2.499,1262,3.331,1275,2.499,1437,2.623,1641,4.436,1642,4.086,1643,2.765,1644,2.765,1645,2.844,1672,3.253,1715,5.44,1720,3.39,1731,6.495,1737,6.39,1738,6.913,1739,4.792,1740,3.742,1741,4.304,1742,6.681,1743,4.792,1744,4.792]],["title/classes/GetUserLoginQuery.html",[81,0.321,777,3.951]],["body/classes/GetUserLoginQuery.html",[3,0.067,4,0.079,5,0.079,8,0.227,9,0.999,22,2.088,24,0.353,25,0.004,26,1.261,32,0.268,81,0.408,83,0.304,85,0.079,87,0.004,88,0.004,110,0.516,111,0.458,139,1.163,210,0.516,586,3.923,747,1.908,766,7.53,777,6.341,1017,0.516,1220,2.794,1709,6.616,1724,5.02,1745,6.43,1746,6.43,1747,8.122]],["title/classes/GetUserLoginQueryHandler.html",[81,0.321,732,3.951]],["body/classes/GetUserLoginQueryHandler.html",[3,0.042,4,0.049,5,0.049,8,0.14,13,2.446,14,2.68,15,1.225,21,2.489,22,1.815,24,0.274,25,0.005,26,1.059,32,0.208,64,1.357,69,0.586,76,1.136,81,0.251,83,0.327,85,0.049,87,0.003,88,0.003,99,1.211,100,2.094,110,0.555,111,0.492,112,2.759,113,1.196,114,1.855,120,1.976,122,1.079,144,2.269,170,0.952,210,0.468,221,2.666,222,2.131,224,1.835,247,2.252,277,1.417,361,1.568,488,1.976,489,3.145,512,2.733,520,1.635,521,3.958,522,1.858,586,2.902,589,2.629,592,2.846,595,3.958,635,1.935,657,1.581,659,1.555,660,2.474,661,2.945,706,4.845,707,4.553,708,3.364,725,4.845,726,3.294,732,4.553,734,6.346,766,3.095,777,5.955,783,5.237,1017,0.318,1058,1.198,1064,2.288,1070,2.936,1134,3.889,1153,2.907,1252,2.067,1297,3.567,1338,2.287,1562,3.56,1641,3.99,1642,3.567,1643,2.287,1644,2.287,1645,2.353,1715,5.395,1720,4.125,1721,4.845,1730,5.237,1748,5.237,1749,5.237,1750,6.85,1751,3.964,1752,3.095,1753,3.56,1754,3.964,1755,8.5,1756,5.831,1757,5.831,1758,5.831,1759,3.56]],["title/classes/GetUserQuery.html",[81,0.321,774,3.748]],["body/classes/GetUserQuery.html",[3,0.072,4,0.085,5,0.085,8,0.244,9,1.043,24,0.336,25,0.005,26,1.195,32,0.255,81,0.437,83,0.326,85,0.085,87,0.004,88,0.004,110,0.553,111,0.654,139,1.085,210,0.553,403,3.703,747,1.679,774,6.285,1017,0.553,1220,2.997,1332,3.872,1345,5.108,1709,6.501,1760,6.897,1761,6.897,1762,6.897]],["title/classes/GetUserQueryHandler.html",[81,0.321,1763,4.205]],["body/classes/GetUserQueryHandler.html",[3,0.055,4,0.065,5,0.065,8,0.185,15,1.1,22,1.168,24,0.281,25,0.005,32,0.214,64,1.791,69,0.607,76,1.5,81,0.332,83,0.336,85,0.065,87,0.003,88,0.003,99,1.473,100,1.983,110,0.57,111,0.505,113,1.073,114,1.726,144,2.327,170,1.257,210,0.57,221,1.716,222,1.86,224,1.646,247,2.02,277,1.871,361,1.908,488,2.609,489,3.56,512,3.325,520,2.158,522,2.452,651,4.482,774,6.395,776,6.741,1017,0.42,1058,1.581,1064,2.785,1252,2.728,1437,2.863,1476,3.701,1641,4.645,1642,4.34,1643,3.018,1644,3.018,1645,3.105,1715,5.696,1718,3.701,1741,6.373,1763,5.896,1764,4.085,1765,7.174,1766,5.232,1767,5.232,1768,5.232,1769,5.232,1770,5.232,1771,5.232,1772,5.232]],["title/classes/GetUserWithCriteriaDto.html",[81,0.321,1773,3.748]],["body/classes/GetUserWithCriteriaDto.html",[3,0.045,4,0.053,5,0.053,8,0.151,9,0.757,22,2.175,24,0.382,25,0.004,26,1.087,32,0.29,43,4.232,53,3.456,81,0.271,83,0.202,85,0.053,87,0.003,88,0.003,110,0.343,111,0.73,112,2.879,139,1.237,210,0.343,586,3.028,747,2.072,938,1.811,939,2.464,940,1.273,1017,0.343,1678,3.834,1679,5.346,1681,3.834,1773,4.559,1774,9.739,1775,7.217,1776,7.217,1777,7.217,1778,7.217,1779,5.635,1780,7.217,1781,7.217,1782,6.155,1783,4.269,1784,4.269,1785,4.269,1786,4.269,1787,4.269,1788,4.269,1789,4.269,1790,4.269]],["title/classes/GetUserWithCriteriaQuery.html",[81,0.321,1791,3.951]],["body/classes/GetUserWithCriteriaQuery.html",[3,0.071,4,0.083,5,0.083,8,0.238,9,1.028,22,2.123,24,0.331,25,0.005,32,0.252,69,0.429,81,0.427,83,0.319,85,0.083,87,0.004,88,0.004,110,0.54,111,0.479,139,1.074,210,0.54,747,1.654,1017,0.54,1220,2.926,1684,6.047,1685,6.047,1686,5.257,1687,5.257,1709,6.432,1773,7.625,1791,6.527,1792,6.734,1793,6.734]],["title/classes/GetUserWithCriteriaQueryHandler.html",[81,0.321,1794,4.205]],["body/classes/GetUserWithCriteriaQueryHandler.html",[3,0.056,4,0.065,5,0.065,8,0.187,22,1.938,24,0.284,25,0.005,32,0.216,38,2.263,64,1.814,69,0.578,76,1.52,81,0.336,83,0.339,85,0.065,87,0.003,88,0.003,99,1.487,100,1.997,110,0.575,111,0.51,113,1.088,114,1.742,170,1.274,210,0.575,221,1.739,247,2.047,277,1.896,361,1.925,488,2.644,489,3.58,512,3.355,520,2.186,522,2.485,597,3.927,1017,0.426,1058,1.602,1064,2.81,1067,3.466,1252,2.765,1486,3.147,1641,4.677,1642,4.379,1643,3.058,1644,3.058,1645,3.147,1689,6.141,1691,4.761,1694,4.761,1715,5.735,1791,6.778,1794,5.949,1795,5.302,1796,5.302,1797,5.302,1798,7.16,1799,7.16,1800,5.302,1801,5.302,1802,5.302,1803,5.302,1804,5.302,1805,5.302,1806,5.302]],["title/entities/GroupEntity.html",[0,1.592,450,3.196]],["body/entities/GroupEntity.html",[0,1.773,2,1.56,3,0.04,4,0.047,5,0.047,6,4.021,8,0.134,9,0.828,13,2.823,14,3.093,15,1.414,21,2.873,24,0.36,25,0.005,26,0.929,27,3.111,30,2.245,32,0.274,37,4.861,38,4.102,39,4.561,40,5.279,43,3.632,51,2.64,69,0.508,70,2.64,71,3.154,72,3.218,74,1.739,75,3.154,76,1.085,81,0.357,82,1.847,83,0.353,85,0.047,87,0.003,88,0.003,445,4.425,450,3.558,452,4.875,454,2.676,459,2.245,460,5.295,553,3.824,557,3.683,565,5.274,833,3.558,836,4.875,837,3.824,849,5.059,854,5.061,857,3.824,895,4.251,896,4.4,911,2.954,915,3.565,923,1.847,945,5.592,989,3.398,995,5.822,1328,4.681,1807,3.784,1808,6.73,1809,6.73,1810,6.73,1811,5.634,1812,5.634,1813,3.784,1814,5.634,1815,3.784,1816,3.784,1817,3.784,1818,3.784,1819,5.634,1820,3.784,1821,3.784,1822,4.173,1823,3.784,1824,5.634,1825,3.784,1826,3.784,1827,3.784]],["title/entities/GroupMembershipEntity.html",[0,1.592,452,3.308]],["body/entities/GroupMembershipEntity.html",[0,1.989,2,1.827,3,0.046,4,0.055,5,0.055,6,4.039,8,0.157,9,0.906,13,3.091,14,3.386,15,1.549,21,3.146,24,0.36,25,0.005,26,0.788,27,3.111,32,0.274,35,3.646,38,2.698,39,4.914,40,4.768,43,3.838,51,2.962,55,2.26,69,0.512,70,2.076,71,3.453,72,3.523,73,4.137,74,2.036,75,3.453,76,1.27,81,0.281,83,0.21,85,0.055,87,0.003,88,0.003,293,2.366,436,4.96,444,2.556,450,5.579,452,4.133,453,7.257,546,5.458,557,5.253,559,3.979,843,4.935,844,4.935,915,4.223,918,2.163,923,2.163,935,2.71,1014,3.459,1779,5.753,1828,4.431,1829,6.321,1830,4.431,1831,4.431,1832,4.431,1833,6.321,1834,4.431,1835,4.431,1836,6.123,1837,4.431,1838,4.431,1839,4.431,1840,4.431]],["title/controllers/HealthCheckController.html",[89,2.639,1841,4.205]],["body/controllers/HealthCheckController.html",[3,0.057,4,0.067,5,0.067,8,0.191,25,0.005,27,1.849,32,0.163,69,0.581,81,0.343,85,0.067,87,0.003,88,0.003,89,2.817,91,2.637,96,3.821,97,3.312,99,1.506,113,1.108,114,1.764,119,3.532,122,1.471,127,3.667,128,2.956,138,1.849,144,1.772,263,4.002,288,6.025,289,4.183,292,5.371,293,2.884,299,6.025,302,4.002,303,4.489,305,4.002,306,4.489,307,4.489,309,4.852,313,3.304,314,4.218,337,6.025,1352,6.062,1353,5.129,1355,7.616,1364,4.002,1365,4.489,1366,4.489,1841,6.025,1842,5.402,1843,10.144,1844,5.402,1845,8.748,1846,5.402,1847,8.748,1848,4.002,1849,4.852,1850,4.852,1851,5.402,1852,5.402,1853,5.402]],["title/modules/HealthCheckModule.html",[149,1.294,322,3.748]],["body/modules/HealthCheckModule.html",[3,0.063,4,0.075,5,0.075,25,0.005,55,2.167,69,0.618,81,0.384,85,0.075,87,0.003,88,0.003,91,3.817,122,1.65,149,1.999,151,3.402,152,4.391,160,4.783,161,3.706,162,3.706,164,4.783,165,3.706,169,5.113,170,1.456,178,3.526,322,7.184,337,5.034,360,7.602,1352,7.184,1353,4.286,1355,6.105,1363,5.034,1553,5.441,1841,7.194,1848,4.488,1849,5.441,1850,5.441,1854,5.441,1855,5.441,1856,6.059,1857,7.82,1858,6.059,1859,6.497,1860,6.059]],["title/classes/HealthCheckQuery.html",[81,0.321,1361,3.951]],["body/classes/HealthCheckQuery.html",[3,0.082,4,0.097,5,0.097,25,0.004,81,0.5,85,0.097,87,0.004,88,0.004,1017,0.632,1353,5.572,1361,7.174,1861,7.877,1862,7.877]],["title/classes/HealthCheckQueryHandler.html",[81,0.321,1859,4.205]],["body/classes/HealthCheckQueryHandler.html",[3,0.05,4,0.058,5,0.058,8,0.167,24,0.188,25,0.005,32,0.199,69,0.527,81,0.3,83,0.224,85,0.058,87,0.003,88,0.003,99,1.376,100,1.882,110,0.38,111,0.337,113,0.971,114,2.196,144,1.553,170,1.138,210,0.532,221,2.857,222,1.241,224,1.49,361,1.781,738,5.172,791,3.697,1017,0.38,1058,1.431,1064,3.247,1070,3.508,1134,4.101,1353,5.405,1355,3.697,1361,3.697,1363,6.877,1364,4.907,1365,3.935,1366,3.935,1601,3.697,1641,4.408,1644,2.732,1848,3.508,1859,5.505,1863,7.641,1864,4.736,1865,9.026,1866,9.266,1867,9.266,1868,9.266,1869,4.736,1870,4.736,1871,4.736,1872,4.736,1873,4.736,1874,4.736,1875,6.625,1876,6.625,1877,6.625,1878,4.736,1879,4.736,1880,4.736,1881,8.276,1882,6.625,1883,4.736,1884,4.736,1885,4.736,1886,4.253,1887,4.736,1888,4.736,1889,4.736,1890,4.736,1891,4.253,1892,4.736,1893,4.736,1894,4.736,1895,4.736]],["title/classes/HealthCheckResponse.html",[81,0.321,1364,3.748]],["body/classes/HealthCheckResponse.html",[3,0.071,4,0.084,5,0.084,8,0.239,9,1.032,24,0.333,25,0.005,32,0.253,69,0.432,81,0.43,83,0.321,85,0.084,87,0.004,88,0.004,110,0.544,111,0.483,139,1.077,210,0.544,747,1.661,1017,0.544,1220,2.946,1353,6.451,1364,6.219,1848,5.021,1896,9.12,1897,6.779,1898,9.532,1899,6.779,1900,9.797,1901,6.779,1902,6.779]],["title/classes/IdProfileDto.html",[81,0.321,1903,4.544]],["body/classes/IdProfileDto.html",[3,0.072,4,0.085,5,0.085,8,0.242,9,1.039,15,1.925,24,0.335,25,0.005,26,1.053,32,0.254,81,0.434,83,0.324,85,0.085,87,0.004,88,0.004,110,0.55,111,0.488,139,1.082,210,0.55,747,1.813,938,2.486,939,2.892,940,2.042,1017,0.55,1175,5.347,1903,7.588,1904,9.162,1905,8.449]],["title/classes/InvalidIdException.html",[81,0.321,1498,3.951]],["body/classes/InvalidIdException.html",[3,0.075,4,0.089,5,0.089,15,1.507,25,0.005,32,0.216,69,0.457,81,0.455,85,0.089,87,0.004,88,0.004,120,3.575,122,1.952,210,0.75,635,4.563,708,4.136,1017,0.575,1141,4.154,1142,5.012,1498,6.783,1539,4.878,1541,3.917,1906,7.169,1907,7.169,1908,6.438]],["title/classes/InvalidMailException.html",[81,0.321,1265,3.951]],["body/classes/InvalidMailException.html",[3,0.075,4,0.089,5,0.089,25,0.005,32,0.216,69,0.457,81,0.455,85,0.089,87,0.004,88,0.004,120,3.575,122,1.952,210,0.75,635,4.563,708,4.136,1017,0.575,1141,4.154,1142,5.012,1265,6.783,1539,4.878,1540,6.438,1541,3.917,1542,6.438,1543,5.957,1909,7.169]],["title/classes/InvalidParameterEntityException.html",[81,0.321,1139,3.579]],["body/classes/InvalidParameterEntityException.html",[3,0.064,4,0.075,5,0.075,24,0.311,25,0.005,32,0.183,69,0.5,81,0.498,82,2.975,83,0.288,85,0.075,87,0.003,88,0.003,110,0.63,111,0.434,120,3.039,122,1.66,144,2.575,210,0.489,247,2.354,313,3.728,567,3.85,635,4.238,708,4.528,1017,0.489,1139,5.553,1141,3.753,1142,4.528,1143,5.329,1282,4.312,1539,4.408,1541,3.539,1910,5.474,1911,7.85,1912,9.489,1913,6.096,1914,6.096,1915,7.05,1916,5.474,1917,4.138,1918,6.096,1919,6.096,1920,6.096,1921,6.096,1922,6.096]],["title/classes/InvalidPasswordException.html",[81,0.321,1263,3.748]],["body/classes/InvalidPasswordException.html",[3,0.071,4,0.084,5,0.084,25,0.005,32,0.205,69,0.435,81,0.433,85,0.084,87,0.004,88,0.004,120,3.403,122,1.859,210,0.734,589,3.801,635,4.465,708,3.937,863,4.311,1017,0.548,1141,4.031,1142,4.863,1263,6.245,1282,4.828,1315,5.329,1539,4.734,1541,3.801,1917,4.633,1923,6.13,1924,6.13,1925,6.826,1926,6.826,1927,9.148,1928,6.826,1929,8.431,1930,6.826]],["title/classes/InvalidUsernameException.html",[81,0.321,1266,3.951]],["body/classes/InvalidUsernameException.html",[3,0.075,4,0.088,5,0.088,25,0.005,32,0.215,69,0.455,81,0.453,85,0.088,87,0.004,88,0.004,120,3.562,122,1.945,210,0.749,586,2.997,635,4.556,708,4.121,1017,0.573,1141,4.145,1142,5.001,1266,6.768,1539,4.868,1541,3.909,1544,6.415,1545,6.415,1586,6.415,1908,6.415]],["title/entities/InvoicesEntity.html",[0,1.592,455,3.435]],["body/entities/InvoicesEntity.html",[0,0.809,2,1.06,3,0.027,4,0.032,5,0.032,6,4.114,8,0.091,9,0.647,13,2.206,14,2.416,15,1.105,21,2.245,24,0.409,25,0.005,26,1.18,27,3.216,28,6.314,29,7.277,30,5.531,31,6.708,32,0.283,35,1.482,37,2.34,38,1.097,43,3.094,51,1.953,55,0.919,69,0.335,70,4.285,71,2.464,72,2.514,73,2.34,74,1.181,75,2.464,76,0.737,79,5.638,80,6.476,81,0.264,82,1.254,83,0.422,85,0.032,86,6.303,87,0.002,88,0.002,111,0.297,289,3.836,313,1.572,455,2.829,476,4.226,579,3.895,806,4.722,863,5.239,882,2.829,915,3.404,918,1.254,923,1.254,1510,4.722,1518,3.743,1519,2.308,1535,6.394,1536,1.904,1537,2.135,1931,2.57,1932,6.649,1933,5.258,1934,5.258,1935,5.258,1936,5.258,1937,5.258,1938,6.649,1939,5.258,1940,5.258,1941,5.258,1942,5.258,1943,2.57,1944,4.168,1945,2.57,1946,4.168,1947,2.57,1948,4.168,1949,2.57,1950,4.168,1951,2.57,1952,4.168,1953,2.57,1954,4.168,1955,2.57,1956,2.57,1957,2.57,1958,2.57,1959,2.57,1960,6.649,1961,2.57,1962,2.57,1963,2.57,1964,4.168,1965,2.57,1966,2.57,1967,2.57,1968,4.168,1969,5.258,1970,2.57,1971,4.168,1972,2.57,1973,4.168,1974,2.57,1975,2.57,1976,4.168,1977,2.57,1978,3.743,1979,2.57,1980,2.57,1981,2.57,1982,2.57,1983,2.57,1984,2.57,1985,2.57,1986,2.57]],["title/classes/IsTestEnvironmentPipe.html",[81,0.321,408,4.205]],["body/classes/IsTestEnvironmentPipe.html",[3,0.066,4,0.077,5,0.077,8,0.221,24,0.248,25,0.005,32,0.189,69,0.399,81,0.398,83,0.297,85,0.077,87,0.004,88,0.004,99,1.659,110,0.503,111,0.446,113,1.286,120,3.125,122,1.707,144,2.056,224,1.972,361,2.149,362,4.255,363,4.434,364,4.434,365,4.434,366,4.434,378,6.224,408,6.64,409,7.177,635,3.059,661,2.42,1017,0.503,1185,3.473,1378,5.629,1650,5.629,1651,5.629,1652,5.629,1987,6.268,1988,8.798,1989,7.992,1990,7.992,1991,9.571,1992,7.901,1993,9.266,1994,6.268,1995,6.268,1996,6.268]],["title/entities/JoinedConversation.html",[0,1.592,457,3.308]],["body/entities/JoinedConversation.html",[0,2.074,2,1.939,3,0.049,4,0.058,5,0.058,6,4.101,8,0.166,9,0.936,13,3.193,14,3.498,15,1.6,21,3.25,24,0.366,25,0.005,26,1.028,27,3.165,32,0.278,35,3.803,43,3.913,51,3.089,69,0.485,70,3.567,71,3.567,72,3.64,73,4.274,74,2.161,75,3.567,76,1.348,81,0.298,83,0.223,85,0.058,87,0.003,88,0.003,445,4.897,457,4.31,458,6.99,459,2.791,468,3.913,553,5.897,563,4.223,573,2.643,897,2.97,915,4.306,918,2.295,923,2.295,995,5.943,1997,4.702,1998,7.612,1999,4.702,2000,4.702,2001,4.702,2002,4.702,2003,4.702,2004,4.702,2005,4.702,2006,4.702,2007,4.702,2008,4.702,2009,4.702]],["title/injectables/JwtAuthenticationGuard.html",[207,1.757,2010,4.544]],["body/injectables/JwtAuthenticationGuard.html",[3,0.078,4,0.093,5,0.093,25,0.005,55,2.679,69,0.568,81,0.475,85,0.093,87,0.004,88,0.004,122,2.04,207,3.098,208,3.582,719,4.899,1541,3.378,2010,8.012,2011,6.728,2012,7.492,2013,6.225,2014,6.728]],["title/injectables/JwtRefreshGuard.html",[207,1.757,643,3.951]],["body/injectables/JwtRefreshGuard.html",[3,0.078,4,0.091,5,0.091,25,0.005,55,2.649,69,0.565,81,0.47,85,0.091,87,0.004,88,0.004,122,2.017,207,3.077,208,3.542,603,4.418,628,4.054,643,6.919,719,4.844,1541,3.34,2011,6.654,2013,6.156,2014,6.654,2015,7.409]],["title/injectables/JwtRefreshTokenStrategy.html",[207,1.757,713,3.951]],["body/injectables/JwtRefreshTokenStrategy.html",[3,0.053,4,0.063,5,0.063,8,0.18,24,0.276,25,0.005,26,0.635,32,0.21,38,2.177,69,0.613,81,0.323,83,0.33,85,0.063,87,0.003,88,0.003,99,1.448,100,1.957,110,0.56,111,0.496,113,1.046,114,1.696,122,1.388,138,1.745,139,0.602,144,2.287,159,5.481,193,3.777,207,2.421,208,2.438,210,0.409,222,1.337,247,1.969,603,4.259,608,3.461,611,5.611,627,4.404,628,2.79,640,4.579,641,3.777,642,3.22,713,5.444,719,3.334,725,5.793,726,4.236,769,6.327,770,4.236,771,4.236,785,6.602,794,4.579,801,4.236,1541,2.299,1733,3.981,1917,3.461,2016,7.946,2017,5.099,2018,5.099,2019,5.099,2020,6.972,2021,5.099,2022,4.236,2023,4.579,2024,4.236,2025,3.981,2026,5.444,2027,4.236,2028,4.579,2029,4.579,2030,6.262,2031,5.444,2032,4.579,2033,5.099,2034,5.099]],["title/injectables/JwtStrategy.html",[207,1.757,714,3.951]],["body/injectables/JwtStrategy.html",[3,0.056,4,0.066,5,0.066,8,0.189,15,1.126,24,0.286,25,0.005,26,0.668,32,0.217,64,1.834,69,0.62,76,1.536,78,2.731,81,0.34,83,0.341,85,0.066,87,0.003,88,0.003,99,1.497,100,2.008,110,0.579,111,0.513,113,1.099,114,1.754,122,1.459,139,0.633,144,2.365,207,2.504,208,2.562,210,0.579,221,1.758,222,1.405,277,1.916,488,2.672,489,3.596,512,3.38,520,2.21,522,2.511,611,4.838,627,4.555,642,3.385,714,5.631,719,3.504,741,4.813,769,6.458,770,4.453,771,4.453,785,4.453,801,4.453,1541,2.416,1718,3.791,1917,3.638,2022,4.453,2023,4.813,2024,4.453,2025,4.184,2026,4.184,2027,4.453,2028,4.813,2029,4.813,2030,4.813,2031,4.184,2032,4.813,2035,5.359,2036,5.359,2037,7.212,2038,5.359]],["title/classes/ListRolesDto.html",[81,0.321,2039,4.205]],["body/classes/ListRolesDto.html",[3,0.07,4,0.083,5,0.083,8,0.237,9,1.026,24,0.33,25,0.005,32,0.251,69,0.428,81,0.426,83,0.318,85,0.083,87,0.004,88,0.004,110,0.539,111,0.478,133,4.627,135,3.583,139,1.072,210,0.539,592,4.431,747,1.796,938,2.455,939,2.875,940,2.001,1017,0.539,1327,4.555,2039,6.932,2040,9.079,2041,6.711,2042,6.711,2043,6.711]],["title/injectables/LocalAuthenticationGuard.html",[207,1.757,638,4.205]],["body/injectables/LocalAuthenticationGuard.html",[3,0.079,4,0.093,5,0.093,25,0.005,69,0.571,81,0.479,85,0.093,87,0.004,88,0.004,122,2.055,207,3.112,208,3.609,638,7.446,719,4.936,1541,3.404,2013,6.272,2044,7.549,2045,7.549]],["title/injectables/LocalStrategy.html",[207,1.757,715,3.951]],["body/injectables/LocalStrategy.html",[3,0.061,4,0.072,5,0.072,8,0.205,24,0.301,25,0.005,26,1.195,32,0.229,64,1.989,69,0.596,78,2.962,81,0.369,83,0.36,85,0.072,87,0.003,88,0.003,99,1.58,100,2.09,110,0.611,111,0.542,113,1.192,114,1.851,122,1.582,138,1.989,144,1.906,207,2.643,208,2.779,210,0.466,589,4.214,627,4.807,633,6.369,634,4.829,715,5.942,719,3.8,752,5.637,1541,2.62,1917,3.945,2022,4.829,2024,4.829,2025,4.537,2027,4.829,2046,8.487,2047,5.812,2048,5.812,2049,5.812,2050,7.611,2051,7.611,2052,5.812,2053,5.219,2054,5.812,2055,5.812,2056,5.812]],["title/classes/LoggingTypeEnum.html",[81,0.321,1045,3.435]],["body/classes/LoggingTypeEnum.html",[3,0.065,4,0.076,5,0.076,8,0.218,9,0.973,24,0.346,25,0.005,26,1.089,32,0.263,55,3.123,81,0.391,85,0.076,87,0.004,88,0.004,92,3.865,139,1.197,312,6.228,611,5.653,660,3.406,1017,0.495,1045,5.371,1185,3.796,1563,7.193,2057,5.542,2058,9.104,2059,6.171,2060,6.171,2061,6.171]],["title/classes/LoginOfUserEvent.html",[81,0.321,1752,3.951]],["body/classes/LoginOfUserEvent.html",[3,0.063,4,0.074,5,0.074,8,0.212,9,0.956,22,2.036,24,0.361,25,0.005,26,1.244,32,0.274,55,2.78,81,0.381,83,0.284,85,0.074,87,0.003,88,0.003,110,0.482,111,0.427,139,1.191,149,2.204,210,0.482,246,2.95,586,3.825,747,1.974,752,5.758,1017,0.482,1185,3.378,1220,2.609,1331,4.247,1335,4.247,1504,5.758,1505,4.447,1724,4.688,1752,6.069,2062,9.444]],["title/classes/LoginOfUserEventHandler.html",[81,0.321,2063,4.205]],["body/classes/LoginOfUserEventHandler.html",[3,0.061,4,0.072,5,0.072,8,0.206,22,1.301,24,0.302,25,0.005,32,0.23,69,0.542,81,0.37,83,0.361,85,0.072,87,0.003,88,0.003,97,2.116,99,1.583,100,2.093,110,0.612,111,0.543,113,1.196,114,1.855,118,2.404,138,1.995,139,0.688,149,1.49,158,3.706,170,1.401,171,2.325,191,2.363,210,0.468,222,1.528,246,1.995,361,2.05,586,2.445,1017,0.468,1058,1.761,1191,4.063,1192,3.646,1193,2.906,1194,2.906,1195,3.646,1197,2.678,1198,2.787,1200,2.906,1201,2.971,1202,2.971,1338,5.2,1486,3.459,1752,7.038,1753,5.234,2063,6.336,2064,8.499,2065,5.829,2066,5.829,2067,5.829]],["title/classes/MailDto.html",[81,0.321,255,3.951]],["body/classes/MailDto.html",[3,0.062,4,0.073,5,0.073,8,0.21,9,0.95,24,0.36,25,0.005,26,1.203,27,2.938,32,0.274,69,0.492,79,4.882,81,0.49,82,2.904,83,0.282,85,0.073,87,0.003,88,0.003,92,3.951,110,0.478,111,0.67,128,3.256,210,0.478,255,6.034,567,5.422,905,5.725,938,2.274,939,2.771,940,1.774,946,4.82,1017,0.478,1031,6.827,2068,5.95,2069,6.702,2070,5.95,2071,5.95,2072,5.95,2073,5.95,2074,5.95]],["title/classes/MailLandingPageDto.html",[81,0.321,1646,4.205]],["body/classes/MailLandingPageDto.html",[3,0.066,4,0.077,5,0.077,8,0.221,9,0.983,15,1.947,24,0.348,25,0.004,26,1.255,32,0.265,81,0.398,83,0.297,85,0.077,87,0.004,88,0.004,92,3.887,93,5.51,110,0.503,111,0.446,112,3.817,139,1.156,210,0.503,747,1.893,1017,0.503,1220,2.724,1646,6.64,2075,9.266,2076,6.268,2077,6.268,2078,6.268,2079,7.992]],["title/classes/MailRequiredException.html",[81,0.321,2080,4.205]],["body/classes/MailRequiredException.html",[3,0.075,4,0.089,5,0.089,25,0.005,32,0.216,69,0.457,81,0.455,85,0.089,87,0.004,88,0.004,120,3.575,122,1.952,210,0.75,635,4.563,708,4.136,1017,0.575,1141,4.154,1539,4.878,1541,3.917,1543,5.957,2080,7.219,2081,7.802,2082,7.169,2083,7.169,2084,5.597]],["title/classes/MailResponse.html",[81,0.321,129,3.951]],["body/classes/MailResponse.html",[3,0.071,4,0.084,5,0.084,8,0.24,9,1.035,24,0.333,25,0.005,26,1.048,32,0.253,81,0.431,83,0.322,85,0.084,87,0.004,88,0.004,92,3.832,93,4.998,110,0.546,111,0.484,112,3.643,129,6.569,139,1.079,210,0.546,747,1.807,938,2.476,939,2.808,1017,0.546,2085,6.803,2086,6.803,2087,6.803,2088,6.803]],["title/entities/MediaEntity.html",[0,1.592,460,3.095]],["body/entities/MediaEntity.html",[0,1.658,2,1.428,3,0.036,4,0.043,5,0.043,6,4.101,8,0.122,9,0.784,13,2.676,14,2.931,15,1.341,21,2.723,24,0.369,25,0.005,26,0.889,27,3.192,32,0.281,34,5.458,39,5.832,40,5.659,43,3.512,51,2.469,69,0.489,70,2.989,71,2.989,72,3.05,74,1.591,75,2.989,76,0.992,77,2.564,81,0.22,83,0.164,85,0.043,87,0.002,88,0.002,436,4.538,444,1.997,450,5.307,460,3.223,468,3.997,557,4.662,565,2.449,747,1.262,857,5.703,896,5.661,897,2.187,915,3.864,918,1.69,923,1.69,1014,2.703,2089,3.462,2090,6.379,2091,6.379,2092,6.379,2093,6.379,2094,6.379,2095,6.379,2096,6.379,2097,6.379,2098,5.269,2099,3.462,2100,5.269,2101,3.462,2102,5.269,2103,3.462,2104,3.462,2105,3.462,2106,5.269,2107,3.462,2108,5.269,2109,3.462,2110,3.462,2111,3.462,2112,5.269,2113,3.462,2114,5.269,2115,3.462,2116,3.462]],["title/entities/MessageEntity.html",[0,1.592,462,3.308]],["body/entities/MessageEntity.html",[0,2.071,2,1.934,3,0.049,4,0.058,5,0.058,6,4.099,8,0.166,9,0.935,13,3.189,14,3.494,15,1.598,21,3.245,24,0.366,25,0.005,26,1.027,27,3.163,32,0.278,35,3.796,39,4.025,40,3.906,43,3.911,51,3.084,69,0.484,70,3.563,71,3.563,72,3.635,73,4.269,74,2.156,75,3.563,76,1.345,81,0.298,83,0.222,85,0.058,87,0.003,88,0.003,292,5.631,436,5.053,444,2.706,445,4.892,459,2.784,462,4.303,553,5.892,567,2.963,747,1.78,915,4.303,918,2.29,923,2.29,2117,4.691,2118,6.827,2119,6.581,2120,4.691,2121,4.691,2122,6.581,2123,4.691,2124,4.691,2125,4.691,2126,4.691,2127,4.691]],["title/classes/NoUserTraceException.html",[81,0.321,2128,4.544]],["body/classes/NoUserTraceException.html",[3,0.074,4,0.088,5,0.088,22,2.078,25,0.005,32,0.213,69,0.452,81,0.45,85,0.088,87,0.004,88,0.004,210,0.747,707,5.538,1017,0.569,1141,4.127,1143,4.815,1539,4.847,1541,3.892,2128,7.752,2129,8.632,2130,7.093,2131,9.305,2132,7.093,2133,7.093,2134,7.093,2135,7.093]],["title/entities/NotificationEntity.html",[0,1.592,478,3.196]],["body/entities/NotificationEntity.html",[0,1.538,2,1.295,3,0.033,4,0.039,5,0.039,6,4.015,8,0.111,9,0.738,13,2.518,14,2.758,15,1.261,21,2.562,22,1.34,24,0.403,25,0.005,26,1.046,27,3.12,28,4.791,29,6.068,30,4.612,31,4.062,32,0.274,35,3.462,37,4.948,38,3.761,39,4.754,40,4.612,43,3.377,44,2.82,45,4.062,46,5.757,48,2.82,49,4.062,51,2.291,53,3.803,55,2.422,61,2.82,62,4.062,64,2.66,69,0.495,70,3.642,71,2.291,72,2.337,73,3.803,74,1.443,75,2.291,76,0.9,78,1.601,79,3.791,80,4.686,81,0.31,82,1.533,83,0.397,85,0.039,86,5.288,87,0.002,88,0.002,289,4.233,293,1.677,445,4.612,459,1.864,468,3.377,478,3.087,553,4.074,573,2.084,581,2.221,854,3.318,864,2.452,882,4.597,897,1.983,915,3.716,918,1.533,923,1.533,1056,2.132,2069,5.73,2136,3.14,2137,6.002,2138,7.339,2139,4.888,2140,3.14,2141,3.14,2142,3.14,2143,3.14,2144,3.14,2145,4.888,2146,3.14,2147,3.14,2148,4.888,2149,3.14,2150,3.14,2151,6.591,2152,3.14,2153,3.14,2154,4.888,2155,3.14,2156,3.14,2157,3.14]],["title/entities/OccupationEntity.html",[0,1.592,464,2.919]],["body/entities/OccupationEntity.html",[0,1.416,2,1.856,3,0.047,4,0.056,5,0.056,6,4.126,8,0.159,9,0.914,13,3.118,14,3.416,15,1.562,21,3.173,24,0.37,25,0.005,26,1.008,27,3.194,32,0.281,34,5.269,37,2.527,38,2.728,43,3.858,51,2.995,69,0.516,70,2.995,71,3.483,72,3.554,74,2.068,75,3.483,76,1.29,77,3.334,81,0.285,83,0.352,85,0.056,87,0.003,88,0.003,436,4.985,444,2.596,464,3.687,468,3.858,829,3.514,854,4.339,869,5.257,894,5.724,897,2.843,915,4.245,918,2.197,923,2.197,1664,4.546,1822,4.734,2158,4.501,2159,6.675,2160,6.675,2161,6.392,2162,4.501,2163,6.392,2164,4.501,2165,4.501,2166,4.501,2167,4.501,2168,4.501,2169,6.392,2170,4.501,2171,4.501,2172,4.501]],["title/entities/PlanEntity.html",[0,1.592,466,3.435]],["body/entities/PlanEntity.html",[0,1.87,2,1.678,3,0.043,4,0.05,5,0.05,6,4.146,8,0.144,9,0.864,13,2.946,14,3.227,15,1.476,21,2.998,24,0.402,25,0.005,26,1.069,27,3.222,28,5.811,29,6.03,30,4.584,32,0.283,43,3.728,51,2.785,69,0.379,70,4.02,71,3.291,72,3.358,74,1.87,75,3.291,76,1.167,81,0.258,83,0.452,85,0.05,86,6.03,87,0.003,88,0.003,289,4.739,466,4.035,476,5.092,571,3.381,833,2.57,863,5.419,895,3.754,915,4.102,918,1.986,923,1.986,1514,5.835,1536,3.014,1537,4.939,2173,4.069,2174,7.023,2175,8.215,2176,8.215,2177,4.069,2178,4.069,2179,4.069,2180,5.944,2181,7.723,2182,4.069,2183,4.069,2184,4.069,2185,4.069,2186,4.069,2187,5.944,2188,4.069,2189,4.069]],["title/controllers/ProfileController.html",[89,2.639,2190,4.205]],["body/controllers/ProfileController.html",[3,0.025,4,0.03,5,0.03,8,0.085,15,1.227,22,0.886,24,0.313,25,0.005,26,1.06,27,2.783,32,0.245,69,0.504,81,0.154,83,0.394,85,0.03,87,0.002,88,0.002,89,1.262,91,1.181,96,1.712,97,0.879,99,0.824,100,2.427,106,1.134,110,0.634,111,0.563,113,1.668,114,2.277,118,2.407,119,1.582,121,1.793,122,0.659,127,1.643,128,1.324,131,1.712,132,1.89,133,1.234,134,1.89,135,1.292,138,0.828,139,0.286,143,6.024,144,2.667,222,2.132,224,2.559,247,1.533,258,1.793,288,3.298,289,2.29,292,2.94,299,3.298,302,1.793,303,2.011,305,1.793,307,2.011,308,2.174,313,1.48,314,1.89,403,1.533,421,4.557,573,3.132,608,6.122,636,1.712,641,1.793,661,3.14,676,1.89,1136,1.48,1137,1.582,1173,5.317,1295,3.737,1451,4.531,1664,4.668,1702,5.405,2031,3.099,2190,3.298,2191,2.42,2192,3.564,2193,3.969,2194,3.564,2195,6.443,2196,3.969,2197,3.969,2198,3.564,2199,4.531,2200,3.969,2201,3.564,2202,2.42,2203,6.349,2204,3.564,2205,2.42,2206,2.42,2207,2.42,2208,5.837,2209,3.969,2210,2.42,2211,2.42,2212,3.969,2213,2.42,2214,4.897,2215,2.42,2216,2.42,2217,2.42,2218,2.42,2219,3.564,2220,2.42,2221,2.42,2222,2.42,2223,2.42,2224,2.42,2225,2.174,2226,3.969,2227,2.42,2228,2.42,2229,2.42,2230,3.969,2231,2.42,2232,2.42,2233,2.42,2234,3.564,2235,2.42,2236,2.42,2237,3.969,2238,2.42,2239,2.174,2240,2.174,2241,3.737,2242,2.174,2243,2.011,2244,2.174,2245,2.174,2246,2.174,2247,2.174,2248,2.42,2249,2.42,2250,2.011,2251,2.174,2252,2.42,2253,3.969,2254,6.922,2255,2.42,2256,2.42,2257,2.42,2258,2.42,2259,2.42,2260,2.42,2261,2.42,2262,2.42,2263,3.969,2264,2.42,2265,2.42,2266,2.42,2267,3.969,2268,2.42,2269,2.42,2270,3.969,2271,2.42,2272,2.42,2273,2.42,2274,2.42,2275,2.42,2276,2.42,2277,2.42,2278,2.42]],["title/entities/ProfileEntity.html",[0,1.592,468,2.199]],["body/entities/ProfileEntity.html",[0,1.253,2,3.152,3,0.025,4,0.03,5,0.03,8,0.086,9,0.622,13,2.122,14,2.324,15,1.063,21,2.159,22,1.441,24,0.361,25,0.005,26,0.729,27,3.089,32,0.272,34,4.115,35,1.401,38,3.854,39,5.635,40,5.358,43,3.013,51,1.866,55,1.424,64,2.002,69,0.519,70,2.741,71,2.37,72,2.418,73,2.235,74,1.116,75,2.37,76,0.696,78,1.238,81,0.154,83,0.347,85,0.03,87,0.002,88,0.002,111,0.656,293,3.447,436,4.111,437,1.897,438,1.897,439,3.824,440,1.799,441,1.718,457,4.534,458,1.799,459,1.442,460,4.479,461,1.897,464,3.374,465,1.649,468,1.73,478,3.695,479,1.799,546,5.136,565,4.138,569,4.333,573,1.756,581,2.816,817,3.002,833,4.077,836,6.023,837,6.128,857,2.702,864,1.897,869,2.816,882,4.382,893,3.949,894,3.578,895,4.38,896,3.307,915,3.654,918,1.186,923,1.186,935,1.486,938,0.715,939,1.172,940,0.724,945,4.203,950,4.542,957,3.575,974,3.575,995,4.567,998,4.203,1176,3.195,1177,3.094,1179,4.077,1181,1.588,2160,4.542,2279,2.429,2280,5.058,2281,5.058,2282,5.058,2283,5.058,2284,2.429,2285,3.981,2286,3.981,2287,2.429,2288,2.429,2289,2.429,2290,2.429,2291,3.981,2292,2.429,2293,3.981,2294,2.429,2295,3.981,2296,3.981,2297,5.849,2298,2.429,2299,3.981,2300,2.429,2301,3.981,2302,2.429,2303,2.429,2304,2.429,2305,3.981,2306,3.981,2307,2.429,2308,2.429,2309,3.981,2310,2.429,2311,2.429,2312,2.429,2313,3.981,2314,2.429,2315,2.429]],["title/modules/ProfileModule.html",[149,1.294,2316,3.951]],["body/modules/ProfileModule.html",[2,1.54,3,0.039,4,0.046,5,0.046,22,0.834,25,0.005,64,1.278,69,0.657,78,1.903,81,0.237,83,0.177,85,0.046,87,0.002,88,0.002,91,2.723,97,2.424,106,2.614,122,1.017,149,1.426,151,2.097,152,3.132,156,5.087,158,3.212,160,3.412,161,2.284,162,2.284,164,3.412,165,3.412,166,2.535,167,3.787,168,2.097,169,3.647,170,0.897,171,2.225,172,2.535,178,4.458,180,3.103,183,3.103,186,6.155,188,3.647,189,2.641,190,2.441,191,1.514,194,2.535,195,2.535,196,2.535,197,2.535,198,2.441,230,3.103,238,2.766,276,2.535,277,1.335,278,2.915,464,3.218,465,2.535,468,2.424,573,2.572,817,3.311,1075,1.75,1130,4.635,1132,5.007,1138,2.216,1147,4.705,1189,4.635,1197,1.716,1474,4.635,1484,4.635,1643,2.154,1660,4.635,1662,3.103,1664,2.284,1670,4.635,1671,4.355,1688,4.635,1689,2.641,1699,4.635,2190,5.549,2241,6.161,2242,3.353,2316,7.201,2317,3.353,2318,3.734,2319,3.353,2320,3.734,2321,3.734,2322,4.635,2323,3.734,2324,3.103,2325,4.635,2326,5.01,2327,4.635,2328,5.01,2329,4.635,2330,4.635,2331,3.734,2332,3.353,2333,4.635,2334,3.734,2335,3.353,2336,4.635,2337,3.353,2338,4.635,2339,3.353,2340,5.997]],["title/classes/ProfileResponse.html",[81,0.321,1136,3.095]],["body/classes/ProfileResponse.html",[3,0.062,4,0.073,5,0.073,8,0.21,9,0.95,15,1.804,24,0.373,25,0.005,26,1.203,32,0.283,53,4.34,81,0.377,83,0.282,85,0.073,87,0.003,88,0.003,110,0.478,111,0.611,139,1.216,210,0.478,403,3.315,747,2.036,938,2.274,939,2.771,940,1.774,1017,0.478,1136,4.727,1177,5.25,1679,6.358,2341,5.95,2342,7.729,2343,5.95,2344,5.95,2345,5.95]],["title/injectables/ProfileService.html",[207,1.757,2241,3.748]],["body/injectables/ProfileService.html",[3,0.023,4,0.027,5,0.027,8,0.076,15,1.819,22,1.352,24,0.3,25,0.005,26,1.079,32,0.235,69,0.583,81,0.137,83,0.358,85,0.027,87,0.002,88,0.002,99,0.75,100,2.357,106,1.013,110,0.608,111,0.539,113,1.553,114,2.184,122,0.588,138,0.739,139,0.427,144,2.39,170,0.519,207,1.255,208,1.033,210,0.173,211,1.6,212,4.631,213,4.917,218,1.795,220,4.522,221,0.709,222,2.049,223,4.85,224,3.039,225,1.6,245,1.795,403,2.102,569,2.676,573,2.629,657,3.02,659,2.971,661,3.588,705,6.963,817,2.144,866,1.413,1121,2.821,1124,1.687,1125,1.687,1132,3.825,1136,1.322,1137,1.413,1139,3.294,1140,3.161,1141,2.226,1142,2.084,1143,1.467,1144,1.687,1153,4.003,1176,2.941,1177,2.848,1206,5.032,1471,2.676,1498,5.689,1499,1.94,1592,3.002,1657,2.821,1662,1.795,1664,2.21,1667,2.821,1671,2.821,1676,1.687,1679,1.6,1683,2.821,1689,1.528,1698,2.821,1702,4.249,2192,3.245,2194,3.245,2198,3.245,2199,4.182,2201,3.245,2203,5.427,2214,1.528,2225,3.245,2241,2.676,2244,1.94,2245,1.94,2246,1.94,2247,3.245,2324,1.795,2346,2.161,2347,3.613,2348,5.443,2349,3.613,2350,3.613,2351,2.161,2352,3.613,2353,2.161,2354,3.613,2355,2.161,2356,3.613,2357,2.161,2358,2.161,2359,2.161,2360,2.161,2361,2.161,2362,3.613,2363,3.613,2364,5.032,2365,2.161,2366,3.613,2367,2.161,2368,3.613,2369,2.161,2370,4.728,2371,1.795,2372,1.94,2373,2.676,2374,3.245,2375,2.161,2376,2.821,2377,1.94,2378,2.821,2379,2.821,2380,2.161,2381,2.161,2382,2.161,2383,2.161,2384,2.161,2385,2.161,2386,2.161,2387,8.029,2388,7.572,2389,2.161,2390,2.161,2391,1.687,2392,2.161,2393,2.161,2394,2.161,2395,2.161,2396,4.657,2397,2.161,2398,2.161,2399,2.161]],["title/entities/ReferralCodeEntity.html",[0,1.592,480,3.435]],["body/entities/ReferralCodeEntity.html",[0,1.155,2,1.514,3,0.038,4,0.045,5,0.045,6,3.919,8,0.13,9,0.677,13,2.773,15,1.389,21,2.822,22,1.64,24,0.385,25,0.005,26,0.916,27,3.017,30,2.179,32,0.265,37,4.125,38,3.136,43,3.991,46,4.081,51,1.721,64,3.086,69,0.502,70,3.098,71,2.582,73,3.712,74,1.687,75,2.582,76,1.053,78,1.872,80,4.301,81,0.349,82,1.792,85,0.045,87,0.002,88,0.002,128,2.009,314,4.301,476,4.906,480,3.74,481,6.679,579,4.897,591,3.897,818,4.897,854,3.74,896,3.602,907,4.301,1031,6.379,1037,6.868,1302,5.162,1307,4.577,1324,3.051,1326,4.947,1509,3.298,1536,2.72,1822,2.72,2084,5.736,2400,6.612,2401,6.612,2402,5.509,2403,5.509,2404,4.577,2405,3.672,2406,3.672,2407,3.672,2408,3.672,2409,3.672,2410,3.672,2411,3.672,2412,3.672,2413,5.509,2414,5.509,2415,5.509,2416,5.509,2417,3.672,2418,3.672,2419,3.672,2420,5.509,2421,3.672,2422,3.672,2423,3.672,2424,3.672,2425,3.672,2426,3.672,2427,5.509,2428,3.672,2429,5.509,2430,3.672,2431,3.672,2432,3.672]],["title/classes/RegisterCommand.html",[81,0.321,772,3.951]],["body/classes/RegisterCommand.html",[3,0.065,4,0.077,5,0.077,8,0.219,9,0.977,24,0.366,25,0.005,26,1.29,32,0.278,81,0.394,83,0.294,85,0.077,87,0.004,88,0.004,110,0.498,111,0.442,112,3.806,139,1.199,210,0.498,586,3.874,589,4.303,747,1.988,772,6.202,1017,0.498,1220,2.698,1724,4.848,2433,6.21,2434,6.21,2435,8.76]],["title/classes/RegisterEvent.html",[81,0.321,2436,3.951]],["body/classes/RegisterEvent.html",[3,0.074,4,0.087,5,0.087,8,0.249,9,1.057,24,0.34,25,0.005,26,1.204,32,0.259,81,0.447,83,0.333,85,0.087,87,0.004,88,0.004,110,0.565,111,0.501,139,1.096,210,0.565,403,3.73,747,1.7,1017,0.565,1220,3.06,1332,3.954,2436,6.71,2437,7.043,2438,7.043,2439,7.043]],["title/classes/RegisterEventHandler.html",[81,0.321,735,4.205]],["body/classes/RegisterEventHandler.html",[3,0.062,4,0.073,5,0.073,8,0.208,9,0.945,15,1.615,22,1.716,24,0.234,25,0.005,32,0.231,55,2.109,69,0.577,81,0.374,83,0.279,85,0.073,87,0.003,88,0.003,99,1.595,110,0.473,111,0.42,113,1.21,122,1.606,170,1.417,224,2.418,329,4.853,361,2.066,735,6.385,737,7.676,1017,0.473,1058,1.782,1185,2.563,1191,4.087,1192,3.674,1195,3.674,1197,2.71,1198,2.82,1340,4.853,1373,6.385,1375,5.296,1437,3.227,1486,3.5,2436,7.07,2440,8.547,2441,8.547,2442,7.684,2443,5.898,2444,5.296,2445,5.898,2446,5.898,2447,6.901,2448,5.898]],["title/classes/RegisterHandler.html",[81,0.321,727,4.205]],["body/classes/RegisterHandler.html",[3,0.026,4,0.03,5,0.03,8,0.087,9,0.493,22,0.896,24,0.315,25,0.005,26,1.15,30,1.456,32,0.252,53,3.644,64,1.373,69,0.57,76,0.703,78,1.25,81,0.255,82,1.197,83,0.376,85,0.03,87,0.002,88,0.002,99,0.833,100,2.173,110,0.656,111,0.565,112,1.6,113,1.629,114,1.932,144,2.604,170,0.589,175,1.197,176,1.15,177,1.173,178,3.141,210,0.322,221,3.1,222,2.082,224,2.776,247,2.272,277,0.877,361,1.079,488,1.223,489,2.426,512,1.881,520,1.012,521,2.724,522,1.15,586,2.922,589,2.296,591,1.735,595,1.665,600,4.729,627,1.549,660,2.491,661,2.69,727,3.334,772,4.594,863,2.535,866,1.604,946,3.304,1017,0.197,1059,2.486,1064,1.575,1073,1.959,1075,1.15,1076,1.197,1134,3.254,1139,1.735,1140,4.729,1141,3.331,1142,3.394,1143,1.665,1144,1.915,1165,3.133,1167,1.915,1168,2.038,1171,3.4,1224,4.231,1225,3.604,1226,4.573,1227,3.604,1228,3.334,1229,3.334,1230,3.334,1231,3.334,1232,3.334,1236,2.203,1239,3.604,1241,4.594,1242,3.334,1244,3.334,1246,2.038,1248,3.334,1250,3.334,1253,2.839,1254,2.839,1255,3.133,1256,2.839,1257,3.133,1262,3.666,1263,2.972,1264,2.038,1265,3.133,1266,3.133,1268,2.038,1269,2.203,1270,3.334,1271,2.203,1272,2.203,1275,3.633,1276,5.789,1277,2.724,1278,2.724,1282,4.162,1285,2.203,1287,2.203,1288,2.203,1290,2.203,1297,1.5,1302,3.976,1306,3.604,1307,3.334,1308,2.203,1309,3.334,1310,3.334,1311,2.038,1312,2.038,1313,2.038,1314,3.334,1315,1.915,2436,1.915,2444,2.203,2449,2.453,2450,4.013,2451,2.453,2452,2.453,2453,2.453,2454,2.453,2455,2.453,2456,2.453,2457,2.453,2458,2.453,2459,2.453,2460,2.453,2461,2.453,2462,2.453,2463,2.453,2464,2.453,2465,4.013,2466,2.453,2467,4.013,2468,2.453,2469,2.453,2470,4.013,2471,2.453]],["title/classes/RemoveRefreshTokenCommand.html",[81,0.321,2472,3.951]],["body/classes/RemoveRefreshTokenCommand.html",[3,0.072,4,0.085,5,0.085,8,0.244,9,1.043,24,0.336,25,0.005,26,1.195,32,0.255,81,0.437,83,0.326,85,0.085,87,0.004,88,0.004,110,0.553,111,0.491,139,1.085,210,0.553,403,3.703,603,4.582,747,1.679,1017,0.553,1220,2.997,1332,3.872,2472,6.624,2473,9.19,2474,6.193,2475,6.193,2476,6.193]],["title/classes/RemoveRefreshTokenCommandHandler.html",[81,0.321,2477,4.205]],["body/classes/RemoveRefreshTokenCommandHandler.html",[3,0.055,4,0.065,5,0.065,8,0.186,22,1.174,24,0.282,25,0.005,32,0.214,64,1.8,69,0.594,76,1.508,81,0.334,83,0.337,85,0.065,87,0.003,88,0.003,99,1.479,100,1.989,110,0.572,111,0.507,113,1.079,114,1.732,170,1.264,175,2.567,176,2.465,177,2.515,178,2.372,210,0.572,221,2.336,222,1.379,224,1.655,277,1.881,293,2.808,361,1.915,488,2.623,489,3.568,512,3.337,520,2.169,522,2.465,603,4.314,657,2.098,659,2.064,660,2.887,1017,0.422,1058,1.589,1059,3.941,1064,2.794,1073,3.476,1075,2.465,1076,2.567,1134,4.218,1171,2.567,1196,2.681,1252,2.743,1262,3.551,1275,2.743,1476,3.721,1740,4.107,2472,6.756,2477,6.709,2478,8.074,2479,6.756,2480,5.26,2481,5.26,2482,3.896]],["title/classes/RemoveRefreshTokenEvent.html",[81,0.321,2483,4.205]],["body/classes/RemoveRefreshTokenEvent.html",[3,0.062,4,0.073,5,0.073,8,0.208,9,0.943,22,1.712,24,0.358,25,0.005,26,1.238,32,0.272,55,2.742,81,0.373,83,0.278,85,0.073,87,0.003,88,0.003,110,0.472,111,0.419,139,1.187,149,2.182,210,0.472,246,2.921,403,3.493,603,4.886,628,4.197,747,1.966,1017,0.472,1185,3.333,1220,2.555,1332,3.302,2483,6.372,2484,9.382,2485,5.281,2486,6.887,2487,6.372,2488,5.281,2489,5.281]],["title/classes/RemoveRefreshTokenEventHandler.html",[81,0.321,2490,4.205]],["body/classes/RemoveRefreshTokenEventHandler.html",[3,0.061,4,0.072,5,0.072,8,0.205,15,1.221,24,0.301,25,0.005,32,0.229,69,0.541,81,0.369,83,0.36,85,0.072,87,0.003,88,0.003,97,2.11,99,1.58,110,0.611,111,0.542,113,1.192,118,2.397,138,1.989,139,0.686,149,1.486,158,3.703,170,1.396,171,2.318,191,2.357,210,0.466,246,1.989,329,4.807,361,2.046,603,4.66,628,3.18,1017,0.466,1058,1.756,1191,4.058,1192,3.639,1193,2.898,1194,2.898,1195,3.639,1197,2.671,1198,2.779,1200,2.898,1201,2.962,1202,2.962,1340,3.671,1486,3.449,2483,7.482,2490,6.324,2491,8.487,2492,7.482,2493,5.812,2494,5.812,2495,5.812]],["title/injectables/RequestLoggingMiddleware.html",[207,1.757,344,4.205]],["body/injectables/RequestLoggingMiddleware.html",[3,0.044,4,0.052,5,0.052,8,0.148,9,0.748,24,0.283,25,0.005,32,0.215,69,0.584,81,0.266,83,0.288,85,0.052,87,0.003,88,0.003,99,1.262,110,0.488,111,0.433,113,0.861,122,1.143,138,1.437,139,0.926,158,3.026,171,1.674,191,1.702,207,2.111,208,2.007,210,0.337,221,2.344,224,1.321,236,4.852,243,3.109,247,3.212,293,4.441,312,5.124,329,3.84,343,6.161,344,5.052,361,1.128,362,2.849,363,2.969,364,5.884,365,2.969,366,2.969,370,5.581,611,4.651,636,2.969,637,5.581,642,2.651,1024,4.503,1029,4.747,1033,2.969,1045,2.849,1056,4.127,1063,5.295,1072,5.805,1079,3.277,1083,4.503,1085,3.488,1092,3.488,1093,3.77,1096,2.969,1560,3.277,1561,4.747,1563,3.277,1564,3.488,1569,3.488,1571,3.77,1572,3.277,1574,3.277,1578,3.277,1600,3.488,1601,4.747,1603,5.052,1606,5.052,1607,4.747,1608,3.277,1609,3.488,1610,3.488,1611,3.488,1612,5.052,1613,3.488,1614,5.052,1615,3.488,1616,3.488,1617,3.488,1618,3.488,1619,3.488,1620,3.488,1621,3.77,1629,3.488,1630,3.488,1631,3.488,1632,5.052,1633,3.488,2031,3.277,2496,7.837,2497,6.08,2498,4.198,2499,3.77,2500,4.198,2501,5.46,2502,3.77,2503,3.77,2504,4.198,2505,4.198,2506,4.198,2507,4.198]],["title/interfaces/RequestUser.html",[608,3.435,2508,3.579]],["body/interfaces/RequestUser.html",[3,0.075,4,0.088,5,0.088,8,0.252,9,1.066,22,2.167,24,0.283,25,0.005,64,3.322,69,0.552,78,3.641,85,0.088,87,0.004,88,0.004,608,5.885,611,5.539,642,4.512,1541,3.909,2508,5.053,2509,5.577,2510,7.144,2511,7.144]],["title/injectables/ResponseLoggingMiddleware.html",[207,1.757,347,4.205]],["body/injectables/ResponseLoggingMiddleware.html",[3,0.045,4,0.053,5,0.053,8,0.153,9,0.764,24,0.315,25,0.005,32,0.219,69,0.558,81,0.274,83,0.294,85,0.053,87,0.003,88,0.003,99,1.29,100,1.791,110,0.499,111,0.442,113,0.887,122,1.178,138,1.48,139,0.939,144,1.418,149,1.106,158,3.069,171,1.725,191,1.754,207,2.157,208,2.068,210,0.347,221,2.384,222,1.134,224,1.361,236,4.935,243,3.203,247,3.25,293,4.494,312,5.196,343,5.385,347,5.162,361,1.163,362,2.936,363,3.059,364,5.953,365,3.059,366,3.059,367,5.162,368,3.594,369,5.162,370,6.204,611,4.716,636,3.059,637,5.676,642,2.732,1024,4.602,1029,4.85,1063,5.385,1072,5.886,1079,3.377,1083,3.203,1085,3.594,1096,3.059,1560,3.377,1561,4.85,1572,3.377,1574,3.377,1576,3.594,1578,3.377,1600,3.594,1601,4.85,1603,5.162,1606,5.162,1607,4.85,1608,3.377,1609,3.594,1610,3.594,1611,3.594,1612,3.594,1613,3.594,1614,5.162,1615,3.594,1616,3.594,1617,3.594,1618,3.594,1619,3.594,1620,3.594,1622,3.884,1623,3.884,1624,3.884,1625,3.884,1626,3.884,1627,3.884,1629,3.594,1630,3.594,1631,3.594,1632,3.594,1633,3.594,2499,3.884,2501,5.579,2502,3.884,2503,3.884,2512,7.946,2513,6.212,2514,4.325]],["title/classes/RestoreUserCommand.html",[81,0.321,2515,3.951]],["body/classes/RestoreUserCommand.html",[3,0.072,4,0.085,5,0.085,8,0.242,9,1.039,15,1.925,24,0.335,25,0.005,26,1.053,32,0.254,81,0.434,83,0.324,85,0.085,87,0.004,88,0.004,110,0.55,111,0.488,139,1.082,210,0.55,747,1.813,938,2.486,939,2.892,940,2.042,1017,0.55,1216,4.845,1492,7.02,2515,6.596,2516,9.162]],["title/classes/RestoreUserCommandHandler.html",[81,0.321,2517,4.205]],["body/classes/RestoreUserCommandHandler.html",[3,0.05,4,0.059,5,0.059,8,0.168,9,0.817,15,1.397,22,1.062,24,0.303,25,0.005,32,0.231,38,2.031,64,1.628,69,0.591,76,1.364,81,0.302,83,0.315,85,0.059,87,0.003,88,0.003,99,1.38,100,1.887,110,0.533,111,0.473,113,0.976,114,1.617,170,1.143,175,2.322,176,2.23,177,2.275,178,2.145,210,0.533,221,1.561,222,1.742,224,2.411,277,1.701,361,1.787,488,2.372,489,3.42,512,3.115,520,1.962,522,2.23,597,3.524,657,2.651,659,2.608,660,2.739,661,2.958,705,3.954,747,1.516,1017,0.382,1058,1.438,1059,3.739,1064,2.608,1067,3.111,1073,3.244,1075,2.23,1076,2.322,1134,4.311,1152,4.346,1153,2.372,1171,2.322,1223,5.923,1252,2.481,1262,3.314,1275,2.481,1297,2.91,1338,2.745,1437,2.604,1480,4.924,1672,3.23,1718,3.366,2084,3.715,2515,6.475,2517,6.365,2518,8.293,2519,4.758,2520,3.715,2521,4.273,2522,4.758,2523,4.758,2524,4.758]],["title/classes/RestoreUserEvent.html",[81,0.321,2520,3.951]],["body/classes/RestoreUserEvent.html",[3,0.063,4,0.074,5,0.074,8,0.212,9,0.956,22,2.036,24,0.361,25,0.005,26,1.244,32,0.274,55,2.78,81,0.381,83,0.284,85,0.074,87,0.003,88,0.003,110,0.482,111,0.427,139,1.191,149,2.204,210,0.482,246,2.95,403,3.521,747,1.974,1017,0.482,1185,3.378,1220,2.609,1331,4.247,1332,3.371,1335,4.247,1504,5.758,1505,4.447,2520,6.069,2525,9.444,2526,7.774]],["title/classes/RestoreUserEventHandler.html",[81,0.321,2527,4.544]],["body/classes/RestoreUserEventHandler.html",[3,0.061,4,0.072,5,0.072,8,0.206,15,1.225,22,1.301,24,0.302,25,0.005,32,0.23,69,0.542,81,0.37,83,0.361,85,0.072,87,0.003,88,0.003,97,2.116,99,1.583,100,2.093,110,0.612,111,0.543,113,1.196,114,1.855,118,2.404,138,1.995,139,0.688,149,1.49,158,3.706,170,1.401,171,2.325,191,2.363,210,0.468,222,1.528,246,1.995,361,2.05,1017,0.468,1058,1.761,1191,4.063,1192,3.646,1193,2.906,1194,2.906,1195,3.646,1196,2.971,1197,2.678,1198,2.787,1200,2.906,1201,2.971,1202,2.971,1338,5.2,1340,3.681,2520,7.038,2521,5.234,2527,6.848,2528,8.499,2529,5.829,2530,5.829]],["title/classes/RoleGroupMembershipEnum.html",[81,0.321,1836,4.205]],["body/classes/RoleGroupMembershipEnum.html",[3,0.064,4,0.075,5,0.075,6,3.985,8,0.215,9,0.965,24,0.344,25,0.005,26,1.082,32,0.261,55,3.105,81,0.387,85,0.075,87,0.003,88,0.003,139,1.195,557,5.996,818,7.029,1017,0.489,1185,3.774,1836,6.523,2058,9.084,2531,8.235,2532,6.096,2533,8.522,2534,9.489,2535,6.096,2536,6.096,2537,6.096]],["title/classes/SamePasswordException.html",[81,0.321,2538,4.205]],["body/classes/SamePasswordException.html",[3,0.074,4,0.088,5,0.088,25,0.005,32,0.213,69,0.452,81,0.45,85,0.088,87,0.004,88,0.004,120,3.536,122,1.931,210,0.747,589,3.892,635,4.542,708,4.091,1017,0.569,1141,4.127,1539,4.847,1541,3.892,1923,6.37,1924,6.37,2538,7.172,2539,7.752,2540,7.093,2541,5.893,2542,5.893]],["title/classes/SendMailCommand.html",[81,0.321,282,3.951]],["body/classes/SendMailCommand.html",[3,0.061,4,0.072,5,0.072,8,0.207,9,0.941,24,0.358,25,0.005,26,1.198,32,0.272,81,0.372,83,0.277,85,0.072,87,0.003,88,0.003,92,3.932,110,0.471,111,0.667,139,1.186,210,0.471,282,5.976,293,4.824,567,5.383,747,1.986,938,2.253,939,2.758,940,1.748,946,4.785,1017,0.471,1433,4.871,1434,5.265,1435,5.265,2069,6.654,2543,9.373,2544,5.265,2545,5.265]],["title/classes/SendMailCommandHandler.html",[81,0.321,271,4.205]],["body/classes/SendMailCommandHandler.html",[3,0.059,4,0.07,5,0.07,8,0.199,24,0.295,25,0.005,32,0.224,69,0.59,81,0.357,83,0.353,85,0.07,87,0.003,88,0.003,92,3.505,99,1.548,100,2.058,110,0.598,111,0.531,113,1.155,114,1.813,122,1.533,139,0.665,168,3.162,170,1.353,181,3.682,184,3.983,210,0.452,221,2.445,224,1.772,271,6.194,282,6.944,361,2.004,946,4.186,1017,0.452,1059,4.079,1064,2.925,1065,4.397,1066,6.944,1068,5.82,1073,3.638,1075,3.493,1076,2.749,1080,4.397,1082,5.057,1134,4.291,1171,2.749,1433,4.679,2544,5.057,2545,5.057,2546,8.356,2547,5.82,2548,5.057,2549,5.631,2550,5.631,2551,5.631,2552,5.631]],["title/classes/SendMailEvent.html",[81,0.321,2547,3.951]],["body/classes/SendMailEvent.html",[3,0.055,4,0.064,5,0.064,8,0.184,9,0.871,24,0.368,25,0.005,26,1.236,32,0.28,55,2.533,81,0.331,83,0.247,85,0.064,87,0.003,88,0.003,92,3.99,97,2.571,110,0.419,111,0.642,112,3.44,139,1.212,149,2.056,210,0.419,246,2.752,567,5.079,747,2.03,938,2.085,939,2.654,940,1.556,946,4.515,1017,0.419,1185,3.078,1461,4.687,1466,4.687,1467,4.687,2069,6.279,2547,5.531,2553,9.512,2554,5.219,2555,5.219,2556,5.219,2557,6.362,2558,5.219]],["title/classes/SendMailEventHandler.html",[81,0.321,273,4.205]],["body/classes/SendMailEventHandler.html",[3,0.061,4,0.072,5,0.072,8,0.206,24,0.302,25,0.005,32,0.23,69,0.542,81,0.37,83,0.361,85,0.072,87,0.003,88,0.003,92,3.565,97,2.116,99,1.583,100,2.093,110,0.612,111,0.543,112,2.325,113,1.196,114,1.855,118,2.404,138,1.995,139,0.688,149,1.49,158,3.706,170,1.401,171,2.325,184,6.377,191,2.363,210,0.468,222,1.528,246,1.995,273,6.336,361,2.05,1017,0.468,1058,1.761,1191,4.063,1192,3.646,1193,2.906,1194,2.906,1195,3.646,1197,2.678,1198,2.787,1200,2.906,1201,2.971,1202,2.971,1486,3.459,2547,7.038,2548,5.234,2559,8.499,2560,5.829,2561,5.829,2562,5.829]],["title/classes/SetCurrentRefreshTokenCommand.html",[81,0.321,2563,3.951]],["body/classes/SetCurrentRefreshTokenCommand.html",[3,0.066,4,0.078,5,0.078,8,0.224,9,0.991,24,0.351,25,0.004,26,1.258,32,0.266,81,0.403,83,0.3,85,0.078,87,0.004,88,0.004,110,0.509,111,0.452,139,1.16,210,0.509,403,3.71,603,4.642,747,1.901,1017,0.509,1220,2.759,1733,7.268,1734,5.701,2474,5.701,2475,5.701,2476,7.235,2563,6.29,2564,9.309,2565,6.585]],["title/classes/SetCurrentRefreshTokenCommandHandler.html",[81,0.321,2566,4.205]],["body/classes/SetCurrentRefreshTokenCommandHandler.html",[3,0.053,4,0.063,5,0.063,8,0.18,22,1.136,24,0.276,25,0.005,32,0.21,64,1.74,69,0.602,76,1.458,81,0.323,83,0.329,85,0.063,87,0.003,88,0.003,99,1.445,100,1.954,110,0.559,111,0.495,113,1.043,114,1.693,170,1.222,175,2.482,176,2.383,177,2.432,178,2.293,210,0.559,221,2.283,222,1.825,224,1.6,247,1.964,277,1.819,361,1.871,488,2.536,489,3.519,512,3.262,520,2.097,521,4.725,522,2.383,591,3.597,603,4.255,657,2.028,659,1.996,660,2.838,1017,0.408,1058,1.537,1059,3.873,1064,2.731,1073,3.397,1075,2.383,1076,2.482,1134,4.181,1171,2.482,1252,2.652,1262,3.47,1275,2.652,1437,2.783,1672,3.452,1740,5.434,2479,6.662,2482,3.767,2563,6.662,2565,6.036,2566,6.593,2567,7.935,2568,5.086,2569,5.086,2570,5.086]],["title/classes/SetCurrentRefreshTokenEvent.html",[81,0.321,2571,4.205]],["body/classes/SetCurrentRefreshTokenEvent.html",[3,0.06,4,0.071,5,0.071,8,0.204,9,0.931,22,2.004,24,0.355,25,0.005,26,1.233,32,0.27,55,2.706,81,0.365,83,0.273,85,0.071,87,0.003,88,0.003,110,0.462,111,0.41,139,1.182,149,2.16,210,0.462,246,2.892,403,3.465,603,4.862,628,4.141,747,1.957,836,4.948,1017,0.462,1185,3.289,1220,2.504,1332,3.235,2485,5.174,2486,6.796,2488,5.174,2489,5.174,2565,6.593,2571,6.288,2572,9.321]],["title/classes/SetCurrentRefreshTokenEventHandler.html",[81,0.321,2573,4.205]],["body/classes/SetCurrentRefreshTokenEventHandler.html",[3,0.06,4,0.071,5,0.071,8,0.203,15,1.207,24,0.299,25,0.005,32,0.227,69,0.538,81,0.364,83,0.357,85,0.071,87,0.003,88,0.003,97,2.085,99,1.568,110,0.606,111,0.538,113,1.178,118,2.369,138,1.966,139,0.678,149,1.469,158,3.691,170,1.38,171,2.291,191,2.329,210,0.461,246,1.966,329,4.771,361,2.031,603,4.643,628,3.144,836,3.756,1017,0.461,1058,1.736,1191,4.035,1192,3.611,1193,2.864,1194,2.864,1195,3.611,1197,2.64,1198,2.747,1200,2.864,1201,2.928,1202,2.928,1340,3.628,1486,3.409,2492,7.448,2565,6.341,2571,7.448,2573,6.276,2574,8.439,2575,5.745,2576,5.745]],["title/classes/ShiftProfileOwnerCommand.html",[81,0.321,2379,3.951]],["body/classes/ShiftProfileOwnerCommand.html",[3,0.067,4,0.079,5,0.079,8,0.226,9,0.997,24,0.352,25,0.005,26,1.164,32,0.268,81,0.407,83,0.303,85,0.079,87,0.004,88,0.004,110,0.514,111,0.456,139,1.162,210,0.514,403,3.433,573,3.244,747,1.947,938,2.385,939,2.836,940,1.911,1017,0.514,2214,6.288,2379,6.328,2577,9.342,2578,6.409,2579,8.106,2580,6.409]],["title/classes/ShiftProfileOwnerCommandHandler.html",[81,0.321,2322,4.205]],["body/classes/ShiftProfileOwnerCommandHandler.html",[3,0.051,4,0.06,5,0.06,8,0.171,15,1.411,24,0.266,25,0.005,32,0.202,64,1.652,69,0.579,76,1.384,78,2.46,81,0.306,83,0.318,85,0.06,87,0.003,88,0.003,99,1.394,100,1.901,110,0.539,111,0.478,113,0.99,114,1.633,139,0.912,170,1.16,210,0.539,221,2.532,222,2.024,224,2.429,247,1.864,277,1.726,361,1.805,468,2.098,489,3.841,504,3.985,512,3.618,520,1.991,522,2.262,537,2.865,573,3.046,657,1.925,659,3.029,660,1.726,661,2.981,1017,0.387,1058,1.459,1059,3.768,1064,2.635,1073,3.277,1075,2.262,1076,2.356,1133,2.953,1134,4.122,1138,2.865,1149,3.769,1150,4.241,1151,3.576,1152,3.156,1153,3.348,1173,3.156,1196,2.46,1479,3.415,1481,3.576,1496,4.011,2322,5.579,2324,6.934,2379,6.516,2581,7.72,2582,4.827,2583,4.827,2584,4.827,2585,4.335,2586,4.827]],["title/classes/ShiftProfileOwnerEvent.html",[81,0.321,2587,4.205]],["body/classes/ShiftProfileOwnerEvent.html",[3,0.058,4,0.068,5,0.068,8,0.195,9,0.905,15,1.739,24,0.364,25,0.005,26,1.222,32,0.277,55,2.631,81,0.35,83,0.261,85,0.068,87,0.003,88,0.003,110,0.443,111,0.393,139,1.202,149,2.116,210,0.443,246,2.832,573,3.481,747,2.014,818,6.808,938,2.165,939,2.705,940,1.647,1017,0.443,1185,3.198,2587,6.114,2588,9.454,2589,5.522,2590,7.358,2591,5.522,2592,7.358,2593,5.522,2594,5.522]],["title/classes/ShiftProfileOwnerEventHandler.html",[81,0.321,2333,4.205]],["body/classes/ShiftProfileOwnerEventHandler.html",[3,0.059,4,0.07,5,0.07,8,0.199,15,1.569,22,1.261,24,0.296,25,0.005,32,0.225,69,0.533,81,0.358,83,0.353,85,0.07,87,0.003,88,0.003,97,2.05,99,1.551,100,2.061,110,0.599,111,0.532,113,1.158,114,1.817,118,2.329,138,1.933,139,0.667,149,1.444,158,3.674,170,1.357,171,2.252,191,2.29,210,0.453,222,1.48,246,1.933,361,2.008,573,3.215,1017,0.453,1058,1.706,1191,4.001,1192,3.571,1193,2.816,1194,2.816,1195,3.571,1196,2.878,1197,2.595,1198,2.7,1200,2.816,1201,2.878,1202,2.878,2333,6.205,2335,7.996,2587,7.398,2595,8.368,2596,5.647,2597,5.647,2598,5.071,2599,5.647,2600,5.647]],["title/classes/ShiftProfileOwnerRequest.html",[81,0.321,2364,4.205]],["body/classes/ShiftProfileOwnerRequest.html",[3,0.067,4,0.079,5,0.079,8,0.226,9,0.997,24,0.352,25,0.005,26,1.164,32,0.268,81,0.407,83,0.303,85,0.079,87,0.004,88,0.004,110,0.514,111,0.456,139,1.162,210,0.514,403,3.433,573,3.244,747,1.947,938,2.385,939,2.836,940,1.911,1017,0.514,2214,6.288,2364,6.735,2601,9.342,2602,6.409,2603,8.106,2604,6.409]],["title/classes/SignInDto.html",[81,0.321,2605,4.205]],["body/classes/SignInDto.html",[3,0.071,4,0.084,5,0.084,8,0.239,9,1.032,24,0.333,25,0.005,26,1.188,27,2.873,32,0.253,69,0.432,79,6.02,81,0.533,82,3.309,85,0.084,87,0.004,88,0.004,586,3.826,589,4.112,907,5.293,1017,0.544,2404,5.633,2605,6.976,2606,8.19,2607,6.779,2608,6.088,2609,6.779,2610,6.779,2611,6.088,2612,6.088]],["title/classes/SignUpDto.html",[81,0.321,622,3.951]],["body/classes/SignUpDto.html",[3,0.067,4,0.079,5,0.079,8,0.227,9,0.999,24,0.353,25,0.005,26,1.228,27,3.047,32,0.268,69,0.41,79,6.092,81,0.515,82,3.138,85,0.079,87,0.004,88,0.004,112,3.551,586,3.735,589,4.014,622,6.341,905,6.016,907,5.02,1017,0.516,2404,5.343,2606,8.399,2608,5.774,2611,5.774,2612,5.774,2613,6.43,2614,5.774,2615,6.43,2616,6.43,2617,6.43]],["title/entities/SocialNetworkEntity.html",[0,1.592,470,3.435]],["body/entities/SocialNetworkEntity.html",[0,2.558,2,1.635,3,0.042,4,0.049,5,0.049,6,3.999,8,0.14,9,0.851,13,3.2,14,3.505,15,1.708,21,3.256,24,0.357,25,0.005,26,1.196,27,3.086,32,0.271,43,4.171,51,2.733,69,0.372,70,4.118,71,3.241,72,3.307,74,1.822,75,3.241,76,1.136,81,0.37,83,0.416,85,0.049,87,0.003,88,0.003,289,3.364,436,4.773,444,2.287,470,4.695,471,7.185,575,3.294,833,2.504,895,3.683,914,7.775,915,4.064,918,1.935,923,1.935,2159,6.212,2618,3.964,2619,6.917,2620,9.357,2621,8.128,2622,8.128,2623,5.831,2624,3.964,2625,3.964,2626,3.964,2627,3.964,2628,3.964,2629,3.964,2630,3.964,2631,3.964,2632,3.964,2633,3.56,2634,3.964,2635,8.788,2636,3.964,2637,2.504,2638,3.964]],["title/classes/SoftDeleteProfileCommand.html",[81,0.321,2376,3.951]],["body/classes/SoftDeleteProfileCommand.html",[3,0.071,4,0.084,5,0.084,8,0.239,9,1.032,15,1.917,24,0.333,25,0.005,26,1.046,32,0.253,81,0.43,83,0.321,85,0.084,87,0.004,88,0.004,106,4.274,110,0.544,111,0.483,139,1.077,210,0.544,747,1.804,938,2.471,939,2.883,940,2.022,1017,0.544,1123,5.021,1473,6.976,2376,6.555,2639,9.12]],["title/classes/SoftDeleteProfileCommandHandler.html",[81,0.321,2336,4.205]],["body/classes/SoftDeleteProfileCommandHandler.html",[3,0.052,4,0.062,5,0.062,8,0.177,15,1.654,24,0.273,25,0.005,32,0.207,69,0.585,76,1.436,81,0.318,83,0.326,85,0.062,87,0.003,88,0.003,99,1.43,100,1.939,106,4.165,110,0.553,111,0.49,113,1.028,114,1.676,139,0.814,170,1.204,210,0.553,221,2.259,222,1.806,224,2.477,247,1.934,277,1.791,361,1.852,468,2.177,489,3.496,504,4.088,520,2.066,537,2.973,573,1.739,657,1.998,659,2.703,660,1.791,661,2.66,1017,0.402,1058,1.514,1059,3.843,1064,2.703,1073,3.362,1075,2.347,1076,2.445,1132,5.355,1133,3.064,1134,4.164,1138,2.973,1147,2.973,1150,3.164,1153,2.498,1171,2.445,1173,3.275,1196,2.553,1476,3.543,1479,3.543,1480,5.102,1481,3.71,2336,5.723,2376,6.619,2640,7.873,2641,4.498,2642,5.378,2643,3.911,2644,5.009,2645,5.009,2646,5.009]],["title/classes/SoftDeleteProfileEvent.html",[81,0.321,2642,3.951]],["body/classes/SoftDeleteProfileEvent.html",[3,0.061,4,0.072,5,0.072,8,0.205,9,0.934,15,1.781,24,0.356,25,0.005,26,1.194,32,0.271,55,2.716,81,0.368,83,0.274,85,0.072,87,0.003,88,0.003,106,4.576,110,0.465,111,0.412,139,1.183,149,2.166,210,0.465,246,2.9,573,3.123,747,1.982,938,2.235,939,2.748,940,1.728,1017,0.465,1183,4.292,1185,3.301,1188,5.627,2642,5.931,2647,9.338,2648,5.204,2649,6.312,2650,5.204]],["title/classes/SoftDeleteProfileEventHandler.html",[81,0.321,2330,4.205]],["body/classes/SoftDeleteProfileEventHandler.html",[3,0.06,4,0.071,5,0.071,8,0.203,15,1.207,24,0.299,25,0.005,32,0.227,69,0.538,81,0.364,83,0.357,85,0.071,87,0.003,88,0.003,97,2.085,99,1.568,100,2.078,106,4.201,110,0.606,111,0.538,113,1.178,114,1.837,118,2.369,138,1.966,139,0.678,149,1.469,158,3.691,170,1.38,171,2.291,191,2.329,210,0.461,222,1.506,246,1.966,361,2.031,573,1.995,1017,0.461,1058,1.736,1147,5.32,1191,4.035,1192,3.611,1193,2.864,1194,2.864,1195,3.611,1196,2.928,1197,2.64,1198,2.747,1200,2.864,1201,2.928,1202,2.928,1489,4.255,2330,6.276,2598,5.159,2642,6.999,2643,4.485,2649,4.773,2651,8.439,2652,5.745]],["title/classes/SoftDeleteUserCommand.html",[81,0.321,2653,3.951]],["body/classes/SoftDeleteUserCommand.html",[3,0.072,4,0.085,5,0.085,8,0.244,9,1.043,24,0.336,25,0.005,26,1.195,32,0.255,81,0.437,83,0.326,85,0.085,87,0.004,88,0.004,106,4.307,110,0.553,111,0.491,139,1.085,210,0.553,403,3.703,747,1.679,1017,0.553,1216,4.878,1220,2.997,1332,3.872,1492,5.73,2653,6.624,2654,9.19,2655,6.897]],["title/classes/SoftDeleteUserCommandHandler.html",[81,0.321,2656,4.205]],["body/classes/SoftDeleteUserCommandHandler.html",[3,0.05,4,0.059,5,0.059,8,0.169,9,0.822,15,1.404,22,1.07,24,0.305,25,0.005,32,0.231,64,1.64,69,0.592,76,1.374,81,0.304,83,0.316,85,0.059,87,0.003,88,0.003,99,1.387,100,1.894,106,4.246,110,0.536,111,0.476,113,0.983,114,1.625,170,1.152,175,2.339,176,2.246,177,2.291,178,2.161,210,0.536,221,1.572,222,1.751,224,1.508,277,1.714,361,1.796,488,2.39,489,3.431,512,3.131,520,1.976,522,2.246,594,4.304,657,1.911,659,2.621,660,2.75,661,2.58,747,1.521,1017,0.385,1058,1.448,1059,3.754,1064,2.621,1067,3.133,1073,3.261,1075,2.246,1076,2.339,1134,4.317,1149,3.742,1150,3.027,1151,4.948,1152,3.133,1153,2.39,1223,5.938,1252,2.499,1262,3.331,1275,2.499,1297,4.086,1338,2.765,1437,2.623,1493,3.742,1672,3.253,2641,4.304,2643,3.742,2653,6.495,2656,5.551,2657,8.319,2658,3.742,2659,4.792,2660,4.792]],["title/classes/SoftDeleteUserEvent.html",[81,0.321,2658,3.951]],["body/classes/SoftDeleteUserEvent.html",[3,0.061,4,0.072,5,0.072,8,0.207,9,0.94,22,2.015,24,0.357,25,0.005,26,1.237,32,0.272,55,2.732,81,0.371,83,0.277,85,0.072,87,0.003,88,0.003,106,4.388,110,0.469,111,0.416,139,1.185,149,2.176,210,0.469,246,2.913,403,3.485,603,3.809,628,4.181,747,1.963,836,4.995,1017,0.469,1185,3.32,1220,2.54,1331,4.135,1332,3.282,1335,4.135,1504,5.659,1505,4.33,2658,5.965,2661,9.365]],["title/classes/SoftDeleteUserEventHandler.html",[81,0.321,2662,4.544]],["body/classes/SoftDeleteUserEventHandler.html",[3,0.06,4,0.071,5,0.071,8,0.203,15,1.207,22,1.283,24,0.299,25,0.005,32,0.227,69,0.538,81,0.364,83,0.357,85,0.071,87,0.003,88,0.003,97,2.085,99,1.568,100,2.078,106,4.201,110,0.606,111,0.538,113,1.178,114,1.837,118,2.369,138,1.966,139,0.678,149,1.469,158,3.691,170,1.38,171,2.291,191,2.329,210,0.461,222,1.506,246,1.966,361,2.031,1017,0.461,1058,1.736,1191,4.035,1192,3.611,1193,2.864,1194,2.864,1195,3.611,1196,2.928,1197,2.64,1198,2.747,1200,2.864,1201,2.928,1202,2.928,1338,5.171,1340,3.628,1489,4.255,2643,4.485,2649,4.773,2658,6.999,2662,6.783,2663,8.439,2664,5.745]],["title/entities/StripEventEntity.html",[0,1.592,473,3.579]],["body/entities/StripEventEntity.html",[0,2.577,2,2.686,3,0.068,4,0.08,5,0.08,6,3.559,8,0.23,9,1.101,15,1.882,24,0.258,25,0.005,26,1.021,27,2.229,32,0.196,55,2.329,69,0.415,74,4.116,76,1.867,81,0.519,83,0.388,85,0.08,87,0.004,88,0.004,473,6.647,474,6.393,577,5.85,747,1.772,915,3.915,1541,2.937,2633,5.85,2665,6.514,2666,6.514,2667,5.412,2668,6.514]],["title/entities/SubscriptionEntity.html",[0,1.592,476,3.003]],["body/entities/SubscriptionEntity.html",[0,1.532,2,1.289,3,0.033,4,0.039,5,0.039,6,4.058,8,0.11,9,0.736,13,2.51,14,2.75,15,1.539,21,2.554,22,1.635,24,0.392,25,0.005,26,0.842,27,3.159,28,4.779,32,0.278,35,2.809,37,4.355,38,3.311,43,4.253,51,2.282,55,1.118,64,2.655,69,0.494,70,3.796,71,2.804,72,2.861,73,3.36,74,1.436,75,2.804,76,0.896,78,1.593,81,0.309,82,1.526,83,0.347,85,0.039,87,0.002,88,0.002,111,0.552,289,1.803,313,1.912,447,5.265,449,2.211,455,5.265,466,5.265,476,2.89,561,5.374,571,4.972,579,2.315,747,1.925,833,1.974,869,2.211,882,3.306,894,3.445,895,3.076,915,3.709,918,1.526,923,1.526,1512,5.374,1513,5.374,1523,4.374,1524,4.374,1527,4.374,1534,6.576,1548,2.807,1549,2.807,1550,2.807,1822,2.315,2669,3.126,2670,5.984,2671,5.984,2672,5.984,2673,5.984,2674,3.126,2675,3.126,2676,4.87,2677,3.126,2678,3.126,2679,3.126,2680,4.87,2681,3.126,2682,4.87,2683,3.126,2684,3.126,2685,2.807,2686,3.126,2687,4.047,2688,4.374,2689,4.87,2690,4.87,2691,4.87,2692,4.87,2693,3.126,2694,4.87,2695,3.126,2696,3.126,2697,4.87,2698,3.126,2699,4.374,2700,3.126]],["title/classes/TimestampEntityExtendEntity.html",[81,0.321,2701,4.544]],["body/classes/TimestampEntityExtendEntity.html",[3,0.049,4,0.058,5,0.058,8,0.165,9,0.805,13,3.177,14,3.48,21,3.233,24,0.356,25,0.005,27,2.592,32,0.27,43,3.902,45,5.442,46,6.65,49,5.442,62,5.442,69,0.297,70,3.85,76,1.335,81,0.295,83,0.425,85,0.058,87,0.003,88,0.003,99,1.36,113,1.554,224,2.585,329,5.671,747,2.027,837,5.577,864,5.913,1017,0.374,1541,2.953,2667,6.293,2701,5.881,2702,9.223,2703,9.223,2704,4.658,2705,8.217,2706,8.217,2707,8.217,2708,4.658,2709,4.658,2710,6.549,2711,6.549,2712,4.658,2713,4.658,2714,4.658,2715,4.658,2716,4.658,2717,8.217,2718,6.549,2719,7.574]],["title/interfaces/TokenPayload.html",[769,3.748,2508,3.579]],["body/interfaces/TokenPayload.html",[3,0.079,4,0.093,5,0.093,8,0.266,9,1.1,24,0.298,25,0.004,26,1.189,85,0.093,87,0.004,88,0.004,403,3.813,769,6.623,2508,5.32,2509,5.872,2720,7.521,2721,7.521]],["title/classes/TransferProfileToUserCommand.html",[81,0.321,2722,4.544]],["body/classes/TransferProfileToUserCommand.html",[3,0.066,4,0.078,5,0.078,8,0.222,9,0.985,24,0.349,25,0.005,26,0.998,32,0.265,69,0.401,81,0.399,83,0.298,85,0.078,87,0.004,88,0.004,110,0.505,111,0.448,139,1.157,210,0.505,403,3.403,573,3.221,747,1.938,938,2.357,939,2.819,940,1.875,1017,0.505,1216,4.448,1219,5.225,2605,7.321,2722,7.192,2723,9.277,2724,8.811,2725,8.008,2726,6.288,2727,6.288]],["title/classes/UnauthorizedRequestException.html",[81,0.321,2728,4.544]],["body/classes/UnauthorizedRequestException.html",[3,0.075,4,0.089,5,0.089,25,0.005,32,0.216,69,0.457,81,0.455,85,0.089,87,0.004,88,0.004,120,3.575,122,1.952,210,0.75,611,4.255,635,4.563,784,6.438,1017,0.575,1141,4.154,1539,4.878,1541,3.917,2728,7.802,2729,8.688,2730,7.169,2731,7.169,2732,7.169]],["title/classes/UpdateOccupationsProfileCommand.html",[81,0.321,2378,3.951]],["body/classes/UpdateOccupationsProfileCommand.html",[3,0.067,4,0.079,5,0.079,8,0.226,9,0.997,15,1.868,24,0.352,25,0.005,26,1.164,32,0.268,81,0.407,83,0.303,85,0.079,87,0.004,88,0.004,110,0.514,111,0.456,139,1.162,210,0.514,747,1.947,817,5.932,938,2.385,939,2.836,940,1.911,1017,0.514,1123,4.747,1473,5.325,2378,6.328,2733,8.39,2734,8.106]],["title/classes/UpdateOccupationsProfileCommandHandler.html",[81,0.321,2325,4.205]],["body/classes/UpdateOccupationsProfileCommandHandler.html",[2,1.799,3,0.046,4,0.054,5,0.054,8,0.154,15,1.314,24,0.248,25,0.005,32,0.188,69,0.577,76,1.251,81,0.277,83,0.296,85,0.054,87,0.003,88,0.003,99,1.298,100,1.799,110,0.502,111,0.445,113,0.895,114,1.777,139,0.863,144,1.431,170,1.048,210,0.502,221,2.396,222,2.091,224,2.657,247,2.821,277,1.56,361,1.681,464,3.606,465,2.961,468,1.896,489,3.732,502,6.07,504,3.71,520,1.799,535,3.625,537,2.589,573,1.515,657,1.74,659,2.867,660,1.56,661,3.081,817,5.494,866,2.852,1017,0.35,1058,1.318,1059,3.566,1064,2.453,1073,3.051,1075,2.044,1076,2.129,1132,5.039,1133,2.668,1134,4.005,1138,2.589,1147,2.589,1150,3.948,1153,3.643,1157,3.918,1159,5.614,1160,3.918,1161,3.918,1162,3.918,1163,3.918,1171,2.129,1173,2.852,1233,3.625,1437,2.387,1479,3.086,1480,4.63,1481,3.231,2214,3.086,2325,5.194,2378,6.229,2735,6.561,2736,2.961,2737,4.881,2738,2.668,2739,4.363,2740,4.363,2741,4.363,2742,3.918,2743,3.918,2744,4.363]],["title/classes/UpdateOccupationsProfileDto.html",[81,0.321,2745,4.544]],["body/classes/UpdateOccupationsProfileDto.html",[3,0.069,4,0.082,5,0.082,8,0.233,9,1.015,24,0.327,25,0.005,32,0.249,69,0.421,81,0.419,83,0.312,85,0.082,87,0.004,88,0.004,110,0.53,111,0.641,139,1.064,210,0.53,747,1.783,817,5.348,935,4.037,938,2.43,939,2.861,940,1.968,1017,0.53,1175,5.153,1176,5.691,1179,5.691,1180,6.86,1181,4.315,2745,7.415,2746,8.092]],["title/classes/UpdateOccupationsProfileEvent.html",[81,0.321,2737,3.951]],["body/classes/UpdateOccupationsProfileEvent.html",[3,0.058,4,0.068,5,0.068,8,0.195,9,0.905,24,0.364,25,0.005,26,1.222,32,0.277,55,2.631,81,0.35,83,0.261,85,0.068,87,0.003,88,0.003,110,0.443,111,0.393,139,1.202,149,2.116,210,0.443,246,2.832,573,3.064,747,2.014,817,5.818,938,2.165,939,2.705,940,1.647,1017,0.443,1183,4.09,1185,3.198,1187,5.745,1188,4.09,2214,5.854,2637,4.648,2648,4.959,2650,4.959,2737,5.745,2743,7.432,2747,8.49]],["title/classes/UpdateOccupationsProfileEventHandler.html",[81,0.321,2338,4.205]],["body/classes/UpdateOccupationsProfileEventHandler.html",[3,0.059,4,0.07,5,0.07,8,0.2,15,1.572,24,0.296,25,0.005,32,0.225,69,0.534,81,0.359,83,0.354,85,0.07,87,0.003,88,0.003,97,2.056,99,1.554,100,2.064,110,0.601,111,0.533,113,1.162,114,1.82,118,2.335,138,1.938,139,0.669,149,1.448,158,3.677,170,1.361,171,2.259,191,2.296,210,0.455,222,1.485,246,1.938,361,2.012,569,4.195,573,1.966,817,5.29,1017,0.455,1058,1.711,1147,5.29,1191,4.006,1192,3.577,1193,2.824,1194,2.824,1195,3.577,1197,2.602,1198,2.708,1200,2.824,1201,2.886,1202,2.886,1486,3.361,2338,6.217,2737,6.96,2738,3.464,2748,7.525,2749,5.663,2750,5.663,2751,4.195,2752,5.663]],["title/classes/UpdateProfileCommand.html",[81,0.321,2373,3.748]],["body/classes/UpdateProfileCommand.html",[3,0.067,4,0.079,5,0.079,8,0.225,9,0.993,15,1.863,24,0.351,25,0.005,26,1.006,32,0.267,69,0.406,81,0.404,83,0.301,85,0.079,87,0.004,88,0.004,110,0.511,111,0.453,139,1.161,210,0.511,747,1.944,938,2.376,939,2.83,940,1.899,1017,0.511,1123,4.717,1127,7.25,1128,5.719,1129,5.719,2373,5.979,2391,7.672,2733,8.37,2753,4.717]],["title/classes/UpdateProfileCommandHandler.html",[81,0.321,2329,4.205]],["body/classes/UpdateProfileCommandHandler.html",[3,0.053,4,0.063,5,0.063,8,0.18,15,1.072,24,0.276,25,0.005,32,0.21,69,0.588,76,1.462,81,0.323,83,0.33,85,0.063,87,0.003,88,0.003,99,1.448,100,1.957,110,0.56,111,0.496,113,1.046,114,1.696,139,0.823,170,1.225,210,0.56,221,2.287,222,1.828,224,2.5,247,1.969,277,1.823,361,1.874,468,2.216,489,3.522,504,4.138,520,2.103,537,3.026,573,1.77,657,2.033,659,2.736,660,1.823,661,2.692,1017,0.409,1058,1.541,1059,3.878,1064,2.736,1073,3.403,1075,3.267,1076,2.489,1132,5.395,1133,3.119,1134,4.184,1138,3.026,1147,3.026,1150,3.22,1153,2.542,1171,2.489,1173,3.334,1196,2.599,1476,3.607,1479,3.607,1480,3.777,1481,3.777,2329,5.793,2373,6.625,2735,7.136,2736,3.461,2738,3.119,2742,4.579,2754,5.444,2755,5.099,2756,5.099]],["title/classes/UpdateProfileDto.html",[81,0.321,2391,3.951]],["body/classes/UpdateProfileDto.html",[3,0.07,4,0.083,5,0.083,8,0.236,9,1.024,24,0.33,25,0.005,26,1.038,32,0.251,69,0.426,81,0.424,85,0.083,87,0.004,88,0.004,111,0.675,139,1.175,747,1.968,935,4.091,1017,0.537,1175,5.222,1176,5.726,1177,5.545,1178,6.007,1179,5.726,1180,5.557,1181,4.373,2391,6.5,2746,8.141]],["title/classes/UpdateProfileEvent.html",[81,0.321,2754,3.951]],["body/classes/UpdateProfileEvent.html",[3,0.061,4,0.072,5,0.072,8,0.205,9,0.936,24,0.357,25,0.005,26,1.122,32,0.271,55,2.722,69,0.37,81,0.369,83,0.275,85,0.072,87,0.003,88,0.003,110,0.466,111,0.414,139,1.184,149,2.17,210,0.466,246,2.904,573,3.127,747,1.983,938,2.24,939,2.751,940,1.733,1017,0.466,1132,3.671,1183,4.305,1184,6.324,1185,3.307,1187,4.537,1188,4.305,2373,7.103,2637,4.807,2736,3.945,2747,8.394,2754,5.942]],["title/classes/UpdateProfileEventHandler.html",[81,0.321,2327,4.205]],["body/classes/UpdateProfileEventHandler.html",[3,0.061,4,0.072,5,0.072,8,0.206,15,1.225,24,0.302,25,0.005,32,0.23,69,0.542,81,0.37,83,0.361,85,0.072,87,0.003,88,0.003,97,2.116,99,1.583,100,2.093,110,0.612,111,0.543,113,1.196,114,1.855,118,2.404,138,1.995,139,0.688,149,1.49,158,3.706,170,1.401,171,2.325,191,2.363,210,0.468,222,1.528,246,1.995,361,2.05,573,2.024,1017,0.468,1058,1.761,1147,5.35,1191,4.063,1192,3.646,1193,2.906,1194,2.906,1195,3.646,1196,2.971,1197,2.678,1198,2.787,1200,2.906,1201,2.971,1202,2.971,2327,6.336,2738,3.565,2748,7.632,2751,4.317,2754,7.038,2757,5.829,2758,5.829]],["title/classes/UpdateProfileRequest.html",[81,0.321,2203,3.951]],["body/classes/UpdateProfileRequest.html",[3,0.06,4,0.071,5,0.071,8,0.204,9,0.932,24,0.37,25,0.005,26,1.193,32,0.281,69,0.368,81,0.366,83,0.273,85,0.071,87,0.003,88,0.003,110,0.464,111,0.411,139,1.21,210,0.464,747,2.027,935,3.534,938,2.231,939,2.745,940,1.723,1017,0.464,1125,6.607,1176,5.345,1177,5.176,1179,5.345,1181,3.778,1208,5.189,1209,7.6,1210,6.809,1211,5.189,1212,5.189,1213,5.189,2203,5.92,2759,9.575]],["title/classes/UpdateUserCommand.html",[81,0.321,2760,3.951]],["body/classes/UpdateUserCommand.html",[3,0.067,4,0.079,5,0.079,8,0.226,9,0.995,22,2.15,24,0.352,25,0.005,26,1.163,32,0.267,69,0.407,81,0.405,83,0.302,85,0.079,87,0.004,88,0.004,110,0.513,111,0.455,139,1.162,210,0.513,403,3.603,412,4.337,747,1.904,1017,0.513,1216,4.519,1218,5.737,1219,6.721,1220,2.776,1332,3.587,2753,4.732,2760,6.316,2761,7.753,2762,7.13]],["title/classes/UpdateUserCommandHandler.html",[81,0.321,2763,4.205]],["body/classes/UpdateUserCommandHandler.html",[3,0.026,4,0.031,5,0.031,8,0.089,9,0.506,15,0.864,22,1.161,24,0.318,25,0.005,26,1.135,32,0.242,38,1.755,53,2.919,64,2.05,69,0.549,76,0.725,81,0.261,82,1.234,83,0.367,85,0.031,87,0.002,88,0.002,99,0.854,100,2.189,110,0.623,111,0.553,112,2.389,113,1.528,114,1.952,144,2.317,170,0.607,175,1.234,176,1.184,177,1.208,178,2.344,210,0.33,221,3.019,222,2.388,224,2.442,247,2.313,277,0.904,293,1.35,361,1.106,488,1.26,489,2.47,512,1.927,520,1.042,522,1.184,586,3.256,595,3.529,597,3.046,600,2.791,627,2.597,651,2.597,657,1.008,659,0.992,660,2.527,661,2.545,747,1.028,837,4.475,866,1.653,946,3.363,1017,0.203,1058,0.764,1059,2.537,1064,1.614,1073,2.007,1075,1.184,1076,1.234,1134,3.651,1140,2.791,1141,1.966,1151,3.046,1152,1.653,1153,1.26,1165,1.973,1167,1.973,1171,2.537,1223,5.731,1228,3.417,1229,3.417,1230,3.417,1232,3.417,1233,2.1,1242,3.417,1244,3.417,1246,2.1,1250,3.417,1252,1.318,1253,2.909,1254,2.909,1255,1.973,1256,2.909,1257,1.973,1262,2.987,1275,2.711,1276,3.417,1277,2.791,1278,2.791,1297,3.18,1309,3.417,1310,3.417,1311,2.1,1312,2.1,1314,3.417,1315,1.973,1338,1.458,1489,3.046,1495,2.27,1718,1.788,1764,1.973,2482,1.872,2736,1.716,2738,1.546,2760,4.677,2763,4.32,2764,6.855,2765,4.112,2766,4.112,2767,2.27,2768,2.528,2769,2.528,2770,2.528,2771,2.528,2772,4.112,2773,2.528,2774,2.528,2775,2.528,2776,2.528,2777,2.528,2778,2.528,2779,1.973,2780,2.528,2781,2.528,2782,2.528,2783,2.528,2784,2.528,2785,2.528,2786,2.528,2787,2.528,2788,2.528,2789,2.528,2790,2.528,2791,5.99,2792,2.528,2793,4.112,2794,2.528,2795,4.112,2796,4.112,2797,2.528]],["title/classes/UpdateUserCredentialCommand.html",[81,0.321,2798,3.951]],["body/classes/UpdateUserCredentialCommand.html",[3,0.066,4,0.077,5,0.077,8,0.221,9,0.983,22,2.137,24,0.348,25,0.005,26,0.996,32,0.265,69,0.399,81,0.398,83,0.297,85,0.077,87,0.004,88,0.004,110,0.503,111,0.446,139,1.156,210,0.503,403,3.398,747,1.936,938,2.352,939,2.817,940,1.869,1017,0.503,2753,4.643,2761,7.699,2798,6.24,2799,6.268,2800,7.248,2801,7.992,2802,6.268,2803,5.208]],["title/classes/UpdateUserCredentialCommandHandler.html",[81,0.321,2804,4.205]],["body/classes/UpdateUserCredentialCommandHandler.html",[3,0.039,4,0.046,5,0.046,8,0.132,9,0.685,15,1.171,22,2.09,24,0.293,25,0.005,26,1.128,32,0.238,53,3.128,64,1.275,69,0.564,76,1.068,81,0.236,83,0.35,85,0.046,87,0.002,88,0.002,99,1.157,100,2.047,110,0.594,111,0.527,113,1.368,114,1.8,144,1.827,170,0.896,175,1.819,176,1.747,177,1.782,178,1.68,210,0.447,221,3.069,222,2.077,224,2.615,247,1.439,277,1.333,361,1.498,488,1.858,489,3.052,512,2.61,520,1.537,521,3.781,522,1.747,589,3.884,595,2.53,657,1.486,659,1.462,660,2.647,661,3.059,686,3.347,766,2.91,803,5.003,1017,0.299,1058,1.126,1059,3.256,1064,2.186,1071,4.629,1073,2.719,1075,1.747,1076,1.819,1134,3.812,1151,2.761,1152,2.437,1153,1.858,1171,1.819,1224,5.542,1231,4.629,1248,4.629,1252,1.943,1262,2.778,1268,3.097,1270,3.097,1275,1.943,1297,2.28,1313,3.097,1720,2.636,1748,5.003,1749,5.003,1750,6.647,1759,3.347,2482,2.761,2541,3.097,2542,4.629,2736,2.53,2738,2.28,2764,6.906,2767,3.347,2798,5.778,2804,5.542,2805,7.158,2806,3.727,2807,3.727,2808,2.91,2809,3.347,2810,3.727,2811,3.727,2812,5.571,2813,3.727,2814,5.571,2815,3.727,2816,3.727,2817,3.727,2818,3.727,2819,3.727]],["title/classes/UpdateUserCredentialDto.html",[81,0.321,2800,3.748]],["body/classes/UpdateUserCredentialDto.html",[3,0.064,4,0.075,5,0.075,8,0.215,9,0.964,22,2.117,24,0.363,25,0.005,26,1.21,32,0.276,81,0.385,83,0.288,85,0.075,87,0.003,88,0.003,110,0.488,111,0.433,139,1.194,210,0.488,586,3.637,589,3.909,747,2,938,2.306,939,2.79,940,1.812,1017,0.488,2800,5.803,2820,8.514,2821,6.077,2822,8.671,2823,7.835,2824,6.077,2825,6.077]],["title/classes/UpdateUserCredentialEvent.html",[81,0.321,2808,3.951]],["body/classes/UpdateUserCredentialEvent.html",[3,0.062,4,0.073,5,0.073,8,0.208,9,0.943,22,2.243,24,0.358,25,0.005,26,1.238,32,0.272,55,2.742,81,0.373,83,0.278,85,0.073,87,0.003,88,0.003,110,0.472,111,0.419,139,1.187,149,2.182,210,0.472,246,2.921,403,3.493,747,1.966,1017,0.472,1185,3.333,1220,2.555,1332,3.302,2637,4.844,2808,5.988,2826,7.796,2827,5.88,2828,7.669,2829,7.669,2830,5.88,2831,5.88]],["title/classes/UpdateUserCredentialEventHandler.html",[81,0.321,2832,4.544]],["body/classes/UpdateUserCredentialEventHandler.html",[3,0.06,4,0.071,5,0.071,8,0.204,15,1.211,22,2.081,24,0.3,25,0.005,32,0.228,69,0.538,81,0.365,83,0.358,85,0.071,87,0.003,88,0.003,97,2.091,99,1.571,100,2.081,110,0.607,111,0.539,113,1.182,114,1.841,118,2.376,138,1.972,139,0.68,149,1.473,158,3.694,170,1.384,171,2.298,191,2.336,210,0.462,222,1.51,246,1.972,361,2.034,1017,0.462,1058,1.741,1191,4.04,1192,3.618,1193,2.873,1194,2.873,1195,3.618,1196,2.937,1197,2.648,1198,2.755,1200,2.873,1201,2.937,1202,2.937,1340,3.639,2738,3.524,2751,4.267,2808,7.007,2809,8.059,2832,6.796,2833,7.022,2834,5.761]],["title/classes/UpdateUserDto.html",[81,0.321,2762,3.748]],["body/classes/UpdateUserDto.html",[3,0.067,4,0.079,5,0.079,8,0.226,9,0.995,24,0.352,25,0.005,26,1.226,27,2.768,30,3.792,32,0.267,69,0.407,79,5.607,81,0.513,82,3.118,85,0.079,87,0.004,88,0.004,111,0.7,112,3.54,586,3.724,589,4.002,905,5.992,1017,0.513,1316,5.308,1324,5.308,1325,5.737,1328,6.721,2614,5.737,2762,5.992,2820,8.38,2835,6.389,2836,6.389,2837,6.389]],["title/classes/UpdateUserEvent.html",[81,0.321,2779,3.951]],["body/classes/UpdateUserEvent.html",[3,0.063,4,0.074,5,0.074,8,0.212,9,0.956,22,2.036,24,0.361,25,0.005,26,1.244,32,0.274,55,2.78,81,0.381,83,0.284,85,0.074,87,0.003,88,0.003,110,0.482,111,0.427,139,1.191,149,2.204,210,0.482,246,2.95,403,3.521,747,1.974,1017,0.482,1185,3.378,1220,2.609,1331,4.247,1332,3.371,1335,4.247,1504,5.758,1505,4.447,2637,4.91,2779,6.069,2826,7.847]],["title/classes/UpdateUserEventHandler.html",[81,0.321,2838,4.205]],["body/classes/UpdateUserEventHandler.html",[3,0.062,4,0.073,5,0.073,8,0.208,15,1.239,22,1.317,24,0.304,25,0.005,32,0.231,69,0.545,81,0.374,83,0.364,85,0.073,87,0.003,88,0.003,97,2.141,99,1.595,110,0.617,111,0.547,113,1.21,118,2.432,138,2.018,139,0.697,149,1.508,158,3.718,170,1.417,171,2.352,191,2.391,210,0.473,246,2.018,329,4.853,361,2.066,1017,0.473,1058,1.782,1191,4.087,1192,3.674,1193,2.941,1194,2.941,1195,3.674,1196,3.006,1197,2.71,1198,2.82,1200,2.941,1201,3.006,1202,3.006,1338,5.224,1340,3.725,2738,3.607,2751,4.368,2779,7.07,2833,7.102,2838,6.385,2839,5.898]],["title/classes/UpdateUserRoleCommand.html",[81,0.321,2840,3.748]],["body/classes/UpdateUserRoleCommand.html",[3,0.066,4,0.078,5,0.078,8,0.222,9,0.985,22,2.071,24,0.349,25,0.005,26,0.998,32,0.265,69,0.401,81,0.399,83,0.298,85,0.078,87,0.004,88,0.004,110,0.505,111,0.448,133,4.491,135,3.357,139,1.157,210,0.505,403,3.403,592,4.301,747,1.938,938,2.357,939,2.819,940,1.875,1017,0.505,1261,4.909,2761,7.708,2840,5.931,2841,6.288,2842,8.008,2843,6.288]],["title/classes/UpdateUserRoleCommandHandler.html",[81,0.321,2844,4.205]],["body/classes/UpdateUserRoleCommandHandler.html",[3,0.053,4,0.063,5,0.063,8,0.18,22,2.06,24,0.276,25,0.005,32,0.21,64,1.74,69,0.602,76,1.458,81,0.323,83,0.329,85,0.063,87,0.003,88,0.003,99,1.445,100,1.954,110,0.559,111,0.495,113,1.043,114,1.693,170,1.222,175,2.482,176,2.383,177,2.432,178,2.293,210,0.559,221,2.283,222,1.825,224,2.19,277,1.819,361,1.871,488,2.536,489,3.519,512,3.262,520,2.097,522,2.383,592,2.482,657,2.028,659,1.996,660,2.838,661,1.964,1017,0.408,1058,1.537,1059,3.873,1064,2.731,1073,3.397,1075,2.383,1076,2.482,1134,4.181,1171,2.482,1252,2.652,1262,3.47,1275,2.652,1297,3.111,1437,2.783,1672,3.452,2482,3.767,2736,3.452,2738,3.111,2764,6.593,2840,6.32,2844,6.593,2845,6.662,2846,3.971,2847,4.567,2848,5.086,2849,5.086,2850,5.086,2851,5.086]],["title/classes/UpdateUserRoleEvent.html",[81,0.321,2846,3.951]],["body/classes/UpdateUserRoleEvent.html",[3,0.06,4,0.071,5,0.071,8,0.204,9,0.931,22,2.255,24,0.355,25,0.005,26,1.118,32,0.27,55,2.706,69,0.367,81,0.365,83,0.273,85,0.071,87,0.003,88,0.003,110,0.462,111,0.41,139,1.182,149,2.16,210,0.462,246,2.892,747,1.957,1017,0.462,1185,3.289,1220,2.504,1779,5.908,2637,4.78,2736,3.911,2826,7.745,2840,7.413,2845,4.498,2846,5.908,2852,5.761,2853,5.761,2854,7.567,2855,5.761,2856,5.761]],["title/classes/UpdateUserRoleEventHandler.html",[81,0.321,2857,4.544]],["body/classes/UpdateUserRoleEventHandler.html",[3,0.059,4,0.07,5,0.07,8,0.201,15,1.194,22,2.072,24,0.297,25,0.005,32,0.226,69,0.535,81,0.36,83,0.355,85,0.07,87,0.003,88,0.003,97,2.061,99,1.556,100,2.067,110,0.602,111,0.534,113,1.165,114,1.824,118,2.342,138,1.944,139,0.671,149,1.452,158,3.68,170,1.365,171,2.265,191,2.303,210,0.456,222,1.489,246,1.944,361,2.015,1017,0.456,1058,1.716,1191,4.012,1192,3.584,1193,2.832,1194,2.832,1195,3.584,1196,2.895,1197,2.61,1198,2.715,1200,2.832,1201,2.895,1202,2.895,1779,4.434,2738,3.474,2751,4.207,2833,6.972,2846,6.967,2847,8.014,2857,6.732,2858,5.679,2859,5.679,2860,5.679]],["title/controllers/UserController.html",[89,2.639,2861,4.205]],["body/controllers/UserController.html",[3,0.019,4,0.022,5,0.022,8,0.064,15,1.476,22,1.421,24,0.313,25,0.005,26,1.024,27,2.762,32,0.243,69,0.524,81,0.114,83,0.374,85,0.022,87,0.001,88,0.001,89,0.939,91,0.879,96,1.273,99,0.643,100,2.4,106,0.844,110,0.635,111,0.563,112,0.718,113,1.655,114,2.267,118,2.452,119,1.177,121,1.333,122,0.49,127,1.222,128,0.985,131,1.273,132,1.405,133,0.917,135,0.961,138,0.616,139,0.213,143,5.977,144,2.695,159,2.416,222,2.073,224,2.539,242,1.273,247,0.695,258,1.333,263,1.333,390,3.887,394,3.773,403,1.866,412,2.763,415,1.617,421,4.251,567,5.097,589,0.812,592,1.987,608,6.289,635,4.011,636,2.879,641,1.333,651,1.137,657,3.218,659,3.167,660,2.886,661,3.053,1258,1.333,1259,1.496,1260,1.405,1261,1.405,1295,3.58,1298,2.571,1628,5.708,1634,4.642,1686,1.405,1687,1.405,1764,1.405,1773,4.404,2039,4.016,2204,1.617,2219,2.779,2234,4.34,2239,1.617,2240,1.617,2243,1.496,2251,1.617,2487,2.571,2637,2.571,2753,2.292,2762,6.086,2800,4.977,2803,1.496,2861,2.571,2862,1.8,2863,2.779,2864,4.34,2865,2.779,2866,3.656,2867,2.779,2868,2.779,2869,2.779,2870,2.779,2871,4.071,2872,3.656,2873,3.095,2874,1.617,2875,1.8,2876,1.8,2877,1.8,2878,1.8,2879,4.071,2880,1.8,2881,1.8,2882,1.8,2883,1.617,2884,1.8,2885,1.8,2886,1.617,2887,1.8,2888,1.8,2889,1.617,2890,1.8,2891,1.8,2892,1.8,2893,1.617,2894,3.095,2895,1.8,2896,1.8,2897,1.8,2898,1.8,2899,1.8,2900,1.8,2901,1.8,2902,1.617,2903,1.8,2904,1.8,2905,1.8,2906,1.617,2907,1.8,2908,1.8,2909,1.8,2910,1.8,2911,1.8,2912,1.8,2913,1.8,2914,1.8,2915,1.8,2916,1.8,2917,1.617,2918,1.617,2919,1.8,2920,1.8,2921,1.8,2922,1.8,2923,1.8,2924,1.8,2925,1.8,2926,8.07,2927,1.8,2928,1.8,2929,1.8,2930,1.8,2931,1.8,2932,1.8,2933,1.8,2934,1.8,2935,1.8,2936,1.8,2937,1.8,2938,1.8,2939,1.8,2940,1.8,2941,3.095,2942,1.8,2943,1.8,2944,1.8,2945,1.8,2946,1.8,2947,1.8,2948,1.8,2949,1.8,2950,1.8,2951,1.8,2952,1.8,2953,1.8,2954,1.8,2955,1.8,2956,1.8,2957,1.8,2958,1.8]],["title/entities/UserEntity.html",[0,1.592,64,1.732]],["body/entities/UserEntity.html",[0,1.278,1,3.881,2,2.697,3,0.026,4,0.031,5,0.031,8,0.088,9,0.633,13,2.158,14,2.364,15,1.081,21,2.196,22,1.652,24,0.37,25,0.005,26,1.104,27,3.196,32,0.281,37,4.719,38,4.071,40,3.523,43,3.049,51,1.904,53,3.333,55,2.123,64,1.39,69,0.492,70,3.741,71,2.411,72,2.46,74,1.144,75,2.411,76,0.714,81,0.258,83,0.118,84,5.196,85,0.031,87,0.002,88,0.002,111,0.584,112,2.052,133,2.622,135,1.329,289,2.968,293,1.329,399,3.375,449,1.761,468,2.58,476,3.523,477,1.944,478,3.75,479,1.844,480,5.023,481,1.844,482,1.944,573,1.41,579,3.009,581,2.873,586,2.158,589,2.949,592,2.511,747,1.696,829,1.944,833,4.431,843,3.171,844,3.171,853,3.648,854,5.238,895,4.674,897,1.573,915,2.838,918,1.215,923,1.215,938,0.733,939,1.514,940,0.742,943,4.621,946,3.333,998,4.275,1241,5.777,1295,1.844,1327,1.69,1397,3.648,1430,3.648,1514,4.275,1541,1.123,1664,3.147,1720,4.199,1740,4.017,1822,4.397,1886,3.648,1917,1.69,2447,3.648,2585,3.648,2667,3.375,2685,4.621,2687,4.933,2688,5.331,2959,2.49,2960,5.145,2961,5.145,2962,5.145,2963,5.145,2964,5.145,2965,4.062,2966,2.49,2967,2.49,2968,4.062,2969,2.49,2970,2.49,2971,2.49,2972,2.49,2973,5.936,2974,4.062,2975,4.062,2976,2.49,2977,5.331,2978,6.54,2979,2.49,2980,2.49,2981,4.062,2982,2.49,2983,2.49,2984,2.49,2985,2.49,2986,4.062,2987,2.49,2988,2.49,2989,4.062,2990,2.49,2991,2.49,2992,4.062,2993,2.49,2994,2.49,2995,2.49,2996,2.236,2997,4.062]],["title/interfaces/UserIdDto.html",[394,3.951,2508,3.579]],["body/interfaces/UserIdDto.html",[3,0.079,4,0.093,5,0.093,8,0.266,9,1.1,24,0.298,25,0.004,26,1.189,85,0.093,87,0.004,88,0.004,394,6.981,403,3.813,414,6.249,2508,5.32,2509,5.872,2998,7.521]],["title/classes/UserListResponse.html",[81,0.321,1765,4.205]],["body/classes/UserListResponse.html",[3,0.069,4,0.081,5,0.081,8,0.232,9,1.013,24,0.326,25,0.005,32,0.248,69,0.419,81,0.417,83,0.311,85,0.081,87,0.004,88,0.004,110,0.528,111,0.468,210,0.528,399,7.475,651,6.258,747,1.78,1017,0.528,1260,5.136,1345,4.872,1765,6.846,2999,8.08,3000,6.578,3001,8.997,3002,8.239,3003,8.239,3004,8.239]],["title/classes/UserLoginDto.html",[81,0.321,3005,4.544]],["body/classes/UserLoginDto.html",[3,0.063,4,0.075,5,0.075,8,0.213,9,0.96,24,0.342,25,0.005,26,1.269,27,2.671,32,0.26,69,0.385,81,0.383,83,0.286,85,0.075,87,0.003,88,0.003,110,0.485,111,0.43,128,3.305,139,1.145,210,0.485,414,7.593,589,4.446,747,1.917,752,7.009,1017,0.485,1031,6.693,3005,7.009,3006,6.04,3007,7.804,3008,6.04,3009,6.04,3010,6.04,3011,6.04,3012,6.04]],["title/classes/UserLoginResponse.html",[81,0.321,648,3.951]],["body/classes/UserLoginResponse.html",[3,0.05,4,0.059,5,0.059,8,0.168,9,0.819,13,3.218,15,1.612,21,3.275,24,0.381,25,0.005,26,1.215,32,0.29,43,3.608,64,1.632,69,0.424,81,0.303,83,0.226,85,0.059,87,0.003,88,0.003,110,0.383,111,0.661,133,3.91,135,2.547,139,1.214,210,0.383,586,3.218,589,3.458,592,3.744,628,4.198,648,5.198,747,2.068,938,1.959,939,2.662,940,1.422,946,4.307,1017,0.383,1327,3.238,1345,3.533,2999,8.752,3013,4.77,3014,4.77,3015,4.77,3016,4.77,3017,4.77,3018,4.77,3019,4.77,3020,4.77,3021,4.77,3022,4.77,3023,4.77]],["title/modules/UserModule.html",[149,1.294,157,3.435]],["body/modules/UserModule.html",[3,0.037,4,0.043,5,0.043,22,1.886,25,0.005,64,1.204,69,0.657,81,0.223,83,0.166,85,0.043,87,0.002,88,0.002,91,2.603,97,2.338,106,1.648,122,0.958,149,1.363,151,1.975,152,2.994,156,4.973,157,6.166,158,3.14,159,4.826,160,3.262,161,2.151,162,2.151,164,3.262,165,3.262,166,2.387,167,3.62,168,1.975,169,3.486,170,0.845,171,2.127,172,2.387,178,4.53,180,2.922,183,2.922,186,6.756,188,3.486,189,2.488,190,2.299,191,1.426,194,2.387,195,2.387,196,2.387,197,2.387,198,2.299,230,2.922,238,2.605,276,2.387,277,1.258,278,2.746,603,3.852,628,1.924,732,4.163,734,2.746,776,2.746,1075,1.648,1197,1.616,1221,4.431,1223,5.244,1252,1.834,1336,4.431,1338,4.146,1493,4.163,1506,4.431,1643,2.029,1689,2.488,1714,4.431,1716,3.158,1727,4.431,1728,3.158,1737,4.431,1738,2.922,1763,4.431,1794,4.431,2063,4.431,2326,5.784,2328,3.158,2332,3.158,2337,3.158,2339,3.158,2340,5.784,2477,4.431,2479,4.163,2490,4.431,2492,4.431,2517,4.431,2565,3.772,2566,4.431,2573,4.431,2656,4.431,2763,4.431,2804,4.431,2805,2.922,2838,4.431,2844,4.431,2845,2.746,2861,5.352,2917,3.158,3024,3.517,3025,3.517,3026,3.517,3027,3.517,3028,3.517,3029,3.517,3030,3.517,3031,3.517,3032,3.517,3033,3.517,3034,3.517]],["title/classes/UserNotFoundException.html",[81,0.321,2370,3.951]],["body/classes/UserNotFoundException.html",[3,0.075,4,0.089,5,0.089,25,0.005,32,0.216,69,0.457,81,0.455,85,0.089,87,0.004,88,0.004,120,3.575,122,1.952,210,0.75,635,4.563,708,4.136,1017,0.575,1141,4.154,1153,3.575,1539,4.878,1541,3.917,2370,6.783,2371,7.219,3035,7.169,3036,7.169,3037,7.169]],["title/classes/UserResponse.html",[81,0.321,651,3.196]],["body/classes/UserResponse.html",[3,0.06,4,0.071,5,0.071,8,0.203,9,0.929,15,1.773,24,0.369,25,0.005,26,1.191,32,0.28,69,0.366,81,0.364,83,0.272,85,0.071,87,0.003,88,0.003,110,0.461,111,0.663,112,3.366,133,4.301,135,3.067,139,1.209,210,0.461,586,3.54,592,4.119,651,4.771,747,2.026,938,2.223,939,2.813,940,1.713,1017,0.461,1327,3.899,1345,4.255,3038,5.745,3039,5.745,3040,5.745,3041,5.745,3042,5.745,3043,5.745]],["title/injectables/UserService.html",[159,3.003,207,1.757]],["body/injectables/UserService.html",[3,0.017,4,0.02,5,0.02,8,0.056,15,1.062,22,1.65,24,0.324,25,0.005,26,1.221,30,0.948,32,0.253,69,0.587,81,0.101,83,0.387,85,0.02,87,0.001,88,0.001,93,0.874,97,0.58,99,0.579,100,2.433,106,0.748,110,0.657,111,0.582,112,2.216,113,1.703,114,2.285,122,0.435,133,2.269,135,0.853,138,0.547,139,0.329,144,2.723,159,1.656,170,0.384,181,1.044,207,0.969,208,0.763,210,0.128,211,1.183,212,3.93,213,4.23,217,1.973,218,1.327,220,3.086,221,1.46,222,2.256,223,2.066,224,2.708,225,4.931,242,1.13,245,1.327,247,0.617,390,3.633,403,3.356,412,2.521,586,0.67,589,2.279,592,2.712,603,1.852,608,1.084,628,1.527,641,1.183,651,1.009,657,2.53,659,2.489,660,2.829,661,3.356,774,2.066,776,1.247,778,6.225,866,1.044,1140,3.772,1141,2.657,1142,0.921,1152,1.824,1153,2.771,1214,2.178,1223,3.431,1253,2.627,1254,1.973,1255,1.247,1256,3.15,1257,1.247,1258,1.183,1259,1.327,1260,1.247,1261,1.247,1263,2.751,1264,2.318,1277,3.022,1278,3.022,1282,1.973,1295,1.183,1298,2.318,1432,1.434,1490,2.178,1592,2.318,1628,5.074,1634,4.338,1686,1.247,1687,1.247,1689,1.13,1731,1.247,1733,1.247,1738,1.327,1764,1.247,1773,3.744,1791,2.178,2080,2.318,2081,1.434,2084,2.178,2243,1.327,2370,4.669,2371,1.327,2372,1.434,2374,3.336,2377,1.434,2472,1.247,2479,2.178,2487,2.318,2515,2.178,2538,2.318,2539,1.434,2541,1.327,2542,2.318,2563,1.247,2565,1.13,2637,1.762,2653,1.247,2753,2.066,2760,1.247,2762,4.698,2798,2.178,2800,4.931,2803,1.327,2805,1.327,2840,2.066,2845,1.247,2863,2.505,2864,3.999,2865,2.505,2866,2.505,2867,2.505,2868,2.505,2869,2.505,2870,2.505,2872,2.505,2874,2.505,2883,2.505,2886,2.505,2889,2.505,2893,2.505,2902,2.505,2906,2.505,2918,1.434,3044,1.597,3045,2.79,3046,4.453,3047,2.79,3048,2.79,3049,2.79,3050,2.79,3051,1.597,3052,1.597,3053,2.79,3054,1.597,3055,1.597,3056,2.79,3057,1.597,3058,1.597,3059,1.597,3060,1.597,3061,1.597,3062,1.597,3063,2.79,3064,1.597,3065,2.79,3066,1.597,3067,2.79,3068,1.597,3069,2.79,3070,1.597,3071,1.597,3072,2.79,3073,1.597,3074,1.597,3075,2.79,3076,1.597,3077,2.79,3078,1.597,3079,1.597,3080,1.597,3081,1.597,3082,1.597,3083,1.597,3084,1.597,3085,1.597,3086,1.597,3087,1.597,3088,1.597,3089,1.597,3090,1.597,3091,1.597,3092,2.79,3093,3.714,3094,1.597,3095,2.79,3096,1.597,3097,4.453,3098,1.597,3099,1.597,3100,1.597]],["title/changelog.html",[3101,3.119,3102,3.119,3103,4.211]],["body/changelog.html",[0,2.451,2,2.483,22,1.345,25,0.003,87,0.003,88,0.003,93,3.295,97,3.313,98,4.702,112,2.402,149,2.334,238,5.769,306,5.004,378,6.107,573,2.091,581,4.26,591,5.51,600,5.287,627,3.804,752,4.461,1186,5.004,1302,4.702,2250,5.004,2637,3.804,3104,9.987,3105,9.987,3106,7.789,3107,9.987,3108,8.633,3109,6.022,3110,6.022,3111,6.022,3112,6.022,3113,6.022,3114,6.022,3115,6.022,3116,6.022,3117,8.696,3118,6.022,3119,6.022,3120,6.022,3121,6.022,3122,6.022,3123,6.022,3124,6.022,3125,6.022,3126,6.022,3127,6.022,3128,6.022,3129,6.022,3130,5.408,3131,5.408]],["title/contributing.html",[3101,3.119,3102,3.119,3132,3.782]],["body/contributing.html",[25,0.004,87,0.004,88,0.004,3132,7.395]],["title/dependencies.html",[152,3.422,3133,3.782]],["body/dependencies.html",[25,0.005,76,1.716,81,0.492,82,2.922,87,0.003,88,0.003,122,1.63,128,3.276,152,3.361,168,3.361,170,1.438,277,2.141,335,5.376,521,4.063,642,4.901,719,3.914,724,4.974,1374,5.376,1443,4.974,1607,4.674,1848,4.434,1992,5.376,2025,6.721,2026,6.058,2053,6.968,2996,5.376,3134,8.609,3135,7.759,3136,5.986,3137,7.759,3138,5.986,3139,5.986,3140,5.986,3141,5.986,3142,5.986,3143,5.986,3144,7.759,3145,5.986,3146,5.986,3147,5.986,3148,5.986,3149,5.986,3150,5.986,3151,5.986,3152,5.986,3153,5.986,3154,5.986,3155,5.986,3156,5.986,3157,5.986,3158,5.986,3159,5.986,3160,5.986,3161,5.986,3162,5.986,3163,5.986,3164,5.986]],["title/miscellaneous/enumerations.html",[3165,2.753,3166,5.473]],["body/miscellaneous/enumerations.html",[3,0.054,6,3.813,8,0.118,11,4.946,22,0.745,25,0.005,83,0.158,87,0.002,88,0.002,92,2.615,110,0.268,133,2.61,313,3.132,546,3.793,575,4.254,586,1.399,589,1.503,660,2.5,747,1.013,818,2.47,823,4.598,824,4.598,887,4.598,889,4.598,891,4.598,900,4.254,902,4.598,909,4.598,932,4.598,946,1.872,952,4.598,1033,3.622,1072,3.793,1153,2.553,1179,3.234,1185,4.601,1277,4.231,1278,4.231,1282,3.622,1564,2.771,1587,4.598,1608,2.603,1978,4.598,2057,6.28,2151,4.598,2531,2.995,2533,5.597,2699,4.598,3165,2.18,3166,2.995,3167,3.335,3168,5.12,3169,3.335,3170,3.335,3171,5.12,3172,3.335,3173,5.12,3174,5.12,3175,5.12,3176,5.12,3177,6.233,3178,5.12,3179,5.12,3180,6.993,3181,5.12,3182,3.335,3183,7.963,3184,3.335,3185,3.335,3186,5.12,3187,3.335,3188,6.233,3189,5.12,3190,5.12,3191,5.12,3192,5.12,3193,3.335,3194,3.335,3195,3.335,3196,3.335,3197,3.335,3198,3.335,3199,3.335,3200,3.335,3201,3.335,3202,3.335,3203,3.335,3204,5.12,3205,5.12,3206,5.12,3207,5.12,3208,5.12,3209,3.335,3210,3.335,3211,3.335,3212,3.335,3213,3.335,3214,6.993,3215,5.12,3216,5.12,3217,6.993,3218,5.12,3219,6.993,3220,5.12,3221,5.12,3222,5.12,3223,5.12,3224,3.335,3225,5.12,3226,5.12,3227,5.12,3228,3.335,3229,5.12,3230,5.12,3231,3.335,3232,5.12,3233,5.12,3234,3.335,3235,5.12,3236,5.12,3237,5.12,3238,5.12,3239,6.233,3240,6.993,3241,5.12,3242,5.12,3243,5.12,3244,5.12,3245,5.12,3246,5.12]],["title/miscellaneous/functions.html",[3165,2.753,3247,5.473]],["body/miscellaneous/functions.html",[8,0.279,25,0.004,87,0.004,88,0.004,113,1.622,114,1.924,3165,5.17,3247,7.102,3248,9.744,3249,7.908,3250,7.908]],["title/index.html",[8,0.149,3101,3.119,3102,3.119]],["body/index.html",[25,0.004,87,0.004,88,0.004,97,3.326,152,4.744,289,3.951,362,4.649,387,5.347,900,5.691,3131,6.151,3251,6.849,3252,6.849,3253,6.849,3254,6.849,3255,6.849,3256,6.849,3257,6.849,3258,6.849,3259,6.849,3260,6.849,3261,6.849,3262,6.849,3263,6.849,3264,6.849,3265,9.826,3266,6.849,3267,8.449,3268,6.849,3269,6.849,3270,6.849,3271,6.849,3272,6.849,3273,6.849,3274,6.849,3275,9.162,3276,6.849,3277,6.849,3278,6.849,3279,6.849,3280,6.849,3281,8.449,3282,6.849]],["title/license.html",[3101,3.119,3102,3.119,3283,3.782]],["body/license.html",[25,0.004,87,0.004,88,0.004]],["title/modules.html",[151,3.895]],["body/modules.html",[25,0.004,87,0.004,88,0.004,150,5.073,151,3.846,156,4.189,157,4.649,266,5.073,316,5.073,320,5.073,321,5.073,322,5.073,429,5.347,1891,6.151,2316,5.347,3284,10.324,3285,10.324,3286,10.324,3287,10.39,3288,6.849]],["title/overview.html",[3289,6.229]],["body/overview.html",[2,1.731,25,0.005,87,0.003,88,0.003,91,2.049,123,5.295,150,7.257,151,2.357,152,3.414,153,3.77,154,3.77,155,3.77,156,5.993,157,6.519,158,3.605,159,5.147,160,3.719,161,2.567,162,2.567,208,2.007,259,5.295,266,7.257,267,3.77,269,3.77,297,5.057,316,7.578,317,3.77,318,3.77,319,3.77,320,7.488,321,5.295,322,6.161,405,5.295,429,6.771,430,3.77,431,3.77,591,2.969,633,6.328,709,3.77,710,3.77,711,3.77,713,5.581,714,5.581,715,5.581,1017,0.337,1352,5.295,1854,3.77,1855,3.77,2241,5.295,2316,7.153,2317,3.77,2319,3.77,2509,3.277,3289,3.77,3290,4.198,3291,4.198,3292,4.198,3293,4.198,3294,4.198]],["title/properties.html",[9,0.749,3133,3.782]],["body/properties.html",[9,0.973,25,0.005,87,0.004,88,0.004,289,4.562,1090,6.571,2118,7.102,2250,6.571,3283,7.102,3295,7.908]],["title/todo.html",[3101,3.119,3102,3.119,3296,4.211]],["body/todo.html",[25,0.004,26,0.89,76,2.048,84,5.291,87,0.004,88,0.004,97,2.593,112,3.457,312,5.668,387,5.577,600,6.336,630,6.415,837,4.849,2026,5.577,2557,6.415,2687,7.203,2977,6.415,3117,9.078,3130,6.415,3297,7.144,3298,7.144,3299,7.144,3300,7.144,3301,7.144,3302,8.669,3303,8.669,3304,7.144,3305,8.669]],["title/miscellaneous/typealiases.html",[3165,2.753,3306,6.094]],["body/miscellaneous/typealiases.html",[8,0.275,24,0.308,25,0.004,87,0.004,88,0.004,1141,3.722,1142,4.491,1143,6.194,1539,4.371,1910,8.195,1915,8.195,1916,6.991,3165,5.09,3307,7.785,3308,7.785]],["title/miscellaneous/variables.html",[3165,2.753,3309,5.473]],["body/miscellaneous/variables.html",[3,0.062,8,0.209,22,1.321,24,0.234,25,0.005,55,2.753,81,0.375,87,0.003,88,0.003,100,1.457,114,1.439,131,5.446,133,3.015,138,2.024,139,0.699,144,2.525,159,4.569,207,2.054,222,1.551,224,1.861,247,2.973,592,2.887,611,4.569,643,4.618,1185,3.346,1373,6.397,1541,2.667,1917,4.015,3165,3.867,3309,5.312,3310,5.915,3311,7.699,3312,5.915,3313,5.915,3314,5.915,3315,7.699,3316,5.915,3317,5.915,3318,5.915,3319,5.915,3320,5.915,3321,5.915,3322,5.915,3323,5.915,3324,5.915,3325,5.915,3326,5.915,3327,5.915,3328,5.915,3329,5.915,3330,5.915,3331,5.915,3332,5.915,3333,5.915,3334,5.915,3335,5.915,3336,5.915,3337,5.915,3338,5.915,3339,5.915,3340,5.915,3341,5.915,3342,5.915,3343,5.915]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":866,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["0.0.1",{"_index":306,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{}}}],["0.0.2",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":2250,"title":{},"body":{"controllers/ProfileController.html":{},"changelog.html":{},"properties.html":{}}}],["0.1.13",{"_index":3157,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":3150,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":3162,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1895,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":3149,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3151,"title":{},"body":{"dependencies.html":{}}}],["03",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":2031,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["1.0.0",{"_index":3153,"title":{},"body":{"dependencies.html":{}}}],["1.0.35",{"_index":3146,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":591,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"changelog.html":{},"overview.html":{}}}],["10.0.2",{"_index":3138,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":1881,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["149",{"_index":3293,"title":{},"body":{"overview.html":{}}}],["15",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3292,"title":{},"body":{"overview.html":{}}}],["2",{"_index":2253,"title":{},"body":{"controllers/ProfileController.html":{}}}],["2.3.0",{"_index":3163,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":3135,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1324,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UpdateUserDto.html":{}}}],["20)@isnotempty",{"_index":2836,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["200",{"_index":288,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["2023",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["20})@column({unique",{"_index":2405,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["22",{"_index":3291,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":3211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["255",{"_index":86,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":31,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{}}}],["29",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":3294,"title":{},"body":{"overview.html":{}}}],["3.0.8",{"_index":3145,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":3164,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1827,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":1821,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":1885,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":1880,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3001",{"_index":2339,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["300mb",{"_index":1876,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3101",{"_index":200,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3102",{"_index":203,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3103",{"_index":206,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["3201",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["3202",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":1315,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["4.0.1",{"_index":3152,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":3161,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{}}}],["401",{"_index":1654,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["404",{"_index":1455,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["4210",{"_index":2415,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["5",{"_index":3334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":3148,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1890,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["500000",{"_index":3332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1386,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1307,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{}}}],["6.2.1",{"_index":3141,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3158,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":3290,"title":{},"body":{"overview.html":{}}}],["8.9.0",{"_index":3155,"title":{},"body":{"dependencies.html":{}}}],["89f4011bb96d",{"_index":2431,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["89f4011bb96d'})@primarygeneratedcolumn('uuid",{"_index":2417,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["8e24",{"_index":2416,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["9.0.0",{"_index":3134,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":3143,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":3137,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":3142,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":3139,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":915,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":2997,"title":{},"body":{"entities/UserEntity.html":{}}}],["abc123",{"_index":2403,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1305,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["accesstokencookie",{"_index":668,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.auth",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.token",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{}}}],["active",{"_index":3226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":3117,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["address",{"_index":84,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["address.company",{"_index":954,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["address.entity",{"_index":980,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["address.user",{"_index":2965,"title":{},"body":{"entities/UserEntity.html":{}}}],["addressentity",{"_index":1,"title":{"entities/AddressEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/UserEntity.html":{}}}],["addresses",{"_index":943,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["addressrepository",{"_index":510,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["admin",{"_index":2533,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["agent",{"_index":1612,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent']?.split('(')[1]?.split(')')[0]?.split",{"_index":2507,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":3307,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":1883,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["alphanumeric",{"_index":1301,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["already",{"_index":1277,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":1932,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":3258,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":3225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":97,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AuthModule.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"controllers/HealthCheckController.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["api.log",{"_index":3328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/auth/auth.module",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["api/entities",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["api/profile/domain/entities/profile.entity",{"_index":1376,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/domain/entities/user.entity",{"_index":1377,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["api_landing_page",{"_index":745,"title":{},"body":{"modules/AuthModule.html":{}}}],["api_log",{"_index":195,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["api_mail",{"_index":201,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["api_name",{"_index":1060,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_type",{"_index":1061,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_version",{"_index":1062,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_waiting_list",{"_index":204,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["apidescription",{"_index":307,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apigroup",{"_index":303,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apilandingpagecontroller",{"_index":90,"title":{"controllers/ApiLandingPageController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["apilandingpagemodule",{"_index":150,"title":{"modules/ApiLandingPageModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apilandingpageservice",{"_index":123,"title":{"injectables/ApiLandingPageService.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"overview.html":{}}}],["apiloggerservice",{"_index":1561,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":156,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":158,"title":{"injectables/ApiLogService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["apimailcontroller",{"_index":250,"title":{"controllers/ApiMailController.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["apimailmodule",{"_index":266,"title":{"modules/ApiMailModule.html":{}},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apimailservice",{"_index":259,"title":{"injectables/ApiMailService.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"overview.html":{}}}],["apiname",{"_index":302,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apiokresponse",{"_index":125,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apioperation",{"_index":126,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apiproperty",{"_index":1031,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail",{"_index":1318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":1320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":1322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@length(5",{"_index":1323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({enum",{"_index":1034,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({example",{"_index":2402,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["apiproperty({nullable",{"_index":1043,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":1037,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["apiresponse",{"_index":299,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["apisuccess",{"_index":308,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["apisuccessexample",{"_index":310,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":127,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apitags('api",{"_index":137,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apitags('auth",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('healthcheck",{"_index":1852,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":300,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('mail",{"_index":262,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["apitags('profile",{"_index":2249,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('user",{"_index":2923,"title":{},"body":{"controllers/UserController.html":{}}}],["apitype",{"_index":1020,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":1033,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":1092,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["apiversion",{"_index":305,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{}}}],["app",{"_index":406,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":298,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":284,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["application/json",{"_index":2252,"title":{},"body":{"controllers/ProfileController.html":{}}}],["appmodule",{"_index":316,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":297,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":375,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["appteste2emodule",{"_index":429,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":405,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":1993,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":1584,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":3255,"title":{},"body":{"index.html":{}}}],["array",{"_index":844,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":100,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{},"todo.html":{}}}],["auth.controller",{"_index":722,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":2012,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["auth.service",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/dto/sign",{"_index":2726,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["auth/guards/role.guard",{"_index":132,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":2243,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authcontroller",{"_index":598,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":697,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":607,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication=${token",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationservice",{"_index":2050,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authenticationtoken",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":2013,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":2014,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":2045,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":320,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2118,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["authservice",{"_index":633,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["available",{"_index":1891,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":222,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["banner_url",{"_index":944,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":945,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":2667,"title":{},"body":{"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":521,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":1759,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["bcrypt.compare(query.refreshtoken",{"_index":1743,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["bcrypt.hash(command.refreshtoken",{"_index":2570,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["bcrypt.hashsync(command.password",{"_index":2469,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":590,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["before",{"_index":2975,"title":{},"body":{"entities/UserEntity.html":{}}}],["bf55",{"_index":2414,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["birthday",{"_index":805,"title":{},"body":{"entities/CardEntity.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/NotificationEntity.html":{},"classes/ProfileResponse.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":3248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boundary",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":3253,"title":{},"body":{"index.html":{}}}],["browse",{"_index":3287,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3284,"title":{},"body":{"modules.html":{}}}],["call",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["canactivate(context",{"_index":3337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canceled",{"_index":3219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":546,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":444,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card.entity.ts",{"_index":982,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:27",{"_index":993,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":990,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":986,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":988,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":991,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":994,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":992,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":901,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":3183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":2301,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":2305,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":2314,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":436,"title":{"entities/CardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cardentity.connectedcardone",{"_index":985,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":987,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":1829,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":2098,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":2119,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":2161,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":2623,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":983,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":984,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":2090,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardrepository",{"_index":490,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["cards",{"_index":2159,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":40,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["catch",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":1583,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["catcherror",{"_index":1441,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["catcherror(err",{"_index":1448,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["category",{"_index":3202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":3103,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":1926,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["charset",{"_index":1304,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["check",{"_index":1843,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":1858,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":1842,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller.ts:27",{"_index":1846,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":1856,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":1363,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.query.ts",{"_index":1862,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check.response",{"_index":1366,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":1897,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:3",{"_index":1901,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":1902,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":1850,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":1356,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:10",{"_index":1360,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":1359,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":1863,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["check/cqrs/query/health",{"_index":1861,"title":{},"body":{"classes/HealthCheckQuery.html":{}}}],["check/custom",{"_index":1354,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/domain/response/health",{"_index":1896,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check/health",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["checkhealth",{"_index":1357,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":10,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["class",{"_index":81,"title":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/ProfileResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["class.exception",{"_index":2778,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["classdesc",{"_index":2632,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":1017,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/ProfileResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["classic",{"_index":3214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cleardatabasetest",{"_index":380,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":1068,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["client_address",{"_index":1944,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":1946,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":1948,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":1933,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":1934,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":1066,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["clientsmodule",{"_index":166,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["clientsmodule.register",{"_index":194,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["clientvatnumber",{"_index":1935,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilandingpagemodule",{"_index":153,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_imports",{"_index":154,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_providers",{"_index":155,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilogmodule",{"_index":226,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_imports",{"_index":228,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_providers",{"_index":227,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apimailmodule",{"_index":267,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_apimailmodule_imports",{"_index":268,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cluster_apimailmodule_providers",{"_index":269,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":430,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":432,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":431,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":709,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":710,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":712,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":711,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":1854,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":1855,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":2317,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":2318,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":2319,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3024,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":3025,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":3026,"title":{},"body":{"modules/UserModule.html":{}}}],["cmd",{"_index":703,"title":{},"body":{"controllers/AuthController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["code",{"_index":1302,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"changelog.html":{}}}],["code.entity",{"_index":449,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["code.entity.ts",{"_index":1509,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:19",{"_index":2418,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:21",{"_index":1526,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:25",{"_index":2407,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":1522,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:29",{"_index":2428,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":1520,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:33",{"_index":2421,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":1528,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:37",{"_index":2423,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":1525,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:43",{"_index":2412,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":1533,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:47",{"_index":2409,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:51",{"_index":2425,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":1530,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":1516,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":1531,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":1517,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.enum.ts",{"_index":3173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":70,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":843,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@column({unique",{"_index":2994,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":853,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":28,"title":{},"body":{"entities/AddressEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":829,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":864,"title":{},"body":{"entities/CardEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":2685,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":1075,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.createprofiledto",{"_index":1155,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.createuserdto",{"_index":1286,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.mail",{"_index":1279,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":1273,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.email",{"_index":2552,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command.id",{"_index":1480,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["command.mail",{"_index":2465,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.mail).pipe",{"_index":1447,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["command.occupations",{"_index":2744,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupations.map(async",{"_index":2740,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["command.occupationsid.length",{"_index":1156,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.occupationsid.map(async",{"_index":1158,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["command.profileid",{"_index":2584,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["command.roles",{"_index":2849,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["command.updateprofiledto",{"_index":2756,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["command.updateusercredentialdto.newpassword",{"_index":2814,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.updateusercredentialdto.password",{"_index":2815,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.user",{"_index":2789,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.mail",{"_index":2783,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.user.username",{"_index":2781,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.userid",{"_index":1151,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["command.username",{"_index":2467,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/create",{"_index":1077,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["command/delete",{"_index":1438,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommandHandler.html":{}}}],["command/register.command",{"_index":2460,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":2480,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["command/restore",{"_index":2519,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["command/send",{"_index":2549,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command/set",{"_index":2568,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["command/shift",{"_index":2582,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["command/soft",{"_index":2641,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["command/update",{"_index":2736,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["commandbus",{"_index":212,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":1076,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["commandhandler(createlogcommand",{"_index":1081,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["commandhandler(createprofilecommand",{"_index":1148,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":1267,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(deletemailcommand",{"_index":1444,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["commandhandler(deleteprofilecommand",{"_index":1478,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":1500,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["commandhandler(registercommand",{"_index":2461,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":2481,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["commandhandler(restoreusercommand",{"_index":2522,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["commandhandler(sendmailcommand",{"_index":2550,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":2569,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["commandhandler(shiftprofileownercommand",{"_index":2583,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["commandhandler(softdeleteprofilecommand",{"_index":2644,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["commandhandler(softdeleteusercommand",{"_index":2659,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["commandhandler(updateoccupationsprofilecommand",{"_index":2739,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["commandhandler(updateprofilecommand",{"_index":2755,"title":{},"body":{"classes/UpdateProfileCommandHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":2780,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["commandhandler(updateusercredentialcommand",{"_index":2810,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["commandhandler(updateuserrolecommand",{"_index":2848,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["communicate",{"_index":909,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":2160,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":11,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":925,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":77,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{}}}],["company_account",{"_index":3236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":1950,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_employee",{"_index":549,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["company_name",{"_index":1952,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":1954,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":1936,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":2285,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":2286,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":439,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["companyemployeeentity.company",{"_index":965,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyemployeerepository",{"_index":492,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyentity",{"_index":34,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["companyentity.addresses",{"_index":36,"title":{},"body":{"entities/AddressEntity.html":{}}}],["companyentity.bannerpicture",{"_index":2100,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":2163,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":2299,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":2102,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":2091,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":806,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":2092,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyrepository",{"_index":491,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyvatnumber",{"_index":1937,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":3268,"title":{},"body":{"index.html":{}}}],["config",{"_index":725,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["configmodule",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":2973,"title":{},"body":{"entities/UserEntity.html":{}}}],["confirming",{"_index":3302,"title":{},"body":{"todo.html":{}}}],["connect",{"_index":1430,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":898,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connected_card",{"_index":551,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":834,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":835,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":839,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":442,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connectedcardentity.conversation",{"_index":999,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":807,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardrepository",{"_index":493,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["connectedcardtwo",{"_index":808,"title":{},"body":{"entities/CardEntity.html":{}}}],["console.log('createlogcommandhandler",{"_index":1094,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["const",{"_index":247,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraintmap",{"_index":1915,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":1919,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":1922,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":1082,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(@inject('api_waiting_list",{"_index":1445,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["constructor(apiloggerservice",{"_index":1560,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(apilogservice",{"_index":1193,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["constructor(authenticationservice",{"_index":2048,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(client",{"_index":1065,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(commandbus",{"_index":211,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":1217,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(deletemaildto",{"_index":1463,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["constructor(email",{"_index":1711,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["constructor(errors",{"_index":1911,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(getuserwithcriteriadto",{"_index":1792,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["constructor(healthcheckservice",{"_index":1864,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":1899,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(id",{"_index":2077,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["constructor(jwtservice",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(login",{"_index":3007,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["constructor(partial",{"_index":938,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["constructor(private",{"_index":138,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(profilerepository",{"_index":1133,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["constructor(public",{"_index":1220,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["constructor(querybus",{"_index":1358,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(refreshtoken",{"_index":1734,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(updateuserrolecommand",{"_index":2853,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["constructor(userid",{"_index":1332,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["constructor(username",{"_index":1724,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":488,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["constructor(users",{"_index":3002,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":2018,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["consumer",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":1925,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":292,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{},"controllers/ProfileController.html":{}}}],["context.switchtohttp().getrequest",{"_index":3340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":3132,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":3252,"title":{},"body":{"index.html":{}}}],["controller",{"_index":89,"title":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["controller('/auth",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api",{"_index":136,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{}}}],["controller('health",{"_index":1851,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('profile",{"_index":2248,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('user",{"_index":2922,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":91,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":553,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversation.entity",{"_index":459,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":1997,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:21",{"_index":2003,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":2006,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":2005,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":2000,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":2001,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":2007,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":2002,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":1814,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":2009,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":1999,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":2122,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":445,"title":{"entities/ConversationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversationentity.notifications",{"_index":2139,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["conversationrepository",{"_index":494,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["conversations",{"_index":1808,"title":{},"body":{"entities/GroupEntity.html":{}}}],["cookie",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["country",{"_index":12,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["cqrs/command/create",{"_index":245,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/delete",{"_index":218,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/register.command",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["cqrs/command/remove",{"_index":3079,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/restore",{"_index":3081,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/send",{"_index":283,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["cqrs/command/set",{"_index":3080,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/shift",{"_index":2380,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cqrs/command/soft",{"_index":2377,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":2374,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/event",{"_index":736,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/create",{"_index":230,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/delete",{"_index":180,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/register.handler",{"_index":728,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/remove",{"_index":3030,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/restore",{"_index":3034,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/send",{"_index":272,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/command/set",{"_index":3029,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/shift",{"_index":2323,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/command/soft",{"_index":2337,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/update",{"_index":2326,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/create",{"_index":2332,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/delete",{"_index":183,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/login",{"_index":3033,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/remove",{"_index":3031,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/send",{"_index":274,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/event/set",{"_index":3032,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/shift",{"_index":2334,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/event/soft",{"_index":2331,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cqrs/handler/event/update",{"_index":2328,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/get",{"_index":186,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":1860,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/get",{"_index":220,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["cqrs/query/health",{"_index":1362,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":169,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":1186,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/CreateUserEvent.html":{},"changelog.html":{}}}],["create/address.entity",{"_index":482,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/address.entity.ts",{"_index":7,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:17",{"_index":52,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:22",{"_index":60,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:27",{"_index":33,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:32",{"_index":59,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:37",{"_index":42,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:42",{"_index":68,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:47",{"_index":57,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:52",{"_index":58,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:55",{"_index":56,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:58",{"_index":47,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:61",{"_index":63,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:64",{"_index":50,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:67",{"_index":66,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:70",{"_index":41,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/card.entity",{"_index":437,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/card.entity.ts",{"_index":804,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:100",{"_index":840,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":877,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":872,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":851,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":859,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":861,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":880,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":883,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":892,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":888,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":890,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":841,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":884,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":842,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":852,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":878,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":855,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":848,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":856,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":832,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":875,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":847,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":886,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":830,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":862,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":868,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":867,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":881,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":874,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":838,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":440,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity",{"_index":438,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/company.entity.ts",{"_index":942,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:104",{"_index":961,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:107",{"_index":977,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:110",{"_index":962,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:33",{"_index":967,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:36",{"_index":968,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:39",{"_index":976,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:42",{"_index":956,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:45",{"_index":963,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:48",{"_index":978,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:51",{"_index":953,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:54",{"_index":979,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:57",{"_index":959,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:60",{"_index":960,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:63",{"_index":973,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:66",{"_index":964,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:73",{"_index":966,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:77",{"_index":970,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:80",{"_index":972,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:86",{"_index":975,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:92",{"_index":958,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":955,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":443,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity",{"_index":446,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":996,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:24",{"_index":1006,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:27",{"_index":1001,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:33",{"_index":1000,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:36",{"_index":1005,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:39",{"_index":1010,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:42",{"_index":1008,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:45",{"_index":1012,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:52",{"_index":1002,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:55",{"_index":1013,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:58",{"_index":1003,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":448,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{}}}],["create/entities",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/notification",{"_index":3203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/role",{"_index":2531,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":3216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":3228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":3231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":3239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":453,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{}}}],["create/group.entity",{"_index":451,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":1807,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:24",{"_index":1818,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":1823,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":1820,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":1815,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":1825,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":1813,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":1816,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":1826,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":1817,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":456,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":1931,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:103",{"_index":1967,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":1956,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":1975,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":1958,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":1963,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":1943,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":1957,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":1965,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":1953,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":1951,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":1955,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":1947,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":1945,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":1949,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":1959,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":1970,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":1974,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":1972,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":1962,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":458,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity",{"_index":461,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{}}}],["create/media.entity.ts",{"_index":2089,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:22",{"_index":2110,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":2111,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":2109,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":2107,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":2115,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":2113,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":2099,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":2103,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":2101,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":2104,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":2116,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":2105,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":463,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":2117,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:20",{"_index":2126,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":2121,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":2120,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":2123,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":2124,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":2127,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":2125,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/notification.entity",{"_index":479,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["create/notification.entity.ts",{"_index":2136,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:23",{"_index":2144,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:28",{"_index":2150,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:33",{"_index":2143,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:36",{"_index":2152,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:39",{"_index":2146,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:42",{"_index":2147,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:49",{"_index":2155,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:52",{"_index":2149,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:58",{"_index":2140,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:65",{"_index":2141,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:68",{"_index":2153,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:71",{"_index":2142,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/occupation.entity",{"_index":465,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["create/occupation.entity.ts",{"_index":2158,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:21",{"_index":2167,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:24",{"_index":2168,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:31",{"_index":2170,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:34",{"_index":2164,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:37",{"_index":2162,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:44",{"_index":2165,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:47",{"_index":2171,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:50",{"_index":2166,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/plan.entity",{"_index":467,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":2173,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:19",{"_index":2184,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":2185,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":2179,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":2186,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":2183,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":2182,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":2188,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":2177,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":2189,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":2178,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/referal",{"_index":481,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["create/social",{"_index":471,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/SocialNetworkEntity.html":{}}}],["create/strip",{"_index":474,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{}}}],["create/subscription.entity",{"_index":477,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":2669,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:25",{"_index":2679,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":2684,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":2678,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":2686,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":2695,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":2693,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":2683,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":2698,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":2681,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":2677,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":2674,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":2696,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":2675,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["created",{"_index":1204,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{}}}],["created_at",{"_index":45,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["createdatecolumn",{"_index":71,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":44,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["createdfrom",{"_index":1775,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createdto",{"_index":1776,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["createlog",{"_index":232,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":235,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogcommand",{"_index":244,"title":{"classes/CreateLogCommand.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["createlogcommandhandler",{"_index":188,"title":{"classes/CreateLogCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["createlogdto",{"_index":236,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.apiname",{"_index":1567,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.apitype",{"_index":1571,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":1568,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.body",{"_index":1620,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":1576,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":1618,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":1630,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":1569,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":1572,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":1629,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":1632,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":1626,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":1624,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":1574,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":1633,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":1622,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogformethode",{"_index":233,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogformethode(log",{"_index":239,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createmethodlogdto",{"_index":240,"title":{"classes/CreateMethodLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateMethodLogDto.html":{}}}],["createprofile",{"_index":2192,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["createprofile(@body",{"_index":2273,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofile(createprofilerequest",{"_index":2352,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofile(profile",{"_index":2202,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createprofilecommand",{"_index":1121,"title":{"classes/CreateProfileCommand.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/ProfileService.html":{}}}],["createprofilecommandhandler",{"_index":1130,"title":{"classes/CreateProfileCommandHandler.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofiledto",{"_index":1124,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"injectables/ProfileService.html":{}}}],["createprofileevent",{"_index":1145,"title":{"classes/CreateProfileEvent.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{}}}],["createprofileeventhandler",{"_index":1189,"title":{"classes/CreateProfileEventHandler.html":{}},"body":{"classes/CreateProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["createprofilerequest",{"_index":1206,"title":{"classes/CreateProfileRequest.html":{}},"body":{"classes/CreateProfileRequest.html":{},"injectables/ProfileService.html":{}}}],["createprofilerequest.iduser",{"_index":2385,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.occupationsid",{"_index":2386,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.roleprofile",{"_index":2384,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createprofilerequest.usernameprofile",{"_index":2383,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createtimestamp",{"_index":2705,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":1368,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":1298,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":2924,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":2874,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":1214,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["createusercommand(createuserdto",{"_index":3083,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":1221,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["createuserdto",{"_index":390,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuserdto.mail",{"_index":588,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.roles",{"_index":593,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.username",{"_index":587,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserevent",{"_index":1329,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{}}}],["createusereventhandler",{"_index":1336,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["createuserresponse",{"_index":1258,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusertest",{"_index":381,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["createusertest(@body",{"_index":419,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["createusertest(createuserdto",{"_index":389,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["creation",{"_index":2636,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["credential",{"_index":2829,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.command",{"_index":2805,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["credential.command.ts",{"_index":2799,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:4",{"_index":2802,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.command.ts:5",{"_index":2801,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{}}}],["credential.dto",{"_index":2803,"title":{},"body":{"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credential.dto.ts",{"_index":2821,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:2",{"_index":2825,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:3",{"_index":2824,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.dto.ts:5",{"_index":2823,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["credential.event",{"_index":2809,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["credential.event.ts",{"_index":2827,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:2",{"_index":2830,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:3",{"_index":2828,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credential.event.ts:4",{"_index":2831,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{}}}],["credentials",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["criteria",{"_index":2265,"title":{},"body":{"controllers/ProfileController.html":{}}}],["criteria')@httpcode(201)@useguards(undefined",{"_index":2231,"title":{},"body":{"controllers/ProfileController.html":{}}}],["criteria.dto",{"_index":1687,"title":{},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["criteria.dto.ts",{"_index":1678,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:10",{"_index":1787,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:12",{"_index":1788,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:14",{"_index":1790,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:15",{"_index":1782,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:2",{"_index":1783,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:3",{"_index":1784,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:4",{"_index":1682,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:5",{"_index":1681,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:6",{"_index":1789,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:7",{"_index":1680,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["criteria.dto.ts:8",{"_index":1785,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.dto.ts:9",{"_index":1786,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["criteria.query",{"_index":1689,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["criteria.query.ts",{"_index":1684,"title":{},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:3",{"_index":1793,"title":{},"body":{"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.query.ts:4",{"_index":1685,"title":{},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["criteria.request",{"_index":2245,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["criteria.request.ts",{"_index":1704,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:4",{"_index":1707,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:5",{"_index":1706,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["criteria.request.ts:6",{"_index":1705,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["cron",{"_index":3304,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":1588,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":1591,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1590,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":1938,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current",{"_index":2565,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["current_timestamp",{"_index":2711,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["currenthashedrefreshtoken",{"_index":1740,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/UserEntity.html":{}}}],["custom",{"_index":1849,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":177,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["custom.event.ts",{"_index":1555,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:1",{"_index":1556,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:6",{"_index":1559,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:7",{"_index":1558,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:8",{"_index":1557,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":2690,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":1352,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}],["data",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["database",{"_index":387,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{},"index.html":{},"todo.html":{}}}],["databaseconfiguration",{"_index":332,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["date",{"_index":43,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["date'})@isdate",{"_index":1524,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":1597,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":2717,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date})@createdatecolumn",{"_index":2408,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["date})@updatedatecolumn",{"_index":2424,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["david",{"_index":3256,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":3318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":3237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":1960,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":1969,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/MailDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":55,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":2619,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":32,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":106,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AppTestE2eController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserEvent.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["delete('/admin/:id",{"_index":2949,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/admin/delete",{"_index":2208,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete('/admin/full",{"_index":2955,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/api/test/remove",{"_index":422,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["delete('/delete",{"_index":104,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["delete('/public/delete",{"_index":2952,"title":{},"body":{"controllers/UserController.html":{}}}],["delete/:id",{"_index":2956,"title":{},"body":{"controllers/UserController.html":{}}}],["delete/:id')@useguards(undefined",{"_index":2891,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":1489,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["deleted_at",{"_index":49,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":14,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":72,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn({name",{"_index":48,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["deletedfrom",{"_index":1777,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletedto",{"_index":1778,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["deletemail",{"_index":101,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemail(@body",{"_index":147,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["deletemail(mail",{"_index":103,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemailcommand",{"_index":217,"title":{"classes/DeleteMailCommand.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"injectables/UserService.html":{}}}],["deletemailcommandhandler",{"_index":179,"title":{"classes/DeleteMailCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailCommandHandler.html":{}}}],["deletemaildto",{"_index":1462,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["deletemailevent",{"_index":1439,"title":{"classes/DeleteMailEvent.html":{}},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deletemailevent(command",{"_index":1459,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["deletemaileventhandler",{"_index":182,"title":{"classes/DeleteMailEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailEventHandler.html":{}}}],["deleteme",{"_index":2863,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteme(@req",{"_index":2953,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(requestuser",{"_index":2877,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteme(userid",{"_index":3053,"title":{},"body":{"injectables/UserService.html":{}}}],["deletemyprofile",{"_index":2193,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(@req",{"_index":2277,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deletemyprofile(requestuser",{"_index":2207,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofile",{"_index":2194,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["deleteprofile(@param('id",{"_index":2275,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofile(id",{"_index":2354,"title":{},"body":{"injectables/ProfileService.html":{}}}],["deleteprofile(profileid",{"_index":2211,"title":{},"body":{"controllers/ProfileController.html":{}}}],["deleteprofilecommand",{"_index":1471,"title":{"classes/DeleteProfileCommand.html":{}},"body":{"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"injectables/ProfileService.html":{}}}],["deleteprofilecommandhandler",{"_index":1474,"title":{"classes/DeleteProfileCommandHandler.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"modules/ProfileModule.html":{}}}],["deleteprofileevent",{"_index":1477,"title":{"classes/DeleteProfileEvent.html":{}},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{}}}],["deleteprofileeventhandler",{"_index":1484,"title":{"classes/DeleteProfileEventHandler.html":{}},"body":{"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{}}}],["deletetimestamp",{"_index":2706,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deleteusercommand",{"_index":1490,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["deleteusercommandhandler",{"_index":1493,"title":{"classes/DeleteUserCommandHandler.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["deleteuserevent",{"_index":1497,"title":{"classes/DeleteUserEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{}}}],["deleteuserevent(command.userid",{"_index":1502,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["deleteusereventhandler",{"_index":1506,"title":{"classes/DeleteUserEventHandler.html":{}},"body":{"classes/DeleteUserEventHandler.html":{},"modules/UserModule.html":{}}}],["deleteusertest",{"_index":382,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(@body",{"_index":423,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deleteusertest(useriddto",{"_index":393,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["deletion",{"_index":2638,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":289,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1417,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":1614,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":3243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":3329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["discount",{"_index":1548,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":1518,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":555,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":1521,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":1510,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":447,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discountcodeentity.subscriptions",{"_index":2676,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcoderepository",{"_index":495,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["discountcodes",{"_index":2670,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":2180,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":2174,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":1511,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":1887,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":1868,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":3267,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":3278,"title":{},"body":{"index.html":{}}}],["documentation:serveapplication",{"_index":3279,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":242,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/generate",{"_index":2918,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/get",{"_index":1686,"title":{},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/list",{"_index":2919,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/dto/mail",{"_index":1647,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["domain/dto/mail.dto",{"_index":261,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["domain/dto/update",{"_index":2753,"title":{},"body":{"classes/UpdateProfileCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/user",{"_index":2921,"title":{},"body":{"controllers/UserController.html":{}}}],["domain/entities/profile.entity",{"_index":1138,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["domain/entities/user.entity",{"_index":1252,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["domain/enum/api",{"_index":1057,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["domain/enum/logging",{"_index":1055,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["domain/enum/user",{"_index":1261,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/enum/verbose",{"_index":1078,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["domain/request/create",{"_index":2375,"title":{},"body":{"injectables/ProfileService.html":{}}}],["domain/request/get",{"_index":2244,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/request/shift",{"_index":2381,"title":{},"body":{"injectables/ProfileService.html":{}}}],["domain/request/update",{"_index":2246,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/create",{"_index":1259,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":1365,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["domain/response/mail.response",{"_index":130,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["domain/response/profile.response",{"_index":1137,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["domain/response/user",{"_index":1766,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["domain/response/user.response",{"_index":1764,"title":{},"body":{"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dotenv",{"_index":726,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["double",{"_index":3301,"title":{},"body":{"todo.html":{}}}],["dto/sign",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate_category_name",{"_index":3201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":3195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":3194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicatemailexception",{"_index":1256,"title":{"classes/DuplicateMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duplicateusernameexception",{"_index":1253,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["duration",{"_index":2175,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e",{"_index":705,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{}}}],["e.message",{"_index":2387,"title":{},"body":{"injectables/ProfileService.html":{}}}],["e2e",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["e2e.controller",{"_index":434,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":379,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:14",{"_index":388,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:20",{"_index":392,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:27",{"_index":397,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:33",{"_index":400,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:39",{"_index":402,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":433,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":407,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":484,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:105",{"_index":514,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:114",{"_index":519,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:118",{"_index":517,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:126",{"_index":515,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:30",{"_index":511,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:78",{"_index":513,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":846,"title":{},"body":{"entities/CardEntity.html":{}}}],["eb823d92",{"_index":2413,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["email",{"_index":946,"title":{},"body":{"entities/CompanyEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/MailDto.html":{},"classes/RegisterHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"miscellaneous/enumerations.html":{}}}],["email.query",{"_index":1716,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["email.query.ts",{"_index":1710,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:1",{"_index":1712,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:2",{"_index":1713,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["emails",{"_index":809,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":3212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":441,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":924,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:27",{"_index":929,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":933,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":926,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":931,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":927,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":934,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":928,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":936,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":3175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":947,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["empty",{"_index":3298,"title":{},"body":{"todo.html":{}}}],["end_date",{"_index":1523,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":1512,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":3023,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["entitiestomovemodule",{"_index":321,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["entity('company_employee",{"_index":937,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":1977,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":2172,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity('referral_code",{"_index":2430,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["entity.exception",{"_index":1144,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["entity.exception.ts",{"_index":1910,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":1913,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":2704,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:11",{"_index":2709,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":2713,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":2715,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":2714,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":2708,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":2712,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":1406,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":2703,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity{.ts,.js",{"_index":1394,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":882,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":1116,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":1117,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/notification",{"_index":2156,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["enum/role",{"_index":935,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["enum/transferable",{"_index":913,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":904,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/user",{"_index":1327,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["enum/who",{"_index":899,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":3166,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":410,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":1987,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment.pipe.ts:5",{"_index":1994,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":377,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["err",{"_index":1165,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.length",{"_index":1167,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.message",{"_index":1452,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["err.status",{"_index":1449,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["error",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["error('invalid",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('mail",{"_index":3092,"title":{},"body":{"injectables/UserService.html":{}}}],["error('new",{"_index":2816,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["error('node_env",{"_index":1431,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error('not",{"_index":3089,"title":{},"body":{"injectables/UserService.html":{}}}],["error('occupation",{"_index":1161,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('occupations",{"_index":2741,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["error('profile",{"_index":1481,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error('response",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{}}}],["error('user",{"_index":1152,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["error(e",{"_index":2388,"title":{},"body":{"injectables/ProfileService.html":{}}}],["error(error",{"_index":1173,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["error(error.message",{"_index":2851,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["error.constraints",{"_index":1920,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.message",{"_index":1628,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error.message.split(':')[0",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.message.split(':')[1",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.status",{"_index":2926,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":1262,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["errorcustomeventhandler",{"_index":174,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["errorenum",{"_index":3168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":1579,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{}}}],["errorloggingmiddleware",{"_index":349,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":1914,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":1918,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":2499,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":1650,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":1197,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["event.createuserdto.mail",{"_index":1341,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event.deletemaildto.mail",{"_index":1470,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["event.deleteprofilecommand.id",{"_index":1488,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["event.email",{"_index":2562,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["event.entity",{"_index":475,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":2665,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.entity.ts:16",{"_index":2666,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.error",{"_index":1577,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.handler",{"_index":1575,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.id",{"_index":2598,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["event.listofoccupationid.join",{"_index":2752,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.localisation",{"_index":1573,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.method",{"_index":1202,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.module",{"_index":1201,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["event.owner",{"_index":2600,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event.profileid",{"_index":2750,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["event.profileresponse.id",{"_index":1203,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.profileresponse.userid",{"_index":1205,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["event.updateprofilecommand.updateprofiledto",{"_index":2758,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["event.updateuserrolecommand.roles.join",{"_index":2860,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.updateuserrolecommand.userid",{"_index":2859,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["event.userid",{"_index":1340,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.username",{"_index":2066,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["event/create",{"_index":1146,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{}}}],["event/delete",{"_index":1440,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{}}}],["event/login",{"_index":1753,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["event/register.event",{"_index":2444,"title":{},"body":{"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["event/remove",{"_index":2493,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["event/restore",{"_index":2521,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{}}}],["event/send",{"_index":2548,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["event/set",{"_index":2575,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["event/shift",{"_index":2596,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["event/soft",{"_index":2643,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["event/update",{"_index":2738,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventbus",{"_index":1134,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["eventshandler",{"_index":1198,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["eventshandler(createprofileevent",{"_index":1199,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":1339,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(deletemailevent",{"_index":1469,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["eventshandler(deleteprofileevent",{"_index":1487,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["eventshandler(deleteuserevent",{"_index":1508,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":1565,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(loginofuserevent",{"_index":2065,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["eventshandler(registerevent",{"_index":2445,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["eventshandler(removerefreshtokenevent",{"_index":2494,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["eventshandler(restoreuserevent",{"_index":2529,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["eventshandler(sendmailevent",{"_index":2560,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["eventshandler(setcurrentrefreshtokenevent",{"_index":2576,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["eventshandler(shiftprofileownerevent",{"_index":2597,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["eventshandler(softdeleteprofileevent",{"_index":2652,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["eventshandler(softdeleteuserevent",{"_index":2664,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["eventshandler(updateoccupationsprofileevent",{"_index":2749,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["eventshandler(updateprofileevent",{"_index":2757,"title":{},"body":{"classes/UpdateProfileEventHandler.html":{}}}],["eventshandler(updateusercredentialevent",{"_index":2834,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["eventshandler(updateuserevent",{"_index":2839,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["eventshandler(updateuserroleevent",{"_index":2858,"title":{},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["example",{"_index":314,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{}}}],["exceed",{"_index":1889,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":1586,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/InvalidUsernameException.html":{}}}],["exception.filter.ts",{"_index":1581,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts:6",{"_index":1585,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1593,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":1254,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["exception/invalid",{"_index":1142,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["exception/mail",{"_index":2081,"title":{},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["exception/no",{"_index":2129,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["exception/same",{"_index":2539,"title":{},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["exception/unauthorized",{"_index":2729,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["exception/user",{"_index":2371,"title":{},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["exceptionfilter",{"_index":1582,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":2978,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":1064,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(command",{"_index":1073,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["execute(query",{"_index":1642,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["executioncontext",{"_index":3338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1454,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["exists",{"_index":1278,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":3220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresat",{"_index":2400,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["expiresin",{"_index":743,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":85,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":717,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":1541,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"interfaces/RequestUser.html":{},"classes/SamePasswordException.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":1391,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["extractjwt",{"_index":2023,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":2029,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["failed",{"_index":3222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":854,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["false})@column({type",{"_index":2410,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["false})@exclude",{"_index":2968,"title":{},"body":{"entities/UserEntity.html":{}}}],["false})@manytoone(undefined",{"_index":2422,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["feature",{"_index":3305,"title":{},"body":{"todo.html":{}}}],["features",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["filename",{"_index":3327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":2864,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findme",{"_index":3045,"title":{},"body":{"injectables/UserService.html":{}}}],["findme(userid",{"_index":3056,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":2865,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":2934,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":2883,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findoneorfail",{"_index":1150,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["findwithcriteria",{"_index":2866,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findwithcriteria(getuserwithcriteriadto",{"_index":2886,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":810,"title":{},"body":{"entities/CardEntity.html":{}}}],["firstvaluefrom",{"_index":1442,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["fix",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":2687,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["float",{"_index":2181,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":3315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1153,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/ProfileService.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception",{"_index":2372,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["found.exception.ts",{"_index":3035,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["found.exception.ts:3",{"_index":3036,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["france",{"_index":1985,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["fulldelete",{"_index":2867,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fulldelete(@param('id",{"_index":2957,"title":{},"body":{"controllers/UserController.html":{}}}],["fulldelete(id",{"_index":2889,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["function",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["functions",{"_index":3247,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1299,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["generatecode",{"_index":1225,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatecode(length",{"_index":1236,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generatepassword",{"_index":3046,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuniquereferralcode",{"_index":1226,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["generateuserdto",{"_index":1634,"title":{"classes/GenerateUserDto.html":{}},"body":{"classes/GenerateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserdto.mail",{"_index":3093,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserdto.roles",{"_index":3095,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuserfrommail",{"_index":2868,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["generateuserfrommail(@body",{"_index":2927,"title":{},"body":{"controllers/UserController.html":{}}}],["generateuserfrommail(generateuserdto",{"_index":2893,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":1844,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/actual",{"_index":696,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/admin",{"_index":2251,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/admin/')@apiresponse({status",{"_index":2215,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/admin/')@useguards(undefined",{"_index":2881,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id",{"_index":2933,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/:id')@useguards(undefined",{"_index":2884,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/admin/with",{"_index":2226,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/api/test/clear",{"_index":416,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/api/test/get",{"_index":425,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/getall",{"_index":140,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/getall')@apioperation({summary",{"_index":115,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/public/:id",{"_index":2256,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/public/:id')@httpcode(201)@useguards(undefined",{"_index":2223,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('/public/get",{"_index":2219,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get('/refresh",{"_index":699,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":287,"title":{},"body":{"controllers/AppController.html":{}}}],["getall",{"_index":102,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["getallmailquery",{"_index":219,"title":{"classes/GetAllMailQuery.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getallmailqueryhandler",{"_index":185,"title":{"classes/GetAllMailQueryHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["getallprofilequery",{"_index":1657,"title":{"classes/GetAllProfileQuery.html":{}},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getallprofilequeryhandler",{"_index":1660,"title":{"classes/GetAllProfileQueryHandler.html":{}},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getallprofiles",{"_index":2195,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getallusers",{"_index":485,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getalluserstest",{"_index":383,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getcookieforlogout",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":695,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":286,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getme",{"_index":2869,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getme(@req",{"_index":2938,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(requestuser",{"_index":2897,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(userid",{"_index":3063,"title":{},"body":{"injectables/UserService.html":{}}}],["getmyprofiles",{"_index":2196,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(@req",{"_index":2262,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmyprofiles(requestuser",{"_index":2218,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile",{"_index":2347,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile(id",{"_index":2356,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilebyid",{"_index":2197,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(@param('id",{"_index":2257,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyid(profileid",{"_index":2222,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyidquery",{"_index":1667,"title":{"classes/GetProfileByIdQuery.html":{}},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyidqueryhandler",{"_index":1670,"title":{"classes/GetProfileByIdQueryHandler.html":{}},"body":{"classes/GetProfileByIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilebyuserid",{"_index":2198,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilebyuserid(@param('id",{"_index":2260,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofilebyuserid(userid",{"_index":2225,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofiles",{"_index":2348,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilesbyuseridquery",{"_index":1698,"title":{"classes/GetProfilesByUserIdQuery.html":{}},"body":{"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilesbyuseridqueryhandler",{"_index":1699,"title":{"classes/GetProfilesByUserIdQueryHandler.html":{}},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofileswithcriteria",{"_index":2199,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofileswithcriteria(getprofileswithcriteriarequest",{"_index":2229,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileswithcriteria(getprofilewithcriteriarequest",{"_index":2360,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileswithcriteriarequest",{"_index":1702,"title":{"classes/GetProfilesWithCriteriaRequest.html":{}},"body":{"classes/GetProfilesWithCriteriaRequest.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriadto",{"_index":1676,"title":{"classes/GetProfileWithCriteriaDto.html":{}},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaquery",{"_index":1683,"title":{"classes/GetProfileWithCriteriaQuery.html":{}},"body":{"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"injectables/ProfileService.html":{}}}],["getprofilewithcriteriaqueryhandler",{"_index":1688,"title":{"classes/GetProfileWithCriteriaQueryHandler.html":{}},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{},"modules/ProfileModule.html":{}}}],["getprofilewithcriteriarequest",{"_index":2362,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.isdeleted",{"_index":2399,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.roleprofile",{"_index":2398,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofilewithcriteriarequest.usernameprofile",{"_index":2397,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getting",{"_index":3101,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":486,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuser(userid",{"_index":516,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["getuserbyemailquery",{"_index":1708,"title":{"classes/GetUserByEmailQuery.html":{}},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{}}}],["getuserbyemailqueryhandler",{"_index":1714,"title":{"classes/GetUserByEmailQueryHandler.html":{}},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserbyreferralcode",{"_index":1227,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyreferralcode(referralcode",{"_index":1239,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["getuserbyusernamequery",{"_index":1722,"title":{"classes/GetUserByUsernameQuery.html":{}},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{}}}],["getuserbyusernamequeryhandler",{"_index":1727,"title":{"classes/GetUserByUsernameQueryHandler.html":{}},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserfromauthtoken",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromauthtoken(authenticationtoken",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserifrefreshtokenmatches",{"_index":3047,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":3065,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":1731,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":3084,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatchesqueryhandler",{"_index":1737,"title":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserloginquery",{"_index":777,"title":{"classes/GetUserLoginQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["getuserloginquery(username",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserloginqueryhandler",{"_index":732,"title":{"classes/GetUserLoginQueryHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["getuserquery",{"_index":774,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserquery(id",{"_index":3087,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery(payload.userid",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserquery(userid",{"_index":3097,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserqueryhandler",{"_index":1763,"title":{"classes/GetUserQueryHandler.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{}}}],["getusertest",{"_index":384,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(@body",{"_index":427,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getusertest(userid",{"_index":401,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["getuserwithcriteriadto",{"_index":1773,"title":{"classes/GetUserWithCriteriaDto.html":{}},"body":{"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery",{"_index":1791,"title":{"classes/GetUserWithCriteriaQuery.html":{}},"body":{"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/UserService.html":{}}}],["getuserwithcriteriaquery(getuserwithcriteriadto",{"_index":3096,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserwithcriteriaqueryhandler",{"_index":1794,"title":{"classes/GetUserWithCriteriaQueryHandler.html":{}},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/UserModule.html":{}}}],["given",{"_index":1303,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["google",{"_index":2977,"title":{},"body":{"entities/UserEntity.html":{},"todo.html":{}}}],["graph",{"_index":3288,"title":{},"body":{"modules.html":{}}}],["group",{"_index":557,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["group.bannerpicture",{"_index":2106,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":1014,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":2108,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":559,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":2093,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":450,"title":{"entities/GroupEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["groupentity.conversations",{"_index":1004,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":1833,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":849,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":850,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":1819,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":452,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupmembershiprepository",{"_index":497,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["groupmemberships",{"_index":811,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":2094,"title":{},"body":{"entities/MediaEntity.html":{}}}],["grouprepository",{"_index":496,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["guards/auth.guard",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/role.guard",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":1192,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handle(event",{"_index":1195,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handled",{"_index":3090,"title":{},"body":{"injectables/UserService.html":{}}}],["handler",{"_index":178,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":1058,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:10",{"_index":1437,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:100",{"_index":1237,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:104",{"_index":2773,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:11",{"_index":1069,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["handler.ts:110",{"_index":1238,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:118",{"_index":1240,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:12",{"_index":1071,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:123",{"_index":1245,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:129",{"_index":1243,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:13",{"_index":1070,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:135",{"_index":1249,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:139",{"_index":1251,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:14",{"_index":1067,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["handler.ts:143",{"_index":1247,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:15",{"_index":1495,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:16",{"_index":1476,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["handler.ts:17",{"_index":1672,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler.ts:18",{"_index":1496,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["handler.ts:19",{"_index":1233,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:20",{"_index":1562,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:21",{"_index":1869,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:22",{"_index":2767,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:23",{"_index":1074,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:24",{"_index":1234,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:25",{"_index":1135,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["handler.ts:29",{"_index":1235,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["handler.ts:51",{"_index":2806,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:54",{"_index":1751,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["handler.ts:55",{"_index":2807,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["handler.ts:6",{"_index":1194,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:70",{"_index":2769,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:76",{"_index":2768,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:8",{"_index":1486,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["handler.ts:82",{"_index":2775,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:86",{"_index":2774,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:9",{"_index":1196,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["handler.ts:91",{"_index":2771,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler/error",{"_index":176,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["handler/register.event",{"_index":737,"title":{},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["handlers",{"_index":2340,"title":{},"body":{"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["hashedpassword",{"_index":1750,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["headers",{"_index":1021,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["health",{"_index":1355,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheck",{"_index":1847,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":1841,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["healthcheckmodule",{"_index":322,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":1361,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckqueryhandler",{"_index":1859,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["healthcheckresponse",{"_index":1364,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["healthcheckresult",{"_index":1900,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":1865,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":1871,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":1879,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":1898,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":290,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":3257,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":3319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1382,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":1589,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":1141,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":295,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":119,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":263,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["httpcode(200)@post('/admin/criteria')@useguards(undefined",{"_index":2887,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/login",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(201",{"_index":2254,"title":{},"body":{"controllers/ProfileController.html":{}}}],["httpcode(204",{"_index":421,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/:id')@useguards(undefined",{"_index":2900,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/admin/full",{"_index":2890,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@delete('/public/delete",{"_index":2878,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@post('/admin/restore",{"_index":2903,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@put('/admin/:id/role')@useguards(undefined",{"_index":2915,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204)@useguards(jwtrefreshguard)@post('/logout",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204)@usepipes(new",{"_index":395,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":146,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["httpexception",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":1995,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpexception('mail",{"_index":1453,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpexception('unreachable",{"_index":1457,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["httpexception('wrong",{"_index":706,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["httponly",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":708,"title":{},"body":{"controllers/AuthController.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/SamePasswordException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.forbidden",{"_index":1996,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":1594,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":1458,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpstatus.unauthorized",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{},"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":1059,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["icon",{"_index":2621,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["id",{"_index":15,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"classes/MailLandingPageDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["id.dto",{"_index":415,"title":{},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{}}}],["id.dto.ts",{"_index":2998,"title":{},"body":{"interfaces/UserIdDto.html":{}}}],["id.exception",{"_index":1499,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"injectables/ProfileService.html":{}}}],["id.exception.ts",{"_index":1906,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.exception.ts:3",{"_index":1907,"title":{},"body":{"classes/InvalidIdException.html":{}}}],["id.query",{"_index":1671,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["id.query.ts",{"_index":1668,"title":{},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["id.query.ts:2",{"_index":1669,"title":{},"body":{"classes/GetProfileByIdQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["id/:id",{"_index":2259,"title":{},"body":{"controllers/ProfileController.html":{}}}],["id/:id')@httpcode(201)@useguards(undefined",{"_index":2227,"title":{},"body":{"controllers/ProfileController.html":{}}}],["idprofiledto",{"_index":1903,"title":{"classes/IdProfileDto.html":{}},"body":{"classes/IdProfileDto.html":{}}}],["iduser",{"_index":1209,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["ieventhandler",{"_index":1191,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["ignore",{"_index":301,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["import",{"_index":69,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailRequiredException.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["in.dto",{"_index":2727,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["in.dto.ts",{"_index":2607,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:10",{"_index":2609,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":2610,"title":{},"body":{"classes/SignInDto.html":{}}}],["inactive",{"_index":3227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":2688,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":3321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":3322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":903,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":3190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":1981,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":1080,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":208,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/ProfileService.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":520,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["injectrepository(addressentity",{"_index":543,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(cardentity",{"_index":523,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyemployeeentity",{"_index":525,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyentity",{"_index":524,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(connectedcardentity",{"_index":526,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(conversationentity",{"_index":527,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(discountcodeentity",{"_index":528,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupentity",{"_index":529,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupmembershipentity",{"_index":530,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(invoicesentity",{"_index":531,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(joinedconversation",{"_index":532,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(mediaentity",{"_index":533,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(messageentity",{"_index":534,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(notificationentity",{"_index":541,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(occupationentity",{"_index":535,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["injectrepository(planentity",{"_index":536,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(profileentity",{"_index":537,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["injectrepository(referralcodeentity",{"_index":542,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(socialnetworkentity",{"_index":538,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(stripevententity",{"_index":539,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(subscriptionentity",{"_index":540,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(userentity",{"_index":522,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["inserteduser",{"_index":2470,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["installation",{"_index":3273,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":3274,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1592,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["int",{"_index":1537,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":1519,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":865,"title":{},"body":{"entities/CardEntity.html":{}}}],["interceptors",{"_index":3300,"title":{},"body":{"todo.html":{}}}],["interface",{"_index":2508,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{}}}],["interface/request",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["interface/token",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2509,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"interfaces/UserIdDto.html":{},"overview.html":{}}}],["invalid",{"_index":1282,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":3197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":3196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidclassexception",{"_index":2776,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalidclassexception('parameter",{"_index":2788,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalididexception",{"_index":1498,"title":{"classes/InvalidIdException.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/InvalidIdException.html":{},"injectables/ProfileService.html":{}}}],["invalidmailexception",{"_index":1265,"title":{"classes/InvalidMailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidMailException.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception",{"_index":1139,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{}}}],["invalidparameterentityexception(err",{"_index":1168,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["invalidpasswordexception",{"_index":1263,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["invalidusernameexception",{"_index":1266,"title":{"classes/InvalidUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidUsernameException.html":{},"classes/RegisterHandler.html":{}}}],["inversejoincolumn",{"_index":2297,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":3178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":1964,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":1939,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":561,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":1549,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":455,"title":{"entities/InvoicesEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity.subscription",{"_index":2680,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoicesrepository",{"_index":498,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["ip",{"_index":1022,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":1641,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["is_active",{"_index":54,"title":{},"body":{"entities/AddressEntity.html":{}}}],["is_not_transferable",{"_index":3230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_read",{"_index":2145,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["is_transferable",{"_index":3229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactive",{"_index":16,"title":{},"body":{"entities/AddressEntity.html":{}}}],["isdate",{"_index":1534,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isdatestring",{"_index":2429,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["isdeleted",{"_index":1679,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{}}}],["isduplicatedemail",{"_index":1228,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedemail(email",{"_index":1242,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername",{"_index":1229,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicatedusername(username",{"_index":1244,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail",{"_index":2765,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedmail(mail",{"_index":2770,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername",{"_index":2766,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isduplicateofdeletedusername(username",{"_index":2772,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["isemail",{"_index":905,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":2614,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":2071,"title":{},"body":{"classes/MailDto.html":{}}}],["isemailconfirmed",{"_index":2960,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":1980,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":79,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":2608,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":1535,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isoptional",{"_index":1326,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["isownerpro",{"_index":812,"title":{},"body":{"entities/CardEntity.html":{}}}],["isread",{"_index":2137,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["isrefreshtokenmatching",{"_index":1742,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["isregisteredwithgoogle",{"_index":2961,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["istestenvironmentpipe",{"_index":408,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["istestenvironmentpipe())@delete('/api/test/remove",{"_index":396,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":386,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@get('/api/test/get",{"_index":398,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@post('/api/test/create",{"_index":391,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":906,"title":{},"body":{"entities/CardEntity.html":{}}}],["isvalidemail",{"_index":1230,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidemail(email",{"_index":1246,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidpassword",{"_index":1231,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidpassword(password",{"_index":1248,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["isvalidusername",{"_index":1232,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["isvalidusername(username",{"_index":1250,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["jest",{"_index":3270,"title":{},"body":{"index.html":{}}}],["join",{"_index":1372,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":1393,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join_new_group",{"_index":3206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joincolumn",{"_index":995,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":1015,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["joined_conversation",{"_index":563,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":457,"title":{"entities/JoinedConversation.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joinedconversation.conversation",{"_index":1007,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":2291,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversationrepository",{"_index":499,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["joinedconversations",{"_index":2280,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":997,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":893,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":1038,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":3324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":2026,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"todo.html":{}}}],["jwtauthenticationguard",{"_index":2010,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"injectables/JwtAuthenticationGuard.html":{}}}],["jwtfromrequest",{"_index":2028,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":723,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":739,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":643,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"miscellaneous/variables.html":{}}}],["jwtrefreshtokenstrategy",{"_index":713,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"overview.html":{}}}],["jwtservice",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":714,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwttoken",{"_index":2962,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":2095,"title":{},"body":{"entities/MediaEntity.html":{}}}],["la",{"_index":1984,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["landing",{"_index":93,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["lastname",{"_index":813,"title":{},"body":{"entities/CardEntity.html":{}}}],["latitude",{"_index":17,"title":{},"body":{"entities/AddressEntity.html":{}}}],["length",{"_index":30,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{}}}],["length(5",{"_index":1328,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"classes/UpdateUserDto.html":{}}}],["length(6",{"_index":2432,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["letter",{"_index":1929,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":3263,"title":{},"body":{"index.html":{}}}],["license",{"_index":3283,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["link",{"_index":2138,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["list",{"_index":1451,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"controllers/ProfileController.html":{}}}],["list.response",{"_index":1767,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["list.response.ts",{"_index":3000,"title":{},"body":{"classes/UserListResponse.html":{}}}],["list.response.ts:4",{"_index":3003,"title":{},"body":{"classes/UserListResponse.html":{}}}],["listofoccupationid",{"_index":2743,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["listrolesdto",{"_index":2039,"title":{"classes/ListRolesDto.html":{}},"body":{"classes/ListRolesDto.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["local",{"_index":2053,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":721,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":2047,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:15",{"_index":2052,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":2049,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":638,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["localisation",{"_index":1275,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["localstrategy",{"_index":715,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["log",{"_index":238,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommandHandler.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["log.command",{"_index":190,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["log.command.ts",{"_index":1019,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:11",{"_index":1032,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:14",{"_index":1046,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:17",{"_index":1036,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:20",{"_index":1035,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:23",{"_index":1047,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:26",{"_index":1052,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:29",{"_index":1042,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:32",{"_index":1039,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:35",{"_index":1054,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:38",{"_index":1051,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:41",{"_index":1050,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:44",{"_index":1041,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:47",{"_index":1048,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:5",{"_index":1030,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:50",{"_index":1049,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:53",{"_index":1053,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:56",{"_index":1044,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.dto",{"_index":243,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":1097,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:1",{"_index":1118,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:11",{"_index":1099,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:14",{"_index":1106,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":1101,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:20",{"_index":1100,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:23",{"_index":1107,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:26",{"_index":1113,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:29",{"_index":1104,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:32",{"_index":1102,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:35",{"_index":1108,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:38",{"_index":1115,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:41",{"_index":1112,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:44",{"_index":1111,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:47",{"_index":1103,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:5",{"_index":1098,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:50",{"_index":1109,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:53",{"_index":1110,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:56",{"_index":1114,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:59",{"_index":1105,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:6",{"_index":1120,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:7",{"_index":1119,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.enum",{"_index":1079,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.enum.ts",{"_index":3180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.method",{"_index":248,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.module",{"_index":172,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["log.module.ts",{"_index":229,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":191,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log.service.ts",{"_index":231,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:10",{"_index":237,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:18",{"_index":241,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":234,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":171,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{}}}],["log/cqrs/command/create",{"_index":1018,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log/cqrs/handler/command/create",{"_index":189,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["log/domain/dto/create",{"_index":1096,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log/domain/enum/api",{"_index":1564,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":1563,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["log/domain/enum/status",{"_index":3224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log/domain/enum/verbose",{"_index":1608,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":2067,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["logger",{"_index":1373,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{},"miscellaneous/variables.html":{}}}],["logger('registereventhandler",{"_index":2442,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.config",{"_index":1375,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{}}}],["logger.config.ts",{"_index":3311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":1427,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":1426,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.info('new",{"_index":2446,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.info('node_env",{"_index":1380,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":2441,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logging",{"_index":1397,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":1600,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:10",{"_index":2513,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":1602,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":2497,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:16",{"_index":1605,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:17",{"_index":2514,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:18",{"_index":2498,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtype",{"_index":1023,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":1045,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtypeenum.error",{"_index":1570,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":2504,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["login",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/UserLoginDto.html":{},"changelog.html":{}}}],["login(username",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":3006,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:10",{"_index":3009,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:12",{"_index":3010,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:3",{"_index":3008,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.query",{"_index":734,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"modules/UserModule.html":{}}}],["login.query.ts",{"_index":1745,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:1",{"_index":1746,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:2",{"_index":1747,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.response",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.response.ts",{"_index":3013,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:11",{"_index":3017,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:12",{"_index":3022,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:13",{"_index":3016,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:14",{"_index":3015,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:15",{"_index":3021,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:16",{"_index":3020,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:17",{"_index":3019,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:18",{"_index":3018,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:4",{"_index":3014,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["logindto",{"_index":2724,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["loginofuserevent",{"_index":1752,"title":{"classes/LoginOfUserEvent.html":{}},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["loginofuserevent(userusername.id",{"_index":1758,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["loginofusereventhandler",{"_index":2063,"title":{"classes/LoginOfUserEventHandler.html":{}},"body":{"classes/LoginOfUserEventHandler.html":{},"modules/UserModule.html":{}}}],["logout",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":3330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":18,"title":{},"body":{"entities/AddressEntity.html":{}}}],["lowercase",{"_index":1930,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":3259,"title":{},"body":{"index.html":{}}}],["mail",{"_index":112,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/ApiMailController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{}}}],["mail')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail')@useguards(undefined",{"_index":2895,"title":{},"body":{"controllers/UserController.html":{}}}],["mail'})@apiokresponse({type",{"_index":107,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail.command",{"_index":181,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/SendMailCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.command.ts",{"_index":1433,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:1",{"_index":1434,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:10",{"_index":2544,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:6",{"_index":1435,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:8",{"_index":2545,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.controller",{"_index":275,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.controller.ts",{"_index":252,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.controller.ts:16",{"_index":257,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.event",{"_index":184,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["mail.event.ts",{"_index":1461,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:1",{"_index":2554,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:11",{"_index":2558,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:13",{"_index":2556,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:3",{"_index":1464,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:5",{"_index":1465,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:6",{"_index":1467,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:7",{"_index":1466,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:9",{"_index":2555,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.exception",{"_index":1257,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["mail.exception.ts",{"_index":1540,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.exception.ts:3",{"_index":1542,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{}}}],["mail.module",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["mail.module.ts",{"_index":270,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.query",{"_index":187,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["mail.query.ts",{"_index":1639,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["mail.service",{"_index":260,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["mail.service.ts",{"_index":279,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:10",{"_index":281,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:7",{"_index":280,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail/api",{"_index":251,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{}}}],["mail/cqrs/command/send",{"_index":2543,"title":{},"body":{"classes/SendMailCommand.html":{}}}],["mail/cqrs/event/send",{"_index":2553,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail/cqrs/handler/command/send",{"_index":2546,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["mail/cqrs/handler/event/send",{"_index":2559,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["mail/domain/dto/mail.dto.ts",{"_index":2068,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:12",{"_index":2072,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:15",{"_index":2074,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:18",{"_index":2073,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:4",{"_index":2070,"title":{},"body":{"classes/MailDto.html":{}}}],["mail_api",{"_index":3192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maildto",{"_index":255,"title":{"classes/MailDto.html":{}},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"classes/MailDto.html":{}}}],["maillandingpagedto",{"_index":1646,"title":{"classes/MailLandingPageDto.html":{}},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{}}}],["mailrequiredexception",{"_index":2080,"title":{"classes/MailRequiredException.html":{}},"body":{"classes/MailRequiredException.html":{},"injectables/UserService.html":{}}}],["mailresponse",{"_index":129,"title":{"classes/MailResponse.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"classes/MailResponse.html":{}}}],["mails",{"_index":142,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mails'})@apiokresponse({type",{"_index":116,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mailslandingpagelist",{"_index":1656,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["manytomany",{"_index":894,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":869,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":73,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":35,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["match",{"_index":1721,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["matches.query",{"_index":1738,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["matches.query.ts",{"_index":1732,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:1",{"_index":1735,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:2",{"_index":1736,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":88,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring().split('.')[1",{"_index":2795,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["math.random().tostring(10).split('.')[1",{"_index":3100,"title":{},"body":{"injectables/UserService.html":{}}}],["max",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":3333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":907,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":2612,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(255",{"_index":916,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":3331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["me')@useguards(undefined",{"_index":2879,"title":{},"body":{"controllers/UserController.html":{}}}],["media",{"_index":565,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":858,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":911,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["media.groupbannerpicture",{"_index":1811,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":1824,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":957,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":974,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":460,"title":{"entities/MediaEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediarepository",{"_index":500,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["member",{"_index":2534,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":2633,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":1809,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":454,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":1828,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:17",{"_index":1835,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":1837,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":1830,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":1834,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":1831,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":1838,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":1832,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":1839,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":2532,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:2",{"_index":2536,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":2535,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":2537,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":1877,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":1867,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":567,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"classes/InvalidParameterEntityException.html":{},"classes/MailDto.html":{},"entities/MessageEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"controllers/UserController.html":{}}}],["message.author",{"_index":860,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":1009,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":912,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":462,"title":{"entities/MessageEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{}}}],["messagepatern",{"_index":702,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagerepository",{"_index":501,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["messages",{"_index":814,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":1992,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":246,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":3303,"title":{},"body":{"todo.html":{}}}],["minlength",{"_index":2404,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":2611,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":3165,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["mixin(roleguardmixin",{"_index":3343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":149,"title":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"modules/HealthCheckModule.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/ProfileModule.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["module:entities",{"_index":2634,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":151,"title":{"modules.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1875,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":1547,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":83,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["nestjs",{"_index":3130,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/common",{"_index":122,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MailRequiredException.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommandHandler.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":3136,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":2133,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":2777,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["nestjs/cqrs",{"_index":170,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":724,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":168,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"modules/ProfileModule.html":{},"classes/SendMailCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":719,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3140,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":128,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthCheckController.html":{},"classes/MailDto.html":{},"controllers/ProfileController.html":{},"entities/ReferralCodeEntity.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1848,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":277,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"modules/AuthModule.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1606,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":2620,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity",{"_index":472,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["network.entity.ts",{"_index":2618,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:34",{"_index":2628,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:37",{"_index":2629,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:40",{"_index":2631,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:43",{"_index":2627,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:50",{"_index":2624,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:57",{"_index":2625,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:60",{"_index":2630,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:63",{"_index":2626,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["never",{"_index":1991,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":224,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["new_call",{"_index":3208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_group_message",{"_index":3207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_message",{"_index":3205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newpassword",{"_index":2822,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{}}}],["newprofile",{"_index":1154,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newprofile.occupations",{"_index":1164,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["newuser",{"_index":1285,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["next",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":1604,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":3198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":3241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":3264,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":3269,"title":{},"body":{"index.html":{}}}],["none",{"_index":3238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_diffusible",{"_index":3244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":815,"title":{},"body":{"entities/CardEntity.html":{}}}],["notification",{"_index":581,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["notification.conversation",{"_index":1011,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["notification.entity",{"_index":1016,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["notification.profile",{"_index":2293,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["notification.user",{"_index":2981,"title":{},"body":{"entities/UserEntity.html":{}}}],["notificationentity",{"_index":478,"title":{"entities/NotificationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationrepository",{"_index":508,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["notifications",{"_index":998,"title":{},"body":{"entities/ConversationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationtypeenum",{"_index":2151,"title":{},"body":{"entities/NotificationEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.info",{"_index":2157,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["nousertraceexception",{"_index":2128,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{}}}],["npm",{"_index":3265,"title":{},"body":{"index.html":{}}}],["null",{"_index":837,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"todo.html":{}}}],["null'})@joincolumn",{"_index":1812,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":871,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":2296,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":37,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":863,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"classes/RegisterHandler.html":{}}}],["number(process.env.port_api_log",{"_index":199,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_mail",{"_index":202,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_waiting_list",{"_index":205,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["numberofshares",{"_index":816,"title":{},"body":{"entities/CardEntity.html":{}}}],["object",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/ProfileController.html":{}}}],["object(log.body",{"_index":249,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["object.assign(partial",{"_index":2088,"title":{},"body":{"classes/MailResponse.html":{}}}],["object.assign(this",{"_index":940,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["object.keys(constraints).map(key",{"_index":1921,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":569,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["occupation.cards",{"_index":870,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.entity",{"_index":908,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["occupation.profiles",{"_index":2295,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation_id",{"_index":2315,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationentity",{"_index":464,"title":{"entities/OccupationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationentity.companies",{"_index":981,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":969,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationid",{"_index":1159,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationpromises",{"_index":1157,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationrepository",{"_index":502,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupations",{"_index":817,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["occupations.length",{"_index":1163,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["occupationsid",{"_index":1125,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/CreateProfileRequest.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileRequest.html":{}}}],["occurred",{"_index":1428,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":296,"title":{},"body":{"controllers/AppController.html":{}}}],["old",{"_index":2542,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["ondelete",{"_index":39,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":1927,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":895,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":833,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":896,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["onetoone(undefined",{"_index":857,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":3246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":3245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":3240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":3242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":2710,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":197,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["organisation",{"_index":3261,"title":{},"body":{"index.html":{}}}],["os",{"_index":1024,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":3289,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":818,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/ShiftProfileOwnerEvent.html":{},"miscellaneous/enumerations.html":{}}}],["owner.command",{"_index":2324,"title":{},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["owner.command.ts",{"_index":2578,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:2",{"_index":2580,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.command.ts:3",{"_index":2579,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["owner.event",{"_index":2335,"title":{},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["owner.event.ts",{"_index":2589,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:2",{"_index":2591,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:3",{"_index":2594,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:5",{"_index":2593,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.event.ts:6",{"_index":2590,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["owner.request",{"_index":2382,"title":{},"body":{"injectables/ProfileService.html":{}}}],["owner.request.ts",{"_index":2602,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:2",{"_index":2604,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["owner.request.ts:3",{"_index":2603,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["ownercompanies",{"_index":2281,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":948,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":3133,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":98,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"changelog.html":{}}}],["page.controller",{"_index":173,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.controller.ts",{"_index":95,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:17",{"_index":117,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:26",{"_index":109,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.dto",{"_index":1648,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page.dto.ts",{"_index":2076,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:1",{"_index":2078,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:2",{"_index":2079,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.module",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.ts",{"_index":163,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.service",{"_index":124,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["page.service.ts",{"_index":209,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:11",{"_index":215,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:19",{"_index":216,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:8",{"_index":214,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page/api",{"_index":94,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{}}}],["page/cqrs/command/delete",{"_index":1432,"title":{},"body":{"classes/DeleteMailCommand.html":{},"injectables/UserService.html":{}}}],["page/cqrs/event/delete",{"_index":1460,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["page/cqrs/handler/command/delete",{"_index":1436,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["page/cqrs/handler/event/delete",{"_index":1468,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["page/cqrs/handler/query/get",{"_index":1640,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["page/cqrs/query/get",{"_index":1638,"title":{},"body":{"classes/GetAllMailQuery.html":{}}}],["page/domain/dto/mail",{"_index":2075,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page/domain/response/mail.response.ts",{"_index":2085,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:1",{"_index":2086,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:6",{"_index":2087,"title":{},"body":{"classes/MailResponse.html":{}}}],["param",{"_index":2239,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":2941,"title":{},"body":{"controllers/UserController.html":{}}}],["parameter",{"_index":1143,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":1420,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":1402,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":1385,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":1411,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":939,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"classes/RestoreUserCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserRoleCommand.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["passport",{"_index":2025,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":718,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2022,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2027,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":2033,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":589,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/InvalidPasswordException.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SamePasswordException.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["password')@useguards(undefined",{"_index":2912,"title":{},"body":{"controllers/UserController.html":{}}}],["password.exception",{"_index":1264,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"injectables/UserService.html":{}}}],["password.exception.ts",{"_index":1923,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["password.exception.ts:3",{"_index":1924,"title":{},"body":{"classes/InvalidPasswordException.html":{},"classes/SamePasswordException.html":{}}}],["passwordfield",{"_index":2055,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["path",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["payload",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":2721,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["payload.userid",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["paymententity",{"_index":2668,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":3217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":2282,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":3154,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":949,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":819,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":1810,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipe",{"_index":1653,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["pipetransform",{"_index":1988,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plaintextpassword",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["plan",{"_index":571,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":1550,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":466,"title":{"entities/PlanEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity.subscriptions",{"_index":2682,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["planrepository",{"_index":503,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["platform",{"_index":1025,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["port",{"_index":198,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["post",{"_index":258,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post('/')@httpcode(200)@useguards(undefined",{"_index":256,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["post('/admin/create",{"_index":2204,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post('/admin/create')@useguards(undefined",{"_index":2875,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/criteria",{"_index":2936,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/generate",{"_index":2894,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/admin/get",{"_index":2230,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('/admin/restore",{"_index":2929,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/api/test/create",{"_index":418,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["post('/login",{"_index":666,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@useguards(undefined",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1381,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgreserrorcode",{"_index":3171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgresql",{"_index":3266,"title":{},"body":{"index.html":{}}}],["pour",{"_index":1983,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":1399,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":96,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["premium",{"_index":3215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prettier",{"_index":3272,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":2974,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":2176,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":74,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":51,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":221,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"injectables/UserService.html":{}}}],["process",{"_index":738,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["process.env.api_name",{"_index":1087,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.api_version",{"_index":1089,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.jwt_access_token_expiration_time",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":744,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":741,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1378,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":1423,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":1405,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":1389,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":1414,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":1418,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":1400,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":1383,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":1409,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":1424,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":1408,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":1398,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":1416,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":1422,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":1404,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":1388,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":1413,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":1419,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":1401,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":1384,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":1410,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":1425,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":1407,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":1396,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":1415,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":1421,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":1403,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":1387,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":1412,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":1609,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":1566,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["process.env.verbose_log",{"_index":1084,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["prod",{"_index":1379,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":573,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["profile')@httpcode(201)@useguards(undefined",{"_index":2205,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile')@httpcode(204)@useguards(undefined",{"_index":2209,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile).catch(error",{"_index":2270,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.command",{"_index":1132,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.command.ts",{"_index":1123,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/DeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:2",{"_index":1473,"title":{},"body":{"classes/DeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:3",{"_index":2734,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{}}}],["profile.command.ts:4",{"_index":1128,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:5",{"_index":1127,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.command.ts:6",{"_index":1126,"title":{},"body":{"classes/CreateProfileCommand.html":{}}}],["profile.companies",{"_index":930,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.controller",{"_index":2321,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1129,"title":{},"body":{"classes/CreateProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["profile.dto.ts",{"_index":1175,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/IdProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:2",{"_index":1905,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["profile.dto.ts:4",{"_index":1180,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts:5",{"_index":1178,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.enum",{"_index":1181,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.enum.ts",{"_index":3176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["profile.event",{"_index":1147,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"modules/ProfileModule.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["profile.event.ts",{"_index":1183,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:2",{"_index":2648,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:3",{"_index":2650,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profile.event.ts:4",{"_index":1188,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:5",{"_index":1187,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.event.ts:6",{"_index":1184,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["profile.id",{"_index":2646,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["profile.personalcards",{"_index":873,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.query",{"_index":1662,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.query.ts",{"_index":1659,"title":{},"body":{"classes/GetAllProfileQuery.html":{}}}],["profile.request",{"_index":2247,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["profile.request.ts",{"_index":1208,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:4",{"_index":1213,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:5",{"_index":1211,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:6",{"_index":1212,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.request.ts:7",{"_index":1210,"title":{},"body":{"classes/CreateProfileRequest.html":{},"classes/UpdateProfileRequest.html":{}}}],["profile.savedcard",{"_index":876,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.service",{"_index":2242,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile.user",{"_index":2585,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profile/:id",{"_index":2267,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/:id')@httpcode(204)@useguards(undefined",{"_index":2212,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile/domain/entities/profile.entity",{"_index":897,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profile_id",{"_index":2313,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profilecontroller",{"_index":2190,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profileentity",{"_index":468,"title":{"entities/ProfileEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteProfileCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"entities/UserEntity.html":{}}}],["profileentity.bannerpicture",{"_index":2112,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":2008,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":2004,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.notifications",{"_index":2148,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["profileentity.occupations",{"_index":2169,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":971,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":2114,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":2096,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":2097,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileid",{"_index":2214,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{}}}],["profilemodule",{"_index":2316,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepicture",{"_index":950,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profilerepository",{"_index":504,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["profileresponse",{"_index":1136,"title":{"classes/ProfileResponse.html":{}},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEvent.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{}}}],["profileresponse(savedprofile",{"_index":1172,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["profiles",{"_index":1664,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/OccupationEntity.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/UserEntity.html":{}}}],["profiles')@httpcode(201)@useguards(undefined",{"_index":2220,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profiles.map",{"_index":1666,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["profileservice",{"_index":2241,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["profileswhosavedcard",{"_index":820,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":3131,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":114,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.all(occupationpromises",{"_index":1162,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["property",{"_index":2635,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":707,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/NoUserTraceException.html":{}}}],["providers",{"_index":164,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":3099,"title":{},"body":{"injectables/UserService.html":{}}}],["public",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEvent.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/ListRolesDto.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/ProfileResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":2240,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["put('/admin/:id",{"_index":2940,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id')@useguards(undefined",{"_index":2907,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/:id/role",{"_index":2943,"title":{},"body":{"controllers/UserController.html":{}}}],["put('/admin/update",{"_index":2237,"title":{},"body":{"controllers/ProfileController.html":{}}}],["put('/public/update",{"_index":2234,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["query",{"_index":1643,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["query.email",{"_index":1719,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.isdeleted",{"_index":1693,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getprofilewithcriteriadto.usernameprofile",{"_index":1695,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdfrom",{"_index":1798,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.createdto",{"_index":1800,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedfrom",{"_index":1804,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.deletedto",{"_index":1805,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.isdeleted",{"_index":1797,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedfrom",{"_index":1801,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.getuserwithcriteriadto.updatedto",{"_index":1802,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query.id",{"_index":1674,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["query.userid",{"_index":1741,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserQueryHandler.html":{}}}],["query.username",{"_index":1730,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{}}}],["query/get",{"_index":1645,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["query/health",{"_index":1870,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybuilder",{"_index":1691,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.createdat",{"_index":1799,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.deletedat",{"_index":1806,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.andwhere('user.updatedat",{"_index":1803,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.getmany",{"_index":1697,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["querybuilder.setfindoptions",{"_index":1694,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["querybuilder.where('profile.usernameprofile",{"_index":1696,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["querybus",{"_index":213,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["queryhandler",{"_index":1644,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(getallmailquery",{"_index":1649,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["queryhandler(getallprofilequery",{"_index":1663,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["queryhandler(getprofilebyidquery",{"_index":1673,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["queryhandler(getprofilesbyuseridquery",{"_index":1700,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["queryhandler(getprofilewithcriteriaquery",{"_index":1690,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["queryhandler(getuserbyemailquery",{"_index":1717,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["queryhandler(getuserbyusernamequery",{"_index":1729,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":1739,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["queryhandler(getuserloginquery",{"_index":1754,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["queryhandler(getuserquery",{"_index":1768,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["queryhandler(getuserwithcriteriaquery",{"_index":1795,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":1872,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["random",{"_index":1300,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["readme.md",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":1916,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["refactor",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["referal",{"_index":1552,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["referral",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["referral_code",{"_index":583,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcode",{"_index":1241,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"classes/RegisterHandler.html":{},"entities/UserEntity.html":{}}}],["referralcode.owner",{"_index":2986,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcode.usedby",{"_index":2992,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcodeentity",{"_index":480,"title":{"entities/ReferralCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["referralcoderepository",{"_index":509,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcodes",{"_index":2963,"title":{},"body":{"entities/UserEntity.html":{}}}],["reflect",{"_index":3156,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["refresh(@req",{"_index":700,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":1733,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":670,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":3221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp('^(?=.*[a",{"_index":1269,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["regexp('^(?=.*\\\\d)(?=.*[a",{"_index":2811,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["regexvalidatepassword",{"_index":1224,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["register",{"_index":1276,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["registercommand",{"_index":772,"title":{"classes/RegisterCommand.html":{}},"body":{"injectables/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{}}}],["registercommand(signupdto.username",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":2447,"title":{},"body":{"classes/RegisterEventHandler.html":{},"entities/UserEntity.html":{}}}],["registerevent",{"_index":2436,"title":{"classes/RegisterEvent.html":{}},"body":{"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["registerevent(inserteduser.id",{"_index":2471,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registereventhandler",{"_index":735,"title":{"classes/RegisterEventHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{}}}],["registerhandler",{"_index":727,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{}}}],["rejected",{"_index":3223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":1392,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":918,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["remove",{"_index":2487,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@req",{"_index":2950,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":3067,"title":{},"body":{"injectables/UserService.html":{}}}],["remove(requestuser",{"_index":2899,"title":{},"body":{"controllers/UserController.html":{}}}],["removed",{"_index":2495,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtoken",{"_index":3048,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":3069,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":2472,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["removerefreshtokencommand(userid",{"_index":3085,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommandhandler",{"_index":2477,"title":{"classes/RemoveRefreshTokenCommandHandler.html":{}},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["removerefreshtokenevent",{"_index":2483,"title":{"classes/RemoveRefreshTokenEvent.html":{}},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtokeneventhandler",{"_index":2490,"title":{"classes/RemoveRefreshTokenEventHandler.html":{}},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["removeuser",{"_index":487,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["removeuser(userid",{"_index":518,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["repository",{"_index":489,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["req",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/ProfileController.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["req.baseurl",{"_index":1617,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":1621,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":1619,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":2501,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":2505,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":1631,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":1616,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req?.headers['user",{"_index":2506,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["request",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"miscellaneous/variables.html":{}}}],["request.exception.ts",{"_index":2730,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.exception.ts:3",{"_index":2731,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.res",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.res.setheader('set",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.url",{"_index":1598,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["request.user",{"_index":698,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.headers?.authorization?.split",{"_index":2030,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["requestloggingmiddleware",{"_index":344,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["requestuser",{"_index":608,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"interfaces/RequestUser.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requestuser.user",{"_index":2263,"title":{},"body":{"controllers/ProfileController.html":{}}}],["required",{"_index":2084,"title":{},"body":{"classes/MailRequiredException.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["required.exception",{"_index":3082,"title":{},"body":{"injectables/UserService.html":{}}}],["required.exception.ts",{"_index":2082,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["required.exception.ts:3",{"_index":2083,"title":{},"body":{"classes/MailRequiredException.html":{}}}],["res",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":1625,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":1627,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":1623,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":312,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"todo.html":{}}}],["response.send(user",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(204",{"_index":694,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus).json",{"_index":1595,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["responsebody",{"_index":1026,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":1027,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":347,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["rest",{"_index":3260,"title":{},"body":{"index.html":{}}}],["restore",{"_index":2526,"title":{},"body":{"classes/RestoreUserEvent.html":{}}}],["restored",{"_index":2530,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["restoreuser",{"_index":2870,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreuser(@body",{"_index":2930,"title":{},"body":{"controllers/UserController.html":{}}}],["restoreuser(userid",{"_index":2902,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["restoreusercommand",{"_index":2515,"title":{"classes/RestoreUserCommand.html":{}},"body":{"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["restoreusercommandhandler",{"_index":2517,"title":{"classes/RestoreUserCommandHandler.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["restoreuserevent",{"_index":2520,"title":{"classes/RestoreUserEvent.html":{}},"body":{"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{}}}],["restoreuserevent(command.id",{"_index":2524,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["restoreusereventhandler",{"_index":2527,"title":{"classes/RestoreUserEventHandler.html":{}},"body":{"classes/RestoreUserEventHandler.html":{}}}],["results",{"_index":87,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":144,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":1779,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{},"entities/GroupMembershipEntity.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.command",{"_index":2845,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["role.command.ts",{"_index":2841,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:4",{"_index":2843,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.command.ts:5",{"_index":2842,"title":{},"body":{"classes/UpdateUserRoleCommand.html":{}}}],["role.enum",{"_index":135,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/ProfileController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["role.enum.ts",{"_index":3186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["role.event",{"_index":2847,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["role.event.ts",{"_index":2852,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:4",{"_index":2855,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:5",{"_index":2854,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["role.event.ts:6",{"_index":2856,"title":{},"body":{"classes/UpdateUserRoleEvent.html":{}}}],["rolecompanyemployeeenum",{"_index":932,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":941,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":1836,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["rolegroupmembershipenum.member",{"_index":1840,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roleguard",{"_index":131,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["roleguardmixin",{"_index":3336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleprofile",{"_index":1176,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["roleprofileenum",{"_index":1179,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{},"miscellaneous/enumerations.html":{}}}],["roleprofileenum.classic",{"_index":2312,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["roles",{"_index":592,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/ListRolesDto.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.dto",{"_index":2920,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.dto.ts",{"_index":2041,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:3",{"_index":2042,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.dto.ts:8",{"_index":2043,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["roles.roles",{"_index":2946,"title":{},"body":{"controllers/UserController.html":{}}}],["roles.some(role",{"_index":3341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":1028,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["routes",{"_index":3280,"title":{},"body":{"index.html":{}}}],["rss",{"_index":1882,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":3275,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":2131,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1443,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"dependencies.html":{}}}],["same",{"_index":2541,"title":{},"body":{"classes/SamePasswordException.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["samepasswordexception",{"_index":2538,"title":{"classes/SamePasswordException.html":{}},"body":{"classes/SamePasswordException.html":{},"injectables/UserService.html":{}}}],["saved",{"_index":2306,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":2283,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedprofile",{"_index":1169,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["saveduser",{"_index":1289,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":1291,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.mail",{"_index":1293,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.referralcode",{"_index":1296,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.roles",{"_index":1294,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":1292,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["schema",{"_index":3282,"title":{},"body":{"index.html":{}}}],["screensize",{"_index":1029,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["secret",{"_index":740,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":2032,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":902,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1720,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"entities/UserEntity.html":{}}}],["send",{"_index":2557,"title":{},"body":{"classes/SendMailEvent.html":{},"todo.html":{}}}],["sendmail",{"_index":253,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmail(@body",{"_index":264,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["sendmail(maildto",{"_index":254,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmailcommand",{"_index":282,"title":{"classes/SendMailCommand.html":{}},"body":{"injectables/ApiMailService.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailcommandhandler",{"_index":271,"title":{"classes/SendMailCommandHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailCommandHandler.html":{}}}],["sendmailevent",{"_index":2547,"title":{"classes/SendMailEvent.html":{}},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{}}}],["sendmaileventhandler",{"_index":273,"title":{"classes/SendMailEventHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailEventHandler.html":{}}}],["sent",{"_index":2561,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["serialize",{"_index":3297,"title":{},"body":{"todo.html":{}}}],["serializing",{"_index":3299,"title":{},"body":{"todo.html":{}}}],["service",{"_index":1553,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":836,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{}}}],["setcurrentrefreshtoken",{"_index":3049,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":3072,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":2563,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":3086,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommandhandler",{"_index":2566,"title":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{}}}],["setcurrentrefreshtokenevent",{"_index":2571,"title":{"classes/SetCurrentRefreshTokenEvent.html":{}},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["setcurrentrefreshtokeneventhandler",{"_index":2573,"title":{"classes/SetCurrentRefreshTokenEventHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["share",{"_index":900,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["shift",{"_index":2592,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["shifted",{"_index":2599,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileowner",{"_index":2349,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileowner(shiftprofileownerrequest",{"_index":2363,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownercommand",{"_index":2379,"title":{"classes/ShiftProfileOwnerCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownercommandhandler",{"_index":2322,"title":{"classes/ShiftProfileOwnerCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["shiftprofileownerevent",{"_index":2587,"title":{"classes/ShiftProfileOwnerEvent.html":{}},"body":{"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownereventhandler",{"_index":2333,"title":{"classes/ShiftProfileOwnerEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/ShiftProfileOwnerEventHandler.html":{}}}],["shiftprofileownerrequest",{"_index":2364,"title":{"classes/ShiftProfileOwnerRequest.html":{}},"body":{"injectables/ProfileService.html":{},"classes/ShiftProfileOwnerRequest.html":{}}}],["shiftprofileownerrequest.profileid",{"_index":2394,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shiftprofileownerrequest.userid",{"_index":2395,"title":{},"body":{"injectables/ProfileService.html":{}}}],["signin",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":667,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":2605,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"classes/TransferProfileToUserCommand.html":{}}}],["signoptions",{"_index":742,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":622,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{}}}],["signupdto.mail",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["siret",{"_index":951,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":2502,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":2503,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":914,"title":{},"body":{"entities/CardEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["social_network",{"_index":575,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":821,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":822,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.cards",{"_index":879,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetworkentity",{"_index":470,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["socialnetworkrepository",{"_index":505,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["socketid",{"_index":1998,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["soft",{"_index":2649,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdeleteprofile",{"_index":2350,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofile(id",{"_index":2366,"title":{},"body":{"injectables/ProfileService.html":{}}}],["softdeleteprofilecommand",{"_index":2376,"title":{"classes/SoftDeleteProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofilecommandhandler",{"_index":2336,"title":{"classes/SoftDeleteProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileCommandHandler.html":{}}}],["softdeleteprofileevent",{"_index":2642,"title":{"classes/SoftDeleteProfileEvent.html":{}},"body":{"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeleteprofileeventhandler",{"_index":2330,"title":{"classes/SoftDeleteProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/SoftDeleteProfileEventHandler.html":{}}}],["softdeleteusercommand",{"_index":2653,"title":{"classes/SoftDeleteUserCommand.html":{}},"body":{"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["softdeleteusercommand(id",{"_index":3091,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommand(userid",{"_index":3098,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteusercommandhandler",{"_index":2656,"title":{"classes/SoftDeleteUserCommandHandler.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["softdeleteuserevent",{"_index":2658,"title":{"classes/SoftDeleteUserEvent.html":{}},"body":{"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{}}}],["softdeleteuserevent(command.userid",{"_index":2660,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["softdeleteusereventhandler",{"_index":2662,"title":{"classes/SoftDeleteUserEventHandler.html":{}},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQuery.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailRequiredException.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SamePasswordException.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["space",{"_index":1892,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../api",{"_index":3167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../errorenum.ts",{"_index":3169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":3308,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":3249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":3170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres",{"_index":3172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":3174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.guard.ts",{"_index":3312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status",{"_index":3177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":3182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":3184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":3185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../verbose",{"_index":3187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":3188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":3310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":92,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:24",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:41",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:60",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:69",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:75",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:89",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":716,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:14",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:17",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:23",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:31",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:43",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:56",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:60",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":2433,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":2434,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:2",{"_index":2435,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/event",{"_index":2440,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["src/api/auth/cqrs/event/register.event.ts",{"_index":2437,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:1",{"_index":2438,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:2",{"_index":2439,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts",{"_index":2449,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:103",{"_index":2459,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:107",{"_index":2457,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:113",{"_index":2452,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:123",{"_index":2453,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:131",{"_index":2454,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:19",{"_index":2450,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:29",{"_index":2451,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:87",{"_index":2456,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:93",{"_index":2455,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:99",{"_index":2458,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":3209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":2606,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":2044,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["src/api/auth/guards/jwt",{"_index":2011,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["src/api/auth/guards/role.guard.ts",{"_index":3335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/auth/interface/request",{"_index":2510,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["src/api/auth/interface/token",{"_index":2720,"title":{},"body":{"interfaces/TokenPayload.html":{}}}],["src/api/auth/strategy/jwt",{"_index":2016,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":2035,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:11",{"_index":2036,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:26",{"_index":2038,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":2046,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/api/entities",{"_index":6,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":1353,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["src/api/profile/cqrs/command/create",{"_index":1122,"title":{},"body":{"classes/CreateProfileCommand.html":{}}}],["src/api/profile/cqrs/command/delete",{"_index":1472,"title":{},"body":{"classes/DeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/shift",{"_index":2577,"title":{},"body":{"classes/ShiftProfileOwnerCommand.html":{}}}],["src/api/profile/cqrs/command/soft",{"_index":2639,"title":{},"body":{"classes/SoftDeleteProfileCommand.html":{}}}],["src/api/profile/cqrs/command/transfer",{"_index":2723,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["src/api/profile/cqrs/command/update",{"_index":2733,"title":{},"body":{"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateProfileCommand.html":{}}}],["src/api/profile/cqrs/event/create",{"_index":1182,"title":{},"body":{"classes/CreateProfileEvent.html":{}}}],["src/api/profile/cqrs/event/delete",{"_index":1483,"title":{},"body":{"classes/DeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/shift",{"_index":2588,"title":{},"body":{"classes/ShiftProfileOwnerEvent.html":{}}}],["src/api/profile/cqrs/event/soft",{"_index":2647,"title":{},"body":{"classes/SoftDeleteProfileEvent.html":{}}}],["src/api/profile/cqrs/event/update",{"_index":2747,"title":{},"body":{"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{}}}],["src/api/profile/cqrs/handler/command/create",{"_index":1131,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/delete",{"_index":1475,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/shift",{"_index":2581,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/soft",{"_index":2640,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/command/update",{"_index":2735,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["src/api/profile/cqrs/handler/event/create",{"_index":1190,"title":{},"body":{"classes/CreateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/delete",{"_index":1485,"title":{},"body":{"classes/DeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/shift",{"_index":2595,"title":{},"body":{"classes/ShiftProfileOwnerEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/soft",{"_index":2651,"title":{},"body":{"classes/SoftDeleteProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/event/update",{"_index":2748,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["src/api/profile/cqrs/handler/query/get",{"_index":1661,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["src/api/profile/cqrs/query/get",{"_index":1658,"title":{},"body":{"classes/GetAllProfileQuery.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfilesByUserIdQuery.html":{}}}],["src/api/profile/domain/dto/create",{"_index":1174,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["src/api/profile/domain/dto/get",{"_index":1677,"title":{},"body":{"classes/GetProfileWithCriteriaDto.html":{}}}],["src/api/profile/domain/dto/id",{"_index":1904,"title":{},"body":{"classes/IdProfileDto.html":{}}}],["src/api/profile/domain/dto/update",{"_index":2746,"title":{},"body":{"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateProfileDto.html":{}}}],["src/api/profile/domain/entities/profile.entity",{"_index":469,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts",{"_index":2279,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:100",{"_index":2284,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:106",{"_index":2292,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:112",{"_index":2300,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:118",{"_index":2294,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:125",{"_index":2288,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:128",{"_index":2308,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:131",{"_index":2289,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:31",{"_index":2290,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:34",{"_index":2311,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:40",{"_index":2304,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:47",{"_index":2310,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:53",{"_index":2302,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:68",{"_index":2307,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:82",{"_index":2298,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:88",{"_index":2287,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/entities/profile.entity.ts:94",{"_index":2303,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["src/api/profile/domain/enum/role",{"_index":3213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/profile/domain/request/create",{"_index":1207,"title":{},"body":{"classes/CreateProfileRequest.html":{}}}],["src/api/profile/domain/request/get",{"_index":1703,"title":{},"body":{"classes/GetProfilesWithCriteriaRequest.html":{}}}],["src/api/profile/domain/request/shift",{"_index":2601,"title":{},"body":{"classes/ShiftProfileOwnerRequest.html":{}}}],["src/api/profile/domain/request/update",{"_index":2759,"title":{},"body":{"classes/UpdateProfileRequest.html":{}}}],["src/api/profile/domain/response/profile.response.ts",{"_index":2341,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:2",{"_index":2343,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:3",{"_index":2344,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:4",{"_index":2345,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/domain/response/profile.response.ts:6",{"_index":2342,"title":{},"body":{"classes/ProfileResponse.html":{}}}],["src/api/profile/profile.controller.ts",{"_index":2191,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:106",{"_index":2206,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:115",{"_index":2213,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:124",{"_index":2210,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:39",{"_index":2217,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:48",{"_index":2224,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:57",{"_index":2228,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:66",{"_index":2221,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:76",{"_index":2232,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:87",{"_index":2238,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.controller.ts:96",{"_index":2235,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/api/profile/profile.module.ts",{"_index":2320,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/api/profile/profile.service.ts",{"_index":2346,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:100",{"_index":2365,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:116",{"_index":2357,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:129",{"_index":2359,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:137",{"_index":2361,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:155",{"_index":2358,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:23",{"_index":2351,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:26",{"_index":2353,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:46",{"_index":2355,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:59",{"_index":2367,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/profile/profile.service.ts:72",{"_index":2369,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/api/user/cqrs/command/create",{"_index":1215,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":1491,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":2473,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/restore",{"_index":2516,"title":{},"body":{"classes/RestoreUserCommand.html":{}}}],["src/api/user/cqrs/command/set",{"_index":2564,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{}}}],["src/api/user/cqrs/command/soft",{"_index":2654,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["src/api/user/cqrs/command/update",{"_index":2761,"title":{},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserRoleCommand.html":{}}}],["src/api/user/cqrs/event/create",{"_index":1330,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["src/api/user/cqrs/event/delete",{"_index":1503,"title":{},"body":{"classes/DeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/login",{"_index":2062,"title":{},"body":{"classes/LoginOfUserEvent.html":{}}}],["src/api/user/cqrs/event/remove",{"_index":2484,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/restore",{"_index":2525,"title":{},"body":{"classes/RestoreUserEvent.html":{}}}],["src/api/user/cqrs/event/set",{"_index":2572,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{}}}],["src/api/user/cqrs/event/soft",{"_index":2661,"title":{},"body":{"classes/SoftDeleteUserEvent.html":{}}}],["src/api/user/cqrs/event/update",{"_index":2826,"title":{},"body":{"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":1222,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/delete",{"_index":1494,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/remove",{"_index":2478,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/restore",{"_index":2518,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/set",{"_index":2567,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/soft",{"_index":2657,"title":{},"body":{"classes/SoftDeleteUserCommandHandler.html":{}}}],["src/api/user/cqrs/handler/command/update",{"_index":2764,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":1337,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/delete",{"_index":1507,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/login",{"_index":2064,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/remove",{"_index":2491,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/restore",{"_index":2528,"title":{},"body":{"classes/RestoreUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/set",{"_index":2574,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/soft",{"_index":2663,"title":{},"body":{"classes/SoftDeleteUserEventHandler.html":{}}}],["src/api/user/cqrs/handler/event/update",{"_index":2833,"title":{},"body":{"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["src/api/user/cqrs/handler/query/get",{"_index":1715,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["src/api/user/cqrs/query/get",{"_index":1709,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaQuery.html":{}}}],["src/api/user/domain/dto/create",{"_index":411,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{}}}],["src/api/user/domain/dto/generate",{"_index":1635,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["src/api/user/domain/dto/get",{"_index":1774,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["src/api/user/domain/dto/list",{"_index":2040,"title":{},"body":{"classes/ListRolesDto.html":{}}}],["src/api/user/domain/dto/update",{"_index":2820,"title":{},"body":{"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{}}}],["src/api/user/domain/dto/user",{"_index":414,"title":{},"body":{"controllers/AppTestE2eController.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{}}}],["src/api/user/domain/entities/user.entity",{"_index":413,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":2959,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:100",{"_index":2982,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:105",{"_index":2966,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:111",{"_index":2967,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:114",{"_index":2991,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:117",{"_index":2970,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:33",{"_index":2971,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:36",{"_index":2980,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:40",{"_index":2995,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:48",{"_index":2983,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:56",{"_index":2972,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:63",{"_index":2969,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:66",{"_index":2979,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:69",{"_index":2985,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:76",{"_index":2976,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:79",{"_index":2988,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:86",{"_index":2984,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:89",{"_index":2990,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:92",{"_index":2987,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:95",{"_index":2993,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/enum/user",{"_index":3234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/create",{"_index":1342,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["src/api/user/domain/response/user",{"_index":2999,"title":{},"body":{"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":3038,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:10",{"_index":3040,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:11",{"_index":3042,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:12",{"_index":3043,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:13",{"_index":3041,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":3039,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.module.ts",{"_index":3027,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":3044,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:111",{"_index":3071,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:120",{"_index":3059,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:124",{"_index":3064,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:128",{"_index":3078,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:136",{"_index":3076,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:150",{"_index":3054,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:155",{"_index":3057,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:160",{"_index":3061,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:164",{"_index":3060,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:33",{"_index":3051,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:36",{"_index":3052,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:40",{"_index":3066,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:44",{"_index":3070,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:48",{"_index":3073,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:52",{"_index":3055,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:56",{"_index":3058,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:64",{"_index":3074,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:77",{"_index":3068,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:86",{"_index":3062,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/web/user.controller.ts",{"_index":2862,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:112",{"_index":2888,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:129",{"_index":2898,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:145",{"_index":2908,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:164",{"_index":2916,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:179",{"_index":2910,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:197",{"_index":2913,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:216",{"_index":2901,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:232",{"_index":2880,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:248",{"_index":2892,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:36",{"_index":2876,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:51",{"_index":2896,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:67",{"_index":2905,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:81",{"_index":2882,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/web/user.controller.ts:96",{"_index":2885,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app.controller.ts",{"_index":285,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:31",{"_index":294,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":435,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:46",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":373,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":374,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":3250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":1599,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["src/middleware/request",{"_index":2496,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["src/middleware/response",{"_index":2512,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["src/util/config/database.configuration.ts",{"_index":1367,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/database.configuration.ts:31",{"_index":1369,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":3313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":1539,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidIdException.html":{},"classes/InvalidMailException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/InvalidUsernameException.html":{},"classes/MailRequiredException.html":{},"classes/NoUserTraceException.html":{},"classes/SamePasswordException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":1554,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["src/util/exception/errorenum.ts",{"_index":3193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":1580,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["src/util/global/extend",{"_index":2702,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["src/util/pipe/is",{"_index":409,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["ssl",{"_index":1390,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":1527,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":1513,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":3102,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":3276,"title":{},"body":{"index.html":{}}}],["state",{"_index":19,"title":{},"body":{"entities/AddressEntity.html":{}}}],["static",{"_index":2058,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":313,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"controllers/ProfileController.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1596,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":1978,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":1979,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":3179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":2699,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":2700,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":1888,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["strategy",{"_index":2024,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":729,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":731,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":720,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":20,"title":{},"body":{"entities/AddressEntity.html":{}}}],["string",{"_index":26,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GenerateUserDto.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserWithCriteriaDto.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/IdProfileDto.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"todo.html":{}}}],["strip",{"_index":1551,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":577,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":2671,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":2689,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":473,"title":{"entities/StripEventEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{}}}],["stripeventrepository",{"_index":506,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscription",{"_index":579,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/InvoicesEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":1536,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["subscription.enum.ts",{"_index":3181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":2989,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":476,"title":{"entities/SubscriptionEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscriptionentity.discountcodes",{"_index":1538,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":1529,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":1986,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":1966,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":2187,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptionrepository",{"_index":507,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscriptions",{"_index":1514,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":311,"title":{},"body":{"controllers/AppController.html":{}}}],["summary",{"_index":141,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["super",{"_index":1917,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["super('invalid",{"_index":1908,"title":{},"body":{"classes/InvalidIdException.html":{},"classes/InvalidUsernameException.html":{}}}],["super('mail",{"_index":1543,"title":{},"body":{"classes/DuplicateMailException.html":{},"classes/InvalidMailException.html":{},"classes/MailRequiredException.html":{}}}],["super('new",{"_index":2540,"title":{},"body":{"classes/SamePasswordException.html":{}}}],["super('unauthorized",{"_index":2732,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":3037,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":1546,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":2134,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super.canactivate(context",{"_index":3339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super_admin",{"_index":3235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":3271,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":1982,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":3285,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":3286,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3159,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1395,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["tax_rate",{"_index":1968,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":1940,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["tcp",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":1857,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":378,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"changelog.html":{}}}],["test/test",{"_index":376,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["testapi",{"_index":3277,"title":{},"body":{"index.html":{}}}],["text",{"_index":1040,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["text/html",{"_index":309,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["then((mailslandingpagelist",{"_index":1655,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["then(profile",{"_index":1675,"title":{},"body":{"classes/GetProfileByIdQueryHandler.html":{}}}],["thibaud",{"_index":3254,"title":{},"body":{"index.html":{}}}],["things",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["this.addressrepository.query('delete",{"_index":584,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.api_name",{"_index":1086,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_type",{"_index":1091,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_version",{"_index":1088,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.apilandingpageservice.deletemail(mail",{"_index":148,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apilandingpageservice.getall",{"_index":145,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":1578,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apilogservice.createlogformethode",{"_index":1200,"title":{},"body":{"classes/CreateProfileEventHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["this.apimailservice.sendmail(maildto",{"_index":265,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["this.appservice.cleardatabasetest",{"_index":417,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.createusertest(createuserdto",{"_index":420,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.getallusers",{"_index":426,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":315,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getuser(userid",{"_index":428,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.removeuser(useriddto.userid",{"_index":424,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.authenticationservice.login(login",{"_index":2056,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":693,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":671,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(request.user.id",{"_index":701,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":669,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromauthtoken(data",{"_index":704,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardrepository.query('delete",{"_index":545,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.client.emit('create",{"_index":1095,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["this.client.emit('send",{"_index":2551,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["this.client.send",{"_index":1446,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["this.commandbus.execute",{"_index":223,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.commandbus.execute(new",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.companyemployeerepository.query('delete",{"_index":548,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.companyrepository.query('delete",{"_index":547,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.connectedcardrepository.query('delete",{"_index":550,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.conversationrepository.query('delete",{"_index":552,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.createdat",{"_index":2716,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":1853,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":2719,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.discountcoderepository.query('delete",{"_index":554,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":1893,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.eventbus.publish",{"_index":1171,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.eventbus.publish(new",{"_index":1297,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.generatecode(number(process.env.length_referral_code",{"_index":1306,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.generatepassword",{"_index":3094,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generateuniquereferralcode",{"_index":1287,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.getuserbyreferralcode(code",{"_index":1308,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.groupmembershiprepository.query('delete",{"_index":558,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.grouprepository.query('delete",{"_index":556,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.healthcheckservice.check",{"_index":1873,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.invoicesrepository.query('delete",{"_index":560,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.isduplicatedemail(command.createuserdto.mail",{"_index":1280,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedemail(command.mail",{"_index":2463,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicatedemail(command.user.mail",{"_index":2784,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.createuserdto.username",{"_index":1274,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.user.username",{"_index":2782,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicatedusername(command.username",{"_index":2462,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicateofdeletedmail(command.user.mail",{"_index":2786,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isduplicateofdeletedusername(command.user.username",{"_index":2785,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.isvalidemail(command.createuserdto.mail",{"_index":1283,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidemail(command.mail",{"_index":2466,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.createuserdto.password",{"_index":1281,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidpassword(command.password",{"_index":2464,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.updateusercredentialdto.newpassword",{"_index":2817,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.isvalidusername(command.createuserdto.username",{"_index":1284,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.isvalidusername(command.username",{"_index":2468,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.joinedconversationrepository.query('delete",{"_index":562,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.jwtservice.sign(payload",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(authenticationtoken",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger_console.log('new",{"_index":2448,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["this.login",{"_index":3011,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.mediarepository.query('delete",{"_index":564,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":1878,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":1884,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.messagerepository.query('delete",{"_index":566,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.notificationrepository.query('delete",{"_index":580,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository",{"_index":1160,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["this.occupationrepository.query('delete",{"_index":568,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.password",{"_index":3012,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.planrepository.query('delete",{"_index":570,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository",{"_index":1479,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profilerepository.createquerybuilder('profile",{"_index":1692,"title":{},"body":{"classes/GetProfileWithCriteriaQueryHandler.html":{}}}],["this.profilerepository.find",{"_index":1665,"title":{},"body":{"classes/GetAllProfileQueryHandler.html":{}}}],["this.profilerepository.query('delete",{"_index":572,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository.remove(profile",{"_index":1482,"title":{},"body":{"classes/DeleteProfileCommandHandler.html":{}}}],["this.profilerepository.save(newprofile).then(profile",{"_index":1170,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["this.profilerepository.save(profile",{"_index":2586,"title":{},"body":{"classes/ShiftProfileOwnerCommandHandler.html":{}}}],["this.profilerepository.softdelete",{"_index":2645,"title":{},"body":{"classes/SoftDeleteProfileCommandHandler.html":{}}}],["this.profilerepository.update(profile.id",{"_index":2742,"title":{},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["this.profileservice.createprofile(profile).catch(error",{"_index":2274,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(profileid).catch(error",{"_index":2276,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.deleteprofile(requestuser.user.id).catch(error",{"_index":2278,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofile(profileid).catch(error",{"_index":2258,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(id).catch(error",{"_index":2264,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofilebyuserid(userid).catch(error",{"_index":2261,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofiles().catch(error",{"_index":2255,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getprofileswithcriteria(getprofileswithcriteriarequest).catch(error",{"_index":2266,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(id",{"_index":2272,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.updateprofile(profileid",{"_index":2269,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.querybus.execute",{"_index":2396,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.querybus.execute(new",{"_index":225,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.referralcoderepository.query('delete",{"_index":582,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.regexvalidatepassword",{"_index":1268,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.regexvalidatepassword.test(password",{"_index":1313,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.socialnetworkrepository.query('delete",{"_index":574,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.stripeventrepository.query('delete",{"_index":576,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.subscriptionrepository.query('delete",{"_index":578,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":1874,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":2718,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userlist",{"_index":3004,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository",{"_index":1149,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.createquerybuilder('user",{"_index":1796,"title":{},"body":{"classes/GetUserWithCriteriaQueryHandler.html":{}}}],["this.userrepository.delete(command.userid",{"_index":1501,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["this.userrepository.find",{"_index":596,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.find().then(userlist",{"_index":1769,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["this.userrepository.find().then(users",{"_index":1309,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.findone",{"_index":595,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":1718,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.query('delete",{"_index":544,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.restore(command.id",{"_index":2523,"title":{},"body":{"classes/RestoreUserCommandHandler.html":{}}}],["this.userrepository.save",{"_index":585,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save(newuser",{"_index":1290,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.userrepository.softdelete",{"_index":594,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/SoftDeleteUserCommandHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":2482,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["this.userrepository.update(verifyduplicatemailwithdeleted.id",{"_index":2793,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":2925,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteme(requestuser.user.id",{"_index":2954,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":2932,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findme(user.id",{"_index":2939,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":2935,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findwithcriteria(getuserwithcriteriadto",{"_index":2937,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.fulldelete(id",{"_index":2958,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generateuserfrommail(generateuserdto",{"_index":2928,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserifrefreshtokenmatches(refreshtoken",{"_index":2034,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":2951,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.restoreuser(userid.userid",{"_index":2931,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.setcurrentrefreshtoken(refreshtokencookie.token",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.update(requestuser.user.id",{"_index":2947,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(userid",{"_index":2942,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(requestuser.user.id",{"_index":2948,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateroles(id",{"_index":2945,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":1083,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.verifypassword(command.updateusercredentialdto.password",{"_index":2818,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["this.verifypassword(query.plaintextpassword",{"_index":1756,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["thresholdpercent",{"_index":1894,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"entities/AddressEntity.html":{},"classes/ErrorExceptionFilter.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":2701,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["timestamps",{"_index":923,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["title",{"_index":2069,"title":{},"body":{"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{}}}],["todo",{"_index":3296,"title":{"todo.html":{}},"body":{}}],["token",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command",{"_index":2479,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["token.command.ts",{"_index":2474,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:1",{"_index":2475,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":2476,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.event",{"_index":2492,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{}}}],["token.event.ts",{"_index":2485,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:2",{"_index":2488,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:3",{"_index":2486,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:4",{"_index":2489,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.guard",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.guard.ts",{"_index":2015,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["token.strategy",{"_index":730,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":2017,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:12",{"_index":2019,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:25",{"_index":2021,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":769,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{}}}],["total_amount",{"_index":1971,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":1973,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":1941,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":1942,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":2135,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":2130,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts:3",{"_index":2132,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":823,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":917,"title":{},"body":{"entities/CardEntity.html":{}}}],["transferprofiletousercommand",{"_index":2722,"title":{"classes/TransferProfileToUserCommand.html":{}},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["transform",{"_index":1989,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":1990,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":2996,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":167,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["transport.tcp",{"_index":196,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["transports",{"_index":3325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":2691,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":2694,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":2672,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":2673,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":38,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RestoreUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":2692,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":1961,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@isoptional()@isdatestring",{"_index":2411,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@isstring()@length(6",{"_index":2406,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@joincolumn",{"_index":989,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@maxlength(255",{"_index":831,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"injectables/ProfileService.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["trying",{"_index":1429,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":24,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileDto.html":{},"classes/CreateProfileEvent.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateProfileRequest.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteProfileCommand.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteProfileEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GenerateUserDto.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQuery.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQuery.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQuery.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/IdProfileDto.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ListRolesDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RestoreUserCommand.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommand.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteProfileEventHandler.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileDto.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateProfileRequest.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"interfaces/UserIdDto.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1056,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":2057,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":2060,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":2061,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":2059,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":3306,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":824,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":919,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":76,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteProfileCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"classes/SoftDeleteProfileCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"todo.html":{}}}],["typeormhealthindicator",{"_index":1866,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":276,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":483,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":278,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1370,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":1371,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":2500,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/passport",{"_index":3144,"title":{},"body":{"dependencies.html":{}}}],["types/useragent",{"_index":3147,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":1610,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":1615,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":1613,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":3160,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":2728,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{}}}],["undefined",{"_index":293,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{}}}],["undefined})@httpcode(201)@useguards(undefined",{"_index":2216,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@isemail",{"_index":845,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":885,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@useguards(undefined",{"_index":108,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["unique",{"_index":1822,"title":{},"body":{"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["uniqueviolation",{"_index":3210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":1587,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":3295,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":1456,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["unused",{"_index":1651,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["up.dto",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":2613,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:14",{"_index":2616,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":2617,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":2615,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":2637,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update(userid",{"_index":2906,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":2751,"title":{},"body":{"classes/UpdateOccupationsProfileEventHandler.html":{},"classes/UpdateProfileEventHandler.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updated_at",{"_index":62,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":21,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["updatedatecolumn",{"_index":75,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":61,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["updatedfrom",{"_index":1780,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updatedto",{"_index":1781,"title":{},"body":{"classes/GetUserWithCriteriaDto.html":{}}}],["updateme",{"_index":2871,"title":{},"body":{"controllers/UserController.html":{}}}],["updateme(requestuser",{"_index":2909,"title":{},"body":{"controllers/UserController.html":{}}}],["updatemyprofile",{"_index":2200,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updatemyprofile(@req",{"_index":2271,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updatemyprofile(requestuser",{"_index":2233,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateoccupationsprofilecommand",{"_index":2378,"title":{"classes/UpdateOccupationsProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateOccupationsProfileCommand.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofilecommandhandler",{"_index":2325,"title":{"classes/UpdateOccupationsProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileCommandHandler.html":{}}}],["updateoccupationsprofiledto",{"_index":2745,"title":{"classes/UpdateOccupationsProfileDto.html":{}},"body":{"classes/UpdateOccupationsProfileDto.html":{}}}],["updateoccupationsprofileevent",{"_index":2737,"title":{"classes/UpdateOccupationsProfileEvent.html":{}},"body":{"classes/UpdateOccupationsProfileCommandHandler.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updateoccupationsprofileeventhandler",{"_index":2338,"title":{"classes/UpdateOccupationsProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateOccupationsProfileEventHandler.html":{}}}],["updatepassword",{"_index":2872,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassword(requestuser",{"_index":2911,"title":{},"body":{"controllers/UserController.html":{}}}],["updatepassword(userid",{"_index":3075,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile",{"_index":2201,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["updateprofile(@param('id",{"_index":2268,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(id",{"_index":2368,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofile(profileid",{"_index":2236,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofilecommand",{"_index":2373,"title":{"classes/UpdateProfileCommand.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{}}}],["updateprofilecommandhandler",{"_index":2329,"title":{"classes/UpdateProfileCommandHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileCommandHandler.html":{}}}],["updateprofiledto",{"_index":2391,"title":{"classes/UpdateProfileDto.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UpdateProfileCommand.html":{},"classes/UpdateProfileDto.html":{}}}],["updateprofileevent",{"_index":2754,"title":{"classes/UpdateProfileEvent.html":{}},"body":{"classes/UpdateProfileCommandHandler.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofileeventhandler",{"_index":2327,"title":{"classes/UpdateProfileEventHandler.html":{}},"body":{"modules/ProfileModule.html":{},"classes/UpdateProfileEventHandler.html":{}}}],["updateprofilerequest",{"_index":2203,"title":{"classes/UpdateProfileRequest.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileRequest.html":{}}}],["updateprofilerequest.occupationsid",{"_index":2390,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.occupationsid.length",{"_index":2389,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.roleprofile",{"_index":2393,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updateprofilerequest.usernameprofile",{"_index":2392,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updaterole",{"_index":2873,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(@param('id",{"_index":2944,"title":{},"body":{"controllers/UserController.html":{}}}],["updaterole(id",{"_index":2914,"title":{},"body":{"controllers/UserController.html":{}}}],["updateroles",{"_index":3050,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(userid",{"_index":3077,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetimestamp",{"_index":2707,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updateusercommand",{"_index":2760,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercommand(userid",{"_index":3088,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercommandhandler",{"_index":2763,"title":{"classes/UpdateUserCommandHandler.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialcommand",{"_index":2798,"title":{"classes/UpdateUserCredentialCommand.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"injectables/UserService.html":{}}}],["updateusercredentialcommandhandler",{"_index":2804,"title":{"classes/UpdateUserCredentialCommandHandler.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateusercredentialdto",{"_index":2800,"title":{"classes/UpdateUserCredentialDto.html":{}},"body":{"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateusercredentialevent",{"_index":2808,"title":{"classes/UpdateUserCredentialEvent.html":{}},"body":{"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateusercredentialevent(command.userid",{"_index":2819,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["updateusercredentialeventhandler",{"_index":2832,"title":{"classes/UpdateUserCredentialEventHandler.html":{}},"body":{"classes/UpdateUserCredentialEventHandler.html":{}}}],["updateuserdto",{"_index":2762,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserevent",{"_index":2779,"title":{"classes/UpdateUserEvent.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{}}}],["updateuserevent(command.userid",{"_index":2790,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateuserevent(verifyduplicatemailwithdeleted.id",{"_index":2796,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateusereventhandler",{"_index":2838,"title":{"classes/UpdateUserEventHandler.html":{}},"body":{"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["updateuserrolecommand",{"_index":2840,"title":{"classes/UpdateUserRoleCommand.html":{}},"body":{"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"injectables/UserService.html":{}}}],["updateuserrolecommandhandler",{"_index":2844,"title":{"classes/UpdateUserRoleCommandHandler.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"modules/UserModule.html":{}}}],["updateuserroleevent",{"_index":2846,"title":{"classes/UpdateUserRoleEvent.html":{}},"body":{"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{}}}],["updateuserroleevent(command",{"_index":2850,"title":{},"body":{"classes/UpdateUserRoleCommandHandler.html":{}}}],["updateuserroleeventhandler",{"_index":2857,"title":{"classes/UpdateUserRoleEventHandler.html":{}},"body":{"classes/UpdateUserRoleEventHandler.html":{}}}],["uppercase",{"_index":1928,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":2622,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["urls",{"_index":825,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":1532,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":1515,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":1601,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":1603,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1886,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usedby",{"_index":2401,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["usedreferralcodes",{"_index":2964,"title":{},"body":{"entities/UserEntity.html":{}}}],["useguards",{"_index":121,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/actual",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/refresh",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthenticationguard",{"_index":665,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard([userroleenum.admin",{"_index":143,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":404,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":385,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":22,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateProfileEventHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetProfilesByUserIdQuery.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/GetUserWithCriteriaQuery.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"controllers/ProfileController.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEvent.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/SoftDeleteUserEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserCredentialEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UpdateUserRoleCommand.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"classes/UpdateUserRoleEvent.html":{},"classes/UpdateUserRoleEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user')@useguards(undefined",{"_index":2904,"title":{},"body":{"controllers/UserController.html":{}}}],["user.command",{"_index":1223,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.command.ts",{"_index":1216,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:1",{"_index":2655,"title":{},"body":{"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":1492,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/RestoreUserCommand.html":{},"classes/SoftDeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":1218,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:4",{"_index":1219,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:5",{"_index":2725,"title":{},"body":{"classes/TransferProfileToUserCommand.html":{}}}],["user.currenthashedrefreshtoken",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":412,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1316,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GenerateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:10",{"_index":2837,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":1325,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:16",{"_index":1321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":1637,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1636,"title":{},"body":{"classes/GenerateUserDto.html":{}}}],["user.dto.ts:6",{"_index":2835,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.event",{"_index":1338,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/RestoreUserEventHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/SoftDeleteUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["user.event.ts",{"_index":1331,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:2",{"_index":1505,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:3",{"_index":1504,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:4",{"_index":1335,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:5",{"_index":1333,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:6",{"_index":1334,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.id",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.interface",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.interface.ts",{"_index":2511,"title":{},"body":{"interfaces/RequestUser.html":{}}}],["user.jwttoken",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.mail",{"_index":1312,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user.password",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["user.profiles",{"_index":2309,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.profiles.map(profile",{"_index":1701,"title":{},"body":{"classes/GetProfilesByUserIdQueryHandler.html":{}}}],["user.query",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.query.ts",{"_index":1760,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:1",{"_index":1761,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":1762,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.referralcodes",{"_index":2420,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.response",{"_index":1260,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":1343,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:10",{"_index":1347,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:11",{"_index":1351,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":1348,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":1346,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":1350,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:16",{"_index":1349,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:3",{"_index":1344,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":2917,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.usedreferralcodes",{"_index":2427,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.username",{"_index":1311,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["user/cqrs/handler/query/get",{"_index":733,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/cqrs/query/get",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/domain/entities/user.entity",{"_index":78,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"interfaces/RequestUser.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"entities/SubscriptionEntity.html":{}}}],["user/domain/enum/user",{"_index":134,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["user/domain/response/user",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/domain/response/user.response",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":192,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{}}}],["user/user.service",{"_index":193,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user?.currenthashedrefreshtoken",{"_index":1744,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{}}}],["user?.roles.includes(role",{"_index":3342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":3200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":1607,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":1611,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":2861,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userentity",{"_index":64,"title":{"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"modules/ProfileModule.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"interfaces/RequestUser.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{}}}],["userentity.addresses",{"_index":65,"title":{},"body":{"entities/AddressEntity.html":{}}}],["userentity.notifications",{"_index":2154,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["userentity.subscriptions",{"_index":2697,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userentity})@manytoone(undefined",{"_index":2419,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userentity})@onetoone(undefined",{"_index":2426,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userid",{"_index":403,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateProfileCommand.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"controllers/ProfileController.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerCommand.html":{},"classes/ShiftProfileOwnerRequest.html":{},"classes/SoftDeleteUserCommand.html":{},"classes/SoftDeleteUserEvent.html":{},"interfaces/TokenPayload.html":{},"classes/TransferProfileToUserCommand.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCredentialCommand.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{},"injectables/UserService.html":{}}}],["useriddto",{"_index":394,"title":{"interfaces/UserIdDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"controllers/UserController.html":{},"interfaces/UserIdDto.html":{}}}],["userlist",{"_index":3001,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach(user",{"_index":1770,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse",{"_index":1765,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserQueryHandler.html":{},"classes/UserListResponse.html":{}}}],["userlistresponse.userlist",{"_index":1772,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlistresponse.userlist.push(new",{"_index":1771,"title":{},"body":{"classes/GetUserQueryHandler.html":{}}}],["userlogindto",{"_index":3005,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{}}}],["userloginresponse",{"_index":648,"title":{"classes/UserLoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponse.html":{}}}],["usermodule",{"_index":157,"title":{"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":586,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserWithCriteriaDto.html":{},"classes/InvalidUsernameException.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":1255,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["username.exception.ts",{"_index":1544,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.exception.ts:3",{"_index":1545,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"classes/InvalidUsernameException.html":{}}}],["username.length",{"_index":1314,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["username.query",{"_index":1728,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{}}}],["username.query.ts",{"_index":1723,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:1",{"_index":1725,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:2",{"_index":1726,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["usernamefield",{"_index":2054,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernameprofile",{"_index":1177,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateProfileRequest.html":{},"classes/GetProfileWithCriteriaDto.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetProfilesWithCriteriaRequest.html":{},"entities/ProfileEntity.html":{},"classes/ProfileResponse.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateProfileRequest.html":{}}}],["usernotfoundexception",{"_index":2370,"title":{"classes/UserNotFoundException.html":{}},"body":{"injectables/ProfileService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{}}}],["userrepository",{"_index":512,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetProfilesByUserIdQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/GetUserLoginQueryHandler.html":{},"classes/GetUserQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/ShiftProfileOwnerCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["userresponse",{"_index":651,"title":{"classes/UserResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserQueryHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["userroleenum",{"_index":133,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GenerateUserDto.html":{},"classes/ListRolesDto.html":{},"controllers/ProfileController.html":{},"classes/UpdateUserRoleCommand.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.public",{"_index":1295,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["users",{"_index":399,"title":{},"body":{"controllers/AppTestE2eController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{}}}],["users.some(user",{"_index":1310,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["usersenderid",{"_index":3199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":159,"title":{"injectables/UserService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userusername",{"_index":1755,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["userusername.password",{"_index":1757,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{}}}],["util/config/database.configuration",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["util/config/winston",{"_index":2443,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["util/exception/custom",{"_index":1140,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ProfileService.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["util/exception/error",{"_index":175,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllProfileQueryHandler.html":{},"classes/GetProfileByIdQueryHandler.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SoftDeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{},"classes/UpdateUserRoleCommandHandler.html":{}}}],["v_0.0.4",{"_index":3281,"title":{},"body":{"index.html":{}}}],["v_card",{"_index":3233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valid",{"_index":1909,"title":{},"body":{"classes/InvalidMailException.html":{}}}],["validate",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{}}}],["validate(command.user",{"_index":2787,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["validate(login",{"_index":2051,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(newprofile",{"_index":1166,"title":{},"body":{"classes/CreateProfileCommandHandler.html":{}}}],["validate(newuser",{"_index":1288,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":2037,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":2020,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validated",{"_index":3218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":1976,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validatetoken",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{}}}],["validatetoken(data",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationerror",{"_index":1912,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":82,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateProfileCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":1185,"title":{},"body":{"classes/CreateProfileEvent.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteProfileEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RestoreUserEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/ShiftProfileOwnerEvent.html":{},"classes/SoftDeleteProfileEvent.html":{},"classes/SoftDeleteUserEvent.html":{},"classes/UpdateOccupationsProfileEvent.html":{},"classes/UpdateProfileEvent.html":{},"classes/UpdateUserCredentialEvent.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserRoleEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":29,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["variables",{"_index":3309,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1652,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":1063,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verboselogenum",{"_index":1072,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["verboselogenum.debug",{"_index":1093,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["verboselogenum.none",{"_index":1085,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verification",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["verifyduplicatemailwithdeleted",{"_index":2791,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.deletedat",{"_index":2792,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.mail",{"_index":2794,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifyduplicatemailwithdeleted.username",{"_index":2797,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["verifypassword",{"_index":1748,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["verifypassword(plaintextpassword",{"_index":1749,"title":{},"body":{"classes/GetUserLoginQueryHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["version",{"_index":1090,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"properties.html":{}}}],["void",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserEventHandler.html":{}}}],["waiting",{"_index":1450,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["wallet",{"_index":3251,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":3232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":3191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":1845,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":3262,"title":{},"body":{"index.html":{}}}],["warning",{"_index":3204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["web/user.controller",{"_index":3028,"title":{},"body":{"modules/UserModule.html":{}}}],["website",{"_index":952,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":889,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":922,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":887,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":921,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":826,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":827,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":891,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":920,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":828,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":1374,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":3314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":3316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":3320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":3317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":3326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":910,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":3189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["withdeleted",{"_index":597,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetProfileWithCriteriaQueryHandler.html":{},"classes/GetUserWithCriteriaQueryHandler.html":{},"classes/RestoreUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["world",{"_index":291,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":3323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1345,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/GetUserQuery.html":{},"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["z\\\\d@$!%*#?&]{6",{"_index":1272,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z])(?=.*[a",{"_index":2812,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["z])(?=.*\\\\d)(?=.*[@$!%*#?&])[a",{"_index":1271,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["z]).{4",{"_index":2813,"title":{},"body":{"classes/UpdateUserCredentialCommandHandler.html":{}}}],["za",{"_index":1270,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCredentialCommandHandler.html":{}}}],["zip_code",{"_index":67,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["zipcode",{"_index":23,"title":{},"body":{"entities/AddressEntity.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AddressEntity.html":{"url":"entities/AddressEntity.html","title":"entity - AddressEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AddressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                company\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'city', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, companyEntity => companyEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'country', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_active', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'latitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'longitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'state', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'street', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'zip_code', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@Entity({ name: 'address' })\nexport class AddressEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'street', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  street: string;\n\n  @Column({ name: 'city', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  city: string;\n\n  @Column({ name: 'state', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  state: string;\n\n  @Column({ name: 'country', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  country: string;\n\n  @Column({ name: 'zip_code', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  zipCode: string;\n\n  @Column({ name: 'latitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  latitude: string;\n\n  @Column({ name: 'longitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  longitude: string;\n\n  @Column({ name: 'is_active', type: 'boolean', default: true })\n  isActive: boolean;\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => CompanyEntity, companyEntity => companyEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  company: CompanyEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiLandingPageController.html":{"url":"controllers/ApiLandingPageController.html","title":"controller - ApiLandingPageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiLandingPageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-landing-page\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete-mail')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete mail'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@ApiOperation({summary: 'Get all mails'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { MailResponse } from './domain/response/mail.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\n\n@Controller('api-landing-page')\n@ApiTags('api-landing-page')\nexport class ApiLandingPageController {\n  constructor(private readonly apiLandingPageService: ApiLandingPageService) {}\n\n  @Get('/getAll')\n  @ApiOperation({ summary: 'Get all mails' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAll(): Promise {\n    return this.apiLandingPageService.getAll();\n  }\n\n  @Delete('/delete-mail')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Delete mail' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMail(@Body() mail: string): Promise {\n    return this.apiLandingPageService.deleteMail(mail);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLandingPageModule.html":{"url":"modules/ApiLandingPageModule.html","title":"module - ApiLandingPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLandingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLandingPageService\n                        \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiLandingPageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLandingPageController } from './api-landing-page.controller';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { DeleteMailCommandHandler } from './cqrs/handler/command/delete-mail.command-handler';\nimport { DeleteMailEventHandler } from './cqrs/handler/event/delete-mail.event-handler';\nimport { GetAllMailQueryHandler } from './cqrs/handler/query/get-all-mail.query-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_WAITING_LIST',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiLandingPageController],\n  providers: [\n    ApiLandingPageService,\n    ApiLogService,\n    UserService,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n    DeleteMailCommandHandler,\n    DeleteMailEventHandler,\n    GetAllMailQueryHandler,\n  ],\n})\nexport class ApiLandingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLandingPageService.html":{"url":"injectables/ApiLandingPageService.html","title":"injectable - ApiLandingPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLandingPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/api-landing-page.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from './cqrs/command/delete-mail.command';\nimport { MailResponse } from './domain/response/mail.response';\nimport { GetAllMailQuery } from './cqrs/query/get-all-mail.query';\n\n@Injectable()\nexport class ApiLandingPageService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async deleteMail(mail: string): Promise {\n    await this.commandBus.execute(\n      new DeleteMailCommand({\n        mail: mail,\n      }),\n    );\n  }\n\n  async getAll(): Promise {\n    return await this.queryBus.execute(new GetAllMailQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\ncluster_ApiLogModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CreateLogCommandHandler } from './cqrs/handler/command/create-log.command-handler';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  controllers: [],\n  providers: [ApiLogService, ErrorCustomEventHandler, CreateLogCommandHandler],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                createLogForMethode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLogForMethode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogForMethode(log: CreateMethodLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateMethodLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateLogCommand } from './cqrs/command/create-log.command';\nimport { CreateMethodLogDto } from './domain/dto/create-method-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(private readonly commandBus: CommandBus) {}\n  async createLog(log: CreateLogDto): Promise {\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...log,\n      }),\n    );\n  }\n\n  async createLogForMethode(log: CreateMethodLogDto): Promise {\n    const createLogDto: CreateLogDto = new CreateLogDto({\n      method: log.method,\n      module: log.module,\n      body: Object(log.body),\n    });\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...createLogDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiMailController.html":{"url":"controllers/ApiMailController.html","title":"controller - ApiMailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiMailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@HttpCode(200)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-mail/api-mail.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post, UseGuards } from '@nestjs/common';\nimport { ApiMailService } from './api-mail.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Controller('api-mail')\n@ApiTags('Mail')\nexport class ApiMailController {\n  constructor(private readonly apiMailService: ApiMailService) {}\n\n  @Post('/')\n  @HttpCode(200)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async sendMail(@Body() mailDto: MailDto): Promise {\n    await this.apiMailService.sendMail(mailDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiMailModule.html":{"url":"modules/ApiMailModule.html","title":"module - ApiMailModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiMailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_imports\n\n\n\ncluster_ApiMailModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-mail/api-mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ApiMailService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiMailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { SendMailCommandHandler } from './cqrs/handler/command/send-mail.command';\nimport { SendMailEventHandler } from './cqrs/handler/event/send-mail.event-handler';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiMailController } from './api-mail.controller';\nimport { ApiMailService } from './api-mail.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiMailController],\n  providers: [\n    ApiLogService,\n    ApiMailService,\n    UserService,\n    ErrorCustomEventHandler,\n    SendMailCommandHandler,\n    SendMailEventHandler,\n    CreateLogCommandHandler,\n  ],\n})\nexport class ApiMailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiMailService.html":{"url":"injectables/ApiMailService.html","title":"injectable - ApiMailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiMailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/api-mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/api-mail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { SendMailCommand } from './cqrs/command/send-mail.command';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Injectable()\nexport class ApiMailService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async sendMail(mailDto: MailDto): Promise {\n    await this.commandBus.execute(\n      new SendMailCommand({\n        ...mailDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLandingPageModule\n                        \n                        \n                            ApiLogModule\n                        \n                        \n                            ApiMailModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from './api/api-log/api-log.service';\nimport { AuthModule } from './api/auth/auth.module';\nimport { ApiMailModule } from './api/api-mail/api-mail.module';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLandingPageModule } from './api/api-landing-page/api-landing-page.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: 3202 } },\n    ]),\n    // ________ Module ________\n    HealthCheckModule,\n    UserModule,\n    ApiLogModule,\n    AuthModule,\n    EntitiesToMoveModule,\n    ApiMailModule,\n    CqrsModule,\n    ApiLandingPageModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                            \n                                createUserTest\n                            \n                            \n                                deleteUserTest\n                            \n                            \n                                getAllUsersTest\n                            \n                            \n                                getUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserTest\n                        \n                    \n                \n            \n            \n                \ncreateUserTest(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Post('/api/test/create-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserTest\n                        \n                    \n                \n            \n            \n                \ndeleteUserTest(userIdDto: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UsePipes(new IsTestEnvironmentPipe())@Delete('/api/test/remove-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdDto\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsersTest\n                        \n                    \n                \n            \n            \n                \ngetAllUsersTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-all-users-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserTest\n                        \n                    \n                \n            \n            \n                \ngetUserTest(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/get-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Post, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { UserIdDto } from '../../src/api/user/domain/dto/user-id.dto';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Post('/api/test/create-user-test')\n  createUserTest(@Body() createUserDto: CreateUserDto): Promise {\n    return this.appService.createUserTest(createUserDto);\n  }\n\n  @HttpCode(204)\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Delete('/api/test/remove-user-test')\n  deleteUserTest(@Body() userIdDto: UserIdDto): Promise {\n    return this.appService.removeUser(userIdDto.userId);\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-all-users-test')\n  getAllUsersTest(): Promise {\n    return this.appService.getAllUsers();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/get-user-test')\n  getUserTest(@Body() userId: string): Promise {\n    return this.appService.getUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\n\n@Module({\n  imports: [\n    AppModule,\n    TypeOrmModule.forFeature([\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n      NotificationEntity,\n      ReferralCodeEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                            \n                                    Async\n                                createUserTest\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                removeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, cardRepository: Repository, companyRepository: Repository, companyEmployeeRepository: Repository, connectedCardRepository: Repository, conversationRepository: Repository, discountCodeRepository: Repository, groupRepository: Repository, groupMembershipRepository: Repository, invoicesRepository: Repository, joinedConversationRepository: Repository, mediaRepository: Repository, messageRepository: Repository, occupationRepository: Repository, planRepository: Repository, profileRepository: Repository, socialNetworkRepository: Repository, stripEventRepository: Repository, subscriptionRepository: Repository, notificationRepository: Repository, referralCodeRepository: Repository, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in test/test-environment/app-test-e2e.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyEmployeeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupMembershipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinedConversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripEventRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referralCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserTest(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { ProfileEntity } from '../../src/api/profile/domain/entities/profile.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AppTestE2eService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(CompanyEntity)\n    private readonly companyRepository: Repository,\n    @InjectRepository(CompanyEmployeeEntity)\n    private readonly companyEmployeeRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    @InjectRepository(ConversationEntity)\n    private readonly conversationRepository: Repository,\n    @InjectRepository(DiscountCodeEntity)\n    private readonly discountCodeRepository: Repository,\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n    @InjectRepository(GroupMembershipEntity)\n    private readonly groupMembershipRepository: Repository,\n    @InjectRepository(InvoicesEntity)\n    private readonly invoicesRepository: Repository,\n    @InjectRepository(JoinedConversation)\n    private readonly joinedConversationRepository: Repository,\n    @InjectRepository(MediaEntity)\n    private readonly mediaRepository: Repository,\n    @InjectRepository(MessageEntity)\n    private readonly messageRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(PlanEntity)\n    private readonly planRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    @InjectRepository(StripEventEntity)\n    private readonly stripEventRepository: Repository,\n    @InjectRepository(SubscriptionEntity)\n    private readonly subscriptionRepository: Repository,\n    @InjectRepository(NotificationEntity)\n    private readonly notificationRepository: Repository,\n    @InjectRepository(ReferralCodeEntity)\n    private readonly referralCodeRepository: Repository,\n    @InjectRepository(AddressEntity)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  async clearDatabaseTest(): Promise {\n    await this.userRepository.query('DELETE FROM \"user\";');\n    await this.cardRepository.query('DELETE FROM \"card\";');\n    await this.companyRepository.query('DELETE FROM \"company\";');\n    await this.companyEmployeeRepository.query('DELETE FROM \"company_employee\";');\n    await this.connectedCardRepository.query('DELETE FROM \"connected_card\";');\n    await this.conversationRepository.query('DELETE FROM \"conversation\";');\n    await this.discountCodeRepository.query('DELETE FROM \"discount_codes\";');\n    await this.groupRepository.query('DELETE FROM \"group\";');\n    await this.groupMembershipRepository.query('DELETE FROM \"group_membership\";');\n    await this.invoicesRepository.query('DELETE FROM \"invoices\";');\n    await this.joinedConversationRepository.query('DELETE FROM \"joined_conversation\";');\n    await this.mediaRepository.query('DELETE FROM \"media\";');\n    await this.messageRepository.query('DELETE FROM \"message\";');\n    await this.occupationRepository.query('DELETE FROM \"occupation\";');\n    await this.planRepository.query('DELETE FROM \"plan\";');\n    await this.profileRepository.query('DELETE FROM \"profile\";');\n    await this.socialNetworkRepository.query('DELETE FROM \"social_network\";');\n    await this.stripEventRepository.query('DELETE FROM \"strip_event\";');\n    await this.subscriptionRepository.query('DELETE FROM \"subscription\";');\n    await this.notificationRepository.query('DELETE FROM \"notification\";');\n    await this.referralCodeRepository.query('DELETE FROM \"referral_code\";');\n    await this.addressRepository.query('DELETE FROM \"address\";');\n\n    return;\n  }\n\n  async createUserTest(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.save({\n      username: createUserDto.username,\n      mail: createUserDto.mail,\n      password: bcrypt.hashSync(createUserDto.password, 10),\n      roles: createUserDto.roles,\n    });\n  }\n\n  async removeUser(userId: string): Promise {\n    await this.userRepository.softDelete({ id: userId });\n  }\n\n  async getUser(userId: string): Promise {\n    return await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n  }\n\n  async getAllUsers(): Promise {\n    return await this.userRepository.find({\n      withDeleted: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UseGuards(JwtRefreshGuard)@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'validate-token'})\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport { Body, Controller, Get, HttpCode, HttpException, HttpStatus, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Controller('/auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly userService: UserService, private readonly authService: AuthService) {}\n\n  @Post('/register')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    try {\n      return await this.authService.signup(signUpDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        400,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/login')\n  async signIn(@Req() request: RequestUser, @Res() response: Response): Promise {\n    const { user } = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(user.id);\n    await this.userService.setCurrentRefreshToken(refreshTokenCookie.token, user.id);\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', [accessTokenCookie.auth, refreshTokenCookie.cookie]);\n    user.currentHashedRefreshToken = refreshTokenCookie.token;\n    user.jwtToken = accessTokenCookie.token;\n    user.password = '';\n    return response.send(user);\n  }\n\n  @HttpCode(204)\n  @UseGuards(JwtRefreshGuard)\n  @Post('/logout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response): Promise {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(204);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('/actual')\n  authenticate(@Req() request: RequestUser): UserEntity {\n    return request.user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh')\n  refresh(@Req() request: RequestUser): UserEntity {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(request.user.id);\n\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie.token);\n    return request.user;\n  }\n\n  // MessagePatern\n\n  @MessagePattern({ cmd: 'validate-token' })\n  async validateToken(data: string): Promise {\n    try {\n      return await this.authService.getUserFromAuthToken(data);\n    } catch (e) {\n      throw new HttpException('Wrong token provided', HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/command/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from '../user/user.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { GetUserLoginQueryHandler } from '../user/cqrs/handler/query/get-user-login.query-handler';\nimport { RegisterEventHandler } from './cqrs/event-handler/register.event-handler';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport * as process from 'process';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_LANDING_PAGE',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    PassportModule,\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    ApiLogService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    GetUserLoginQueryHandler,\n    RegisterEventHandler,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                getUserFromAuthToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromAuthToken(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\nimport { GetUserLoginQuery } from '../user/cqrs/query/get-user-login.query';\nimport { UserResponse } from '../user/domain/response/user.response';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService, private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async signup(signUpDto: SignUpDto): Promise {\n    return new UserResponse({\n      ...(await this.commandBus.execute(new RegisterCommand(signUpDto.username, signUpDto.mail, signUpDto.password))),\n    });\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserLoginQuery(username, plainTextPassword));\n    } catch (error) {\n      throw new HttpException('Wrong credentials provided', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  public getCookieWithJwtToken(userId: string): { token: string; auth: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    });\n    return {\n      token: token,\n      auth: `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    };\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string): { cookie: string; token: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut(): string[] {\n    return ['Authentication=; HttpOnly; Path=/; Max-Age=0', 'Refresh=; HttpOnly; Path=/; Max-Age=0'];\n  }\n\n  async getUserFromAuthToken(authenticationToken: string): Promise {\n    const payload: TokenPayload = this.jwtService.verify(authenticationToken, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n    });\n    if (payload.userId) {\n      return this.queryBus.execute(new GetUserQuery(payload.userId));\n    }\n    throw new Error('Invalid token');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from './occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from './social-network.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                addresses\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.company, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { MediaEntity } from './media.entity';\nimport { AddressEntity } from './address.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => AddressEntity, address => address.company, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                notifications\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.conversation, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.conversation, { nullable: true })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommand.html":{"url":"classes/CreateLogCommand.html","title":"class - CreateLogCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/command/create-log.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LoggingTypeEnum } from '../../domain/enum/logging-type.enum';\nimport { ApiTypeEnum } from '../../domain/enum/api-type.enum';\n\nexport class CreateLogCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommandHandler.html":{"url":"classes/CreateLogCommandHandler.html","title":"class - CreateLogCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                verbose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verbose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateLogCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateLogCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateLogCommand } from '../../command/create-log.command';\nimport { VerboseLogEnum } from '../../../domain/enum/verbose-log.enum';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport * as process from 'process';\nimport { ApiTypeEnum } from '../../../domain/enum/api-type.enum';\n\n@CommandHandler(CreateLogCommand)\nexport class CreateLogCommandHandler implements ICommandHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum;\n  private readonly verbose: VerboseLogEnum;\n\n  constructor(@Inject('API_LOG') private client: ClientProxy) {\n    this.verbose = (process.env.VERBOSE_LOG as VerboseLogEnum) || VerboseLogEnum.NONE;\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.API_TYPE = ApiTypeEnum.WALLET_SHARE_API;\n  }\n\n  async execute(command: CreateLogCommand): Promise {\n    if (this.verbose === VerboseLogEnum.NONE) return;\n    if (this.verbose === VerboseLogEnum.DEBUG) console.log('CreateLogCommandHandler: ', command);\n    this.client.emit('create-log', command);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                    Optional\n                                method\n                            \n                            \n                                    Optional\n                                module\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                    Optional\n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from '../enum/logging-type.enum';\n\nexport class CreateLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method?: string;\n\n  @ApiProperty()\n  route?: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty()\n  module?: string;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMethodLogDto.html":{"url":"classes/CreateMethodLogDto.html","title":"class - CreateMethodLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMethodLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-method-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                method\n                            \n                            \n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMethodLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n  module: string;\n  method: string;\n  body: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommand.html":{"url":"classes/CreateProfileCommand.html","title":"class - CreateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/create-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createProfileDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/create-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateProfileDto } from '../../domain/dto/create-profile.dto';\n\nexport class CreateProfileCommand {\n  public readonly userId: string;\n  public readonly occupationsId: string[];\n  public readonly createProfileDto: CreateProfileDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileCommandHandler.html":{"url":"classes/CreateProfileCommandHandler.html","title":"class - CreateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/create-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/create-profile.command-handler.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { CreateProfileCommand } from '../../command/create-profile.command';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { OccupationEntity } from '../../../../entities-to-create/occupation.entity';\n\n@CommandHandler(CreateProfileCommand)\nexport class CreateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CreateProfileCommand): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      const newProfile = new ProfileEntity({\n        user: user,\n        ...command.createProfileDto,\n      });\n\n      if (command.occupationsId.length > 0) {\n        const occupationPromises: Promise[] = command.occupationsId.map(async occupationId => {\n          return await this.occupationRepository\n            .findOneOrFail({\n              where: [{ id: occupationId }],\n            })\n            .catch(() => {\n              throw new Error('Occupation not found');\n            });\n        });\n        const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n        if (occupations.length > 0) {\n          newProfile.occupations = occupations;\n        }\n      }\n\n      const err = await validate(newProfile);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedProfile = await this.profileRepository.save(newProfile).then(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n      this.eventBus.publish(\n        new CreateProfileEvent({\n          profileResponse: new ProfileResponse(savedProfile),\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/create-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileDto {\n  public readonly usernameProfile: string;\n  public readonly roleProfile: RoleProfileEnum;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEvent.html":{"url":"classes/CreateProfileEvent.html","title":"class - CreateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/create-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileResponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileResponse\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/create-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProfileResponse } from '../../domain/response/profile.response';\n\nexport class CreateProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'create-profile';\n  public readonly profileResponse: ProfileResponse;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileEventHandler.html":{"url":"classes/CreateProfileEventHandler.html","title":"class - CreateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/create-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/create-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateProfileEvent } from '../../event/create-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateProfileEvent)\nexport class CreateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' + event.profileResponse.id + ' created for user with id: ' + event.profileResponse.userId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileRequest.html":{"url":"classes/CreateProfileRequest.html","title":"class - CreateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/create-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                idUser\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/create-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class CreateProfileRequest {\n  public readonly usernameProfile: string;\n  public readonly idUser: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                eventBus\n                            \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\nimport { UserRoleEnum } from '../../../domain/enum/user-role.enum';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n    public readonly eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      if (command.createUserDto.username) {\n        if (await this.isDuplicatedUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.createUserDto.mail) {\n        if (await this.isDuplicatedEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n\n      if (!this.isValidPassword(command.createUserDto.password)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n        );\n        throw new InvalidPasswordException();\n      }\n\n      if (command.createUserDto.mail) {\n        if (!this.isValidEmail(command.createUserDto.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n          );\n          throw new InvalidMailException();\n        }\n      }\n\n      if (command.createUserDto.username) {\n        if (!this.isValidUsername(command.createUserDto.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n          );\n          throw new InvalidUsernameException();\n        }\n      }\n\n      const newUser: UserEntity = new UserEntity({\n        ...command.createUserDto,\n        referralCode: await this.generateUniqueReferralCode(),\n      });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        mail: savedUser.mail,\n        roles: savedUser.roles || [UserRoleEnum.PUBLIC],\n        referralCode: savedUser.referralCode,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'CreateUser', error: error }));\n      throw error;\n    }\n  }\n\n  // Generate a random alphanumeric code of a given length\n  private generateCode(length: number): string {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, Length } from 'class-validator';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  mail?: string;\n\n  @ApiProperty()\n  @Length(5, 20)\n  username?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsOptional()\n  roles?: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'create-user';\n  constructor(public readonly userId: string, public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateUserEvent } from '../../event/create-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' created with email: ' + event.createUserDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                referralCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly mail: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n\n  public readonly referralCode?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from '../../api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\nimport { ReferralCodeEntity } from '../../api/entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../api/entities-to-create/notification.entity';\nimport { AddressEntity } from '../../api/entities-to-create/address.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommand.html":{"url":"classes/DeleteMailCommand.html","title":"class - DeleteMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommandHandler.html":{"url":"classes/DeleteMailCommandHandler.html","title":"class - DeleteMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from '../../command/delete-mail.command';\nimport { HttpException, HttpStatus, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteMailCommand)\nexport class DeleteMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy, private readonly eventBus: EventBus) {}\n\n  async execute(command: DeleteMailCommand): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'delete' }, command.mail).pipe(\n        catchError(err => {\n          if (err.status !== undefined) {\n            this.eventBus.publish(\n              new ErrorCustomEvent({\n                handler: 'DeleteMailCommandHandler',\n                localisation: 'api-waiting-list',\n                error: err.message,\n              }),\n            );\n            throw new HttpException('Mail does not exist', 404);\n          }\n          this.eventBus.publish(\n            new ErrorCustomEvent({\n              handler: 'DeleteMailCommandHandler',\n              localisation: 'api-waiting-list',\n              error: 'unreachable',\n            }),\n          );\n          throw new HttpException('unreachable', HttpStatus.SERVICE_UNAVAILABLE);\n        }),\n      ),\n    ).then(() => {\n      this.eventBus.publish(new DeleteMailEvent(command));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEvent.html":{"url":"classes/DeleteMailEvent.html","title":"class - DeleteMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteMailDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteMailDto: DeleteMailCommand, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteMailDto\n                                                  \n                                                        \n                                                                        DeleteMailCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteMailDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteMailCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-landing-page'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteMailCommand } from '../command/delete-mail.command';\n\nexport class DeleteMailEvent {\n  constructor(\n    public readonly deleteMailDto: DeleteMailCommand,\n    public readonly module: string = 'api-landing-page',\n    public readonly method: string = 'delete-mail',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEventHandler.html":{"url":"classes/DeleteMailEventHandler.html","title":"class - DeleteMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteMailEvent)\nexport class DeleteMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: 'api-landing-page',\n      method: 'delete-mail',\n      body: 'delete user with mail : ' + event.deleteMailDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommand.html":{"url":"classes/DeleteProfileCommand.html","title":"class - DeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileCommandHandler.html":{"url":"classes/DeleteProfileCommandHandler.html","title":"class - DeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteProfileCommand } from '../../command/delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(DeleteProfileCommand)\nexport class DeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.remove(profile);\n      this.eventBus.publish(\n        new DeleteProfileEvent({\n          deleteProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEvent.html":{"url":"classes/DeleteProfileEvent.html","title":"class - DeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteProfileCommand\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteProfileCommand } from '../command/delete-profile.command';\n\nexport class DeleteProfileEvent {\n  public readonly module: string = 'profile';\n  public readonly method: string = 'delete-profile';\n  public readonly deleteProfileCommand: DeleteProfileCommand;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileEventHandler.html":{"url":"classes/DeleteProfileEventHandler.html","title":"class - DeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/delete-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiLogService } from '../../../../api-log/api-log.service';\nimport { DeleteProfileEvent } from '../../event/delete-profile.event';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\n\n@EventsHandler(DeleteProfileEvent)\nexport class DeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.deleteProfileCommand.id + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommandHandler.html":{"url":"classes/DeleteUserCommandHandler.html","title":"class - DeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { DeleteUserCommand } from '../../command/delete-user.command';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { InvalidIdException } from '../../../../../util/exception/custom-http-exception/invalid-id.exception';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    try {\n      await this.userRepository.delete(command.userId);\n      this.eventBus.publish(new DeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw new InvalidIdException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEvent.html":{"url":"classes/DeleteUserEvent.html","title":"class - DeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'delete-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEventHandler.html":{"url":"classes/DeleteUserEventHandler.html","title":"class - DeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteUserEvent)\nexport class DeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateMailException.html":{"url":"classes/DuplicateMailException.html","title":"class - DuplicateMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateMailException extends HttpException {\n  constructor() {\n    super('Mail already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { SocialNetworkEntity } from './social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { ReferralCodeEntity } from './referal-code.entity';\nimport { NotificationEntity } from './notification.entity';\nimport { AddressEntity } from './address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      ReferralCodeEntity,\n      NotificationEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                handler\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly localisation: string;\n  public readonly handler: string;\n  public readonly error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { CreateLogDto } from '../../../api/api-log/domain/dto/create-log.dto';\nimport { LoggingTypeEnum } from '../../../api/api-log/domain/enum/logging-type.enum';\nimport { ApiLogService } from '../../../api/api-log/api-log.service';\nimport { ApiTypeEnum } from '../../../api/api-log/domain/enum/api-type.enum';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  handle(event: ErrorCustomEvent): void {\n    const createLogDto = new CreateLogDto({});\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.ERROR;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = event.localisation;\n    createLogDto.route = event.handler;\n    createLogDto.error = event.error;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = process.env.VERBOSE as VerboseLogEnum;\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto({});\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = req.headers || undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenerateUserDto.html":{"url":"classes/GenerateUserDto.html","title":"class - GenerateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenerateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/generate-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/generate-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class GenerateUserDto {\n  public readonly mail: string;\n  public readonly roles: UserRoleEnum[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQuery.html":{"url":"classes/GetAllMailQuery.html","title":"class - GetAllMailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllMailQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQueryHandler.html":{"url":"classes/GetAllMailQueryHandler.html","title":"class - GetAllMailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllMailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllMailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllMailQuery } from '../../query/get-all-mail.query';\nimport { HttpException, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { MailLandingPageDto } from '../../../domain/dto/mail-landing-page.dto';\n\n@QueryHandler(GetAllMailQuery)\nexport class GetAllMailQueryHandler implements IQueryHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async execute(query: GetAllMailQuery): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'get-all' }, '').pipe(\n        catchError(() => {\n          throw new HttpException('unreachable', 401);\n        }),\n      ),\n    ).then((mailsLandingPageList: MailLandingPageDto[]) => mailsLandingPageList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQuery.html":{"url":"classes/GetAllProfileQuery.html","title":"class - GetAllProfileQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-all-profile.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllProfileQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllProfileQueryHandler.html":{"url":"classes/GetAllProfileQueryHandler.html","title":"class - GetAllProfileQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllProfileQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-all-profile.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllProfileQuery } from '../../query/get-all-profile.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\n\n@QueryHandler(GetAllProfileQuery)\nexport class GetAllProfileQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    try {\n      const profiles = await this.profileRepository.find();\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetAllProfileQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQuery.html":{"url":"classes/GetProfileByIdQuery.html","title":"class - GetProfileByIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-by-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-by-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfileByIdQuery {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileByIdQueryHandler.html":{"url":"classes/GetProfileByIdQueryHandler.html","title":"class - GetProfileByIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileByIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileByIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-by-id.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileByIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileByIdQuery } from '../../query/get-profile-by-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetProfileByIdQuery)\nexport class GetProfileByIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileByIdQuery): Promise {\n    try {\n      return await this.profileRepository\n        .findOneOrFail({\n          where: [\n            {\n              id: query.id,\n            },\n          ],\n        })\n        .then(profile => new ProfileResponse({ ...profile }));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileByIdQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaDto.html":{"url":"classes/GetProfileWithCriteriaDto.html","title":"class - GetProfileWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/get-profile-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/get-profile-with-criteria.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfileWithCriteriaDto {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQuery.html":{"url":"classes/GetProfileWithCriteriaQuery.html","title":"class - GetProfileWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profile-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getProfileWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getProfileWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetProfileWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profile-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetProfileWithCriteriaDto } from '../../domain/dto/get-profile-with-criteria.dto';\n\nexport class GetProfileWithCriteriaQuery {\n  public readonly getProfileWithCriteriaDto: GetProfileWithCriteriaDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfileWithCriteriaQueryHandler.html":{"url":"classes/GetProfileWithCriteriaQueryHandler.html","title":"class - GetProfileWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfileWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfileWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profile-with-criteria.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfileWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfileWithCriteriaQuery } from '../../query/get-profile-with-criteria.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetProfileWithCriteriaQuery)\nexport class GetProfileWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetProfileWithCriteriaQuery): Promise {\n    try {\n      const queryBuilder = this.profileRepository.createQueryBuilder('profile');\n\n      if (query.getProfileWithCriteriaDto.isDeleted) {\n        queryBuilder.setFindOptions({ withDeleted: true });\n      }\n\n      if (query.getProfileWithCriteriaDto.usernameProfile) {\n        queryBuilder.where('profile.usernameProfile = :usernameProfile', {\n          usernameProfile: query.getProfileWithCriteriaDto.usernameProfile,\n        });\n      }\n\n      const profiles = await queryBuilder.getMany();\n\n      return profiles.map(\n        profile =>\n          new ProfileResponse({\n            ...profile,\n          }),\n      );\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'profile',\n          handler: 'GetProfileWithCriteriaQueryHandler',\n          error: error.message,\n        }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQuery.html":{"url":"classes/GetProfilesByUserIdQuery.html","title":"class - GetProfilesByUserIdQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/query/get-profiles-by-user-id.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProfilesByUserIdQuery {\n  public readonly id: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesByUserIdQueryHandler.html":{"url":"classes/GetProfilesByUserIdQueryHandler.html","title":"class - GetProfilesByUserIdQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesByUserIdQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetProfilesByUserIdQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/query/get-profiles-by-user-id.query-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetProfilesByUserIdQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetProfilesByUserIdQuery } from '../../query/get-profiles-by-user-id.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { ProfileResponse } from '../../../domain/response/profile.response';\nimport { Repository } from 'typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\n\n@QueryHandler(GetProfilesByUserIdQuery)\nexport class GetProfilesByUserIdQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async execute(query: GetProfilesByUserIdQuery): Promise {\n    try {\n      const user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: query.id }],\n          relations: ['profile'],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      return user.profiles.map(profile => {\n        return new ProfileResponse({\n          ...profile,\n        });\n      });\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProfilesWithCriteriaRequest.html":{"url":"classes/GetProfilesWithCriteriaRequest.html","title":"class - GetProfilesWithCriteriaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProfilesWithCriteriaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/get-profiles-with-criteria.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/get-profiles-with-criteria.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class GetProfilesWithCriteriaRequest {\n  public readonly usernameProfile?: string;\n  public readonly isDeleted?: boolean;\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQuery.html":{"url":"classes/GetUserByEmailQuery.html","title":"class - GetUserByEmailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-email.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByEmailQuery {\n  constructor(public readonly email: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQueryHandler.html":{"url":"classes/GetUserByEmailQueryHandler.html","title":"class - GetUserByEmailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByEmailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByEmailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../domain/entities/user.entity';\nimport { GetUserByEmailQuery } from '../../query/get-user-by-email.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\n\n@QueryHandler(GetUserByEmailQuery)\nexport class GetUserByEmailQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByEmailQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ mail: query.email }],\n        select: ['id', 'mail', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQuery.html":{"url":"classes/GetUserByUsernameQuery.html","title":"class - GetUserByUsernameQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-username.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByUsernameQuery {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQueryHandler.html":{"url":"classes/GetUserByUsernameQueryHandler.html","title":"class - GetUserByUsernameQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByUsernameQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByUsernameQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { GetUserByUsernameQuery } from '../../query/get-user-by-username.query';\n\n@QueryHandler(GetUserByUsernameQuery)\nexport class GetUserByUsernameQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByUsernameQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQueryHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesQueryHandler.html","title":"class - GetUserIfRefreshTokenMatchesQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.query-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne({\n        select: ['id', 'username', 'mail', 'currentHashedRefreshToken', 'roles'],\n        where: {\n          id: query.userId,\n        },\n      });\n\n      const isRefreshTokenMatching = await bcrypt.compare(query.refreshToken, user?.currentHashedRefreshToken || '');\n\n      if (isRefreshTokenMatching && user) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'GetUserIfRefreshTokenMatchesQueryHandler',\n          error: error,\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQuery.html":{"url":"classes/GetUserLoginQuery.html","title":"class - GetUserLoginQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-login.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                plainTextPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainTextPassword: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainTextPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        plainTextPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserLoginQuery {\n  constructor(public readonly username: string, public readonly plainTextPassword: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQueryHandler.html":{"url":"classes/GetUserLoginQueryHandler.html","title":"class - GetUserLoginQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-login.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserLoginQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserLoginQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.query-handler.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserLoginQuery } from '../../query/get-user-login.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { config } from 'dotenv';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\nconfig();\n@QueryHandler(GetUserLoginQuery)\nexport class GetUserLoginQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserLoginQuery): Promise {\n    try {\n      const userUsername = await this.userRepository.findOne({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n      });\n\n      if (userUsername) {\n        if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n          throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n        }\n        this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n\n        return userUsername;\n      } else {\n        const userUsername = await this.userRepository.findOne({\n          where: [{ mail: query.username }],\n          select: ['id', 'username', 'password', 'mail', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n        });\n        if (userUsername) {\n          if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n            throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n          }\n          this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n          return userUsername;\n        } else {\n          throw 'Error: no match found';\n        }\n      }\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQueryHandler.html":{"url":"classes/GetUserQueryHandler.html","title":"class - GetUserQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user.query-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { UserListResponse } from '../../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery): Promise {\n    if (query.userId) {\n      return {\n        ...(await this.userRepository.findOneOrFail({\n          where: [{ id: query.userId }],\n        })),\n      };\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then(userList => {\n      userList.forEach(user => {\n        userListResponse.userList.push(new UserResponse({ ...user }));\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaDto.html":{"url":"classes/GetUserWithCriteriaDto.html","title":"class - GetUserWithCriteriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/get-user-with-criteria.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                createdTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                deletedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedFrom\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                updatedTo\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        createdTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        deletedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        updatedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/get-user-with-criteria.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserWithCriteriaDto {\n  public readonly createdFrom?: Date;\n  public readonly createdTo?: Date;\n\n  public readonly updatedFrom?: Date;\n  public readonly updatedTo?: Date;\n\n  public readonly deletedFrom?: Date;\n  public readonly deletedTo?: Date;\n  public readonly isDeleted?: boolean;\n\n  public readonly role?: string;\n\n  public readonly username?: string;\n  public readonly mail?: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQuery.html":{"url":"classes/GetUserWithCriteriaQuery.html","title":"class - GetUserWithCriteriaQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-with-criteria.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                getUserWithCriteriaDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getUserWithCriteriaDto\n                                                  \n                                                        \n                                                                        GetUserWithCriteriaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        getUserWithCriteriaDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetUserWithCriteriaDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-with-criteria.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GetUserWithCriteriaDto } from '../../domain/dto/get-user-with-criteria.dto';\n\nexport class GetUserWithCriteriaQuery {\n  constructor(public readonly getUserWithCriteriaDto: GetUserWithCriteriaDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserWithCriteriaQueryHandler.html":{"url":"classes/GetUserWithCriteriaQueryHandler.html","title":"class - GetUserWithCriteriaQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserWithCriteriaQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserWithCriteriaQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-with-criteria.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserWithCriteriaQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserWithCriteriaQuery } from '../../query/get-user-with-criteria.query';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetUserWithCriteriaQuery)\nexport class GetUserWithCriteriaQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserWithCriteriaQuery): Promise {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n\n    if (query.getUserWithCriteriaDto.isDeleted) {\n      queryBuilder.setFindOptions({ withDeleted: true });\n    }\n\n    if (query.getUserWithCriteriaDto.createdFrom) {\n      queryBuilder.andWhere('user.createdAt >= :from', { from: query.getUserWithCriteriaDto.createdFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.createdTo) {\n      queryBuilder.andWhere('user.createdAt = :from', { from: query.getUserWithCriteriaDto.updatedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.updatedTo) {\n      queryBuilder.andWhere('user.updatedAt = :from', { from: query.getUserWithCriteriaDto.deletedFrom });\n    }\n\n    if (query.getUserWithCriteriaDto.deletedTo) {\n      queryBuilder.andWhere('user.deletedAt \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdProfileDto.html":{"url":"classes/IdProfileDto.html","title":"class - IdProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/id-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/id-profile.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class IdProfileDto {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIdException.html":{"url":"classes/InvalidIdException.html","title":"class - InvalidIdException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIdException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-id.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-id.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidIdException extends HttpException {\n  constructor() {\n    super('Invalid Id', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidMailException.html":{"url":"classes/InvalidMailException.html","title":"class - InvalidMailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidMailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-mail.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-mail.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidMailException extends HttpException {\n  constructor() {\n    super('Mail is not valid', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUsernameException.html":{"url":"classes/InvalidUsernameException.html","title":"class - InvalidUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidUsernameException extends HttpException {\n  constructor() {\n    super('Invalid username exception', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { RequestUser } from '../interface/request-user.interface';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh-token') {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload): Promise {\n    const refreshToken = request?.headers?.authorization?.split(' ')[1];\n    return await this.userService.getUserIfRefreshTokenMatches(refreshToken || '', payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    return await this.userRepository.findOneOrFail({\n      where: [{ id: payload.userId }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListRolesDto.html":{"url":"classes/ListRolesDto.html","title":"class - ListRolesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListRolesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/list-roles.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/list-roles.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class ListRolesDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(login: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'login',\n      passwordField: 'password',\n    });\n  }\n  async validate(login: string, password: string): Promise {\n    return this.authenticationService.login(login, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEvent.html":{"url":"classes/LoginOfUserEvent.html","title":"class - LoginOfUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/login-of-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOfUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'login-user';\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEventHandler.html":{"url":"classes/LoginOfUserEventHandler.html","title":"class - LoginOfUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: LoginOfUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                LoginOfUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(LoginOfUserEvent)\nexport class LoginOfUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: LoginOfUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with username: ' + event.username + ' logged in',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailDto.html":{"url":"classes/MailDto.html","title":"class - MailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/domain/dto/mail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  title?: string;\n\n  @ApiProperty()\n  message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailLandingPageDto.html":{"url":"classes/MailLandingPageDto.html","title":"class - MailLandingPageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailLandingPageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, mail: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailLandingPageDto {\n  constructor(public readonly id: string, public readonly mail: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailRequiredException.html":{"url":"classes/MailRequiredException.html","title":"class - MailRequiredException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailRequiredException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/mail-required.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/mail-required.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class MailRequiredException extends HttpException {\n  constructor() {\n    super('Mail is required', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailResponse.html":{"url":"classes/MailResponse.html","title":"class - MailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/response/mail.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/NotificationEntity.html":{"url":"entities/NotificationEntity.html","title":"entity - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                link\n                            \n                            \n                                profile\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversationEntity => conversationEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_read', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'link', type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'title', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { NotificationTypeEnum } from './enum/notification-type.enum';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity({ name: 'notification' })\nexport class NotificationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'title', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ type: 'enum', enum: NotificationTypeEnum, default: NotificationTypeEnum.INFO })\n  type: NotificationTypeEnum;\n\n  @Column({ name: 'is_read', type: 'boolean', default: false })\n  isRead: boolean;\n\n  @Column({ name: 'link', type: 'varchar', length: 255, nullable: true })\n  link: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversationEntity => conversationEntity.notifications, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { CardEntity } from './card.entity';\nimport { ProfileEntity } from '../profile/domain/entities/profile.entity';\n\n@Entity('occupation')\nexport class OccupationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteMyProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getAllProfiles\n                            \n                            \n                                    Async\n                                getMyProfiles\n                            \n                            \n                                    Async\n                                getProfileById\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                updateMyProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create-profile')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMyProfile(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/admin/delete-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@ApiResponse({status: 200, description: 'List of profiles', content: undefined})@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMyProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyProfiles(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-my-profiles')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileById(profileId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/with-user-id/:id')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/get-with-criteria')@HttpCode(201)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfilesWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMyProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMyProfile(requestUser: RequestUser, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-my-profile')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(profileId: string, profile: UpdateProfileRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/update-profile/:id')@HttpCode(204)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/profile/profile.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profileId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Put, Req, UseGuards } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ProfileService } from './profile.service';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\n\n@Controller('profile')\n@ApiTags('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  /**\n   * @api {get} /profile Get all profiles\n   * @apiName GetallProfiles\n   * @apiGroup Profile\n   * @apiVersion 0.0.8\n   * @apiDescription Get all profiles\n   * @apiSuccess {Object[]} profiles List of profiles\n   */\n  @Get('/admin/')\n  @ApiResponse({\n    status: 200,\n    description: 'List of profiles',\n    content: {\n      'application/json': {\n        example: [\n          { id: 1, name: 'Profile 1' },\n          { id: 2, name: 'Profile 2' },\n        ],\n      },\n    },\n  })\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAllProfiles(): Promise {\n    return await this.profileService.getProfiles().catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Get('/public/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getProfileById(@Param('id') profileId: string): Promise {\n    return await this.profileService.getProfile(profileId).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Get('/admin/with-user-id/:id')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfileByUserId(@Param('id') userId: string): Promise {\n    return await this.profileService.getProfileByUserId(userId).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Get('/public/get-my-profiles')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMyProfiles(@Req() requestUser: RequestUser): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.getProfileByUserId(id).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Post('/admin/get-with-criteria')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getProfilesWithCriteria(\n    @Body() getProfilesWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    return await this.profileService.getProfilesWithCriteria(getProfilesWithCriteriaRequest).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Put('/admin/update-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateProfile(@Param('id') profileId: string, @Body() profile: UpdateProfileRequest): Promise {\n    return await this.profileService.updateProfile(profileId, profile).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Put('/public/update-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMyProfile(@Req() requestUser: RequestUser, @Body() profile: UpdateProfileRequest): Promise {\n    const { id } = requestUser.user;\n    return await this.profileService.updateProfile(id, profile).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Post('/admin/create-profile')\n  @HttpCode(201)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createProfile(@Body() profile: UpdateProfileRequest): Promise {\n    return await this.profileService.createProfile(profile).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Delete('/admin/delete-profile/:id')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteProfile(@Param('id') profileId: string): Promise {\n    return await this.profileService.deleteProfile(profileId).catch(error => {\n      throw new Error(error);\n    });\n  }\n\n  @Delete('/admin/delete-my-profile')\n  @HttpCode(204)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMyProfile(@Req() requestUser: RequestUser): Promise {\n    return await this.profileService.deleteProfile(requestUser.user.id).catch(error => {\n      throw new Error(error);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/entities/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                notifications\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                roleProfile\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: RoleProfileEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/entities/profile.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../../../user/domain/entities/user.entity';\nimport { CardEntity } from '../../../entities-to-create/card.entity';\nimport { OccupationEntity } from '../../../entities-to-create/occupation.entity';\nimport { CompanyEmployeeEntity } from '../../../entities-to-create/company-employee.entity';\nimport { MediaEntity } from '../../../entities-to-create/media.entity';\nimport { JoinedConversation } from '../../../entities-to-create/joined-conversation.entity';\nimport CompanyEntity from '../../../entities-to-create/company.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { RoleProfileEnum } from '../enum/role-profile.enum';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  usernameProfile: string;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n  @Column({ type: 'enum', enum: RoleProfileEnum, default: RoleProfileEnum.CLASSIC })\n  roleProfile: RoleProfileEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user?: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { OccupationEntity } from '../entities-to-create/occupation.entity';\nimport { ProfileEntity } from './domain/entities/profile.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { CreateProfileCommandHandler } from './cqrs/handler/command/create-profile.command-handler';\nimport { ShiftProfileOwnerCommandHandler } from './cqrs/handler/command/shift-profile-owner.command-handler';\nimport { UpdateOccupationsProfileCommandHandler } from './cqrs/handler/command/update-occupations-profile.command-handler';\nimport { GetProfilesByUserIdQueryHandler } from './cqrs/handler/query/get-profiles-by-user-id.query-handler';\nimport { GetAllProfileQueryHandler } from './cqrs/handler/query/get-all-profile.query-handler';\nimport { GetProfileWithCriteriaQueryHandler } from './cqrs/handler/query/get-profile-with-criteria.query-handler';\nimport { DeleteProfileEventHandler } from './cqrs/handler/event/delete-profile.event-handler';\nimport { UpdateProfileEventHandler } from './cqrs/handler/event/update-profile.event-handler';\nimport { DeleteProfileCommandHandler } from './cqrs/handler/command/delete-profile.command-handler';\nimport { GetProfileByIdQueryHandler } from './cqrs/handler/query/get-profile-by-id.query-handler';\nimport { UpdateProfileCommandHandler } from './cqrs/handler/command/update-profile.command-handler';\nimport { SoftDeleteProfileEventHandler } from './cqrs/handler/event/soft-delete-profile.event-handler';\nimport { CreateProfileEventHandler } from './cqrs/handler/event/create-profile.event-handler';\nimport { ShiftProfileOwnerEventHandler } from './cqrs/handler/event/shift-profile-owner.event-handler';\nimport { SoftDeleteProfileCommandHandler } from './cqrs/handler/command/soft-delete-profile.command-handler';\nimport { UpdateOccupationsProfileEventHandler } from './cqrs/handler/event/update-occupations-profile.event-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, ProfileEntity, OccupationEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [ProfileController],\n  providers: [\n    ProfileService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateProfileCommandHandler,\n    DeleteProfileCommandHandler,\n    ShiftProfileOwnerCommandHandler,\n    SoftDeleteProfileCommandHandler,\n    UpdateProfileCommandHandler,\n    UpdateOccupationsProfileCommandHandler,\n    // Query handlers\n    GetProfileByIdQueryHandler,\n    GetProfilesByUserIdQueryHandler,\n    GetAllProfileQueryHandler,\n    GetProfileWithCriteriaQueryHandler,\n    // Event handlers\n    CreateProfileEventHandler,\n    DeleteProfileEventHandler,\n    ShiftProfileOwnerEventHandler,\n    SoftDeleteProfileEventHandler,\n    UpdateProfileEventHandler,\n    UpdateOccupationsProfileEventHandler,\n  ],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileResponse.html":{"url":"classes/ProfileResponse.html","title":"class - ProfileResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/response/profile.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                isDeleted\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/response/profile.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProfileResponse {\n  public readonly id: string;\n  public readonly userId: string;\n  public readonly usernameProfile: string;\n\n  public readonly isDeleted?: boolean;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfile\n                            \n                            \n                                    Async\n                                deleteProfile\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                getProfileByUserId\n                            \n                            \n                                    Async\n                                getProfiles\n                            \n                            \n                                    Async\n                                getProfilesWithCriteria\n                            \n                            \n                                    Async\n                                shiftProfileOwner\n                            \n                            \n                                    Async\n                                softDeleteProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/profile.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfile(createProfileRequest: CreateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileRequest\n                                    \n                                                CreateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfileByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfiles()\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfilesWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilesWithCriteria(getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getProfileWithCriteriaRequest\n                                    \n                                                GetProfilesWithCriteriaRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        shiftProfileOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shiftProfileOwnerRequest\n                                    \n                                                ShiftProfileOwnerRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        softDeleteProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteProfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, updateProfileRequest: UpdateProfileRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/profile.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfileRequest\n                                    \n                                                UpdateProfileRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { ProfileResponse } from './domain/response/profile.response';\nimport { CreateProfileCommand } from './cqrs/command/create-profile.command';\nimport { InvalidIdException } from '../../util/exception/custom-http-exception/invalid-id.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { InvalidParameterEntityException } from '../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { DeleteProfileCommand } from './cqrs/command/delete-profile.command';\nimport { UpdateProfileCommand } from './cqrs/command/update-profile.command';\nimport { CreateProfileRequest } from './domain/request/create-profile.request';\nimport { SoftDeleteProfileCommand } from './cqrs/command/soft-delete-profile.command';\nimport { UpdateProfileRequest } from './domain/request/update-profile.request';\nimport { UpdateOccupationsProfileCommand } from './cqrs/command/update-occupations-profile.command';\nimport { ShiftProfileOwnerCommand } from './cqrs/command/shift-profile-owner.command';\nimport { ShiftProfileOwnerRequest } from './domain/request/shift-profile-owner.request';\nimport { GetProfileByIdQuery } from './cqrs/query/get-profile-by-id.query';\nimport { GetAllProfileQuery } from './cqrs/query/get-all-profile.query';\nimport { GetProfileWithCriteriaQuery } from './cqrs/query/get-profile-with-criteria.query';\nimport { GetProfilesWithCriteriaRequest } from './domain/request/get-profiles-with-criteria.request';\nimport { GetProfilesByUserIdQuery } from './cqrs/query/get-profiles-by-user-id.query';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createProfile(createProfileRequest: CreateProfileRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new CreateProfileCommand({\n          createProfileDto: {\n            usernameProfile: createProfileRequest.usernameProfile,\n            roleProfile: createProfileRequest.roleProfile,\n          },\n          userId: createProfileRequest.idUser,\n          occupationsId: createProfileRequest.occupationsId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async deleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new DeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async softDeleteProfile(id: string): Promise {\n    try {\n      return await this.commandBus.execute(\n        new SoftDeleteProfileCommand({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async updateProfile(id: string, updateProfileRequest: UpdateProfileRequest): Promise {\n    try {\n      if (updateProfileRequest.occupationsId.length > 0) {\n        await this.commandBus.execute(\n          new UpdateOccupationsProfileCommand({\n            id: id,\n            occupations: updateProfileRequest.occupationsId,\n          }),\n        );\n      }\n      await this.commandBus.execute(\n        new UpdateProfileCommand({\n          updateProfileDto: {\n            usernameProfile: updateProfileRequest.usernameProfile,\n            roleProfile: updateProfileRequest.roleProfile,\n          },\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e instanceof InvalidParameterEntityException) throw e;\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else if (e.message === 'Occupation not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async shiftProfileOwner(shiftProfileOwnerRequest: ShiftProfileOwnerRequest): Promise {\n    try {\n      return await this.commandBus.execute(\n        new ShiftProfileOwnerCommand({\n          profileId: shiftProfileOwnerRequest.profileId,\n          userId: shiftProfileOwnerRequest.userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else if (e.message === 'User not found') throw new UserNotFoundException();\n      else throw new Error(e);\n    }\n  }\n\n  // Get\n  async getProfile(id: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileByIdQuery({\n          id: id,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'Profile not found') throw new InvalidIdException();\n      else throw new Error(e);\n    }\n  }\n\n  async getProfiles(): Promise {\n    try {\n      return await this.queryBus.execute(new GetAllProfileQuery());\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfilesWithCriteria(\n    getProfileWithCriteriaRequest: GetProfilesWithCriteriaRequest,\n  ): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfileWithCriteriaQuery({\n          getProfileWithCriteriaDto: {\n            usernameProfile: getProfileWithCriteriaRequest.usernameProfile,\n            roleProfile: getProfileWithCriteriaRequest.roleProfile,\n            isDeleted: getProfileWithCriteriaRequest.isDeleted,\n          },\n        }),\n      );\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  async getProfileByUserId(userId: string): Promise {\n    try {\n      return await this.queryBus.execute(\n        new GetProfilesByUserIdQuery({\n          id: userId,\n        }),\n      );\n    } catch (e) {\n      if (e.message === 'User not found') throw new UserNotFoundException();\n      throw new Error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReferralCodeEntity.html":{"url":"entities/ReferralCodeEntity.html","title":"entity - ReferralCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReferralCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/referal-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                subscription\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ABC123', minLength: 6, maxLength: 20})@Column({unique: true})@IsString()@Length(6, 10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, required: false})@Column({type: 'timestamp', nullable: true})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eb823d92-bf55-4210-8e24-89f4011bb96d'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@ManyToOne(undefined, user => user.referralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SubscriptionEntity, required: false})@ManyToOne(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@OneToOne(undefined, user => user.usedReferralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsOptional, IsString, Length } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity('referral_code')\nexport class ReferralCodeEntity {\n  @ApiProperty({ example: 'eb823d92-bf55-4210-8e24-89f4011bb96d' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({ example: 'ABC123', minLength: 6, maxLength: 20 })\n  @Column({ unique: true })\n  @IsString()\n  @Length(6, 10)\n  code: string;\n\n  @ApiProperty({ type: () => UserEntity })\n  @OneToOne(() => UserEntity, user => user.usedReferralCodes)\n  usedBy: UserEntity;\n\n  @ApiProperty({ type: () => UserEntity })\n  @ManyToOne(() => UserEntity, user => user.referralCodes)\n  owner: UserEntity;\n\n  @ApiProperty({ type: () => SubscriptionEntity, required: false })\n  @ManyToOne(() => SubscriptionEntity, { nullable: true })\n  subscription: SubscriptionEntity;\n\n  @ApiProperty({ type: () => Date, required: false })\n  @Column({ type: 'timestamp', nullable: true })\n  @IsOptional()\n  @IsDateString()\n  expiresAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, mail: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(public readonly username: string, public readonly mail: string, public readonly password: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEvent.html":{"url":"classes/RegisterEvent.html","title":"class - RegisterEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event/register.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/event/register.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event/register.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterEvent {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEventHandler.html":{"url":"classes/RegisterEventHandler.html","title":"class - RegisterEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event-handler/register.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterEventHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RegisterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RegisterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\nimport { RegisterEvent } from '../event/register.event';\n\n@EventsHandler(RegisterEvent)\nexport class RegisterEventHandler implements IEventHandler {\n  logger_console = new Logger('RegisterEventHandler');\n\n  handle(event: RegisterEvent): void {\n    logger.info('New user have registered  with id ' + event.userId);\n\n    this.logger_console.log('New user have registered with id ' + event.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/command/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../../command/register.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { RegisterEvent } from '../../event/register.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as bcrypt from 'bcrypt';\nimport { InvalidMailException } from '../../../../../util/exception/custom-http-exception/invalid-mail.exception';\nimport { InvalidUsernameException } from '../../../../../util/exception/custom-http-exception/invalid-username.exception';\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])[A-Za-z\\\\d@$!%*#?&]{6,}$');\n  }\n\n  async execute(command: RegisterCommand): Promise {\n    if (await this.isDuplicatedUsername(command.username)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n      );\n      throw new DuplicateUsernameException();\n    }\n    if (await this.isDuplicatedEmail(command.mail)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n      );\n      throw new DuplicateMailException();\n    }\n\n    if (this.isValidPassword(command.password)) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid password' }),\n      );\n      throw new InvalidPasswordException();\n    }\n\n    if (command.mail) {\n      if (!this.isValidEmail(command.mail)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid mail' }),\n        );\n        throw new InvalidMailException();\n      }\n    }\n\n    if (command.username) {\n      if (!this.isValidUsername(command.username)) {\n        this.eventBus.publish(\n          new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid username' }),\n        );\n        throw new InvalidUsernameException();\n      }\n    }\n\n    const newUser = new UserEntity({\n      mail: command.mail,\n      password: bcrypt.hashSync(command.password, 10),\n      username: command.username,\n      referralCode: await this.generateUniqueReferralCode(),\n    });\n    const err = await validate(newUser);\n    if (err.length > 0) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Invalid parameters :' + err }),\n      );\n      throw new InvalidParameterEntityException(err);\n    }\n\n    const insertedUser = await this.userRepository.save(newUser);\n    this.eventBus.publish(new RegisterEvent(insertedUser.id));\n    return insertedUser;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return !this.regexValidatePassword.test(password);\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserByReferralCode(referralCode: string): Promise {\n    const user = await this.userRepository.findOne({ where: { referralCode: referralCode } });\n    return !!user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommandHandler.html":{"url":"classes/RemoveRefreshTokenCommandHandler.html","title":"class - RemoveRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: undefined,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RemoveRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEvent.html":{"url":"classes/RemoveRefreshTokenEvent.html","title":"class - RemoveRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/remove-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-refresh-token'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'remove-refresh-token';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEventHandler.html":{"url":"classes/RemoveRefreshTokenEventHandler.html","title":"class - RemoveRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenEvent } from '../../event/remove-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RemoveRefreshTokenEvent)\nexport class RemoveRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: RemoveRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' removed',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = this.VERBOSE == VerboseLogEnum.DEBUG ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req?.headers['user-agent']?.split('(')[1]?.split(')')[0]?.split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommand.html":{"url":"classes/RestoreUserCommand.html","title":"class - RestoreUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/restore-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/restore-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserCommandHandler.html":{"url":"classes/RestoreUserCommandHandler.html","title":"class - RestoreUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/restore-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RestoreUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/restore-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RestoreUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RestoreUserCommand } from '../../command/restore-user.command';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(RestoreUserCommand)\nexport class RestoreUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: RestoreUserCommand): Promise {\n    try {\n      if (!command.id) throw new Error('User id is required');\n      try {\n        await this.userRepository.findOneOrFail({ where: [{ id: command.id }], withDeleted: true });\n      } catch (e) {\n        throw new Error('User not found');\n      }\n      await this.userRepository.restore(command.id);\n      this.eventBus.publish(new RestoreUserEvent(command.id));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'RestoreUserCommandHandler', error }),\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEvent.html":{"url":"classes/RestoreUserEvent.html","title":"class - RestoreUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/restore-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'restore-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/restore-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RestoreUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'restore-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestoreUserEventHandler.html":{"url":"classes/RestoreUserEventHandler.html","title":"class - RestoreUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestoreUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/restore-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: RestoreUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/restore-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RestoreUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RestoreUserEvent } from '../../event/restore-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RestoreUserEvent)\nexport class RestoreUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: RestoreUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' restored',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SamePasswordException.html":{"url":"classes/SamePasswordException.html","title":"class - SamePasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SamePasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/same-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/same-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class SamePasswordException extends HttpException {\n  constructor() {\n    super('New password is the same as old password', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommand.html":{"url":"classes/SendMailCommand.html","title":"class - SendMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/command/send-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly email: string;\n\n  public readonly title?: string | undefined;\n\n  public readonly message?: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommandHandler.html":{"url":"classes/SendMailCommandHandler.html","title":"class - SendMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SendMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SendMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { SendMailCommand } from '../../command/send-mail.command';\n\n@CommandHandler(SendMailCommand)\nexport class SendMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_LOG') private client: ClientProxy, private readonly eventBus: EventBus) {}\n  async execute(command: SendMailCommand): Promise {\n    this.client.emit('send-email', command);\n    this.eventBus.publish(\n      new SendMailEvent({\n        email: command.email,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEvent.html":{"url":"classes/SendMailEvent.html","title":"class - SendMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/event/send-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'send-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly module: string = 'api-mail';\n  public readonly method: string = 'send-mail';\n\n  public readonly email: string;\n\n  public readonly title?: string;\n\n  public readonly message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEventHandler.html":{"url":"classes/SendMailEventHandler.html","title":"class - SendMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SendMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SendMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SendMailEvent)\nexport class SendMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: SendMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Mail sent to: ' + event.email,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommandHandler.html":{"url":"classes/SetCurrentRefreshTokenCommandHandler.html","title":"class - SetCurrentRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(command.refreshToken, 10);\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'SetCurrentRefreshTokenCommandHandler', error: error }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEvent.html":{"url":"classes/SetCurrentRefreshTokenEvent.html","title":"class - SetCurrentRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/set-current-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEventHandler.html":{"url":"classes/SetCurrentRefreshTokenEventHandler.html","title":"class - SetCurrentRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: SetCurrentRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SetCurrentRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenEvent } from '../../event/set-current-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SetCurrentRefreshTokenEvent)\nexport class SetCurrentRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: SetCurrentRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' set',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommand.html":{"url":"classes/ShiftProfileOwnerCommand.html","title":"class - ShiftProfileOwnerCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/shift-profile-owner.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/shift-profile-owner.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerCommand {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerCommandHandler.html":{"url":"classes/ShiftProfileOwnerCommandHandler.html","title":"class - ShiftProfileOwnerCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: ShiftProfileOwnerCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/shift-profile-owner.command-handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                ShiftProfileOwnerCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerCommand } from '../../command/shift-profile-owner.command';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\n\n@CommandHandler(ShiftProfileOwnerCommand)\nexport class ShiftProfileOwnerCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: ShiftProfileOwnerCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.profileId }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      profile.user = await this.userRepository\n        .findOneOrFail({\n          where: [{ id: command.userId }],\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n      await this.profileRepository.save(profile);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEvent.html":{"url":"classes/ShiftProfileOwnerEvent.html","title":"class - ShiftProfileOwnerEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/shift-profile-owner.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                owner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'shift-profile-owner'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/shift-profile-owner.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerEvent {\n  public readonly id: string;\n  public readonly owner: string;\n\n  public readonly module: string = 'profile';\n  public readonly method: string = 'shift-profile-owner';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerEventHandler.html":{"url":"classes/ShiftProfileOwnerEventHandler.html","title":"class - ShiftProfileOwnerEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: ShiftProfileOwnerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/shift-profile-owner.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ShiftProfileOwnerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ShiftProfileOwnerEvent } from '../../event/shift-profile-owner.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(ShiftProfileOwnerEvent)\nexport class ShiftProfileOwnerEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: ShiftProfileOwnerEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' have been shifted to user with id: ' + event.owner + '',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShiftProfileOwnerRequest.html":{"url":"classes/ShiftProfileOwnerRequest.html","title":"class - ShiftProfileOwnerRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShiftProfileOwnerRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/shift-profile-owner.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/shift-profile-owner.request.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShiftProfileOwnerRequest {\n  public readonly profileId: string;\n  public readonly userId: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  mail: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommand.html":{"url":"classes/SoftDeleteProfileCommand.html","title":"class - SoftDeleteProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/soft-delete-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/soft-delete-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileCommand {\n  public readonly id: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileCommandHandler.html":{"url":"classes/SoftDeleteProfileCommandHandler.html","title":"class - SoftDeleteProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/soft-delete-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileCommand } from '../../command/soft-delete-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\n\n@CommandHandler(SoftDeleteProfileCommand)\nexport class SoftDeleteProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n      await this.profileRepository.softDelete({\n        id: profile.id,\n      });\n      this.eventBus.publish(\n        new SoftDeleteProfileEvent({\n          id: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEvent.html":{"url":"classes/SoftDeleteProfileEvent.html","title":"class - SoftDeleteProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/soft-delete-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'soft-delete-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/soft-delete-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteProfileEvent {\n  public readonly id: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'soft-delete-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteProfileEventHandler.html":{"url":"classes/SoftDeleteProfileEventHandler.html","title":"class - SoftDeleteProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/soft-delete-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteProfileEvent } from '../../event/soft-delete-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteProfileEvent)\nexport class SoftDeleteProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.id + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommand.html":{"url":"classes/SoftDeleteUserCommand.html","title":"class - SoftDeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/soft-delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/soft-delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserCommandHandler.html":{"url":"classes/SoftDeleteUserCommandHandler.html","title":"class - SoftDeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SoftDeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/soft-delete-user.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SoftDeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserCommand } from '../../command/soft-delete-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\n\n@CommandHandler(SoftDeleteUserCommand)\nexport class SoftDeleteUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: SoftDeleteUserCommand): Promise {\n    try {\n      await this.userRepository\n        .findOneOrFail({\n          where: { id: command.userId },\n        })\n        .catch(() => {\n          throw new Error('User not found');\n        });\n\n      await this.userRepository.softDelete({\n        id: command.userId,\n      });\n      this.eventBus.publish(new SoftDeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent({ localisation: 'user', handler: 'DeleteUserCommandHandler', error }));\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEvent.html":{"url":"classes/SoftDeleteUserEvent.html","title":"class - SoftDeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/soft-delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/soft-delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SoftDeleteUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'set-refresh-token-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserEventHandler.html":{"url":"classes/SoftDeleteUserEventHandler.html","title":"class - SoftDeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SoftDeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/soft-delete-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SoftDeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SoftDeleteUserEvent } from '../../event/soft-delete-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SoftDeleteUserEvent)\nexport class SoftDeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: SoftDeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' soft deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferProfileToUserCommand.html":{"url":"classes/TransferProfileToUserCommand.html","title":"class - TransferProfileToUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferProfileToUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/transfer-profile-to-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                loginDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        loginDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SignInDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/transfer-profile-to-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SignInDto } from '../../../auth/dto/sign-in.dto';\n\nexport class TransferProfileToUserCommand {\n  public readonly userId: string;\n  public readonly loginDto: SignInDto;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommand.html":{"url":"classes/UpdateOccupationsProfileCommand.html","title":"class - UpdateOccupationsProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-occupations-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-occupations-profile.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileCommand {\n  public readonly id: string;\n  public readonly occupations: string[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileCommandHandler.html":{"url":"classes/UpdateOccupationsProfileCommandHandler.html","title":"class - UpdateOccupationsProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, occupationRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateOccupationsProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-occupations-profile.command-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateOccupationsProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileCommand } from '../../command/update-occupations-profile.command';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\nimport { OccupationEntity } from '../../../../entities-to-create/occupation.entity';\n\n@CommandHandler(UpdateOccupationsProfileCommand)\nexport class UpdateOccupationsProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateOccupationsProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      const occupationPromises: Promise[] = command.occupations.map(async occupationId => {\n        return await this.occupationRepository\n          .findOneOrFail({\n            where: [{ id: occupationId }],\n          })\n          .catch(() => {\n            throw new Error('Occupation not found');\n          });\n      });\n      const occupations: OccupationEntity[] = await Promise.all(occupationPromises);\n\n      if (occupations.length == 0) {\n        throw new Error('Occupations not found');\n      }\n\n      await this.profileRepository.update(profile.id, {\n        occupations: occupations,\n      });\n      this.eventBus.publish(\n        new UpdateOccupationsProfileEvent({\n          listOfOccupationId: command.occupations,\n          profileId: command.id,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileDto.html":{"url":"classes/UpdateOccupationsProfileDto.html","title":"class - UpdateOccupationsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-occupations-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-occupations-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateOccupationsProfileDto {\n  public readonly roleProfile?: RoleProfileEnum;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEvent.html":{"url":"classes/UpdateOccupationsProfileEvent.html","title":"class - UpdateOccupationsProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-occupations-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                listOfOccupationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                profileId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        listOfOccupationId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-occupations-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        profileId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-occupations-profile.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateOccupationsProfileEvent {\n  public readonly listOfOccupationId: string[];\n  public readonly profileId: string;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-occupations-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOccupationsProfileEventHandler.html":{"url":"classes/UpdateOccupationsProfileEventHandler.html","title":"class - UpdateOccupationsProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOccupationsProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateOccupationsProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-occupations-profile.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateOccupationsProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateOccupationsProfileEvent } from '../../event/update-occupations-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateOccupationsProfileEvent)\nexport class UpdateOccupationsProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: UpdateOccupationsProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'Profile with id: ' +\n        event.profileId +\n        ' occupation have been updated with id: ' +\n        event.listOfOccupationId.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommand.html":{"url":"classes/UpdateProfileCommand.html","title":"class - UpdateProfileCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/command/update-profile.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/command/update-profile.command.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileDto } from '../../domain/dto/update-profile.dto';\n\nexport class UpdateProfileCommand {\n  public readonly id: string;\n  public readonly updateProfileDto: UpdateProfileDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileCommandHandler.html":{"url":"classes/UpdateProfileCommandHandler.html","title":"class - UpdateProfileCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/command/update-profile.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateProfileCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/command/update-profile.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateProfileCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { UpdateProfileCommand } from '../../command/update-profile.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProfileEntity } from '../../../domain/entities/profile.entity';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateProfileCommand)\nexport class UpdateProfileCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateProfileCommand): Promise {\n    try {\n      const profile = await this.profileRepository\n        .findOneOrFail({\n          where: [{ id: command.id }],\n        })\n        .catch(() => {\n          throw new Error('Profile not found');\n        });\n\n      await this.profileRepository.update(profile.id, command.updateProfileDto);\n      this.eventBus.publish(\n        new UpdateProfileEvent({\n          updateProfileCommand: command,\n        }),\n      );\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/dto/update-profile.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileDto {\n  public readonly usernameProfile?: string;\n  public readonly roleProfile?: RoleProfileEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEvent.html":{"url":"classes/UpdateProfileEvent.html","title":"class - UpdateProfileEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/event/update-profile.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateProfileCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'profile'\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateProfileCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateProfileCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/cqrs/event/update-profile.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateProfileCommand } from '../command/update-profile.command';\n\nexport class UpdateProfileEvent {\n  public readonly updateProfileCommand: UpdateProfileCommand;\n  public readonly module: string = 'profile';\n  public readonly method: string = 'update-profile';\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileEventHandler.html":{"url":"classes/UpdateProfileEventHandler.html","title":"class - UpdateProfileEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/cqrs/handler/event/update-profile.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateProfileEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/profile/cqrs/handler/event/update-profile.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateProfileEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateProfileEvent } from '../../event/update-profile.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateProfileEvent)\nexport class UpdateProfileEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateProfileEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Profile with id: ' + event.updateProfileCommand.updateProfileDto + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileRequest.html":{"url":"classes/UpdateProfileRequest.html","title":"class - UpdateProfileRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/profile/domain/request/update-profile.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                idUser\n                            \n                            \n                                    Public\n                                    Readonly\n                                occupationsId\n                            \n                            \n                                    Public\n                                    Readonly\n                                roleProfile\n                            \n                            \n                                    Public\n                                    Readonly\n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        occupationsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roleProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleProfileEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/profile/domain/request/update-profile.request.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleProfileEnum } from '../enum/role-profile.enum';\n\nexport class UpdateProfileRequest {\n  public readonly usernameProfile: string;\n  public readonly idUser: string;\n  public readonly roleProfile: RoleProfileEnum;\n  public readonly occupationsId: string[];\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(public readonly userId: string, public readonly user: UpdateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommandHandler.html":{"url":"classes/UpdateUserCommandHandler.html","title":"class - UpdateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedMail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicateOfDeletedUsername\n                            \n                            \n                                    Private\n                                isValidEmail\n                            \n                            \n                                    Private\n                                isValidUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicateOfDeletedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicateOfDeletedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../../command/update-user.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateMailException } from '../../../../../util/exception/custom-http-exception/duplicate-mail.exception';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      if (command.user.username) {\n        if (await this.isDuplicatedUsername(command.user.username)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Username already exists' }),\n          );\n          throw new DuplicateUsernameException();\n        }\n      }\n\n      if (command.user.mail) {\n        if (await this.isDuplicatedEmail(command.user.mail)) {\n          this.eventBus.publish(\n            new ErrorCustomEvent({ localisation: 'auth', handler: 'Register', error: 'Email already exists' }),\n          );\n          throw new DuplicateMailException();\n        }\n      }\n      if ((await this.userRepository.findOne({ where: [{ id: command.userId }] })) === undefined) {\n        throw new Error('User not found');\n      }\n\n      await this.isDuplicateOfDeletedUsername(command.user.username || '');\n      await this.isDuplicateOfDeletedMail(command.user.mail || '');\n\n      const err = await validate(command.user);\n      if (err.length > 0) {\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: UserEntity = await this.userRepository.findOneOrFail({\n        where: [{ id: command.userId }],\n      });\n      this.eventBus.publish(new UpdateUserEvent(command.userId));\n      return new UserResponse({ ...user });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({\n          localisation: 'user',\n          handler: 'UpdateUserCommandHandler',\n          error: error,\n        }),\n      );\n      throw error;\n    }\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.mail === email);\n    });\n  }\n\n  private isValidUsername(username: string): boolean {\n    return username.length > 4 && username.length  {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ mail: mail }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null && verifyDuplicateMailWithDeleted.deletedAt !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        mail: 'deleted' + verifyDuplicateMailWithDeleted.mail + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n\n  private async isDuplicateOfDeletedUsername(username: string): Promise {\n    const verifyDuplicateMailWithDeleted: UserEntity | null = await this.userRepository.findOne({\n      where: [{ username: username }],\n      withDeleted: true,\n    });\n    if (verifyDuplicateMailWithDeleted !== null) {\n      await this.userRepository.update(verifyDuplicateMailWithDeleted.id, {\n        username: 'deleted' + verifyDuplicateMailWithDeleted.username + ' ' + Math.random().toString().split('.')[1],\n      });\n      await this.eventBus.publish(new UpdateUserEvent(verifyDuplicateMailWithDeleted.id));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommand.html":{"url":"classes/UpdateUserCredentialCommand.html","title":"class - UpdateUserCredentialCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-credential.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                updateUserCredentialDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserCredentialDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserCredentialDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-credential.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserCredentialDto } from '../../domain/dto/update-user-credential.dto';\n\nexport class UpdateUserCredentialCommand {\n  public readonly userId: string;\n  public readonly updateUserCredentialDto: UpdateUserCredentialDto;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialCommandHandler.html":{"url":"classes/UpdateUserCredentialCommandHandler.html","title":"class - UpdateUserCredentialCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCredentialCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCredentialCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-credential.command-handler.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCredentialCommand } from '../../command/update-user-credential.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(UpdateUserCredentialCommand)\nexport class UpdateUserCredentialCommandHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,}$');\n  }\n\n  async execute(command: UpdateUserCredentialCommand): Promise {\n    try {\n      if (command.updateUserCredentialDto.newPassword == command.updateUserCredentialDto.password) {\n        throw new Error('New password is the same as old password');\n      }\n      if (!this.isValidPassword(command.updateUserCredentialDto.newPassword)) {\n        throw new Error('Invalid password');\n      }\n      const user = await this.userRepository.findOne({\n        where: { id: command.userId },\n        select: ['id', 'password'],\n      });\n      if (!user) {\n        throw new Error('User not found');\n      }\n\n      if (!(await this.verifyPassword(command.updateUserCredentialDto.password, user.password))) {\n        throw new Error('Invalid old password');\n      }\n\n      await this.userRepository.update(command.userId, { password: command.updateUserCredentialDto.newPassword });\n      await this.eventBus.publish(new UpdateUserCredentialEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserCredentialCommandHandler', error: error }),\n      );\n      throw error;\n    }\n  }\n  private isValidPassword(password: string): boolean {\n    return this.regexValidatePassword.test(password);\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialDto.html":{"url":"classes/UpdateUserCredentialDto.html","title":"class - UpdateUserCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user-credential.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialDto {\n  public readonly username: string;\n  public readonly password: string;\n\n  public readonly newPassword: string;\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEvent.html":{"url":"classes/UpdateUserCredentialEvent.html","title":"class - UpdateUserCredentialEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-credential.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-credential'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-credential.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserCredentialEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-credential';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCredentialEventHandler.html":{"url":"classes/UpdateUserCredentialEventHandler.html","title":"class - UpdateUserCredentialEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCredentialEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserCredentialEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-credential.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserCredentialEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\nimport { UpdateUserCredentialEvent } from '../../event/update-user-credential.event';\n\n@EventsHandler(UpdateUserCredentialEvent)\nexport class UpdateUserCredentialEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserCredentialEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  mail?: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username?: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEvent.html":{"url":"classes/UpdateUserEvent.html","title":"class - UpdateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user';\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEventHandler.html":{"url":"classes/UpdateUserEventHandler.html","title":"class - UpdateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: UpdateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserEvent)\nexport class UpdateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  handle(event: UpdateUserEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommand.html":{"url":"classes/UpdateUserRoleCommand.html","title":"class - UpdateUserRoleCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user-role.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user-role.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../../domain/enum/user-role.enum';\n\nexport class UpdateUserRoleCommand {\n  public readonly userId: string;\n  public readonly roles: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleCommandHandler.html":{"url":"classes/UpdateUserRoleCommandHandler.html","title":"class - UpdateUserRoleCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user-role.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserRoleCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user-role.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserRoleCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleCommand } from '../../command/update-user-role.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { Repository } from 'typeorm';\n\n@CommandHandler(UpdateUserRoleCommand)\nexport class UpdateUserRoleCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserRoleCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, { roles: command.roles });\n      await this.eventBus.publish(new UpdateUserRoleEvent(command));\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorCustomEvent({ localisation: 'user', handler: 'UpdateUserRoleCommandHandler', error: error }),\n      );\n      throw new Error(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEvent.html":{"url":"classes/UpdateUserRoleEvent.html","title":"class - UpdateUserRoleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user-role.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                updateUserRoleCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateUserRoleCommand: UpdateUserRoleCommand)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateUserRoleCommand\n                                                  \n                                                        \n                                                                        UpdateUserRoleCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user-role'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updateUserRoleCommand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserRoleCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user-role.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserRoleCommand } from '../command/update-user-role.command';\n\nexport class UpdateUserRoleEvent {\n  public readonly module: string = 'user';\n  public readonly method: string = 'update-user-role';\n  constructor(public readonly updateUserRoleCommand: UpdateUserRoleCommand) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserRoleEventHandler.html":{"url":"classes/UpdateUserRoleEventHandler.html","title":"class - UpdateUserRoleEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserRoleEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user-role.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: UpdateUserRoleEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user-role.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserRoleEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserRoleEvent } from '../../event/update-user-role.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserRoleEvent)\nexport class UpdateUserRoleEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: UpdateUserRoleEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body:\n        'User with id: ' +\n        event.updateUserRoleCommand.userId +\n        ' updated role with ' +\n        event.updateUserRoleCommand.roles.join(', '),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/web/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateMe\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/create')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/public/delete-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@Post('/admin/criteria')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/full-delete/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/admin/generate-user-from-mail')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(requestUser: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/public/get-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(requestUser: RequestUser, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Delete('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: UserIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Post('/admin/restore-user')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                UserIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/admin/:id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMe(requestUser: RequestUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-me')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(requestUser: RequestUser, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/public/update-password')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestUser\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRole(id: string, roles: ListRolesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@Put('/admin/:id/role')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/web/user.controller.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                ListRolesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpException,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from '../user.service';\nimport { CreateUserDto } from '../domain/dto/create-user.dto';\nimport { CreateUserResponse } from '../domain/response/create-user.response';\nimport { UpdateUserDto } from '../domain/dto/update-user.dto';\nimport { RequestUser } from '../../auth/interface/request-user.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserResponse } from '../domain/response/user.response';\nimport { RoleGuard } from '../../auth/guards/role.guard';\nimport { UserRoleEnum } from '../domain/enum/user-role.enum';\nimport { GetUserWithCriteriaDto } from '../domain/dto/get-user-with-criteria.dto';\nimport { UpdateUserCredentialDto } from '../domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from '../domain/dto/generate-user.dto';\nimport { ListRolesDto } from '../domain/dto/list-roles.dto';\nimport { UserIdDto } from '../domain/dto/user-id.dto';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/admin/create')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Post('/admin/generate-user-from-mail')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async generateUserFromMail(@Body() generateUserDto: GenerateUserDto): Promise {\n    try {\n      return await this.userService.generateUserFromMail(generateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Post('/admin/restore-user')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async restoreUser(@Body() userId: UserIdDto): Promise {\n    try {\n      return await this.userService.restoreUser(userId.userId);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n  @Get('/admin/')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findAll(): Promise {\n    try {\n      return await this.userService.findAll();\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findOne(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.findOne(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(200)\n  @Post('/admin/criteria')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async findWithCriteria(\n    @Body() getUserWithCriteriaDto: GetUserWithCriteriaDto,\n  ): Promise {\n    try {\n      return await this.userService.findWithCriteria(getUserWithCriteriaDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Get('/public/get-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async getMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      const { user } = requestUser;\n      return await this.userService.findMe(user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async update(\n    @Param('id') userId: string,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(userId, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Put('/admin/:id/role')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async updateRole(@Param('id') id: string, @Body() roles: ListRolesDto): Promise {\n    try {\n      return await this.userService.updateRoles(id, roles.roles);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updateMe(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserDto: UpdateUserDto,\n  ): Promise {\n    try {\n      return await this.userService.update(requestUser.user.id, updateUserDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Put('/public/update-password')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async updatePassword(\n    @Req() requestUser: RequestUser,\n    @Body() updateUserCredentialDto: UpdateUserCredentialDto,\n  ): Promise {\n    try {\n      return await this.userService.updatePassword(requestUser.user.id, updateUserCredentialDto);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  remove(@Req() requestUser: RequestUser, @Param('id') id: string): Promise {\n    try {\n      return this.userService.remove(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/public/delete-me')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  async deleteMe(@Req() requestUser: RequestUser): Promise {\n    try {\n      return await this.userService.deleteMe(requestUser.user.id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n\n  @HttpCode(204)\n  @Delete('/admin/full-delete/:id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async fullDelete(@Param('id') id: string): Promise {\n    try {\n      return await this.userService.fullDelete(id);\n    } catch (error) {\n      throw new HttpException(\n        {\n          message: error.message,\n        },\n        error.status,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                    Optional\n                                mail\n                            \n                            \n                                notifications\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                    Public\n                                    Optional\n                                referralCode\n                            \n                            \n                                referralCodes\n                            \n                            \n                                roles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedReferralCodes\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:56\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:76\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:48\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        referralCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedReferralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.usedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../profile/domain/entities/profile.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\nimport { ReferralCodeEntity } from '../../../entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { AddressEntity } from '../../../entities-to-create/address.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true, nullable: true })\n  mail?: string;\n\n  @Column()\n  @Column({ unique: true, nullable: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  @Column({ unique: true, nullable: true })\n  public referralCode?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  roles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.owner)\n  referralCodes: ReferralCodeEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.usedBy)\n  usedReferralCodes: ReferralCodeEntity;\n\n  @OneToMany(() => NotificationEntity, notification => notification.user, {\n    cascade: true,\n  })\n  notifications: NotificationEntity[];\n\n  @OneToMany(() => AddressEntity, address => address.user, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserIdDto.html":{"url":"interfaces/UserIdDto.html","title":"interface - UserIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-id.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserIdDto {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                login\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  constructor(login: string, password: string) {\n    this.login = login;\n    this.password = password;\n  }\n\n  @ApiProperty()\n  public readonly login: string;\n  @ApiProperty()\n  public readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponse.html":{"url":"classes/UserLoginResponse.html","title":"class - UserLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-login.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-login.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../entities/user.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserLoginResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username?: string;\n  public readonly email?: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public token: string;\n  public readonly roles: UserRoleEnum[];\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './web/user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\nimport { GetUserByEmailQueryHandler } from './cqrs/handler/query/get-user-by-email.query-handler';\nimport { GetUserByUsernameQueryHandler } from './cqrs/handler/query/get-user-by-username.query-handler';\nimport { GetUserLoginQueryHandler } from './cqrs/handler/query/get-user-login.query-handler';\nimport { GetUserIfRefreshTokenMatchesQueryHandler } from './cqrs/handler/query/get-user-if-refresh-token-matches.query-handler';\nimport { GetUserQueryHandler } from './cqrs/handler/query/get-user.query-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SetCurrentRefreshTokenCommandHandler } from './cqrs/handler/command/set-current-refresh-token.command-handler';\nimport { UpdateUserCommandHandler } from './cqrs/handler/command/update-user.command-handler';\nimport { RemoveRefreshTokenCommandHandler } from './cqrs/handler/command/remove-refresh-token.command-handler';\nimport { CreateUserEventHandler } from './cqrs/handler/event/create-user.event-handler';\nimport { DeleteUserEventHandler } from './cqrs/handler/event/delete-user.event-handler';\nimport { RemoveRefreshTokenEventHandler } from './cqrs/handler/event/remove-refresh-token.event-handler';\nimport { SetCurrentRefreshTokenEventHandler } from './cqrs/handler/event/set-current-refresh-token.event-handler';\nimport { LoginOfUserEventHandler } from './cqrs/handler/event/login-of-user.event-handler';\nimport { UpdateUserEventHandler } from './cqrs/handler/event/update-user.event-handler';\nimport { SoftDeleteUserCommandHandler } from './cqrs/handler/command/soft-delete-user.command-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { GetUserWithCriteriaQueryHandler } from './cqrs/handler/query/get-user-with-criteria.query-handler';\nimport { UpdateUserCredentialCommandHandler } from './cqrs/handler/command/update-user-credential.command-handler';\nimport { UpdateUserRoleCommandHandler } from './cqrs/handler/command/update-user-role.command-handler';\nimport { RestoreUserCommandHandler } from './cqrs/handler/command/restore-user.command-handler';\nimport { DeleteUserCommandHandler } from './cqrs/handler/command/delete-user.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateUserCommandHandler,\n    RemoveRefreshTokenCommandHandler,\n    SetCurrentRefreshTokenCommandHandler,\n    UpdateUserCommandHandler,\n    SoftDeleteUserCommandHandler,\n    UpdateUserCredentialCommandHandler,\n    UpdateUserRoleCommandHandler,\n    RestoreUserCommandHandler,\n    DeleteUserCommandHandler,\n    // Query handlers\n    GetUserByUsernameQueryHandler,\n    GetUserByEmailQueryHandler,\n    GetUserLoginQueryHandler,\n    GetUserIfRefreshTokenMatchesQueryHandler,\n    GetUserQueryHandler,\n    GetUserWithCriteriaQueryHandler,\n    // Event handlers\n    CreateUserEventHandler,\n    DeleteUserEventHandler,\n    RemoveRefreshTokenEventHandler,\n    SetCurrentRefreshTokenEventHandler,\n    LoginOfUserEventHandler,\n    UpdateUserEventHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly roles: UserRoleEnum[];\n  public readonly username?: string;\n  public readonly mail?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteMe\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findMe\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findWithCriteria\n                            \n                            \n                                    Async\n                                fullDelete\n                            \n                            \n                                    Private\n                                generatePassword\n                            \n                            \n                                    Async\n                                generateUserFromMail\n                            \n                            \n                                    Async\n                                getMe\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                restoreUser\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithCriteria\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getUserWithCriteriaDto\n                                    \n                                                GetUserWithCriteriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserFromMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserFromMail(generateUserDto: GenerateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    generateUserDto\n                                    \n                                                GenerateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMe(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restoreUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserCredentialDto\n                                    \n                                                UpdateUserCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRoles(userId: string, roles: UserRoleEnum[])\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles\n                                    \n                                                UserRoleEnum[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { UserResponse } from './domain/response/user.response';\nimport { SoftDeleteUserCommand } from './cqrs/command/soft-delete-user.command';\nimport { GetUserWithCriteriaQuery } from './cqrs/query/get-user-with-criteria.query';\nimport { GetUserWithCriteriaDto } from './domain/dto/get-user-with-criteria.dto';\nimport { RestoreUserCommand } from './cqrs/command/restore-user.command';\nimport { UserRoleEnum } from './domain/enum/user-role.enum';\nimport { UpdateUserRoleCommand } from './cqrs/command/update-user-role.command';\nimport { UpdateUserCredentialCommand } from './cqrs/command/update-user-credential.command';\nimport { UpdateUserCredentialDto } from './domain/dto/update-user-credential.dto';\nimport { GenerateUserDto } from './domain/dto/generate-user.dto';\nimport { DeleteMailCommand } from '../api-landing-page/cqrs/command/delete-mail.command';\nimport { DuplicateMailException } from '../../util/exception/custom-http-exception/duplicate-mail.exception';\nimport { MailRequiredException } from '../../util/exception/custom-http-exception/mail-required.exception';\nimport { UserNotFoundException } from '../../util/exception/custom-http-exception/user-not-found.exception';\nimport { DuplicateUsernameException } from '../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { SamePasswordException } from '../../util/exception/custom-http-exception/same-password.exception';\nimport { InvalidPasswordException } from '../../util/exception/custom-http-exception/invalid-password.exception';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return await this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string): Promise {\n    return await this.queryBus.execute(new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId));\n  }\n\n  async removeRefreshToken(userId: string): Promise {\n    return await this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  async setCurrentRefreshToken(token: string, userId: string): Promise {\n    return await this.commandBus.execute(new SetCurrentRefreshTokenCommand(token, userId));\n  }\n\n  async findAll(): Promise {\n    return await this.queryBus.execute(new GetUserQuery());\n  }\n\n  async findOne(id: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserQuery(id));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async update(userId: string, updateUserDto: UpdateUserDto): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserCommand(userId, updateUserDto));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Mail already exists' || error instanceof DuplicateMailException)\n        throw new DuplicateMailException();\n      else if (error instanceof DuplicateUsernameException || error.message === 'Username already exists') {\n        throw new DuplicateUsernameException();\n      } else throw Error('not handled error');\n    }\n  }\n\n  async remove(id: string): Promise {\n    try {\n      return await this.commandBus.execute(new SoftDeleteUserCommand(id));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async generateUserFromMail(generateUserDto: GenerateUserDto): Promise {\n    try {\n      if (!generateUserDto) throw new Error('Mail is required');\n      if ((await this.queryBus.execute(new GetUserWithCriteriaQuery({ mail: generateUserDto.mail }))).length > 0)\n        throw new Error('Mail already exists');\n      const user = await this.commandBus.execute(\n        new CreateUserCommand(\n          new CreateUserDto({\n            mail: generateUserDto.mail,\n            password: this.generatePassword(),\n            roles: generateUserDto.roles ? generateUserDto.roles : [UserRoleEnum.PUBLIC],\n          }),\n        ),\n      );\n      try {\n        await this.commandBus.execute(new DeleteMailCommand({ mail: generateUserDto.mail }));\n      } catch (error) {}\n      return user;\n    } catch (error) {\n      if (error.message === 'Mail is required') throw new MailRequiredException();\n      else if (error.message === 'Mail already exists') throw new DuplicateMailException();\n      else throw error;\n    }\n  }\n\n  async restoreUser(userId: string): Promise {\n    try {\n      return await this.commandBus.execute(new RestoreUserCommand({ id: userId }));\n    } catch (error) {\n      if (error.message === 'User not found') throw new UserNotFoundException();\n      else throw error;\n    }\n  }\n\n  async findWithCriteria(getUserWithCriteriaDto: GetUserWithCriteriaDto): Promise {\n    return await this.queryBus.execute(new GetUserWithCriteriaQuery(getUserWithCriteriaDto));\n  }\n\n  async getMe(userId: string): Promise {\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  async updateRoles(userId: string, roles: UserRoleEnum[]): Promise {\n    try {\n      return await this.commandBus.execute(new UpdateUserRoleCommand({ userId: userId, roles: roles }));\n    } catch (error) {\n      throw new UserNotFoundException();\n    }\n  }\n\n  async updatePassword(userId: string, updateUserCredentialDto: UpdateUserCredentialDto): Promise {\n    try {\n      return await this.commandBus.execute(\n        new UpdateUserCredentialCommand({ userId: userId, updateUserCredentialDto: updateUserCredentialDto }),\n      );\n    } catch (error) {\n      if (error.message === 'New password is the same as old password') throw new SamePasswordException();\n      else if (error.message === 'User not found') throw new UserNotFoundException();\n      else if (error.message === 'Invalid password') throw new InvalidPasswordException();\n      else if (error.message === 'Invalid old password') throw new InvalidPasswordException();\n      else throw error;\n    }\n  }\n\n  async deleteMe(userId: string): Promise {\n    if (!!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.commandBus.execute(new SoftDeleteUserCommand(userId));\n  }\n\n  async findMe(userId: string): Promise {\n    if (!(await this.queryBus.execute(new GetUserQuery(userId)))) throw new Error('User not found');\n    return await this.queryBus.execute(new GetUserQuery(userId));\n  }\n\n  private generatePassword(): string {\n    return 'Pt' + Math.random().toString(10).split('.')[1] + '!';\n  }\n\n  async fullDelete(id: string): Promise {\n    return await this.commandBus.execute(new DeleteUserCommand({ userId: id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.8 - 2023-03-29\nFeatures\n\nmodule profile\nno test e2e\n\n0.0.7 - 2023-03-29\nFeatures\n\nmodule user\ntest e2e\n\n0.0.6 - 2023-03-18\nFeatures\n\napi-mail module\napi-landing-page module\nrefactor api-log\nfix things\n\n0.0.5 - 2023-03-15\nFeatures\n\nadd auth verification\nadd tcp validate-login\nadd e2e auth test\n\n0.0.4 - 2023-03-10\nFeatures\n\nadd referral code entity\nadd notification entity\nupdate README.md\n\n0.0.3 - 2023-03-10\nFeatures\n\nadd call to api-log\n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/passport-jwt : ^3.0.8\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../notification-type.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            RoleProfileEnum   (src/.../role-profile.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            VerboseLogEnum   (src/.../verbose-log.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                 JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                Value : JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                 NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                 NEW_CALL\n                            \n                        \n                        \n                            \n                                Value : NEW_CALL\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/profile/domain/enum/role-profile.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleProfileEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 PREMIUM\n                            \n                        \n                        \n                            \n                                Value : PREMIUM\n                            \n                        \n                        \n                            \n                                 COMPANY\n                            \n                        \n                        \n                            \n                                Value : COMPANY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n                        \n                            \n                                 V_CARD\n                            \n                        \n                        \n                            \n                                Value : V_CARD\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/verbose-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        VerboseLogEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\nAPI Routes V_0.0.4\n\n\nDatabase Schema V_0.0.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLandingPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiMailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nApiLogModule->ProfileModule\n\n\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\nProfileModule -->\n\nApiLogService->ProfileModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    149 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.8\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n Serialize response to send empty string when data is null api-nestjs-serializing-response-interceptors\n add auth jwt\n add double auth\n add auth with Google \n add confirming mail confirming-mail-address\n add database migrations and cron typeorm-migrations\n add flag feature flag-feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/api/auth/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles: UserRoleEnum[]): Type => {\n  @Injectable()\n  class RoleGuardMixin extends JwtRefreshGuard {\n    constructor(private readonly userService: UserService) {\n      super();\n    }\n    async canActivate(context: ExecutionContext): Promise {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      return roles.some(role => user?.roles.includes(role));\n    }\n  }\n  return mixin(RoleGuardMixin);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
