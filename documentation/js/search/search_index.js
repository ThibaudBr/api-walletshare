var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.171,1,2.7]],["body/controllers/AppController.html",[0,3.049,1,3.793,2,2.142,3,0.272,4,0.295,5,0.272,6,3.472,7,0.472,8,2.306,9,5.833,10,1.037,11,0.018,12,4.027,13,5.595,14,2.56,15,6.23,16,6.23,17,3.793,18,2.278,19,0.419,20,4.027,21,5.391,22,5.391,23,1.639,24,1.564,25,0.555,26,3.472,27,1.133,28,3.437,29,3.472,30,4.648,31,3.472,32,3.106,33,4.027,34,0.295,35,0.057,36,4.027,37,2.833,38,2.433,39,3.106,40,3.472,41,3.472,42,4.027,43,3.472,44,2.833,45,3.472,46,4.027,47,5.239,48,4.027,49,4.027,50,3.472,51,3.472,52,2.278,53,3.472,54,1.912,55,4.027,56,0.012,57,0.012]],["title/modules/AppModule.html",[58,2.041,59,2.492]],["body/modules/AppModule.html",[1,4.359,2,2.943,3,0.283,4,0.307,5,0.283,11,0.017,25,0.665,27,1.178,28,3.983,29,3.61,34,0.307,35,0.06,56,0.012,57,0.012,58,3.296,59,4.836,60,2.368,61,3.13,62,3.61,63,3.61,64,3.61,65,4.572,66,4.572,67,3.892,68,2.946,69,2.946,70,4.187,71,3.892,72,3.892,73,4.187,74,3.892,75,4.187,76,3.23,77,2.719,78,4.187,79,3.61,80,4.187,81,2.946,82,4.187,83,3.61,84,3.61,85,4.187,86,4.187,87,4.187,88,1.704,89,4.187,90,4.187,91,4.267]],["title/injectables/AppService.html",[28,2.171,92,1.926]],["body/injectables/AppService.html",[3,0.36,4,0.391,5,0.36,7,0.626,8,2.76,9,6.21,11,0.017,15,4.604,16,4.604,19,0.555,23,2.173,24,1.661,25,0.487,27,1.503,28,3.65,34,0.391,35,0.076,54,2.535,56,0.014,57,0.014,92,3.238,93,3.467,94,4.604,95,5.34]],["title/controllers/AppTestE2eController.html",[0,2.171,96,2.7]],["body/controllers/AppTestE2eController.html",[0,3.383,2,2.512,3,0.319,4,0.346,5,0.319,7,0.554,8,2.559,10,1.216,11,0.017,19,0.491,23,1.923,25,0.599,27,1.329,28,2.672,34,0.346,35,0.067,37,3.323,38,2.854,54,2.243,56,0.013,57,0.013,96,4.208,97,4.208,98,4.208,99,4.394,100,4.073,101,5.949,102,5.981,103,4.724,104,5.157,105,4.724,106,3.383,107,4.724,108,3.614,109,4.073,110,4.073,111,4.208,112,3.644,113,4.724,114,4.724,115,4.724]],["title/modules/AppTestE2eModule.html",[58,2.041,116,2.7]],["body/modules/AppTestE2eModule.html",[2,3.124,3,0.31,4,0.336,5,0.31,11,0.017,25,0.644,27,1.292,34,0.336,35,0.065,56,0.013,57,0.013,58,3.124,59,4.688,60,2.597,61,3.323,67,4.133,68,3.23,69,3.23,71,4.133,72,4.133,76,3.541,77,2.981,96,4.557,97,3.23,98,3.23,99,3.914,108,4.362,109,5.064,110,3.958,116,5.228,117,3.958,118,3.958,119,4.591,120,4.591,121,4.591,122,4.591,123,3.958]],["title/injectables/AppTestE2eService.html",[92,1.926,108,2.319]],["body/injectables/AppTestE2eService.html",[3,0.352,4,0.381,5,0.352,7,0.611,8,2.719,11,0.017,19,0.541,23,2.12,25,0.475,27,1.466,34,0.381,35,0.074,54,2.473,56,0.014,57,0.014,92,3.189,93,3.382,97,4.471,98,4.471,99,3.84,101,6.158,106,3.595,108,3.84,124,4.49,125,4.826,126,5.208]],["title/entities/CardEntity.html",[127,0.424,128,1.642]],["body/entities/CardEntity.html",[3,0.09,4,0.098,5,0.09,7,0.156,10,1.793,11,0.018,18,2.488,19,0.724,24,1.671,25,0.545,34,0.098,35,0.033,52,0.753,56,0.005,57,0.005,88,2.915,127,0.253,128,0.979,129,0.375,130,1.801,131,1.148,132,0.709,133,2.461,134,3.011,135,2.596,136,3.011,137,3.011,138,0.927,139,0.927,140,3.011,141,3.011,142,3.011,143,0.927,144,3.011,145,3.011,146,2.833,147,2.596,148,3.011,149,3.011,150,3.472,151,2.323,152,2.323,153,3.011,154,3.011,155,3.011,156,4.027,157,3.792,158,4.285,159,0.927,160,3.011,161,3.011,162,3.011,163,3.011,164,1.194,165,1.53,166,3.392,167,1.332,168,4.027,169,1.332,170,2.663,171,1.794,172,3.082,173,2.289,174,2.867,175,3.175,176,3.876,177,3.798,178,1.332,179,2.289,180,1.332,181,0.97,182,1.332,183,0.97,184,1.332,185,4.344,186,4.199,187,2.891,188,1.332,189,3.575,190,1.332,191,1.332,192,2.022,193,1.974,194,2.289,195,1.332,196,0.737,197,1.332,198,1.974,199,1.148,200,1.487,201,1.332,202,1.332,203,1.794,204,0.753,205,2.289,206,1.332,207,2.022,208,1.766,209,2.289,210,1.332,211,2.811,212,1.332,213,1.487,214,1.974,215,2.289,216,1.974,217,1.332,218,1.332,219,1.901,220,1.383,221,2.289,222,1.332,223,1.332,224,2.014,225,1.087,226,2.321,227,2.289,228,1.332,229,1.332,230,2.289,231,1.332,232,1.332,233,2.16,234,2.289,235,1.332,236,1.332,237,3.106,238,1.332,239,0.97,240,1.332,241,1.332,242,1.332,243,2.596,244,1.332,245,2.596,246,1.332,247,2.596,248,1.332,249,1.817,250,1.611,251,1.82,252,1.43,253,2.021,254,1.295,255,0.41,256,0.375,257,0.708,258,0.937,259,0.6,260,3.011,261,1.027,262,3.011,263,1.148,264,0.865,265,1.332,266,1.332,267,1.974,268,2.289,269,1.332,270,0.708,271,0.937,272,1.148,273,1.332,274,0.865,275,0.708,276,0.937,277,1.027,278,1.332,279,1.027,280,1.027,281,1.53,282,4.027,283,1.332,284,0.449,285,1.332,286,1.332,287,1.332,288,1.332,289,0.429]],["title/entities/CompanyEmployeeEntity.html",[127,0.424,290,2.171]],["body/entities/CompanyEmployeeEntity.html",[3,0.225,4,0.244,5,0.225,7,0.39,10,1.738,11,0.018,18,1.882,19,0.702,24,1.217,25,0.546,34,0.244,35,0.047,56,0.01,57,0.01,88,1.923,127,0.368,129,0.936,130,1.777,132,1.294,138,1.691,139,1.691,143,1.691,159,1.691,164,1.147,165,2.021,181,1.77,183,1.77,185,3.325,186,3.325,187,2.128,196,1.522,224,2.56,225,2.244,226,4.103,239,1.77,249,1.121,252,2.61,255,1.024,256,0.936,257,1.77,281,2.021,284,1.121,289,1.071,290,2.673,291,5.323,292,2.869,293,4.263,294,5.496,295,3.003,296,4.726,297,3.327,298,3.327,299,3.327,300,3.327,301,4.726,302,3.327,303,4.738,304,3.327,305,3.327,306,2.161,307,2.869,308,3.327,309,3.327,310,2.869,311,2.341,312,3.866,313,2.341,314,3.327]],["title/entities/CompanyEntity.html",[127,0.424,295,1.926]],["body/entities/CompanyEntity.html",[3,0.135,4,0.146,5,0.135,7,0.234,10,1.818,11,0.018,14,1.908,19,0.734,24,1.859,25,0.46,34,0.146,35,0.028,56,0.007,57,0.007,88,2.966,127,0.354,129,0.561,130,1.83,132,0.946,133,2.825,138,1.237,139,1.237,143,1.237,146,3.237,151,3.099,159,1.237,164,1.2,165,1.657,166,4.91,171,1.001,174,2.447,175,2.447,176,2.988,177,2.988,181,1.294,183,1.294,187,0.898,196,1.032,203,2.839,204,1.813,211,3.601,219,2.863,220,1.205,224,2.303,225,0.947,239,1.294,249,2.185,250,2.255,251,1.937,252,1.522,253,1.609,254,2.273,255,0.614,256,0.561,257,1.061,271,1.403,274,1.295,281,1.657,284,0.672,289,0.642,290,3.045,293,2.081,295,1.609,311,1.403,312,2.827,313,1.403,315,1.72,316,3.464,317,4.018,318,3.099,319,4.018,320,4.018,321,3.099,322,4.018,323,1.185,324,4.018,325,4.018,326,3.464,327,4.018,328,3.464,329,4.018,330,1.995,331,1.995,332,2.763,333,1.995,334,1.995,335,1.995,336,1.995,337,1.995,338,1.995,339,1.995,340,3.205,341,1.995,342,1.995,343,1.995,344,1.995,345,1.995,346,3.205,347,1.995,348,1.995,349,2.763,350,1.995,351,1.995,352,1.995,353,1.995,354,1.995,355,1.403,356,1.995]],["title/entities/ConnectedCardEntity.html",[127,0.424,170,2.171]],["body/entities/ConnectedCardEntity.html",[3,0.217,4,0.235,5,0.217,7,0.377,10,1.72,11,0.018,19,0.695,24,1.186,25,0.492,34,0.235,35,0.046,56,0.01,57,0.01,88,1.307,127,0.509,128,3.059,129,0.904,130,1.76,132,1.268,138,1.659,139,1.659,143,1.659,159,1.659,164,1.136,165,1.997,170,2.606,174,3.451,175,3.131,181,1.735,183,1.735,196,1.484,204,1.817,225,2.188,239,1.735,252,2.559,254,2.606,255,0.988,256,0.904,258,2.259,259,1.446,264,2.085,281,1.997,284,1.082,289,1.034,311,2.259,312,3.791,313,2.259,323,0.827,357,5.274,358,2.769,359,5.389,360,5.389,361,4.34,362,4.608,363,3.211,364,4.608,365,3.211,366,2.955,367,2.769,368,3.211,369,3.211,370,3.211,371,3.211,372,3.211,373,3.241,374,1.708]],["title/entities/ConversationEntity.html",[127,0.424,366,1.926]],["body/entities/ConversationEntity.html",[3,0.211,4,0.229,5,0.211,7,0.366,10,1.78,11,0.018,17,3.732,19,0.719,24,1.496,25,0.563,34,0.229,35,0.045,56,0.01,57,0.01,127,0.499,129,0.879,130,1.807,132,1.249,138,1.633,139,1.633,143,1.633,147,4.573,159,1.633,164,1.175,165,1.978,170,3.635,171,2.662,172,4.573,181,1.708,183,1.708,196,1.454,204,1.766,207,3.288,208,3.483,239,1.708,249,1.788,253,2.917,254,2.554,255,0.961,256,0.879,258,2.197,259,1.406,275,2.821,277,2.409,281,1.978,284,1.052,289,1.006,323,0.804,361,2.028,366,2.266,374,1.661,375,2.692,376,5.305,377,4.516,378,3.123,379,3.123,380,3.123,381,3.123,382,3.418,383,4.516,384,3.123,385,3.123,386,3.635,387,4.516,388,3.123,389,4.516,390,3.123,391,3.123,392,2.197,393,2.409]],["title/injectables/CustomHealthCheckService.html",[92,1.926,394,2.319]],["body/injectables/CustomHealthCheckService.html",[3,0.308,4,0.334,5,0.308,7,0.535,8,2.503,11,0.017,19,0.608,23,1.857,25,0.622,27,1.284,34,0.334,35,0.065,37,3.21,38,2.757,54,2.167,56,0.013,57,0.013,92,2.936,93,2.963,106,3.31,125,4.544,133,1.769,164,0.775,323,1.175,394,3.536,395,3.653,396,5.568,397,4.194,398,3.934,399,6.812,400,2.055,401,4.563,402,7.207,403,4.563,404,2.29,405,4.563,406,2.963,407,3.799,408,4.563,409,3.21,410,2.757,411,3.52,412,3.52,413,3.52,414,4.563]],["title/injectables/DatabaseConfiguration.html",[74,2.7,92,1.926]],["body/injectables/DatabaseConfiguration.html",[3,0.159,4,0.172,5,0.159,7,0.276,8,1.563,11,0.018,19,0.245,23,0.958,25,0.675,27,0.663,34,0.172,35,0.034,54,2.594,56,0.008,57,0.008,74,2.571,77,1.529,83,6.222,88,2.663,92,1.834,93,1.529,99,2.208,104,4.709,128,1.563,129,1.42,164,0.857,170,2.067,176,2.373,192,2.067,200,2.373,203,1.834,207,2.067,219,1.944,224,1.563,233,2.208,259,1.06,276,1.657,280,1.816,290,2.067,291,1.816,295,1.834,355,1.657,357,1.816,366,1.834,374,1.252,382,1.944,386,2.067,415,2.03,416,5.046,417,2.355,418,4.478,419,3.654,420,2.355,421,1.816,422,3.15,423,1.657,424,2.03,425,2.03,426,2.355,427,2.355,428,2.355,429,2.208,430,1.816,431,1.816,432,2.355,433,1.816,434,2.208,435,2.355,436,1.816,437,2.355,438,2.355,439,2.355,440,2.208,441,2.355,442,2.355,443,1.816,444,2.373,445,1.816,446,2.03,447,1.834,448,2.355,449,2.067,450,2.355,451,1.529,452,2.355,453,4.351,454,3.654,455,5.046,456,5.046,457,4.351,458,2.355,459,5.046,460,2.355,461,2.355,462,5.046,463,3.892,464,2.355,465,3.55,466,2.355,467,2.355,468,5.046,469,3.654,470,3.654,471,4.478,472,3.654,473,5.046,474,2.355,475,4.351,476,2.355,477,3.654,478,2.355,479,2.355,480,2.355,481,2.355,482,2.355,483,2.355,484,2.355,485,2.355,486,2.355,487,2.355,488,2.355,489,2.355,490,2.355,491,2.355,492,2.355,493,2.355,494,2.355,495,3.654,496,2.355,497,2.355,498,2.355,499,2.355,500,2.355,501,2.355,502,2.355,503,2.355,504,2.355,505,2.03,506,3.454,507,2.355,508,2.355,509,2.355,510,2.03,511,2.03,512,1.252,513,2.355]],["title/entities/DiscountCodeEntity.html",[127,0.424,429,2.319]],["body/entities/DiscountCodeEntity.html",[3,0.195,4,0.211,5,0.195,7,0.338,10,1.775,11,0.017,19,0.717,24,1.097,25,0.462,34,0.211,35,0.061,56,0.009,57,0.009,127,0.471,129,0.812,130,1.8,132,1.193,138,1.56,139,1.56,143,1.56,159,1.56,164,1.269,165,2.178,181,1.632,183,1.632,196,1.372,213,4.058,220,1.743,239,1.632,249,2.106,250,2.998,251,2.575,255,0.888,256,0.812,270,1.534,281,1.924,284,0.972,289,0.929,323,1.609,429,2.575,430,5.393,447,3.137,514,2.487,515,4.369,516,5.068,517,4.369,518,4.369,519,3.909,520,5.068,521,2.885,522,2.885,523,4.201,524,3.674,525,4.369,526,2.885,527,4.261,528,2.885,529,3.674,530,3.674,531,2.885,532,2.885,533,3.674,534,2.885,535,2.885,536,2.885,537,2.885,538,4.261,539,2.885,540,4.369,541,4.825,542,4.825,543,1.873,544,2.885,545,3.909,546,2.885]],["title/classes/DuplicateEmailException.html",[35,0.055,547,2.96]],["body/classes/DuplicateEmailException.html",[3,0.359,4,0.39,5,0.359,11,0.017,19,0.553,25,0.485,27,1.497,34,0.39,35,0.076,56,0.014,57,0.014,400,3.118,547,4.966,548,1.793,549,3.231,550,4.966,551,4.587,552,3.057,553,3.682,554,5.32,555,2.83,556,5.32,557,4.104,558,4.104,559,3.743]],["title/classes/DuplicateUsernameException.html",[35,0.055,560,2.96]],["body/classes/DuplicateUsernameException.html",[3,0.359,4,0.39,5,0.359,11,0.017,19,0.553,25,0.485,27,1.497,34,0.39,35,0.076,56,0.014,57,0.014,400,3.118,548,1.793,549,3.231,550,4.966,552,3.057,553,3.682,555,2.83,557,4.104,558,4.104,559,3.743,560,4.966,561,4.587,562,5.32,563,5.32]],["title/modules/EntitiesToMoveModule.html",[58,2.041,65,2.492]],["body/modules/EntitiesToMoveModule.html",[2,1.96,3,0.249,4,0.27,5,0.249,11,0.018,25,0.703,27,1.037,34,0.27,35,0.053,56,0.011,57,0.011,58,2.7,60,2.084,65,3.296,71,2.592,72,2.592,76,2.842,77,2.393,84,3.177,91,4.825,123,3.177,127,0.407,128,2.171,130,0.949,170,2.871,192,2.871,203,2.547,207,2.871,219,2.7,224,2.171,233,3.067,257,1.96,258,2.592,259,2.285,271,2.592,274,2.393,275,1.96,276,2.592,277,2.842,279,2.842,280,2.842,290,2.871,293,2.393,295,2.547,306,2.393,355,2.592,366,2.547,374,2.7,382,2.7,386,2.871,392,2.592,393,2.842,429,3.067,431,2.842,434,3.067,440,3.067,444,3.296,446,3.177,447,2.547,449,2.871,543,2.393,564,3.685,565,3.177,566,3.177,567,3.177,568,3.685,569,2.842,570,3.177]],["title/classes/ErrorCustomEvent.html",[35,0.055,571,2.7]],["body/classes/ErrorCustomEvent.html",[3,0.321,4,0.348,5,0.321,7,0.558,11,0.017,19,0.684,24,1.926,34,0.348,35,0.068,38,4.402,56,0.013,57,0.013,132,1.414,133,1.843,164,1.119,323,1.224,400,2.141,404,2.386,506,5.502,548,1.602,571,4.225,572,5.335,573,5.335,574,4.099,575,3.579,576,6.916,577,4.754,578,4.754,579,6.006,580,4.099]],["title/classes/ErrorCustomEventHandler.html",[35,0.055,581,2.96]],["body/classes/ErrorCustomEventHandler.html",[3,0.314,4,0.341,5,0.314,7,0.545,8,2.533,11,0.017,19,0.483,23,1.892,25,0.626,27,1.308,34,0.341,35,0.066,56,0.013,57,0.013,133,1.803,164,0.79,323,1.197,404,2.333,406,3.019,423,4.166,425,4.008,451,3.845,506,3.586,512,2.473,548,1.567,571,4.826,572,4.567,573,4.567,581,4.567,582,5.617,583,3.586,584,6.516,585,5.921,586,5.921,587,4.649,588,4.649,589,4.567,590,4.649,591,4.649,592,4.649,593,3.586,594,4.649,595,4.649,596,4.649,597,4.649]],["title/classes/ErrorExceptionFilter.html",[35,0.055,598,2.96]],["body/classes/ErrorExceptionFilter.html",[3,0.299,4,0.324,5,0.299,7,0.519,8,2.454,11,0.017,19,0.46,23,1.801,25,0.524,27,1.246,34,0.324,35,0.063,50,4.946,56,0.013,57,0.013,133,1.716,164,0.752,323,1.139,404,2.221,421,3.414,451,3.725,457,5.488,505,5.806,512,2.354,548,1.491,553,3.051,555,3.386,589,4.425,593,5.195,598,4.425,599,4.946,600,3.816,601,6.366,602,5.737,603,6.735,604,4.426,605,5.737,606,4.946,607,3.816,608,4.426,609,4.426,610,4.426,611,4.426,612,4.426,613,4.426,614,4.426,615,4.426,616,4.426,617,4.426,618,3.816,619,4.426,620,4.426]],["title/entities/GroupEntity.html",[127,0.424,382,2.041]],["body/entities/GroupEntity.html",[3,0.19,4,0.206,5,0.19,7,0.33,10,1.733,11,0.018,19,0.7,24,1.423,25,0.539,34,0.206,35,0.06,56,0.009,57,0.009,88,2.895,127,0.462,129,0.792,130,1.764,132,1.175,138,1.537,139,1.537,143,1.537,146,3.89,159,1.537,164,1.144,165,1.906,171,2.099,174,3.504,175,2.941,176,3.59,177,2.716,181,1.608,183,1.608,192,3.127,193,3.606,196,1.347,200,3.59,203,3.218,204,2.366,211,3.628,239,1.608,249,1.41,253,2.506,254,2.824,255,0.866,256,0.792,270,1.496,274,1.827,275,1.496,276,1.979,281,1.702,289,0.906,318,3.851,323,1.285,361,2.716,366,2.775,367,2.425,373,3.89,374,1.496,382,2.225,621,2.425,622,4.993,623,4.993,624,4.993,625,4.183,626,4.183,627,2.813,628,4.183,629,2.813,630,2.813,631,2.813,632,2.813,633,4.183,634,2.813,635,3.606,636,2.813,637,2.943,638,2.813,639,4.183,640,2.813,641,2.813,642,1.979,643,2.813]],["title/entities/GroupMembershipEntity.html",[127,0.424,192,2.171]],["body/entities/GroupMembershipEntity.html",[3,0.223,4,0.242,5,0.223,7,0.387,10,1.734,11,0.018,18,1.865,19,0.7,24,1.209,25,0.544,34,0.242,35,0.047,56,0.01,57,0.01,88,1.911,127,0.519,128,2.8,129,0.928,130,1.772,132,1.287,138,1.683,139,1.683,143,1.683,159,1.683,164,1.145,165,2.015,174,3.169,175,3.169,181,1.761,183,1.761,185,3.303,186,3.303,187,2.114,192,2.656,196,1.512,225,2.23,239,1.761,249,1.111,252,2.597,255,1.015,256,0.928,259,1.485,264,3.551,275,3.169,281,2.015,284,1.111,289,1.062,307,2.843,382,3.482,392,2.32,433,5.311,644,2.843,645,5.468,646,4.696,647,3.298,648,3.298,649,3.298,650,4.696,651,3.298,652,3.298,653,3.847,654,3.298,655,3.298,656,3.298,657,3.298]],["title/controllers/HealthCheckController.html",[0,2.171,658,2.7]],["body/controllers/HealthCheckController.html",[0,2.253,2,2.119,3,0.269,4,0.292,5,0.269,7,0.467,8,2.289,10,1.025,11,0.018,13,4.614,14,2.541,17,3.765,18,2.253,19,0.414,23,1.621,25,0.615,26,3.434,27,1.121,30,4.614,31,3.434,32,3.073,34,0.292,35,0.057,37,2.802,39,5.2,40,3.434,41,3.434,43,3.434,44,2.802,45,3.434,47,3.434,51,3.434,52,2.253,53,3.434,54,1.892,56,0.012,57,0.012,81,3.765,106,3.027,394,3.652,395,3.027,397,4.681,410,2.407,411,3.073,412,3.073,658,3.765,659,3.434,660,3.984,661,7.498,662,3.984,663,6.462,664,3.984,665,6.462,666,3.073,667,2.587,668,3.434,669,3.434,670,3.984,671,3.984,672,3.984]],["title/modules/HealthCheckModule.html",[58,2.041,66,2.492]],["body/modules/HealthCheckModule.html",[2,3.075,3,0.302,4,0.328,5,0.302,11,0.017,25,0.654,27,1.261,34,0.328,35,0.064,56,0.013,57,0.013,58,3.075,60,2.534,61,3.271,66,4.657,67,4.068,68,3.152,69,3.152,71,4.068,72,3.152,81,3.152,91,5.218,187,2.017,394,4.334,395,2.534,397,3.755,406,2.909,409,3.152,570,3.862,658,4.504,667,2.909,668,3.862,669,3.862,673,3.862,674,3.862,675,4.48,676,5.782,677,4.48,678,5.782,679,4.068,680,4.48,681,5.782]],["title/classes/HealthCheckQuery.html",[35,0.055,407,2.492]],["body/classes/HealthCheckQuery.html",[3,0.393,4,0.427,5,0.393,11,0.016,34,0.427,35,0.083,56,0.015,57,0.015,395,3.295,407,4.412,548,1.963,682,5.022,683,5.022]],["title/classes/HealthCheckQueryHandler.html",[35,0.055,679,2.7]],["body/classes/HealthCheckQueryHandler.html",[3,0.236,4,0.256,5,0.236,7,0.41,8,2.092,11,0.017,19,0.508,23,1.422,25,0.558,34,0.256,35,0.05,54,1.659,56,0.011,57,0.011,106,3.772,125,3.97,133,1.354,164,0.594,323,0.899,395,3.192,397,2.268,400,2.202,404,1.753,406,2.268,407,2.268,409,4.301,410,2.955,411,2.694,412,2.694,413,2.694,421,2.694,422,4.216,451,3.176,512,1.858,548,1.177,583,2.694,666,2.694,667,2.268,679,3.44,684,4.865,685,5.643,686,6.113,687,3.493,688,6.669,689,6.847,690,6.847,691,6.847,692,6.847,693,3.493,694,3.493,695,3.493,696,3.493,697,3.493,698,3.493,699,6.435,700,3.493,701,3.493,702,3.493,703,4.89,704,4.89,705,4.89,706,3.493,707,3.493,708,3.493,709,6.113,710,4.89,711,3.493,712,3.493,713,3.493,714,3.011,715,3.493,716,3.493,717,3.493,718,3.011,719,3.011,720,3.493,721,3.493,722,3.493,723,3.493]],["title/classes/HealthCheckResponse.html",[35,0.055,410,2.319]],["body/classes/HealthCheckResponse.html",[3,0.338,4,0.367,5,0.338,7,0.588,11,0.017,19,0.645,25,0.457,34,0.367,35,0.071,38,4.075,56,0.014,57,0.014,132,1.461,133,1.944,164,1.055,323,1.29,395,3.815,400,2.257,404,2.516,410,3.751,548,1.689,575,3.116,580,4.322,666,5.588,667,3.255,724,5.814,725,4.322,726,7.048,727,5.013,728,5.013,729,5.013]],["title/classes/InvalidParameterEntityException.html",[35,0.055,730,2.96]],["body/classes/InvalidParameterEntityException.html",[3,0.306,4,0.332,5,0.306,11,0.018,19,0.471,25,0.532,27,1.276,34,0.332,35,0.083,52,2.565,54,2.767,56,0.013,57,0.013,133,1.758,164,0.99,208,3.498,270,2.412,323,1.167,400,2.042,404,2.925,548,1.528,549,2.925,552,2.767,553,3.425,555,2.412,559,4.1,593,3.498,730,4.495,731,4.1,732,4.1,733,3.498,734,5.828,735,7.03,736,4.535,737,4.535,738,5.024,739,3.91,740,3.498,741,3.498,742,4.535,743,4.535,744,4.535,745,4.535,746,4.535]],["title/classes/InvalidPasswordException.html",[35,0.055,747,2.96]],["body/classes/InvalidPasswordException.html",[3,0.343,4,0.372,5,0.343,11,0.017,19,0.528,25,0.464,27,1.43,34,0.372,35,0.072,56,0.014,57,0.014,213,3.3,400,3.055,465,4.405,548,1.713,549,3.142,552,2.973,553,3.609,555,2.703,559,3.575,731,4.405,740,3.92,741,3.92,747,4.829,748,4.381,749,5.082,750,5.082,751,4.381,752,5.082,753,6.786,754,5.082,755,6.261,756,5.082]],["title/entities/InvoicesEntity.html",[127,0.424,434,2.319]],["body/entities/InvoicesEntity.html",[3,0.128,4,0.139,5,0.128,7,0.223,10,1.789,11,0.017,14,2.334,19,0.722,24,1.802,25,0.355,34,0.139,35,0.044,52,1.075,56,0.007,57,0.007,88,0.773,127,0.21,129,0.535,130,1.802,132,0.915,133,1.195,135,3.351,138,1.196,139,1.196,143,1.196,159,1.196,164,1.296,165,1.62,181,1.252,183,1.252,187,0.855,196,0.992,211,1.743,213,3.983,225,0.902,237,2.377,239,1.252,249,2.278,252,1.463,255,0.585,256,0.535,270,1.01,281,1.62,284,0.64,289,0.612,323,1.699,434,1.862,447,2.642,515,3.351,523,4.643,524,2.657,525,1.638,541,5.69,542,4.539,543,1.234,545,1.465,642,4.848,757,1.638,758,4.916,759,3.887,760,3.887,761,3.887,762,3.887,763,3.887,764,4.916,765,3.887,766,3.351,767,3.887,768,3.887,769,3.887,770,1.9,771,3.081,772,5.942,773,5.969,774,1.9,775,3.081,776,1.9,777,3.081,778,1.9,779,3.081,780,1.9,781,3.081,782,1.9,783,3.081,784,1.9,785,1.9,786,1.9,787,1.9,788,1.9,789,4.916,790,1.9,791,1.9,792,1.9,793,3.081,794,1.9,795,1.9,796,1.9,797,3.081,798,3.887,799,1.9,800,3.081,801,1.9,802,3.081,803,1.9,804,1.9,805,6.133,806,3.081,807,1.9,808,5.146,809,2.657,810,1.9,811,1.9,812,1.9,813,1.9,814,1.9,815,1.9,816,1.9,817,1.9]],["title/classes/IsTestEnvironmentPipe.html",[35,0.055,111,2.7]],["body/classes/IsTestEnvironmentPipe.html",[3,0.313,4,0.339,5,0.313,7,0.544,8,2.528,11,0.017,19,0.482,23,1.886,25,0.423,27,1.304,34,0.339,35,0.066,54,2.201,56,0.013,57,0.013,99,3.931,111,4.157,112,4.558,133,1.797,164,0.788,323,1.193,404,2.326,451,3.837,453,3.996,511,3.996,512,2.465,548,1.562,553,2.465,555,2.465,818,3.996,819,6.506,820,5.91,821,5.91,822,7.078,823,5.609,824,6.852,825,4.635,826,4.157,827,3.996,828,4.635,829,4.635,830,4.635,831,4.635,832,4.635,833,4.635,834,4.635,835,4.635,836,4.635]],["title/entities/JoinedConversation.html",[127,0.424,386,2.171]],["body/entities/JoinedConversation.html",[3,0.236,4,0.256,5,0.236,7,0.411,10,1.764,11,0.018,19,0.712,24,1.575,25,0.516,34,0.256,35,0.05,56,0.011,57,0.011,127,0.541,129,0.985,130,1.8,132,1.33,138,1.739,139,1.739,143,1.739,159,1.739,164,1.164,165,2.054,181,1.819,183,1.819,196,1.577,224,2.855,225,2.326,226,3.669,239,1.819,249,1.904,252,2.683,255,1.078,256,0.985,257,1.862,281,2.054,284,1.18,289,1.127,361,4.182,366,3.071,373,3.975,374,1.862,386,2.771,436,5.392,837,3.018,838,5.65,839,3.501,840,3.501,841,3.501,842,3.501,843,3.501,844,3.501,845,3.501,846,3.501,847,3.501,848,3.501,849,3.501]],["title/entities/MediaEntity.html",[127,0.424,203,1.926]],["body/entities/MediaEntity.html",[3,0.174,4,0.188,5,0.174,7,0.302,10,1.777,11,0.018,19,0.718,24,1.361,25,0.519,34,0.188,35,0.037,56,0.009,57,0.009,127,0.432,128,2.561,129,0.724,130,1.798,132,1.114,138,1.456,139,1.456,143,1.456,159,1.456,164,1.173,165,1.843,174,3.754,175,3.754,181,1.523,183,1.523,196,1.259,203,1.963,204,3.52,224,2.913,239,1.523,249,1.594,254,3.628,255,0.792,256,0.724,257,1.368,259,1.158,275,2.811,281,1.843,284,0.867,289,0.828,295,3.417,306,1.671,382,3.31,392,1.81,575,2.375,850,2.218,851,4.731,852,4.731,853,4.731,854,4.731,855,4.731,856,4.731,857,4.731,858,4.731,859,3.911,860,2.573,861,3.911,862,2.573,863,3.911,864,2.573,865,2.573,866,2.573,867,3.911,868,2.573,869,3.911,870,2.573,871,2.573,872,2.573,873,3.911,874,2.573,875,3.911,876,2.573,877,2.573]],["title/entities/MessageEntity.html",[127,0.424,207,2.171]],["body/entities/MessageEntity.html",[3,0.236,4,0.256,5,0.236,7,0.41,10,1.763,11,0.018,17,3.97,19,0.712,24,1.574,25,0.515,34,0.256,35,0.05,56,0.011,57,0.011,127,0.541,128,2.853,129,0.983,130,1.799,132,1.328,138,1.737,139,1.737,143,1.737,159,1.737,164,1.163,165,2.053,174,2.601,175,2.601,181,1.817,183,1.817,196,1.575,207,2.766,225,2.322,239,1.817,249,1.902,252,2.68,255,1.075,256,0.983,259,1.573,281,2.053,284,1.177,289,1.125,361,4.179,366,3.068,374,1.858,575,3.347,878,3.011,879,4.865,880,4.89,881,3.493,882,3.493,883,4.89,884,3.493,885,3.493,886,3.493,887,3.493,888,3.493]],["title/classes/NoUserTraceException.html",[35,0.055,889,2.96]],["body/classes/NoUserTraceException.html",[3,0.357,4,0.387,5,0.357,11,0.017,19,0.549,25,0.482,34,0.387,35,0.075,56,0.014,57,0.014,400,3.108,548,1.78,549,3.217,552,3.044,732,3.716,889,4.945,890,5.527,891,4.171,892,4.554,893,6.902,894,5.282,895,5.282,896,5.282,897,5.282,898,5.282]],["title/entities/OccupationEntity.html",[127,0.424,219,2.041]],["body/entities/OccupationEntity.html",[3,0.225,4,0.244,5,0.225,7,0.39,10,1.777,11,0.018,19,0.717,24,1.54,25,0.546,34,0.244,35,0.047,56,0.01,57,0.01,88,1.923,127,0.368,128,2.809,129,0.936,130,1.807,132,1.294,138,1.691,139,1.691,143,1.691,159,1.691,164,1.173,165,2.021,166,2.566,181,1.77,183,1.77,196,1.522,200,3.069,211,1.882,219,2.513,220,3.321,224,2.809,239,1.77,249,1.593,251,3.615,255,1.024,256,0.936,257,1.77,259,1.498,281,2.021,284,1.121,289,1.071,295,3.295,306,2.161,323,1.415,637,3.325,899,2.869,900,4.738,901,4.738,902,4.738,903,4.726,904,3.327,905,4.726,906,3.327,907,3.327,908,3.327,909,3.327,910,3.327,911,4.726,912,3.327,913,3.327,914,3.327]],["title/entities/PlanEntity.html",[127,0.424,440,2.319]],["body/entities/PlanEntity.html",[3,0.203,4,0.22,5,0.203,7,0.353,10,1.792,11,0.017,14,2.884,19,0.724,24,1.633,25,0.401,34,0.22,35,0.043,56,0.01,57,0.01,127,0.486,129,0.847,130,1.816,132,1.222,138,1.598,139,1.598,143,1.598,159,1.598,164,1.276,165,1.953,171,1.51,181,1.672,183,1.672,196,1.415,213,4.12,239,1.672,249,2.138,253,2.206,255,0.926,256,0.847,281,1.953,284,1.014,289,0.969,323,1.816,440,2.656,447,3.184,519,4.005,523,4.274,543,1.953,545,3.39,642,4.018,772,4.923,808,4.923,915,2.594,916,5.192,917,6.075,918,6.075,919,3.008,920,3.008,921,3.008,922,4.395,923,5.711,924,3.008,925,3.008,926,3.008,927,3.008,928,3.008,929,4.395,930,3.008,931,3.008,932,2.594]],["title/entities/ProfileEntity.html",[127,0.424,224,1.642]],["body/entities/ProfileEntity.html",[3,0.136,4,0.147,5,0.136,7,0.236,10,1.699,11,0.018,18,2.615,19,0.686,24,0.831,25,0.538,34,0.147,35,0.029,56,0.007,57,0.007,88,2.724,127,0.357,128,2.428,129,0.566,130,1.723,132,0.951,133,2.702,138,1.243,139,1.243,143,1.243,146,3.252,150,3.986,151,3.116,159,1.243,164,1.122,165,1.663,171,2.32,174,3.559,175,3.641,176,4.445,177,4.346,181,1.301,183,1.301,196,1.039,203,2.849,204,1.825,219,2.459,220,1.95,224,1.38,225,0.955,226,2.623,239,1.301,250,2.842,251,2.441,252,1.532,253,2.54,254,2.285,255,0.619,256,0.566,259,0.906,264,3.508,271,1.415,274,1.306,281,1.663,284,0.678,289,0.648,290,2.615,293,1.306,295,2.711,306,1.306,318,3.116,323,1.461,326,3.483,332,2.782,349,2.782,355,1.415,373,3.252,374,1.07,386,3.056,393,1.551,449,2.615,569,1.551,891,3.058,901,3.483,933,1.734,934,4.04,935,4.04,936,4.04,937,4.04,938,2.011,939,3.226,940,3.226,941,2.011,942,2.011,943,2.011,944,2.011,945,3.226,946,2.011,947,3.226,948,3.226,949,4.623,950,2.011,951,3.226,952,2.011,953,3.226,954,2.011,955,2.011,956,3.226,957,3.226,958,2.011,959,2.011,960,3.226,961,2.011,962,3.226,963,2.011,964,2.011]],["title/classes/RoleGroupMembershipEnum.html",[35,0.055,653,2.7]],["body/classes/RoleGroupMembershipEnum.html",[3,0.304,4,0.33,5,0.304,7,0.529,11,0.017,19,0.667,24,1.653,34,0.33,35,0.064,38,4.52,56,0.013,57,0.013,130,1.746,132,1.366,152,5.412,164,1.091,187,2.891,275,3.607,548,1.519,653,4.084,826,4.517,965,5.23,966,3.886,967,7.48,968,6.05,969,7.017,970,4.507,971,4.507,972,4.507]],["title/entities/SocialNetworkEntity.html",[127,0.424,233,2.319]],["body/entities/SocialNetworkEntity.html",[3,0.199,4,0.216,5,0.199,7,0.346,10,1.719,11,0.018,14,2.056,19,0.694,24,1.829,25,0.395,34,0.216,35,0.062,56,0.01,57,0.01,127,0.666,128,2.695,129,0.83,130,1.754,132,1.208,138,1.741,139,1.741,143,1.854,159,1.741,164,1.135,165,2.187,171,1.48,181,1.653,183,1.653,196,1.394,233,3.101,239,1.653,249,2.194,253,2.173,255,0.907,256,0.83,259,1.328,279,5.344,281,1.939,284,0.993,289,0.949,323,1.621,443,5.257,900,4.425,973,2.542,974,5.132,975,6.929,976,6.025,977,6.025,978,4.33,979,2.948,980,2.948,981,2.948,982,2.948,983,2.948,984,2.948,985,2.948,986,2.948,987,2.948,988,2.542,989,2.948,990,6.51,991,2.948,992,2.948,993,2.948]],["title/entities/StripEventEntity.html",[127,0.424,444,2.492]],["body/entities/StripEventEntity.html",[3,0.325,4,0.353,5,0.325,7,0.565,10,1.24,11,0.017,19,0.501,24,1.559,25,0.439,34,0.353,35,0.086,56,0.013,57,0.013,127,0.669,129,1.355,130,1.559,132,1.559,143,2.038,164,0.818,187,2.169,255,2.038,256,1.355,281,1.864,323,1.559,444,4.512,445,4.671,552,2.287,575,3.324,988,4.152,994,4.152,995,4.816,996,3.715,997,4.816,998,4.816]],["title/entities/SubscriptionEntity.html",[127,0.424,447,1.926]],["body/entities/SubscriptionEntity.html",[3,0.157,4,0.17,5,0.157,7,0.272,10,1.759,11,0.018,14,1.102,19,0.71,24,1.289,25,0.524,34,0.17,35,0.052,52,1.313,56,0.008,57,0.008,88,2.339,127,0.399,129,0.653,130,1.779,132,1.044,133,2.228,138,1.366,139,1.366,143,1.67,159,1.366,164,1.243,165,2.229,171,1.165,181,1.429,183,1.429,187,1.045,196,1.164,211,3.251,220,1.403,225,1.716,237,2.787,239,1.429,249,2.022,251,2.184,252,2.107,253,1.814,255,0.715,256,0.653,270,1.235,281,1.769,284,0.782,289,0.747,323,1.289,429,3.472,431,1.791,434,3.472,440,3.472,447,1.814,449,3.251,517,3.825,518,3.825,523,3.523,529,3.116,530,3.116,533,3.116,540,4.678,565,2.001,566,2.001,567,2.001,569,1.791,575,3.613,637,1.633,891,3.279,932,3.825,999,2.001,1000,4.437,1001,4.437,1002,4.437,1003,4.437,1004,4.437,1005,2.321,1006,2.321,1007,3.614,1008,2.321,1009,2.321,1010,2.321,1011,3.614,1012,2.321,1013,3.614,1014,2.321,1015,2.321,1016,2.001,1017,2.321,1018,3.116,1019,3.116,1020,3.614,1021,3.614,1022,3.614,1023,3.614,1024,2.321,1025,3.614,1026,2.321,1027,2.321,1028,3.614,1029,2.321,1030,3.116,1031,2.321]],["title/classes/TimestampEntityExtendEntity.html",[35,0.055,1032,2.96]],["body/classes/TimestampEntityExtendEntity.html",[3,0.232,4,0.252,5,0.232,7,0.404,8,2.071,10,1.442,11,0.017,19,0.69,23,2.279,25,0.314,34,0.252,35,0.049,56,0.011,57,0.011,132,1.14,138,1.724,139,1.724,159,1.724,164,1.128,165,2.043,177,3.945,214,4.828,249,2.047,256,0.969,323,1.709,512,3.231,548,1.161,552,2.299,575,3.802,589,5.121,618,5.724,996,4.32,1032,3.735,1033,5.88,1034,5.88,1035,2.969,1036,6.076,1037,6.076,1038,6.076,1039,4.842,1040,3.444,1041,4.842,1042,3.444,1043,4.842,1044,4.842,1045,4.842,1046,3.444,1047,3.444,1048,3.444,1049,3.444,1050,3.444,1051,6.076,1052,4.842,1053,5.6]],["title/classes/UnauthorizedRequestException.html",[35,0.055,1054,2.96]],["body/classes/UnauthorizedRequestException.html",[3,0.36,4,0.391,5,0.36,11,0.017,19,0.555,25,0.487,27,1.503,34,0.391,35,0.076,56,0.014,57,0.014,400,3.123,548,1.799,549,3.238,552,3.064,553,3.688,555,2.84,606,4.604,1054,4.977,1055,5.563,1056,4.604,1057,5.34,1058,5.34,1059,5.34]],["title/entities/UserEntity.html",[127,0.424,449,2.171]],["body/entities/UserEntity.html",[3,0.149,4,0.162,5,0.149,7,0.259,10,1.739,11,0.018,14,2.041,18,1.25,19,0.702,24,1.686,25,0.537,34,0.162,35,0.061,56,0.008,57,0.008,88,2.483,106,1.25,125,1.555,127,0.384,129,0.622,130,1.76,132,1.012,133,2.183,138,1.323,139,1.323,143,1.323,159,1.323,164,1.148,165,1.733,171,1.745,181,1.384,183,1.384,185,2.446,186,2.446,187,2.195,196,1.12,198,4.203,199,2.998,200,3.962,211,2.758,224,2.086,226,2.258,239,1.384,249,1.985,253,2.158,255,0.68,256,0.622,257,1.176,267,2.998,270,1.176,281,1.501,284,0.745,289,0.712,311,1.555,312,3.025,313,1.555,316,4.203,321,4.543,323,0.569,413,1.705,447,2.447,449,1.967,463,3.316,465,3.73,475,2.998,510,2.998,519,3.316,543,1.435,552,1.049,575,2.825,635,1.905,637,3.025,642,1.555,714,2.998,740,1.705,766,2.998,891,3.559,902,3.707,996,2.682,1016,1.905,1018,4.203,1019,4.203,1060,1.905,1061,4.299,1062,4.299,1063,4.299,1064,4.299,1065,2.21,1066,2.21,1067,2.21,1068,2.21,1069,2.21,1070,2.21,1071,4.875,1072,3.477,1073,3.477,1074,3.477,1075,2.21,1076,3.477,1077,4.875,1078,4.299,1079,2.21,1080,3.477,1081,2.21,1082,3.477,1083,2.21,1084,3.477,1085,2.21,1086,2.21,1087,2.21,1088,2.21,1089,2.21,1090,3.707,1091,2.21,1092,3.477,1093,1.905,1094,2.998,1095,2.21,1096,2.21,1097,2.21,1098,2.21,1099,3.477,1100,2.21,1101,3.477,1102,2.21,1103,2.21]],["title/classes/UserNotFoundException.html",[35,0.055,1104,2.96]],["body/classes/UserNotFoundException.html",[3,0.36,4,0.391,5,0.36,11,0.017,19,0.555,25,0.487,27,1.503,34,0.391,35,0.076,56,0.014,57,0.014,400,3.123,548,1.799,549,3.238,552,3.064,553,3.688,555,2.84,1104,4.977,1105,5.563,1106,4.604,1107,5.34,1108,5.34,1109,4.604,1110,5.34]],["title/changelog.html",[1111,2.087,1112,2.087,1113,3.214]],["body/changelog.html",[11,0.015,44,4.147,56,0.015,57,0.015,1114,5.895,1115,5.895,1116,5.895,1117,5.895,1118,5.895,1119,5.895,1120,5.895,1121,5.082]],["title/contributing.html",[1111,2.087,1112,2.087,1122,2.771]],["body/contributing.html",[11,0.015,56,0.015,57,0.015,1122,5.25]],["title/coverage.html",[1123,4.499]],["body/coverage.html",[0,2.634,1,1.764,5,0.169,6,2.161,11,0.017,28,1.418,35,0.102,56,0.009,57,0.009,74,1.764,81,1.764,92,2.618,94,2.161,96,1.764,97,2.698,98,2.698,99,2.814,100,2.161,108,1.515,111,1.764,112,1.934,124,2.161,127,0.806,128,1.072,130,1.886,131,2.161,164,0.426,170,1.418,192,1.418,203,1.258,207,1.418,216,6.67,219,1.333,224,1.072,233,1.515,275,1.333,290,1.418,291,1.934,292,2.161,295,1.258,315,2.161,357,1.934,358,2.161,366,1.258,375,2.161,382,1.333,386,1.418,394,1.515,395,3.179,396,2.161,397,1.628,398,2.161,407,1.628,409,1.764,410,1.515,415,2.161,423,1.764,429,1.515,430,1.934,433,1.934,434,1.515,436,1.934,440,1.515,443,1.934,444,1.628,445,1.934,447,1.258,449,1.418,512,1.333,514,2.161,547,1.934,549,3.095,550,2.958,551,2.161,560,1.934,561,2.161,571,1.764,572,2.958,573,2.958,574,2.161,581,1.934,582,2.161,583,2.958,598,1.934,599,2.161,600,2.161,621,2.161,644,2.161,653,1.764,658,1.764,659,2.161,679,1.764,682,2.161,683,2.161,684,2.161,718,2.161,724,2.161,725,2.161,730,1.934,731,2.698,732,1.764,733,1.934,747,1.934,748,2.161,757,2.161,818,2.161,837,2.161,850,2.161,878,2.161,889,1.934,890,2.161,891,1.515,892,2.161,899,2.161,915,2.161,933,2.161,965,1.934,966,2.161,973,2.161,994,2.161,999,2.161,1032,1.934,1033,2.161,1034,2.161,1035,2.161,1054,1.934,1055,2.161,1056,2.161,1060,2.161,1104,1.934,1105,2.161,1106,2.161,1123,2.161,1124,2.161,1125,2.507,1126,2.507,1127,7.362,1128,3.835,1129,2.507,1130,2.507,1131,4.657,1132,7.088,1133,2.507,1134,2.161,1135,2.507,1136,2.161,1137,2.161,1138,2.161,1139,2.507,1140,2.507,1141,2.507,1142,2.507]],["title/dependencies.html",[61,2.608,1143,2.771]],["body/dependencies.html",[11,0.018,27,1.373,32,3.764,35,0.087,56,0.014,57,0.014,61,2.76,77,3.169,79,4.207,256,1.373,270,2.596,406,3.169,424,4.207,607,5.264,667,3.169,823,4.207,1093,4.207,1094,4.207,1144,4.88,1145,4.88,1146,6.663,1147,4.88,1148,4.88,1149,4.88,1150,4.88,1151,4.88,1152,4.88,1153,4.88,1154,4.88,1155,4.88,1156,4.88,1157,4.88,1158,4.88,1159,4.88,1160,4.88,1161,4.88,1162,4.88,1163,4.88,1164,4.88,1165,4.88,1166,4.88,1167,4.88]],["title/miscellaneous/enumerations.html",[1168,1.709,1169,3.974]],["body/miscellaneous/enumerations.html",[7,0.359,11,0.017,52,2.52,56,0.01,57,0.01,130,1.772,152,2.364,157,3.84,158,3.84,243,3.84,245,3.84,247,3.84,261,3.436,263,3.84,264,2.893,272,3.84,293,2.893,303,3.84,310,2.642,321,2.364,323,0.789,328,3.84,404,1.538,463,2.364,465,2.156,557,4.048,558,4.048,575,2.236,741,3.436,809,3.84,826,5.489,891,1.852,965,2.364,968,4.524,1030,3.84,1090,3.84,1109,3.84,1168,1.63,1169,2.642,1170,4.454,1171,3.065,1172,3.065,1173,4.454,1174,4.454,1175,4.454,1176,4.454,1177,3.065,1178,6.385,1179,3.065,1180,3.065,1181,4.454,1182,5.248,1183,4.454,1184,4.454,1185,3.065,1186,3.065,1187,3.065,1188,3.065,1189,3.065,1190,3.065,1191,3.065,1192,3.065,1193,3.065,1194,3.065,1195,4.454,1196,5.761,1197,4.454,1198,5.761,1199,4.454,1200,4.454,1201,4.454,1202,4.454,1203,4.454,1204,4.454,1205,3.065,1206,4.454,1207,4.454,1208,3.065,1209,4.454,1210,4.454,1211,3.065,1212,4.454,1213,4.454,1214,5.248,1215,5.761,1216,4.454,1217,4.454,1218,4.454,1219,4.454,1220,4.454,1221,4.454]],["title/miscellaneous/functions.html",[1168,1.709,1222,3.974]],["body/miscellaneous/functions.html",[7,0.686,11,0.016,23,2.38,56,0.015,57,0.015,106,3.308,1134,5.042,1136,6.212,1168,3.11,1222,5.042,1223,5.848]],["title/index.html",[7,0.377,1111,2.087,1112,2.087]],["body/index.html",[11,0.014,14,2.455,39,4.881,56,0.014,57,0.014,61,3.579,261,3.989,827,4.458,1121,4.458,1124,4.458,1224,5.171,1225,5.171,1226,5.171,1227,5.171,1228,5.171,1229,5.171,1230,5.171,1231,5.171,1232,5.171,1233,5.171,1234,5.171,1235,5.171,1236,5.171,1237,5.171,1238,7.309,1239,5.171,1240,6.328,1241,5.171,1242,5.171,1243,5.171,1244,5.171,1245,5.171,1246,5.171,1247,5.171,1248,6.838,1249,5.171,1250,5.171,1251,5.171]],["title/license.html",[1111,2.087,1112,2.087,1252,2.771]],["body/license.html",[11,0.016,56,0.016,57,0.016]],["title/modules.html",[60,2.952]],["body/modules.html",[11,0.015,56,0.015,57,0.015,59,3.666,60,3.194,65,3.666,66,3.666,116,3.972,719,4.868,1253,7.101,1254,7.101,1255,7.101,1256,7.338,1257,5.646]],["title/overview.html",[1258,4.499]],["body/overview.html",[2,2.587,11,0.017,28,3.763,56,0.014,57,0.014,59,4.924,60,2.751,61,3.446,62,4.193,63,4.193,64,4.193,65,4.32,66,4.663,67,4.286,68,3.422,69,3.422,93,3.158,108,4.02,116,5.154,117,4.193,118,4.193,129,1.369,394,4.02,548,1.639,673,4.193,674,4.193,751,5.253,1258,4.193,1259,4.864,1260,4.864,1261,4.864]],["title/properties.html",[132,1.085,1143,2.771]],["body/properties.html",[11,0.017,14,2.777,44,4.114,56,0.015,57,0.015,132,1.377,879,5.042,1252,5.042,1262,5.848,1263,5.848]],["title/todo.html",[1111,2.087,1112,2.087,1264,3.214]],["body/todo.html",[11,0.016,56,0.016,57,0.016]],["title/miscellaneous/typealiases.html",[1168,1.709,1265,4.61]],["body/miscellaneous/typealiases.html",[7,0.678,11,0.015,56,0.015,57,0.015,164,0.982,549,2.9,731,4.066,732,4.758,733,5.217,738,5.831,739,4.982,1168,3.074,1266,5.779,1267,5.779]],["title/miscellaneous/variables.html",[1168,1.709,1268,3.974]],["body/miscellaneous/variables.html",[3,0.348,7,0.604,11,0.017,56,0.014,57,0.014,187,2.32,423,4.442,512,2.741,826,3.625,1137,4.443,1138,5.444,1168,2.741,1268,4.443,1269,5.153,1270,5.153,1271,6.314,1272,5.153,1273,5.153,1274,5.153,1275,5.153,1276,5.153,1277,5.153,1278,5.153,1279,5.153,1280,5.153,1281,5.153,1282,5.153,1283,5.153,1284,5.153,1285,5.153,1286,5.153,1287,5.153,1288,5.153,1289,5.153,1290,5.153]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"entities/CardEntity.html":{},"coverage.html":{}}}],["0.0.1",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{},"properties.html":{}}}],["0.1.13",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":723,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["1.1.19",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1103,"title":{},"body":{"entities/UserEntity.html":{}}}],["100",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":709,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["16",{"_index":1261,"title":{},"body":{"overview.html":{}}}],["19",{"_index":1260,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1097,"title":{},"body":{"entities/UserEntity.html":{}}}],["20)@column({unique",{"_index":1088,"title":{},"body":{"entities/UserEntity.html":{}}}],["200",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["2023",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":808,"title":{},"body":{"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":773,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["3",{"_index":1259,"title":{},"body":{"overview.html":{}}}],["3.8.2",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":643,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":636,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":713,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":708,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["300mb",{"_index":704,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["4",{"_index":751,"title":{},"body":{"classes/InvalidPasswordException.html":{},"overview.html":{}}}],["4.6.2",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":718,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["500000",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":462,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6.2.1",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":281,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":1099,"title":{},"body":{"entities/UserEntity.html":{}}}],["active",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["address",{"_index":316,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["admin",{"_index":968,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":711,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["already",{"_index":557,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":758,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":1231,"title":{},"body":{"index.html":{}}}],["api",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"index.html":{}}}],["api.log",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/entities",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["apidescription",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apigroup",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apiname",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apiresponse",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apisuccess",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["apisuccessexample",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apitags('healthcheck",{"_index":671,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["apiversion",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["app",{"_index":109,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":59,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":28,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"coverage.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":96,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"coverage.html":{}}}],["appteste2emodule",{"_index":116,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":108,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":824,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":603,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":1228,"title":{},"body":{"index.html":{}}}],["array",{"_index":186,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":125,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["author",{"_index":879,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["available",{"_index":719,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":413,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["banner_url",{"_index":317,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":318,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":996,"title":{},"body":{"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":1094,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["bcrypt.hash(password",{"_index":1102,"title":{},"body":{"entities/UserEntity.html":{}}}],["before",{"_index":1074,"title":{},"body":{"entities/UserEntity.html":{}}}],["beforeinsert",{"_index":1092,"title":{},"body":{"entities/UserEntity.html":{}}}],["birthday",{"_index":134,"title":{},"body":{"entities/CardEntity.html":{}}}],["boolean",{"_index":198,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["briand",{"_index":1226,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1256,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1253,"title":{},"body":{"modules.html":{}}}],["canceled",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":264,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":259,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card.entity.ts",{"_index":358,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"coverage.html":{}}}],["card.entity.ts:27",{"_index":371,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":368,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":363,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":365,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":369,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":372,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":370,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":262,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":953,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":956,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":963,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":128,"title":{"entities/CardEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["cardentity.connectedcardone",{"_index":362,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":364,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":646,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":859,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":880,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":903,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":978,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":359,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":360,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":851,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cards",{"_index":900,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":174,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{}}}],["catch",{"_index":505,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["catch(exception",{"_index":602,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["category",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":1113,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":752,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["check",{"_index":661,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":677,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":659,"title":{},"body":{"controllers/HealthCheckController.html":{},"coverage.html":{}}}],["check.controller.ts:27",{"_index":664,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":675,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":409,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check.query.ts",{"_index":683,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check.response",{"_index":412,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":725,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check.response.ts:3",{"_index":728,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":729,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":669,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":398,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check.service.ts:10",{"_index":405,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":403,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":684,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check/cqrs/query/health",{"_index":682,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check/custom",{"_index":396,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check/domain/response/health",{"_index":724,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check/health",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["checkhealth",{"_index":399,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":319,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["class",{"_index":35,"title":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"dependencies.html":{}}}],["classdesc",{"_index":987,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":548,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/NoUserTraceException.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"overview.html":{}}}],["cleardatabasetest",{"_index":101,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client_address",{"_index":771,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":775,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":777,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":759,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":760,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientvatnumber",{"_index":761,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_appmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":117,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":119,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":118,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":673,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":674,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["code.entity",{"_index":431,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["code.entity.ts",{"_index":514,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"coverage.html":{}}}],["code.entity.ts:21",{"_index":532,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":528,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":526,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":534,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":531,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":539,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":536,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":521,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":537,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":522,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["column",{"_index":249,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":185,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@length(5",{"_index":1087,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":199,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":523,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":166,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{}}}],["column({type",{"_index":214,"title":{},"body":{"entities/CardEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":1016,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["communicate",{"_index":272,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":901,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":293,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":296,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":306,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company_account",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":779,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_name",{"_index":781,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":783,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":762,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":939,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":940,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":290,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyemployeeentity.company",{"_index":340,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyentity",{"_index":295,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyentity.bannerpicture",{"_index":861,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":905,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":951,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":863,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":852,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":135,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":853,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyvatnumber",{"_index":763,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compodoc/compodoc",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":1241,"title":{},"body":{"index.html":{}}}],["config/winston",{"_index":591,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["configmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":1071,"title":{},"body":{"entities/UserEntity.html":{}}}],["connect",{"_index":510,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":258,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connectedcard",{"_index":172,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":173,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":179,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":170,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"coverage.html":{}}}],["connectedcardentity.conversation",{"_index":377,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":136,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardtwo",{"_index":137,"title":{},"body":{"entities/CardEntity.html":{}}}],["const",{"_index":593,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{}}}],["constraintmap",{"_index":738,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":743,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":746,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":400,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["constructor(errors",{"_index":734,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(healthcheckservice",{"_index":687,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":727,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(localisation",{"_index":577,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["constructor(partial",{"_index":311,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/UserEntity.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{}}}],["constructor(public",{"_index":580,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/HealthCheckResponse.html":{}}}],["constructor(querybus",{"_index":401,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["contain",{"_index":750,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{}}}],["contributing",{"_index":1122,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":1225,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/HealthCheckController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/HealthCheckController.html":{},"coverage.html":{}}}],["controller('health",{"_index":670,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}],["conversation",{"_index":361,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{}}}],["conversation.entity",{"_index":374,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":837,"title":{},"body":{"entities/JoinedConversation.html":{},"coverage.html":{}}}],["conversation.entity.ts:21",{"_index":843,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":846,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":845,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":840,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":841,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":847,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":842,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":628,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":849,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":839,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":883,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":366,"title":{"entities/ConversationEntity.html":{}},"body":{"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"coverage.html":{}}}],["conversations",{"_index":622,"title":{},"body":{"entities/GroupEntity.html":{}}}],["country",{"_index":320,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["coverage",{"_index":1123,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrs/handler/query/health",{"_index":680,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/health",{"_index":408,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":678,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["create/card.entity",{"_index":426,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/card.entity.ts",{"_index":131,"title":{},"body":{"entities/CardEntity.html":{},"coverage.html":{}}}],["create/card.entity.ts:100",{"_index":180,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":231,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":223,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":195,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":206,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":210,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":235,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":238,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":248,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":244,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":246,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":182,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":240,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":184,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":197,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":232,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":201,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":191,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":202,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":169,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":229,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":190,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":242,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":167,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":212,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":218,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":217,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":236,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":228,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":178,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":291,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/company.entity",{"_index":427,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/company.entity.ts",{"_index":315,"title":{},"body":{"entities/CompanyEntity.html":{},"coverage.html":{}}}],["create/company.entity.ts:100",{"_index":352,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:103",{"_index":337,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:32",{"_index":342,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:35",{"_index":343,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:38",{"_index":351,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:41",{"_index":331,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:44",{"_index":338,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:47",{"_index":353,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:50",{"_index":330,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:53",{"_index":354,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:56",{"_index":334,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:59",{"_index":335,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:62",{"_index":348,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:65",{"_index":339,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:72",{"_index":341,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:76",{"_index":345,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:79",{"_index":347,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:85",{"_index":350,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:91",{"_index":333,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":336,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":357,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/conversation.entity",{"_index":428,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":375,"title":{},"body":{"entities/ConversationEntity.html":{},"coverage.html":{}}}],["create/conversation.entity.ts:23",{"_index":385,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:26",{"_index":379,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:32",{"_index":378,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:35",{"_index":384,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:38",{"_index":390,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:41",{"_index":388,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:48",{"_index":380,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:51",{"_index":391,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:54",{"_index":381,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":430,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"coverage.html":{}}}],["create/entities",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/role",{"_index":965,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/user",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":433,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["create/group.entity",{"_index":432,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":621,"title":{},"body":{"entities/GroupEntity.html":{},"coverage.html":{}}}],["create/group.entity.ts:24",{"_index":632,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":638,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":634,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":629,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":640,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":627,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":630,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":641,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":631,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":435,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":757,"title":{},"body":{"entities/InvoicesEntity.html":{},"coverage.html":{}}}],["create/invoices.entity.ts:103",{"_index":796,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":785,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":804,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":787,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":792,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":770,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":786,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":794,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":782,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":780,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":784,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":776,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":774,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":778,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":788,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":799,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":803,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":801,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":791,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":436,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"coverage.html":{}}}],["create/media.entity",{"_index":437,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/media.entity.ts",{"_index":850,"title":{},"body":{"entities/MediaEntity.html":{},"coverage.html":{}}}],["create/media.entity.ts:22",{"_index":871,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":872,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":870,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":868,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":876,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":874,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":860,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":864,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":862,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":865,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":877,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":866,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":438,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":878,"title":{},"body":{"entities/MessageEntity.html":{},"coverage.html":{}}}],["create/message.entity.ts:20",{"_index":887,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":882,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":881,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":884,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":885,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":888,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":886,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/occupation.entity",{"_index":439,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/occupation.entity.ts",{"_index":899,"title":{},"body":{"entities/OccupationEntity.html":{},"coverage.html":{}}}],["create/occupation.entity.ts:21",{"_index":909,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:24",{"_index":910,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:31",{"_index":912,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:34",{"_index":906,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:37",{"_index":904,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:44",{"_index":907,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:47",{"_index":913,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:50",{"_index":908,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/plan.entity",{"_index":441,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":915,"title":{},"body":{"entities/PlanEntity.html":{},"coverage.html":{}}}],["create/plan.entity.ts:19",{"_index":926,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":927,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":921,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":928,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":925,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":924,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":930,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":919,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":931,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":920,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/profile.entity",{"_index":442,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/profile.entity.ts",{"_index":933,"title":{},"body":{"entities/ProfileEntity.html":{},"coverage.html":{}}}],["create/profile.entity.ts:100",{"_index":952,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:107",{"_index":942,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:110",{"_index":959,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:113",{"_index":943,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:28",{"_index":944,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:35",{"_index":961,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:41",{"_index":954,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:56",{"_index":958,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:70",{"_index":950,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:76",{"_index":941,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:82",{"_index":955,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:88",{"_index":938,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:94",{"_index":946,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/social",{"_index":443,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["create/strip",{"_index":445,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["create/subscription.entity",{"_index":448,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/subscription.entity.ts",{"_index":999,"title":{},"body":{"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["create/subscription.entity.ts:25",{"_index":1010,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":1015,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":1009,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":1017,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":1026,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":1024,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":1014,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":1029,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":1012,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":1008,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":1005,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":1027,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":1006,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/user.entity",{"_index":450,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["create/user.entity.ts",{"_index":1060,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["create/user.entity.ts:33",{"_index":1069,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:37",{"_index":1068,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:45",{"_index":1070,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:50",{"_index":1089,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:57",{"_index":1081,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:60",{"_index":1079,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:67",{"_index":1075,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:70",{"_index":1091,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:77",{"_index":1083,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:80",{"_index":1085,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:86",{"_index":1065,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:89",{"_index":1086,"title":{},"body":{"entities/UserEntity.html":{}}}],["create/user.entity.ts:92",{"_index":1066,"title":{},"body":{"entities/UserEntity.html":{}}}],["created_at",{"_index":1039,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":138,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn",{"_index":181,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createtimestamp",{"_index":1036,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":416,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["creation",{"_index":991,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["ctx",{"_index":609,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":612,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":611,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":764,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current_timestamp",{"_index":1045,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["custom",{"_index":668,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":582,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["custom.event.ts",{"_index":574,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"coverage.html":{}}}],["custom.event.ts:1",{"_index":578,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:2",{"_index":579,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":1021,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":394,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{},"overview.html":{}}}],["database",{"_index":104,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{}}}],["databaseconfiguration",{"_index":74,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["date",{"_index":165,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["date'})@isdate",{"_index":530,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":619,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":1051,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["david",{"_index":1229,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decimal",{"_index":789,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":798,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["default",{"_index":187,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":974,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{}}}],["deleted_at",{"_index":1041,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":139,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":183,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletetimestamp",{"_index":1037,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deletion",{"_index":993,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":61,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":495,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["diffusible",{"_index":1218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":828,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["discount",{"_index":565,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":524,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":544,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":527,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":515,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":429,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["discountcodeentity.subscriptions",{"_index":1007,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcodes",{"_index":1000,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":922,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":916,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":516,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":715,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":691,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":1240,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1124,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation:serveapplication",{"_index":1251,"title":{},"body":{"index.html":{}}}],["domain/response/health",{"_index":411,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["duplicate_category_name",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":1187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":1186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicateemailexception",{"_index":547,"title":{"classes/DuplicateEmailException.html":{}},"body":{"classes/DuplicateEmailException.html":{},"coverage.html":{}}}],["duplicateusernameexception",{"_index":560,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["duration",{"_index":917,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e2e.controller",{"_index":121,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":100,"title":{},"body":{"controllers/AppTestE2eController.html":{},"coverage.html":{}}}],["e2e.controller.ts:11",{"_index":105,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":120,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":110,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":124,"title":{},"body":{"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["e2e.service.ts:5",{"_index":126,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":189,"title":{},"body":{"entities/CardEntity.html":{}}}],["email",{"_index":321,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["email.exception.ts",{"_index":551,"title":{},"body":{"classes/DuplicateEmailException.html":{},"coverage.html":{}}}],["email.exception.ts:3",{"_index":554,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["emails",{"_index":140,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":310,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":355,"title":{},"body":{"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":292,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"coverage.html":{}}}],["employee.entity.ts:27",{"_index":300,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":304,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":297,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":302,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":298,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":305,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":299,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":308,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":1173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":322,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["end_date",{"_index":529,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":517,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":129,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"overview.html":{}}}],["entitiestomovemodule",{"_index":65,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":127,"title":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["entity('company",{"_index":309,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":807,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":914,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity.exception.ts",{"_index":733,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":736,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":1035,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":1042,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":1047,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":1049,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":1048,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":1040,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":1046,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":484,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":1034,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":472,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":237,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/role",{"_index":307,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["enum/transferable",{"_index":278,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":266,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/user",{"_index":1095,"title":{},"body":{"entities/UserEntity.html":{}}}],["enum/who",{"_index":260,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":1169,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":113,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":818,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["environment.pipe.ts:5",{"_index":825,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":98,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["error",{"_index":506,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["error('node_env",{"_index":513,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error.constraints",{"_index":744,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errorcustomevent",{"_index":571,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorcustomeventhandler",{"_index":581,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorenum",{"_index":1170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":598,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["errors",{"_index":737,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":742,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":827,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"index.html":{}}}],["eslint/no",{"_index":832,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":588,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.entity",{"_index":446,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":994,"title":{},"body":{"entities/StripEventEntity.html":{},"coverage.html":{}}}],["event.entity.ts:16",{"_index":995,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["eventbus",{"_index":692,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["eventshandler",{"_index":590,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":592,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["example",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["exceed",{"_index":717,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":605,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":600,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":604,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":614,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":550,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["exception/invalid",{"_index":731,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exception/no",{"_index":890,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["exception/unauthorized",{"_index":1055,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["exception/user",{"_index":1105,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":601,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":1078,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":686,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exists",{"_index":558,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{}}}],["express",{"_index":607,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":552,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{}}}],["extra",{"_index":469,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["failed",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":200,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["features",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["filename",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstname",{"_index":141,"title":{},"body":{"entities/CardEntity.html":{}}}],["flag",{"_index":1018,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["float",{"_index":923,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1109,"title":{},"body":{"classes/UserNotFoundException.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception.ts",{"_index":1106,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":1107,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["france",{"_index":816,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["function",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1222,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":662,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/api/test/clear",{"_index":114,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1111,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["google",{"_index":1077,"title":{},"body":{"entities/UserEntity.html":{}}}],["graph",{"_index":1257,"title":{},"body":{"modules.html":{}}}],["group",{"_index":275,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["group.bannerpicture",{"_index":867,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":392,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":869,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupbannerpicture",{"_index":854,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":382,"title":{"entities/GroupEntity.html":{}},"body":{"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"coverage.html":{}}}],["groupentity.conversations",{"_index":383,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":650,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":193,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":194,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":633,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":192,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["groupmemberships",{"_index":142,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":855,"title":{},"body":{"entities/MediaEntity.html":{}}}],["handle",{"_index":585,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handle(event",{"_index":586,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handler",{"_index":681,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["handler.ts",{"_index":583,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["handler.ts:14",{"_index":693,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:22",{"_index":694,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:8",{"_index":587,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["handler/error",{"_index":573,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["health",{"_index":397,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheck",{"_index":665,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":658,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["healthcheckmodule",{"_index":66,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":407,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckqueryhandler",{"_index":679,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckresponse",{"_index":410,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["healthcheckresult",{"_index":666,"title":{},"body":{"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":688,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":697,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":707,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":726,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":1230,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":457,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":610,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http/1.1",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["httpcode(200",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["httpexception",{"_index":553,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":835,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus",{"_index":555,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":559,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{}}}],["httpstatus.forbidden",{"_index":836,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":615,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":1110,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["httpstatus.unauthorized",{"_index":1059,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["icon",{"_index":976,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["id",{"_index":143,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["identifier",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":584,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["ignore",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["implements",{"_index":451,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["inactive",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1019,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":265,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":812,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":92,"title":{"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["injectables",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"overview.html":{}}}],["installation",{"_index":1246,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":1247,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":613,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["int",{"_index":545,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":525,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":215,"title":{},"body":{"entities/CardEntity.html":{}}}],["invalid",{"_index":741,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":1189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":1188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidparameterentityexception",{"_index":730,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{}}}],["invalidpasswordexception",{"_index":747,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["inversejoincolumn",{"_index":949,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":1175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":793,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":765,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":1001,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":566,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":434,"title":{"entities/InvoicesEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["invoicesentity.subscription",{"_index":1011,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["iqueryhandler",{"_index":685,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["is_not_transferable",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_transferable",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isdate",{"_index":540,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isemail",{"_index":267,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["isemail()@column({unique",{"_index":1067,"title":{},"body":{"entities/UserEntity.html":{}}}],["isemailconfirmed",{"_index":1061,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":811,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":541,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isnumber",{"_index":542,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isownerpro",{"_index":144,"title":{},"body":{"entities/CardEntity.html":{}}}],["isregisteredwithgoogle",{"_index":1062,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":805,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["istestenvironmentpipe",{"_index":111,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":103,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":268,"title":{},"body":{"entities/CardEntity.html":{}}}],["jest",{"_index":1243,"title":{},"body":{"index.html":{}}}],["join",{"_index":420,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":471,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["joincolumn",{"_index":373,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":393,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["joinedconversation",{"_index":386,"title":{"entities/JoinedConversation.html":{}},"body":{"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["joinedconversation.conversation",{"_index":387,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":945,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversations",{"_index":934,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":376,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":250,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json.stringify(info.message",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwttoken",{"_index":1063,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":856,"title":{},"body":{"entities/MediaEntity.html":{}}}],["la",{"_index":815,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["lastname",{"_index":145,"title":{},"body":{"entities/CardEntity.html":{}}}],["length",{"_index":642,"title":{},"body":{"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["length(5",{"_index":635,"title":{},"body":{"entities/GroupEntity.html":{},"entities/UserEntity.html":{}}}],["letter",{"_index":755,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":1236,"title":{},"body":{"index.html":{}}}],["license",{"_index":1252,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":830,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["localisation",{"_index":576,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["logger",{"_index":423,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger(event.localisation",{"_index":595,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger.config",{"_index":425,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["logger.config.ts",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":507,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":504,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error(event",{"_index":597,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger.info('node_env",{"_index":455,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":594,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logger_console.error(event.error",{"_index":596,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["logging",{"_index":475,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logs",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lowercase",{"_index":756,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":1232,"title":{},"body":{"index.html":{}}}],["manytomany",{"_index":251,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":220,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":252,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":225,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["matching",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":269,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxlength(255",{"_index":282,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":146,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":205,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":274,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.groupbannerpicture",{"_index":625,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":639,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":332,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":349,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":203,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["member",{"_index":969,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":988,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":623,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":276,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":644,"title":{},"body":{"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["membership.entity.ts:17",{"_index":652,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":654,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":647,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":651,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":648,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":655,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":649,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":656,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":966,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["membership.enum.ts:2",{"_index":971,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":970,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":972,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":705,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":690,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":208,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"classes/InvalidParameterEntityException.html":{}}}],["message.author",{"_index":209,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":389,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":277,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":207,"title":{"entities/MessageEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{},"coverage.html":{}}}],["messages",{"_index":147,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":823,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["miscellaneous",{"_index":1168,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":58,"title":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["module:entities",{"_index":989,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":703,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":564,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":323,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["nestjs",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":895,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/cqrs",{"_index":406,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEventHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":667,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"dependencies.html":{}}}],["network",{"_index":975,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity",{"_index":280,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["network.entity.ts",{"_index":973,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["network.entity.ts:34",{"_index":983,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:37",{"_index":984,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:40",{"_index":986,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:43",{"_index":982,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:50",{"_index":979,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:57",{"_index":980,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:60",{"_index":985,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:63",{"_index":981,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["never",{"_index":822,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":512,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":829,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["no_user_trace",{"_index":1190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":1237,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":1242,"title":{},"body":{"index.html":{}}}],["not_diffusible",{"_index":1219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":148,"title":{},"body":{"entities/CardEntity.html":{}}}],["nousertraceexception",{"_index":889,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["npm",{"_index":1238,"title":{},"body":{"index.html":{}}}],["null",{"_index":177,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["null'})@joincolumn",{"_index":626,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":222,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":948,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":211,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/OccupationEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":213,"title":{},"body":{"entities/CardEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["numberofshares",{"_index":149,"title":{},"body":{"entities/CardEntity.html":{}}}],["object.assign(this",{"_index":313,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/UserEntity.html":{}}}],["object.keys(constraints).map(key",{"_index":745,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":150,"title":{},"body":{"entities/CardEntity.html":{},"entities/ProfileEntity.html":{}}}],["occupation.cards",{"_index":221,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.entity",{"_index":271,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["occupation.profiles",{"_index":947,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation_id",{"_index":964,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationentity",{"_index":219,"title":{"entities/OccupationEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["occupationentity.companies",{"_index":356,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":344,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupations",{"_index":151,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["occurred",{"_index":508,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["ondelete",{"_index":175,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":753,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":253,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":171,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":254,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["onetoone(undefined",{"_index":204,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":1221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":1220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":1044,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":133,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["organisation",{"_index":1234,"title":{},"body":{"index.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}],["overview",{"_index":1258,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":152,"title":{},"body":{"entities/CardEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["ownercompanies",{"_index":935,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":324,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":1143,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["parameter",{"_index":732,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":404,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":498,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":480,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":461,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":489,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":312,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/UserEntity.html":{}}}],["password",{"_index":465,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/InvalidPasswordException.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["password.exception.ts",{"_index":748,"title":{},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:3",{"_index":749,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["path",{"_index":421,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["paymententity",{"_index":997,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":936,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":325,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":153,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":624,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipetransform",{"_index":819,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plan",{"_index":932,"title":{},"body":{"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":567,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":440,"title":{"entities/PlanEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["planentity.subscriptions",{"_index":1013,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["port",{"_index":459,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgres",{"_index":456,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgresql",{"_index":1239,"title":{},"body":{"index.html":{}}}],["pour",{"_index":814,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":477,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":660,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["prettier",{"_index":1245,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":1072,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":918,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":255,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":196,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":699,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["process",{"_index":422,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["process.env.node_env",{"_index":453,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":501,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":483,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":467,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":492,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":496,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":478,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":458,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":487,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":502,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":486,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":476,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":494,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":500,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":482,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":466,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":491,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":497,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":479,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":460,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":488,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":503,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":485,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":474,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":493,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":499,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":481,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":464,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":490,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prod",{"_index":454,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":226,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["profile.companies",{"_index":301,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.entity",{"_index":257,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profile.personalcards",{"_index":227,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.savedcard",{"_index":230,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.user",{"_index":1082,"title":{},"body":{"entities/UserEntity.html":{}}}],["profile_id",{"_index":962,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profileentity",{"_index":224,"title":{"entities/ProfileEntity.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["profileentity.bannerpicture",{"_index":873,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":848,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":844,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.occupations",{"_index":911,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":346,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":875,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":857,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":858,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profilepicture",{"_index":326,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profiles",{"_index":902,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profileswhosavedcard",{"_index":154,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":1121,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":132,"title":{"properties.html":{}},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"properties.html":{}}}],["property",{"_index":990,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":898,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["providers",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["public",{"_index":575,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/HealthCheckResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["query/health",{"_index":696,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybus",{"_index":402,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["queryhandler",{"_index":695,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":698,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/CustomHealthCheckService.html":{},"classes/ErrorCustomEvent.html":{},"classes/HealthCheckResponse.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["record",{"_index":739,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["reflect",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["refunded",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["registered",{"_index":1076,"title":{},"body":{"entities/UserEntity.html":{}}}],["rejected",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":470,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":284,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["request",{"_index":606,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/UnauthorizedRequestException.html":{}}}],["request.exception.ts",{"_index":1056,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:3",{"_index":1057,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.url",{"_index":620,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}],["response",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"classes/ErrorExceptionFilter.html":{}}}],["response.status(httpstatus).json",{"_index":616,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["rest",{"_index":1233,"title":{},"body":{"index.html":{}}}],["results",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/TimestampEntityExtendEntity.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":645,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["role.enum",{"_index":1096,"title":{},"body":{"entities/UserEntity.html":{}}}],["role.enum.ts",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum",{"_index":303,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":314,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":653,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["rolegroupmembershipenum.member",{"_index":657,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roles",{"_index":294,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rss",{"_index":710,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":1248,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":893,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":957,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":937,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["see",{"_index":263,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1080,"title":{},"body":{"entities/UserEntity.html":{}}}],["service",{"_index":570,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":176,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["setpassword(password",{"_index":1100,"title":{},"body":{"entities/UserEntity.html":{}}}],["share",{"_index":261,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["siret",{"_index":327,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["social",{"_index":279,"title":{},"body":{"entities/CardEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["social_network",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":155,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":156,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.cards",{"_index":234,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetworkentity",{"_index":233,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["socketid",{"_index":838,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{}}}],["space",{"_index":720,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../errorenum.ts",{"_index":1171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":1267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role",{"_index":1172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status",{"_index":1174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/entities",{"_index":130,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":395,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:31",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":122,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":94,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/util/config/database.configuration.ts",{"_index":415,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts:28",{"_index":417,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":549,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":572,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["src/util/exception/errorenum.ts",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":599,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/util/global/extend",{"_index":1033,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["src/util/pipe/is",{"_index":112,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["ssl",{"_index":468,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":533,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":518,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":1112,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":1249,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":967,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":617,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":809,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":810,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statussubscriptionenum",{"_index":1030,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":1031,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":716,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["string",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["strip",{"_index":568,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":998,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":1002,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":1020,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":444,"title":{"entities/StripEventEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["subscription",{"_index":766,"title":{},"body":{"entities/InvoicesEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":543,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.enum.ts",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":1084,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":447,"title":{"entities/SubscriptionEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["subscriptionentity.discountcodes",{"_index":546,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":535,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":817,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":795,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":929,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptions",{"_index":519,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["super",{"_index":740,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/UserEntity.html":{}}}],["super('email",{"_index":556,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["super('unauthorized",{"_index":1058,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":1108,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":563,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":896,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super_admin",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":1244,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":813,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":1254,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1255,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":473,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["table",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["tax_rate",{"_index":797,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":767,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["terminusmodule",{"_index":676,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":99,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["test/test",{"_index":97,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["testapi",{"_index":1250,"title":{},"body":{"index.html":{}}}],["text/html",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["thibaud",{"_index":1227,"title":{},"body":{"index.html":{}}}],["this.appservice.cleardatabasetest",{"_index":115,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["this.createdat",{"_index":1050,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":672,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":1053,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":721,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.healthcheckservice.check",{"_index":700,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":706,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":712,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.password",{"_index":1101,"title":{},"body":{"entities/UserEntity.html":{}}}],["this.querybus.execute(new",{"_index":414,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":701,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":1052,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["thresholdpercent",{"_index":722,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":511,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["timestamp",{"_index":618,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":1032,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["timestamps",{"_index":289,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["todo",{"_index":1264,"title":{"todo.html":{}},"body":{}}],["total_amount",{"_index":800,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":802,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":768,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":769,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":897,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":892,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["trace.exception.ts:3",{"_index":894,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":157,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":283,"title":{},"body":{"entities/CardEntity.html":{}}}],["transform",{"_index":820,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":821,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":1093,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transports",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":1022,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":1025,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":1003,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":1004,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":1023,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":790,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@joincolumn",{"_index":367,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@maxlength(255",{"_index":168,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":452,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["trying",{"_index":509,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":164,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1265,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":158,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":285,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":256,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":689,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature",{"_index":123,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forrootasync",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":418,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":419,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typescript",{"_index":831,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["ui",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":1054,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["undefined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["undefined})@isemail",{"_index":188,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":241,"title":{},"body":{"entities/CardEntity.html":{}}}],["unique",{"_index":637,"title":{},"body":{"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["unknown",{"_index":608,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["unlicensed",{"_index":1263,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":833,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["update",{"_index":992,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["updated_at",{"_index":1043,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":159,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn",{"_index":239,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatetimestamp",{"_index":1038,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["uppercase",{"_index":754,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":977,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["urls",{"_index":160,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":538,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":520,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":702,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["useclass",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":714,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usepipes",{"_index":107,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":102,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":891,"title":{},"body":{"classes/NoUserTraceException.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.entity",{"_index":569,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["user.profiles",{"_index":960,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user_not_found",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userentity",{"_index":449,"title":{"entities/UserEntity.html":{}},"body":{"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["userentity.subscriptions",{"_index":1028,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["username",{"_index":463,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception.ts",{"_index":561,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["username.exception.ts:3",{"_index":562,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["usernotfoundexception",{"_index":1104,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["userroleenum",{"_index":1090,"title":{},"body":{"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["userroleenum.public",{"_index":1098,"title":{},"body":{"entities/UserEntity.html":{}}}],["userroles",{"_index":1064,"title":{},"body":{"entities/UserEntity.html":{}}}],["users",{"_index":1073,"title":{},"body":{"entities/UserEntity.html":{}}}],["usersenderid",{"_index":1191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util/config/database.configuration",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["validated",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":806,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validationerror",{"_index":735,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":270,"title":{},"body":{"entities/CardEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["value",{"_index":826,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":772,"title":{},"body":{"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["variable",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1268,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":834,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["version",{"_index":1262,"title":{},"body":{"properties.html":{}}}],["void",{"_index":589,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["wallet",{"_index":1224,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":663,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":1235,"title":{},"body":{"index.html":{}}}],["website",{"_index":328,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":245,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":288,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":243,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":287,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":161,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":162,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":247,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":286,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":163,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":424,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":273,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["world",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zip_code",{"_index":329,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/HealthCheckModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    // ________ Module ________\n    HealthCheckModule,\n    EntitiesToMoveModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\n\n@Module({\n  imports: [AppModule, TypeOrmModule.forFeature([])],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppTestE2eService {\n  async clearDatabaseTest(): Promise {\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from './occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from './social-network.entity';\n\n@Entity()\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company-employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { MediaEntity } from './media.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected-card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/entities-to-create/user.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateEmailException.html":{"url":"classes/DuplicateEmailException.html","title":"class - DuplicateEmailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateEmailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/duplicate-email.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/duplicate-email.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateEmailException extends HttpException {\n  constructor() {\n    super('Email already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { SocialNetworkEntity } from './social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from './user.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localisation: string, error: string)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localisation\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(public readonly localisation: string, public readonly error: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { logger } from '../../config/winston-logger.config';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  handle(event: ErrorCustomEvent): void {\n    const logger_console = new Logger(event.localisation);\n    logger_console.error(event.error);\n\n    logger.error(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity()\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity()\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck, HealthCheckResult } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckResult,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity()\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from './profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity()\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity()\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { CardEntity } from './card.entity';\nimport { ProfileEntity } from './profile.entity';\n\n@Entity('occupation')\nexport class OccupationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from './user.entity';\nimport { CardEntity } from './card.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { MediaEntity } from './media.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user?: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity()\nexport class SocialNetworkEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from './user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity()\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                            \n                                userRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:45\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:67\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:57\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Length(5, 20)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  BeforeInsert,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsEmail, Length } from 'class-validator';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from './profile.entity';\nimport * as bcrypt from 'bcrypt';\nimport { UserRoleEnum } from './enum/user-role.enum';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @IsEmail()\n  @Column({ unique: true })\n  email?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column()\n  @Length(5, 20)\n  @Column({ unique: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  password: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  userRoles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  @BeforeInsert()\n  async setPassword(password: string): Promise {\n    this.password = await bcrypt.hash(password || this.password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.NOT_FOUND);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/entities-to-create/card.entity.ts\n            \n            entity\n            CardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company-employee.entity.ts\n            \n            entity\n            CompanyEmployeeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company.entity.ts\n            \n            entity\n            CompanyEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/connected-card.entity.ts\n            \n            entity\n            ConnectedCardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/conversation.entity.ts\n            \n            entity\n            ConversationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/discount-code.entity.ts\n            \n            entity\n            DiscountCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/enum/role-group-membership.enum.ts\n            \n            class\n            RoleGroupMembershipEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group-membership.entity.ts\n            \n            entity\n            GroupMembershipEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group.entity.ts\n            \n            entity\n            GroupEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/invoices.entity.ts\n            \n            entity\n            InvoicesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/joined-conversation.entity.ts\n            \n            entity\n            JoinedConversation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/media.entity.ts\n            \n            entity\n            MediaEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/message.entity.ts\n            \n            entity\n            MessageEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/occupation.entity.ts\n            \n            entity\n            OccupationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/plan.entity.ts\n            \n            entity\n            PlanEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/profile.entity.ts\n            \n            entity\n            ProfileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/social-network.entity.ts\n            \n            entity\n            SocialNetworkEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/strip-event.entity.ts\n            \n            entity\n            StripEventEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/subscription.entity.ts\n            \n            entity\n            SubscriptionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n            \n            class\n            HealthCheckQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/query/health-check.query.ts\n            \n            class\n            HealthCheckQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/custom-health-check.service.ts\n            \n            injectable\n            CustomHealthCheckService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/domain/response/health-check.response.ts\n            \n            class\n            HealthCheckResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/health-check.controller.ts\n            \n            controller\n            HealthCheckController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/config/database.configuration.ts\n            \n            injectable\n            DatabaseConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/config/winston-logger.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/duplicate-email.exception.ts\n            \n            class\n            DuplicateEmailException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/duplicate-username.exception.ts\n            \n            class\n            DuplicateUsernameException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/invalid-parameter-entity.exception.ts\n            \n            class\n            InvalidParameterEntityException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/invalid-password.exception.ts\n            \n            class\n            InvalidPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/no-user-trace.exception.ts\n            \n            class\n            NoUserTraceException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/unauthorized-request.exception.ts\n            \n            class\n            UnauthorizedRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-exception/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event-handler.ts\n            \n            class\n            ErrorCustomEventHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event.ts\n            \n            class\n            ErrorCustomEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/util/filter/error-exception.filter.ts\n            \n            class\n            ErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/global/extend-entity/timestamp.extend-entity.ts\n            \n            class\n            TimestampEntityExtendEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/pipe/is-test-environment.pipe.ts\n            \n            class\n            IsTestEnvironmentPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.controller.ts\n            \n            controller\n            AppTestE2eController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.service.ts\n            \n            injectable\n            AppTestE2eService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    19 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
