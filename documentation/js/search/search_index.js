var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/AddressEntity.html",[0,1.18,1,2.813]],["body/entities/AddressEntity.html",[0,1.135,1,2.705,2,1.119,3,0.054,4,0.063,5,0.058,6,3.222,7,2.574,8,0.14,9,0.645,10,6.016,11,3.604,12,6.016,13,2.048,14,2.288,15,1.526,16,5.532,17,6.764,18,6.764,19,6.764,20,6.764,21,2.092,22,1.526,23,5.532,24,0.512,25,0.007,26,1.257,27,2.514,28,5.278,29,6.566,30,4.986,31,6.106,32,0.403,33,2.894,34,3.875,35,2.437,36,4.505,37,3.755,38,3.275,39,3.612,40,3.489,41,2.894,42,2.894,43,2.831,44,2.574,45,3.679,46,5.148,47,2.894,48,2.574,49,3.679,50,2.894,51,1.908,52,2.894,53,4.261,54,4.505,55,1.633,56,2.894,57,2.894,58,2.894,59,2.894,60,2.894,61,2.574,62,3.679,63,2.894,64,2.3,65,4.505,66,2.894,67,4.007,68,2.894,69,0.431,70,3.364,71,1.908,72,1.954,73,2.9,74,1.197,75,1.908,76,0.861,77,1.975,78,1.517,79,4.643,80,5.894,81,0.257,82,1.287,83,0.564,84,2.08,85,0.063,86,5.7,87,0.003,88,0.003]],["title/controllers/ApiLandingPageController.html",[89,2.316,90,3.571]],["body/controllers/ApiLandingPageController.html",[3,0.087,4,0.102,5,0.094,8,0.227,24,0.394,25,0.007,26,1.045,27,1.87,32,0.299,69,0.587,81,0.267,83,0.314,85,0.102,87,0.005,88,0.005,89,2.313,90,4.883,91,2.19,92,2.648,93,4.768,94,5.251,95,4.161,96,3.363,97,2.59,98,5.966,99,1.475,100,2.528,101,5.699,102,6.99,103,4.161,104,6.407,105,4.679,106,4.987,107,4.679,108,6.407,109,4.679,110,0.583,111,0.514,112,4.251,113,1.449,114,2.293,115,4.679,116,4.679,117,4.679,118,2.19,119,3.363,120,2.615,121,3.566,122,1.058,123,4.987,124,4.161,125,7.307,126,7.307,127,3.193,128,2.453,129,5.251,130,4.161,131,3.193,132,3.821,133,2.531,134,3.821,135,2.708,136,4.161,137,4.679,138,1.696,139,0.884,140,4.679,141,6.407,142,4.679,143,4.883,144,2.057,145,4.679,146,4.679,147,4.679,148,4.679]],["title/modules/ApiLandingPageModule.html",[149,1.367,150,3.368]],["body/modules/ApiLandingPageModule.html",[3,0.076,4,0.089,5,0.083,25,0.007,69,0.635,81,0.234,83,0.457,85,0.089,87,0.004,88,0.004,90,5.196,91,2.74,92,1.49,93,3.895,94,2.955,97,3.174,122,0.93,123,5.569,124,3.657,149,1.708,150,6.608,151,2.224,152,3.167,153,3.657,154,3.657,155,3.657,156,4.899,157,5.316,158,3.375,159,4.414,160,3.515,161,2.469,162,2.469,163,4.112,164,3.515,165,3.515,166,2.807,167,5.07,168,2.092,169,3.815,170,1.178,171,2.54,172,2.807,173,4.112,174,3.656,175,2.299,176,2.092,177,2.156,178,4.902,179,4.462,180,3.657,181,2.568,182,4.462,183,3.657,184,2.679,185,4.462,186,3.657,187,3.134,188,3.656,189,2.807,190,2.568,191,1.875,192,3.657,193,2.955,194,2.807,195,2.807,196,4.653,197,4.653,198,4.442,199,3.134,200,3.134,201,3.134,202,3.358,203,3.358,204,4.112,205,3.657,206,3.657]],["title/injectables/ApiLandingPageService.html",[123,3.198,207,1.393]],["body/injectables/ApiLandingPageService.html",[3,0.091,4,0.106,5,0.099,8,0.237,24,0.356,25,0.007,26,1.07,32,0.349,69,0.595,81,0.279,83,0.443,85,0.106,87,0.005,88,0.005,92,2.901,93,4.757,94,5.753,99,1.52,100,2.561,101,5.874,102,7.12,103,5.874,110,0.823,111,0.726,112,4.044,113,1.493,114,2.336,122,1.106,123,4.507,129,3.516,130,4.351,138,1.773,139,1.248,144,1.571,170,1.401,181,3.055,187,3.728,207,1.964,208,2.175,209,4.351,210,0.66,211,3.728,212,6.191,213,6.328,214,4.892,215,4.892,216,4.892,217,4.507,218,4.351,219,4.746,220,4.351,221,3.516,222,4.351,223,4.351,224,1.85,225,2.12,226,3.994,227,1.773,228,3.728]],["title/modules/ApiLogModule.html",[149,1.367,156,2.813]],["body/modules/ApiLogModule.html",[3,0.101,4,0.118,5,0.11,25,0.007,69,0.613,81,0.31,83,0.365,85,0.118,87,0.005,88,0.005,91,2.547,92,1.973,97,2.2,122,1.23,149,2.068,151,2.944,152,3.834,156,5.654,158,3.672,160,4.255,161,3.267,162,3.267,164,4.255,165,4.255,166,3.714,167,4.837,168,2.769,169,4.618,170,1.558,171,2.361,174,4.426,175,3.042,176,2.769,177,2.853,178,4.426,188,4.426,190,3.398,191,2.482,194,3.714,195,3.714,196,3.714,197,3.714,198,3.546,199,4.148,200,4.148,229,5.442,230,5.442,231,5.442,232,5.442,233,4.84]],["title/injectables/ApiLogService.html",[158,1.938,207,1.393]],["body/injectables/ApiLogService.html",[3,0.09,4,0.106,5,0.098,8,0.236,24,0.402,25,0.007,32,0.348,69,0.576,81,0.277,83,0.5,85,0.106,87,0.005,88,0.005,92,2.895,99,1.515,100,2.558,110,0.929,111,0.82,113,1.488,114,2.331,118,2.278,122,1.1,138,1.764,139,0.92,149,1.42,158,2.722,170,1.394,171,3.465,172,3.322,190,3.039,207,1.957,208,2.164,210,0.657,211,3.709,212,6.182,225,2.113,226,5.374,227,2.703,234,4.329,235,6.582,236,6.582,237,4.867,238,6.582,239,5.585,240,4.867,241,5.683,242,6.582,243,6.088,244,4.867,245,4.73,246,4.73,247,5.359,248,4.329,249,2.787,250,2.111,251,4.867,252,4.867]],["title/controllers/ApiMailController.html",[89,2.316,253,3.571]],["body/controllers/ApiMailController.html",[3,0.102,4,0.119,5,0.111,8,0.267,24,0.297,25,0.007,27,1.606,32,0.257,69,0.615,81,0.314,83,0.369,85,0.119,87,0.005,88,0.005,89,2.721,91,2.576,92,2.588,96,3.956,97,2.886,99,1.644,100,2.357,110,0.686,111,0.605,112,3.862,113,1.244,114,2.083,118,2.576,119,3.956,121,4.195,122,1.244,127,3.756,128,2.885,131,3.756,132,4.494,133,2.977,134,4.494,135,3.185,136,4.895,138,1.995,139,1.04,143,4.195,225,1.767,253,5.442,254,5.131,255,4.895,256,6.35,257,4.895,258,6.4,259,5.504,260,5.504,261,5.442,262,5.409,263,4.895,264,4.895,265,5.504,266,4.195,267,5.504,268,5.504]],["title/modules/ApiMailModule.html",[149,1.367,269,3.368]],["body/modules/ApiMailModule.html",[3,0.079,4,0.092,5,0.086,25,0.007,64,1.364,69,0.642,78,2.227,81,0.242,83,0.402,85,0.092,87,0.004,88,0.004,91,2.804,92,1.54,97,3.213,122,0.96,149,1.748,151,2.298,152,3.24,156,4.951,157,5.373,158,3.411,159,4.461,160,3.596,161,2.55,162,2.55,164,3.596,165,3.596,166,2.899,167,4.737,168,2.161,169,3.903,170,1.216,171,2.599,172,2.899,174,3.741,175,2.374,176,2.161,177,2.227,178,4.334,181,2.652,184,2.767,188,3.741,189,2.899,190,2.652,191,1.937,192,3.778,193,3.053,194,2.899,195,2.899,196,4.089,197,4.089,198,3.903,199,3.237,200,3.237,201,3.237,202,3.468,203,3.468,253,5.289,254,3.053,262,5.629,263,3.778,269,6.642,270,3.778,271,3.778,272,4.248,273,4.248,274,4.566,275,4.248,276,4.566,277,4.248,278,4.248,279,2.899,280,1.799,281,3.468]],["title/injectables/ApiMailService.html",[207,1.393,262,3.198]],["body/injectables/ApiMailService.html",[3,0.102,4,0.119,5,0.111,8,0.266,24,0.384,25,0.007,32,0.333,69,0.578,81,0.313,83,0.478,85,0.119,87,0.005,88,0.005,92,2.869,99,1.64,100,2.353,110,0.888,111,0.783,113,1.241,114,2.08,122,1.241,138,1.989,139,1.347,170,1.572,181,3.427,207,2.119,208,2.44,210,0.741,211,4.183,212,6.395,213,6.51,224,2.076,225,1.762,226,4.481,227,1.989,254,5.688,256,6.339,257,6.339,258,6.395,262,4.864,264,4.881,282,4.881,283,5.488,284,5.488,285,5.122,286,5.488]],["title/controllers/AppController.html",[89,2.316,287,3.571]],["body/controllers/AppController.html",[3,0.095,4,0.111,5,0.103,8,0.248,25,0.007,26,1.094,27,1.491,32,0.239,69,0.528,81,0.291,85,0.111,87,0.005,88,0.005,89,3.362,91,2.392,97,2.066,99,1.566,113,1.156,119,3.673,122,1.156,127,3.489,128,2.68,138,1.853,139,0.966,144,1.641,266,3.896,287,5.183,288,4.546,289,7.546,290,5.111,291,7.247,292,3.802,293,8.044,294,8.044,295,5.183,296,2.68,297,5.111,298,6.801,299,6.801,300,4.98,301,4.546,302,6.049,303,5.111,304,5.111,305,3.896,306,4.546,307,5.111,308,3.896,309,4.174,310,4.546,311,5.111,312,6.798,313,5.111,314,5.111,315,3.192,316,3.069,317,4.174,318,5.111]],["title/modules/AppModule.html",[149,1.367,319,3.368]],["body/modules/AppModule.html",[3,0.066,4,0.077,5,0.071,24,0.282,25,0.007,32,0.165,38,1.494,69,0.638,81,0.201,83,0.419,85,0.077,87,0.004,88,0.004,91,2.451,93,2.745,94,2.535,99,0.812,110,0.439,111,0.388,113,0.798,122,0.798,144,1.133,149,2.017,150,5.56,151,1.908,152,2.833,156,4.644,157,5.04,158,3.2,160,3.144,161,2.118,162,2.118,164,3.144,165,3.144,166,2.408,167,4.263,168,1.795,169,3.412,170,1.01,171,2.272,172,2.408,191,1.609,194,2.408,195,2.408,196,3.574,197,3.574,198,3.412,201,2.688,254,2.535,269,5.56,279,2.408,280,1.494,287,4.76,300,5.04,301,3.137,319,6.727,320,3.137,321,3.137,322,3.137,323,5.56,324,5.56,325,5.56,326,3.528,327,3.528,328,5.237,329,6.911,330,3.528,331,3.528,332,2.203,333,5.237,334,3.528,335,3.991,336,3.528,337,3.528,338,3.137,339,3.528,340,2.688,341,3.528,342,3.137,343,3.137,344,3.528,345,3.528,346,4.967,347,2.688,348,3.528,349,6.246,350,3.991,351,3.528,352,2.688,353,3.528,354,3.528,355,3.528,356,3.528,357,3.528,358,3.528,359,3.528,360,3.528,361,3.528,362,3.528,363,4.276,364,1.155,365,2.298,366,2.408,367,2.408,368,2.408,369,2.408,370,4.276,371,2.88,372,2.88,373,2.535,374,3.528,375,3.528]],["title/injectables/AppService.html",[207,1.393,300,3.053]],["body/injectables/AppService.html",[3,0.125,4,0.146,5,0.135,8,0.325,25,0.007,26,1.156,32,0.313,69,0.463,81,0.382,85,0.146,87,0.006,88,0.006,99,1.86,113,1.516,122,1.516,144,2.153,207,2.402,208,2.981,289,8.005,293,5.964,294,5.964,300,5.264,376,5.964,377,6.705]],["title/controllers/AppTestE2eController.html",[89,2.316,378,3.571]],["body/controllers/AppTestE2eController.html",[3,0.096,4,0.112,5,0.104,8,0.25,22,1.887,24,0.278,25,0.007,27,1.995,32,0.319,64,1.654,69,0.587,81,0.294,83,0.346,85,0.112,87,0.005,88,0.005,89,3.38,91,2.412,99,1.574,110,0.642,111,0.566,113,1.546,114,2.385,118,2.412,122,1.165,138,1.867,139,0.974,144,2.195,261,3.927,300,3.357,378,5.211,379,5.849,380,5.849,381,5.974,382,4.582,383,7.27,384,6.081,385,8.174,386,5.152,387,5.211,388,5.152,389,4.582,390,5.249,391,5.152,392,5.152,393,5.152,394,4.667,395,4.582,396,4.582,397,5.849,398,4.207,399,5.152,400,3.927,401,3.357,402,4.207,403,5.152,404,5.152,405,5.152,406,5.152,407,5.152]],["title/modules/AppTestE2eModule.html",[149,1.367,408,3.571]],["body/modules/AppTestE2eModule.html",[1,3.397,3,0.073,4,0.085,5,0.079,6,3.496,25,0.007,34,3.06,64,1.817,69,0.662,81,0.223,85,0.085,87,0.004,88,0.004,91,2.648,122,0.886,149,1.651,151,2.121,152,3.06,160,3.397,161,2.354,162,2.354,164,3.397,165,3.397,279,2.676,280,1.66,319,5.771,378,5.059,379,2.988,380,2.988,381,4.325,394,5.481,395,5.032,396,3.487,402,3.201,408,6.459,409,3.487,410,3.921,411,3.487,412,3.921,413,3.921,414,3.921,415,2.879,416,3.201,417,3.201,418,3.397,419,2.818,420,2.676,421,3.397,422,2.818,423,2.055,424,3.06,425,3.201,426,3.533,427,2.818,428,3.862,429,3.274,430,3.201,431,3.397,432,2.818,433,2.676,434,3.533,435,3.201,436,3.397,437,2.818,438,2.191,439,3.163,440,3.201,441,3.397,442,3.201,443,3.274,444,3.201,445,3.533,446,3.201,447,2.797,448,2.988,449,3.533,450,2.818,451,2.818,452,3.686,453,2.818,454,2.988,455,3.06,456,2.988,457,3.274,458,2.988,459,3.533,460,2.676,461,2.988,462,3.487]],["title/injectables/AppTestE2eService.html",[207,1.393,394,3.198]],["body/injectables/AppTestE2eService.html",[1,1.512,3,0.047,4,0.055,5,0.051,6,3.286,8,0.122,11,1.64,22,0.695,24,0.218,25,0.007,32,0.236,34,1.362,64,0.808,69,0.631,76,0.749,81,0.144,83,0.271,84,1.809,85,0.055,87,0.003,88,0.003,99,0.929,100,2.006,110,0.503,111,0.443,113,0.912,114,1.686,122,0.569,139,1.687,144,1.296,207,1.2,208,1.119,210,0.545,224,3.377,225,2.882,280,1.066,379,4.403,380,4.403,381,3.764,383,5.138,384,3.589,389,3.589,390,3.795,394,2.754,400,1.919,401,1.64,402,2.056,415,1.281,416,2.056,417,2.056,418,1.512,419,1.809,420,1.718,421,1.512,422,1.809,423,1.32,424,1.362,425,2.056,426,1.572,427,1.809,428,2.754,429,1.457,430,2.056,431,1.512,432,1.809,433,1.718,434,1.572,435,2.056,436,1.512,437,1.809,438,1.407,439,1.407,440,2.056,441,1.512,442,2.056,443,1.457,444,2.056,445,1.572,446,2.056,447,1.245,448,1.919,449,1.572,450,1.809,451,1.809,452,1.64,453,1.809,454,1.919,455,1.362,456,1.919,457,1.457,458,1.919,459,1.572,460,1.718,461,1.919,463,2.239,464,1.32,465,5.096,466,5.05,467,5.05,468,5.05,469,5.05,470,5.05,471,5.05,472,5.05,473,5.05,474,5.05,475,5.05,476,5.05,477,5.05,478,5.05,479,5.05,480,5.05,481,5.05,482,5.05,483,5.05,484,5.05,485,5.05,486,5.05,487,2.518,488,2.116,489,2.518,490,2.518,491,1.32,492,2.754,493,1.32,494,2.518,495,2.518,496,2.518,497,2.518,498,2.518,499,2.518,500,2.518,501,2.518,502,2.518,503,2.518,504,2.518,505,2.518,506,2.518,507,2.518,508,2.518,509,2.518,510,2.518,511,2.518,512,2.518,513,2.518,514,2.518,515,2.518,516,2.518,517,1.809,518,2.518,519,2.518,520,2.518,521,2.518,522,2.239,523,2.518,524,1.64,525,2.518,526,2.239,527,2.518,528,1.512,529,2.518,530,2.239,531,2.518,532,2.239,533,2.518,534,2.239,535,2.518,536,1.718,537,2.518,538,1.572,539,2.518,540,2.056,541,2.518,542,2.056,543,2.518,544,1.64,545,2.518,546,2.056,547,2.518,548,2.239,549,2.518,550,1.809,551,2.518,552,1.718,553,2.518,554,2.518,555,2.518,556,2.518,557,1.041,558,2.518,559,1.018,560,2.518,561,1.178,562,2.518,563,1.809,564,1.362,565,2.518]],["title/controllers/AuthController.html",[89,2.316,566,3.571]],["body/controllers/AuthController.html",[3,0.057,4,0.067,5,0.062,8,0.149,22,0.848,24,0.396,25,0.007,26,0.822,27,2.142,32,0.343,64,2.233,69,0.602,78,1.611,81,0.175,83,0.492,85,0.067,87,0.003,88,0.003,89,1.519,91,1.439,96,2.209,99,1.086,100,2.534,110,0.914,111,0.807,113,1.66,114,2.301,118,1.439,119,2.209,121,2.343,122,0.695,127,2.098,128,1.611,131,2.098,133,1.663,134,2.51,135,1.779,138,1.114,139,0.892,143,2.343,144,2.357,159,3.108,168,1.564,193,2.209,224,1.163,225,2.07,227,1.711,250,2.796,261,2.343,266,2.343,315,5.389,566,3.597,567,2.734,568,2.343,569,4.72,570,4.72,571,2.62,572,4.72,573,4.198,574,4.72,575,3.074,576,5.89,577,3.074,578,3.074,579,4.375,580,3.074,581,3.074,582,3.074,583,3.074,584,3.074,585,3.074,586,3.074,587,3.074,588,3.074,589,2.734,590,5.275,591,3.074,592,3.074,593,4.72,594,3.074,595,2.947,596,2.401,597,3.074,598,2.734,599,2.734,600,2.734,601,3.743,602,2.51,603,2.209,604,4.378,605,2.343,606,3.074,607,2.734,608,2.51,609,1.845,610,2.209,611,3.074,612,3.074,613,3.074,614,4.72,615,2.209,616,2.734,617,2.734,618,3.074,619,3.074,620,3.074,621,3.074,622,3.074,623,3.074,624,3.074,625,3.074,626,4.72,627,3.074,628,3.074,629,3.074,630,3.074,631,3.074,632,4.72,633,2.401,634,4.72,635,3.597,636,4.72,637,4.72,638,5.11,639,3.074,640,3.074,641,3.074,642,3.074,643,3.074,644,4.72,645,3.074,646,3.074,647,3.074,648,5.745,649,3.074,650,3.074,651,3.074,652,3.074,653,3.074,654,3.074,655,3.074,656,3.074,657,3.074,658,4.72,659,3.074,660,3.074,661,3.074,662,3.074,663,2.51,664,3.074]],["title/modules/AuthModule.html",[149,1.367,323,3.368]],["body/modules/AuthModule.html",[3,0.066,4,0.078,5,0.072,22,0.986,25,0.007,64,1.147,69,0.647,78,1.873,81,0.204,83,0.422,85,0.078,87,0.004,88,0.004,91,2.475,97,2.544,122,0.808,149,1.543,151,1.933,152,2.86,156,4.666,158,3.215,159,4.204,160,3.174,161,2.145,162,2.145,164,3.174,165,3.174,166,2.439,167,4.747,168,1.818,169,3.445,170,1.023,171,2.293,172,2.439,174,3.301,175,1.997,176,1.818,177,1.873,178,3.93,188,3.301,189,2.439,190,2.231,191,1.629,193,2.568,194,2.439,195,2.439,196,4.295,197,4.295,198,4.1,199,2.723,200,2.723,201,2.723,202,2.918,203,2.918,205,3.178,206,3.178,279,2.439,280,1.513,281,2.918,323,6.656,566,4.796,571,1.629,601,5.738,602,2.918,665,3.178,666,3.178,667,3.178,668,3.573,669,5.586,670,5.586,671,5.586,672,3.573,673,5.287,674,5.287,675,2.231,676,3.573,677,3.573,678,3.573,679,3.573,680,2.918,681,4.317,682,2.918,683,4.029,684,3.573,685,3.573,686,3.573,687,3.573,688,3.8,689,3.573,690,3.178,691,4.029,692,3.573,693,2.918,694,3.8,695,3.573,696,3.178,697,3.178,698,3.573,699,3.178,700,3.573,701,3.573]],["title/injectables/AuthService.html",[207,1.393,601,3.053]],["body/injectables/AuthService.html",[3,0.058,4,0.067,5,0.063,8,0.151,22,0.858,24,0.427,25,0.007,26,1.312,32,0.358,64,0.998,69,0.572,78,1.629,81,0.177,83,0.495,85,0.067,87,0.003,88,0.003,99,1.096,100,2.413,110,0.918,111,0.81,113,1.667,114,1.892,120,1.737,122,0.703,138,1.127,144,2.367,170,0.89,207,1.415,208,1.382,210,0.419,212,5.515,213,5.515,224,1.8,225,0.998,227,1.725,228,3.628,250,3.198,557,1.286,568,3.628,571,1.417,573,4.234,589,4.234,590,5.023,596,4.027,599,2.764,600,2.764,601,3.101,615,2.234,616,2.764,617,2.764,633,2.422,638,5.145,680,2.538,696,5.145,699,4.234,702,2.764,703,2.239,704,6.483,705,4.76,706,4.76,707,4.76,708,3.421,709,3.108,710,7.373,711,3.108,712,3.108,713,4.76,714,3.108,715,3.205,716,4.76,717,4.76,718,3.108,719,4.76,720,3.108,721,3.108,722,4.76,723,5.294,724,3.108,725,3.108,726,2.369,727,1.629,728,4.425,729,2.538,730,2.538,731,2.234,732,3.108,733,2.121,734,4.76,735,2.538,736,2.234,737,2.764,738,2.764,739,3.108,740,3.108,741,3.108,742,1.629,743,3.108,744,1.581,745,1.348,746,4.234,747,2.764,748,3.887,749,3.249,750,4.724,751,4.76,752,3.108,753,3.108,754,3.108,755,6.483,756,4.941,757,6.483,758,3.108,759,4.234,760,3.108,761,3.108,762,3.108,763,3.108,764,4.76,765,3.108,766,2.538,767,3.108]],["title/entities/CardEntity.html",[0,1.18,415,2.384]],["body/entities/CardEntity.html",[0,0.742,2,0.666,3,0.032,4,0.037,5,0.035,6,3.248,8,0.084,9,0.552,13,1.429,14,1.597,15,1.065,21,1.46,24,0.475,25,0.007,26,1.168,27,2.549,32,0.408,35,1.594,37,3.305,38,3.8,39,4.357,40,3.813,43,2.491,51,1.248,53,2.012,55,2.928,69,0.52,70,2.889,71,1.635,72,1.675,73,2.024,74,0.713,75,1.635,76,0.513,81,0.168,82,0.766,83,0.116,85,0.037,87,0.002,88,0.002,111,0.878,296,2.934,316,1.035,415,1.5,421,3.59,423,0.904,431,2.743,433,1.177,439,2.554,441,2.743,443,2.644,447,2.956,449,2.853,451,1.239,517,2.118,528,1.035,536,3.504,538,1.841,540,4.193,544,2.977,768,1.533,769,3.861,770,3.434,771,3.861,772,3.861,773,3.861,774,3.861,775,3.861,776,3.861,777,3.861,778,3.434,779,3.861,780,3.861,781,3.153,782,2.943,783,3.861,784,3.861,785,3.861,786,5.135,787,4.977,788,5.607,789,3.861,790,3.861,791,3.861,792,3.861,793,4.265,794,1.724,795,5.135,796,1.724,797,2.743,798,4.064,799,2.948,800,4.905,801,5.038,802,1.724,803,2.948,804,1.724,805,1.724,806,1.724,807,5.93,808,5.738,809,1.724,810,4.57,811,1.724,812,1.724,813,2.622,814,2.948,815,1.724,816,1.724,817,1.533,818,1.92,819,1.724,820,1.724,821,1.123,822,2.948,823,1.724,824,2.948,825,1.724,826,1.724,827,1.841,828,2.407,829,2.948,830,2.012,831,1.724,832,1.724,833,2.012,834,2.948,835,1.724,836,1.724,837,2.948,838,1.724,839,1.724,840,2.948,841,1.724,842,1.724,843,2.948,844,1.724,845,1.724,846,3.504,847,1.724,848,1.724,849,1.724,850,1.724,851,3.434,852,1.724,853,3.434,854,1.724,855,3.434,856,1.724,857,2.246,858,2.635,859,3.083,860,1.841,861,1.076,862,1.408,863,3.861,864,1.408,865,3.861,866,1.533,867,1.724,868,1.724,869,2.012,870,2.948,871,1.314,872,1.314,873,1.533,874,1.724,875,1.239,876,1.408,877,1.724,878,1.408,879,2.735,880,5.135,881,1.724,882,0.786,883,1.724,884,1.724,885,1.724,886,1.724,887,0.766]],["title/entities/CompanyEmployeeEntity.html",[0,1.18,418,2.813]],["body/entities/CompanyEmployeeEntity.html",[0,1.072,2,1.645,3,0.079,4,0.092,5,0.086,6,3.206,8,0.206,9,0.994,11,5.377,13,2.572,14,2.874,15,1.917,21,2.628,24,0.457,25,0.007,26,0.858,27,2.474,32,0.396,34,4.081,35,3.245,38,2.541,43,3.262,51,2.541,55,2.175,69,0.521,70,1.803,71,2.943,72,3.014,73,3.643,74,1.761,75,2.943,76,1.266,77,2.905,81,0.243,85,0.092,87,0.004,88,0.004,296,2.232,418,3.602,419,6.223,447,3.73,544,5.182,564,3.758,807,4.573,808,4.573,861,2.658,879,3.58,882,1.941,887,1.893,888,3.786,889,6,890,4.257,891,4.257,892,4.257,893,4.257,894,6,895,4.257,896,6.18,897,4.257,898,4.257,899,3.786,900,4.257,901,4.257,902,1.992,903,3.252,904,2.047,905,4.257]],["title/entities/CompanyEntity.html",[0,1.18,34,2.535]],["body/entities/CompanyEntity.html",[0,1,1,3.427,2,0.953,3,0.046,4,0.054,5,0.05,6,3.294,8,0.12,9,0.713,10,4.43,11,2.586,12,4.43,13,1.844,14,2.06,15,1.374,21,1.884,24,0.477,25,0.007,26,1.287,27,2.581,32,0.413,34,2.147,35,1.334,37,4.15,38,3.872,39,3.303,40,3.737,43,2.642,51,1.681,55,0.894,67,4.43,69,0.462,70,3.415,71,2.109,72,2.161,73,2.081,74,1.02,75,2.109,76,0.733,81,0.141,83,0.383,84,4.497,85,0.054,87,0.003,88,0.003,111,0.997,292,2.784,418,4.013,420,1.683,439,3.929,443,3.868,447,3.305,536,3.896,559,2.013,781,4.067,793,6.033,797,2.383,800,3.719,801,3.896,821,2.586,833,1.683,857,3.025,858,2.709,859,2.99,860,3.11,861,1.54,872,1.88,875,1.773,879,2.9,882,1.125,887,1.097,902,1.154,903,2.331,904,1.186,906,2.194,907,4.43,908,4.981,909,4.067,910,4.981,911,4.981,912,4.981,913,4.43,914,4.981,915,4.43,916,2.466,917,3.969,918,2.466,919,2.466,920,3.53,921,2.466,922,2.466,923,2.466,924,2.466,925,2.466,926,2.466,927,2.466,928,3.969,929,2.466,930,2.466,931,2.466,932,2.466,933,2.466,934,3.969,935,2.466,936,2.466,937,3.53,938,2.466,939,2.466,940,2.466,941,2.466,942,2.466,943,2.194,944,2.466]],["title/entities/ConnectedCardEntity.html",[0,1.18,421,2.813]],["body/entities/ConnectedCardEntity.html",[0,1.475,2,1.59,3,0.076,4,0.089,5,0.083,6,3.177,8,0.199,9,0.975,13,2.524,14,2.82,15,1.881,21,2.579,24,0.453,25,0.007,26,0.838,27,2.45,32,0.392,35,3.167,38,1.741,39,4.299,40,4.561,43,3.225,51,2.479,69,0.471,71,2.887,72,2.958,73,3.574,74,1.701,75,2.887,76,1.223,81,0.234,83,0.276,85,0.089,87,0.004,88,0.004,415,4.56,421,3.515,422,6.168,423,2.156,424,4.018,438,2.299,522,3.657,524,5.47,821,2.679,860,3.656,879,3.54,882,1.875,887,1.828,902,1.925,903,3.191,904,1.977,945,3.657,946,6.818,947,6.818,948,5.855,949,4.112,950,5.855,951,4.112,952,3.657,953,4.112,954,4.112,955,4.112,956,4.112,957,4.112,958,4.462]],["title/entities/ConversationEntity.html",[0,1.18,424,2.535]],["body/entities/ConversationEntity.html",[0,1.377,2,1.445,3,0.069,4,0.081,5,0.075,6,3.253,8,0.181,9,0.924,13,2.392,14,2.673,15,1.783,21,2.444,24,0.467,25,0.007,26,1.017,27,2.53,32,0.405,37,2.866,38,2.315,43,3.122,51,2.315,69,0.545,70,2.736,71,2.736,72,2.803,74,1.547,75,2.736,76,1.112,81,0.213,83,0.251,85,0.081,87,0.004,88,0.004,295,4.924,421,4.742,423,1.96,424,2.957,429,4.571,436,4.742,438,2.09,441,4.267,457,4.113,524,2.436,528,3.879,538,3.413,552,3.731,778,5.747,797,4.267,798,5.747,821,2.436,859,4.54,860,3.413,862,3.053,876,3.053,879,3.427,882,1.705,887,1.662,959,3.325,960,6.461,961,5.276,962,5.466,963,3.739,964,3.739,965,3.739,966,3.739,967,5.466,968,3.739,969,3.739,970,5.466,971,3.739,972,5.466,973,3.739,974,5.466,975,3.739,976,3.739,977,2.849,978,3.053,979,3.053]],["title/classes/CreateLogCommand.html",[81,0.267,247,3.368]],["body/classes/CreateLogCommand.html",[3,0.057,4,0.067,5,0.062,8,0.149,9,0.674,24,0.496,25,0.007,26,1.288,27,2.591,32,0.418,37,4.616,38,3.857,69,0.396,81,0.175,83,0.206,85,0.067,87,0.003,88,0.003,92,3.264,110,0.382,111,1.006,118,2.686,128,1.609,210,0.414,247,3.388,249,2.431,305,4.374,308,4.374,316,3.446,635,6.008,745,2.49,827,2.943,846,2.094,902,2.206,903,3.252,904,1.475,980,0.422,981,8.009,982,2.729,983,5.105,984,5.105,985,5.105,986,5.105,987,4.125,988,5.105,989,5.105,990,5.105,991,5.105,992,4.374,993,3.069,994,6.275,995,3.069,996,4.743,997,2.729,998,3.069,999,3.069,1000,5.674,1001,7.011,1002,3.069,1003,4.193,1004,3.069,1005,3.069,1006,6.18,1007,3.069,1008,3.584,1009,3.069,1010,3.069,1011,3.069,1012,3.069,1013,3.069,1014,3.069,1015,3.069,1016,3.069,1017,3.069,1018,3.069,1019,3.071,1020,2.729]],["title/classes/CreateLogCommandHandler.html",[81,0.267,188,2.926]],["body/classes/CreateLogCommandHandler.html",[3,0.077,4,0.09,5,0.083,8,0.201,9,0.841,24,0.441,25,0.007,26,1.066,32,0.382,69,0.581,81,0.236,83,0.459,85,0.09,87,0.004,88,0.004,92,3.049,99,1.354,100,2.034,110,0.733,111,0.646,113,0.936,114,1.716,122,0.936,139,1.713,144,1.329,168,2.106,170,1.185,188,3.673,189,5.741,190,5.368,210,0.559,224,3.456,241,3.154,247,5.354,364,1.926,694,4.227,980,0.57,996,4.67,1019,2.696,1020,3.681,1021,1.712,1022,4.107,1023,6.085,1024,6.085,1025,6.085,1026,4.917,1027,2.828,1028,3.154,1029,5.085,1030,4.014,1031,4.482,1032,3.379,1033,3.379,1034,3.379,1035,5.354,1036,3.531,1037,3.681,1038,3.959,1039,2.485,1040,3.681,1041,4.139,1042,3.154,1043,2.825,1044,4.139,1045,3.681,1046,4.917,1047,4.139,1048,4.802,1049,3.681,1050,3.681,1051,3.681,1052,3.681,1053,3.379,1054,3.681,1055,3.379,1056,3.681,1057,4.139,1058,4.139]],["title/classes/CreateLogDto.html",[81,0.267,239,2.926]],["body/classes/CreateLogDto.html",[3,0.055,4,0.064,5,0.06,8,0.144,9,0.658,24,0.496,25,0.007,26,1.297,27,2.595,32,0.418,37,4.586,38,3.838,69,0.388,81,0.169,83,0.199,85,0.064,87,0.003,88,0.003,92,3.267,110,0.37,111,1.025,118,2.632,128,1.557,149,1.641,210,0.401,239,2.87,249,2.381,305,4.285,308,4.285,316,3.376,635,5.945,745,2.439,827,2.87,846,2.027,902,2.151,903,3.204,904,1.428,980,0.409,983,5.001,984,5.001,985,5.001,986,5.001,987,4.041,988,5.001,989,5.001,990,5.001,991,5.001,992,4.285,994,6.299,996,4.672,997,2.641,1000,5.59,1001,6.937,1003,4.088,1006,6.088,1008,3.511,1019,2.995,1059,5.872,1060,2.425,1061,2.641,1062,2.97,1063,2.97,1064,2.97,1065,2.97,1066,2.97,1067,2.97,1068,2.97,1069,2.97,1070,2.97,1071,2.97,1072,2.97,1073,2.97,1074,2.97,1075,2.97,1076,2.97,1077,2.97,1078,2.97,1079,2.97,1080,2.97]],["title/classes/CreateMethodLogDto.html",[81,0.267,243,3.571]],["body/classes/CreateMethodLogDto.html",[3,0.11,4,0.128,5,0.119,8,0.286,9,1.069,24,0.464,25,0.007,26,1.298,32,0.402,81,0.337,83,0.396,85,0.128,87,0.005,88,0.005,92,3.219,110,0.736,111,0.649,118,3.835,149,2.391,210,0.797,243,5.694,249,3.948,902,3.497,903,4.157,904,2.84,980,0.813,1059,5.786,1060,4.823,1061,5.254,1081,5.907,1082,5.907,1083,5.907]],["title/classes/CreateUserCommand.html",[81,0.267,1084,3.368]],["body/classes/CreateUserCommand.html",[3,0.118,4,0.138,5,0.128,8,0.308,9,1.119,24,0.421,25,0.007,32,0.365,69,0.439,81,0.362,83,0.426,85,0.138,87,0.006,88,0.006,110,0.791,111,0.698,139,1.601,210,0.857,245,4.566,390,5.719,401,4.139,703,2.157,980,0.874,1084,5.619,1085,7.532,1086,4.842,1087,6.353,1088,5.651,1089,5.651,1090,3.232]],["title/classes/CreateUserCommandHandler.html",[81,0.267,1091,3.571]],["body/classes/CreateUserCommandHandler.html",[3,0.069,4,0.08,5,0.074,8,0.179,9,0.776,15,1.02,24,0.346,25,0.007,27,1.078,32,0.3,64,2.27,69,0.605,76,1.099,81,0.309,82,1.643,83,0.364,85,0.08,87,0.004,88,0.004,99,1.248,100,1.908,110,0.675,111,0.596,113,0.836,114,1.582,133,1.999,135,2.139,139,1.213,144,1.187,170,1.058,210,0.731,225,2.27,227,2.851,250,3.265,280,1.565,364,1.775,464,1.938,465,3.946,488,3.706,491,1.938,493,2.842,557,2.655,559,2.594,564,1.999,595,2.308,633,3.83,703,1.771,742,1.938,744,1.88,745,3.265,830,4.381,980,0.509,1021,1.529,1022,3.853,1027,2.606,1030,2.522,1036,3.254,1038,2.139,1039,2.219,1040,3.287,1084,5.41,1091,4.131,1092,6.287,1093,5.137,1094,3.018,1095,2.817,1096,1.999,1097,4.613,1098,5.708,1099,3.588,1100,3.895,1101,3.287,1102,4.613,1103,3.287,1104,3.895,1105,2.522,1106,2.522,1107,3.287,1108,3.699,1109,3.018,1110,2.817,1111,3.287,1112,3.696,1113,3.287,1114,3.696,1115,3.018,1116,3.287,1117,3.018,1118,3.287,1119,5.42,1120,3.699,1121,3.696,1122,5.42,1123,3.696,1124,3.696,1125,3.696,1126,3.696,1127,3.696,1128,3.696,1129,3.287,1130,3.696,1131,3.696,1132,3.696,1133,3.696,1134,3.018,1135,5.708,1136,3.696,1137,3.696,1138,3.287]],["title/classes/CreateUserDto.html",[81,0.267,390,2.813]],["body/classes/CreateUserDto.html",[3,0.097,4,0.113,5,0.105,8,0.252,9,0.983,24,0.46,25,0.007,26,1.254,27,2.393,30,3.005,32,0.398,69,0.532,79,4.625,81,0.392,82,2.309,83,0.348,85,0.113,87,0.005,88,0.005,110,0.647,111,0.847,128,2.723,133,4.167,135,3.005,210,0.701,390,4.127,400,6.679,557,3.187,559,3.114,561,3.606,564,4.167,869,4.691,902,3.217,903,3.992,904,2.497,980,0.715,994,5.821,1139,4.241,1140,6.874,1141,5.194,1142,5.194,1143,5.194,1144,5.194,1145,5.194,1146,5.194,1147,5.613,1148,5.194,1149,6.114,1150,3.733,1151,3.958]],["title/classes/CreateUserEvent.html",[81,0.267,1152,3.571]],["body/classes/CreateUserEvent.html",[3,0.094,4,0.11,5,0.102,8,0.247,9,0.97,22,2.244,24,0.457,25,0.007,26,1.342,32,0.396,55,2.457,69,0.351,81,0.29,83,0.341,85,0.11,87,0.005,88,0.005,110,0.633,111,0.559,139,1.773,149,2.373,210,0.915,245,3.654,249,3.587,390,5.546,401,3.313,703,2.588,715,4.187,980,0.7,1152,5.165,1153,7.748,1154,3.654,1155,4.522,1156,3.875,1157,5.085,1158,3.172,1159,6.028,1160,5.085,1161,3.875,1162,5.085]],["title/classes/CreateUserEventHandler.html",[81,0.267,1163,3.571]],["body/classes/CreateUserEventHandler.html",[3,0.1,4,0.117,5,0.109,8,0.262,15,1.489,22,1.489,24,0.38,25,0.007,32,0.329,69,0.542,81,0.308,83,0.473,85,0.117,87,0.005,88,0.005,97,2.181,99,1.623,100,2.334,110,0.878,111,0.775,113,1.22,114,2.057,118,2.526,138,1.956,139,1.02,149,1.575,158,3.664,170,1.545,171,2.341,191,2.461,210,0.728,225,1.733,249,2.285,364,2.308,559,2.181,980,0.743,1021,2.232,1152,6.344,1163,5.372,1164,6.982,1165,4.997,1166,4.543,1167,4.079,1168,3.37,1169,3.683,1170,4.079,1171,3.878,1172,3.016,1173,3.123,1174,5.397,1175,5.397,1176,3.37,1177,3.516,1178,3.516,1179,3.683,1180,5.397,1181,5.397]],["title/classes/CreateUserResponse.html",[81,0.267,1108,3.198]],["body/classes/CreateUserResponse.html",[3,0.094,4,0.11,5,0.102,8,0.245,9,0.966,13,2.815,15,2.098,24,0.469,25,0.007,26,1.244,32,0.406,43,2.669,64,1.624,69,0.466,81,0.288,83,0.339,85,0.11,87,0.005,88,0.005,110,0.63,111,0.556,133,4.113,135,2.927,139,1.799,210,0.683,557,3.145,559,3.074,564,4.113,703,2.627,902,3.161,903,4.071,904,2.432,980,0.696,1108,4.61,1150,3.635,1182,7.898,1183,4.499,1184,5.058,1185,3.635,1186,5.058,1187,5.058,1188,5.058,1189,5.058,1190,5.058,1191,4.499]],["title/injectables/CustomHealthCheckService.html",[207,1.393,1192,3.198]],["body/injectables/CustomHealthCheckService.html",[3,0.107,4,0.125,5,0.116,8,0.28,24,0.311,25,0.007,32,0.344,69,0.589,81,0.329,83,0.387,85,0.125,87,0.005,88,0.005,99,1.693,100,2.409,110,0.718,111,0.634,113,1.304,114,2.147,122,1.304,138,2.09,139,1.09,144,1.852,170,1.651,207,2.188,208,2.564,210,0.778,213,6.479,225,1.852,228,4.395,1192,5.021,1193,5.279,1194,7.206,1195,5.823,1196,5.129,1197,8.535,1198,5.766,1199,5.766,1200,5.766,1201,5.287,1202,5.766,1203,4.395,1204,3.936,1205,4.708,1206,4.708]],["title/injectables/DatabaseConfiguration.html",[207,1.393,335,3.571]],["body/injectables/DatabaseConfiguration.html",[1,3.28,2,2.388,3,0.053,4,0.062,5,0.057,8,0.138,24,0.333,25,0.007,32,0.133,34,2.956,38,3.421,64,1.754,69,0.64,81,0.162,85,0.062,87,0.003,88,0.003,99,1.022,113,0.642,122,0.642,144,2.152,198,4.025,207,1.32,208,1.262,227,1.029,280,1.202,335,3.382,342,8.048,364,0.93,381,2.892,387,5.109,415,2.78,416,2.318,417,2.318,418,3.28,419,2.04,420,1.938,421,3.28,422,2.04,423,1.488,424,2.956,425,2.318,426,3.412,427,2.04,428,3.029,429,3.162,430,2.318,431,3.28,432,2.04,433,1.938,434,3.412,435,2.318,436,3.28,437,2.04,438,1.587,439,3.054,440,2.318,441,3.28,442,2.318,443,3.162,444,2.318,445,3.412,446,2.318,447,2.701,448,2.164,449,3.412,450,2.04,451,2.04,452,3.56,453,2.04,454,2.164,455,2.956,456,2.164,457,3.162,458,2.164,459,3.412,460,1.938,461,2.164,557,2.555,561,2.892,633,1.445,694,3.19,742,1.488,744,1.445,745,2.37,756,2.164,800,2.892,818,2.892,1207,2.525,1208,6.178,1209,2.839,1210,5.464,1211,4.438,1212,2.839,1213,1.938,1214,2.525,1215,2.525,1216,2.839,1217,5.495,1218,4.438,1219,6.178,1220,6.178,1221,5.495,1222,2.839,1223,2.839,1224,2.839,1225,6.178,1226,2.839,1227,2.839,1228,2.839,1229,6.178,1230,4.438,1231,4.438,1232,4.438,1233,2.839,1234,6.178,1235,2.839,1236,5.495,1237,2.839,1238,4.438,1239,2.839,1240,2.839,1241,2.839,1242,2.839,1243,2.839,1244,2.839,1245,2.839,1246,2.839,1247,2.839,1248,2.839,1249,2.839,1250,2.839,1251,2.839,1252,2.839,1253,2.839,1254,2.839,1255,2.839,1256,4.438,1257,2.839,1258,2.839,1259,2.839,1260,2.839,1261,2.839,1262,2.839,1263,2.839,1264,2.839,1265,2.839,1266,2.839,1267,2.839,1268,2.839,1269,2.525,1270,2.839]],["title/classes/DeleteMailCommand.html",[81,0.267,217,3.198]],["body/classes/DeleteMailCommand.html",[3,0.116,4,0.136,5,0.126,8,0.303,9,1.107,24,0.417,25,0.007,26,1.107,32,0.362,81,0.356,83,0.419,85,0.136,87,0.006,88,0.006,92,3.047,93,4.408,110,0.779,111,0.687,112,4.548,139,1.589,210,0.844,217,5.282,703,2.32,902,3.623,903,4.227,904,3.005,980,0.86,1271,7.478,1272,4.764,1273,5.559,1274,5.559]],["title/classes/DeleteMailCommandHandler.html",[81,0.267,179,3.571]],["body/classes/DeleteMailCommandHandler.html",[3,0.081,4,0.095,5,0.088,8,0.212,24,0.33,25,0.007,32,0.286,69,0.602,81,0.249,83,0.41,85,0.095,87,0.004,88,0.004,92,2.555,93,3.696,97,2.471,99,1.407,100,2.096,106,2.984,110,0.762,111,0.672,113,0.989,114,1.784,122,0.989,139,0.826,144,1.404,168,2.225,170,1.252,174,2.73,175,3.417,176,3.111,177,3.205,178,4.402,179,5.818,181,4.767,184,2.849,210,0.59,217,5.21,224,2.312,225,1.404,227,2.767,364,2.002,633,3.111,663,3.57,727,2.292,745,3.058,980,0.602,1021,1.809,1022,4.232,1027,2.939,1028,3.332,1029,5.21,1030,2.984,1031,4.659,1032,3.57,1036,3.67,1038,2.53,1039,2.625,1043,2.984,1275,6.27,1276,4.944,1277,3.57,1278,3.142,1279,3.332,1280,3.889,1281,5.438,1282,3.57,1283,3.941,1284,4.372,1285,3.889,1286,3.889,1287,4.372,1288,4.372,1289,4.372,1290,5.438,1291,5.438,1292,6.114,1293,6.114,1294,4.372,1295,4.372,1296,4.372,1297,4.372,1298,4.372,1299,3.889,1300,3.889,1301,2.73,1302,4.372]],["title/classes/DeleteMailEvent.html",[81,0.267,1278,3.368]],["body/classes/DeleteMailEvent.html",[3,0.096,4,0.112,5,0.104,8,0.251,9,0.98,24,0.441,25,0.007,26,1.297,32,0.382,55,2.483,69,0.357,81,0.294,83,0.347,85,0.112,87,0.005,88,0.005,92,3.086,93,4.68,97,2.769,98,5.593,106,4.675,110,0.644,111,0.568,112,3.705,139,1.734,149,2.484,181,3.226,210,0.924,217,5.811,249,3.606,703,2.532,980,0.711,1158,3.206,1277,4.218,1278,4.923,1303,7.572,1304,4.218,1305,8.183,1306,5.166,1307,5.166,1308,5.166,1309,4.595,1310,4.595]],["title/classes/DeleteMailEventHandler.html",[81,0.267,182,3.571]],["body/classes/DeleteMailEventHandler.html",[3,0.099,4,0.116,5,0.107,8,0.259,22,1.473,24,0.377,25,0.007,32,0.327,69,0.539,81,0.304,83,0.47,85,0.116,87,0.005,88,0.005,92,2.83,93,4.345,97,2.829,98,4.358,99,1.611,100,2.322,106,4.776,110,0.872,111,0.769,112,3.785,113,1.207,114,2.042,118,2.498,138,1.934,139,1.009,149,1.557,158,3.653,170,1.528,171,2.315,182,5.333,184,5.4,191,2.434,210,0.72,225,1.714,249,2.26,364,2.292,980,0.735,1021,2.208,1166,4.518,1167,4.05,1168,3.333,1169,3.643,1170,4.05,1171,3.836,1172,2.983,1173,3.088,1176,3.333,1278,5.956,1279,4.067,1311,6.945,1312,5.337,1313,5.337]],["title/classes/DeleteUserCommand.html",[81,0.267,1314,3.368]],["body/classes/DeleteUserCommand.html",[3,0.12,4,0.141,5,0.131,8,0.314,9,1.132,24,0.427,25,0.007,26,1.273,32,0.37,81,0.369,83,0.435,85,0.141,87,0.006,88,0.006,110,0.807,111,0.712,139,1.615,210,0.875,703,2.184,715,4.398,980,0.892,1086,4.939,1090,3.297,1314,5.688,1315,7.599,1316,4.047,1317,6.481,1318,6.481]],["title/classes/DeleteUserCommandHandler.html",[81,0.267,1319,3.571]],["body/classes/DeleteUserCommandHandler.html",[3,0.086,4,0.101,5,0.093,8,0.225,9,0.911,24,0.392,25,0.007,32,0.366,55,1.68,64,1.488,69,0.61,76,1.378,81,0.264,83,0.427,85,0.101,87,0.005,88,0.005,99,1.465,100,2.162,110,0.793,111,0.699,113,1.048,114,1.857,122,1.048,170,1.327,175,2.59,176,2.358,177,2.429,210,0.859,224,1.753,225,1.488,227,2.307,280,1.962,364,2.084,464,2.429,465,4.103,488,3.337,491,2.429,493,2.429,703,2.006,742,2.429,744,2.358,745,2.761,980,0.638,1021,1.917,1022,4.365,1027,3.06,1034,5.197,1036,3.821,1038,2.682,1039,2.782,1093,5.785,1094,3.784,1095,3.532,1096,2.507,1158,2.169,1165,2.782,1213,5.342,1276,5.253,1277,3.784,1279,3.532,1283,2.59,1301,3.974,1314,5.625,1319,5.541,1320,7.296,1321,6.365,1322,3.33,1323,4.634,1324,4.634,1325,4.634,1326,3.33]],["title/classes/DeleteUserEvent.html",[81,0.267,1322,3.368]],["body/classes/DeleteUserEvent.html",[3,0.101,4,0.118,5,0.11,8,0.265,9,1.016,22,2.307,24,0.451,25,0.007,26,1.356,32,0.391,55,2.574,81,0.311,83,0.366,85,0.118,87,0.005,88,0.005,106,4.846,110,0.68,111,0.6,139,1.752,149,2.529,210,0.958,249,3.67,703,2.559,715,4.132,980,0.751,1154,3.922,1156,4.159,1158,3.324,1161,4.159,1316,3.408,1322,5.103,1327,7.708,1328,4.456,1329,4.456]],["title/classes/DeleteUserEventHandler.html",[81,0.267,1330,3.571]],["body/classes/DeleteUserEventHandler.html",[3,0.099,4,0.115,5,0.107,8,0.257,15,1.465,22,1.465,24,0.376,25,0.007,32,0.326,69,0.593,81,0.303,83,0.468,85,0.115,87,0.005,88,0.005,97,2.146,99,1.605,100,2.315,110,0.869,111,0.766,113,1.2,114,2.035,118,2.484,122,1.2,138,1.924,139,1.003,149,1.549,158,3.647,168,2.7,170,1.52,171,2.302,191,2.42,210,0.716,225,1.704,249,2.248,364,2.283,980,0.73,1021,2.195,1029,3.623,1043,3.623,1165,4.965,1166,4.506,1167,4.035,1168,3.314,1170,4.035,1172,2.967,1173,3.071,1176,3.314,1177,3.458,1178,3.458,1179,3.623,1279,4.045,1322,5.944,1330,5.314,1331,6.926,1332,3.314,1333,3.815,1334,5.308,1335,5.308]],["title/entities/DiscountCodeEntity.html",[0,1.18,426,2.926]],["body/entities/DiscountCodeEntity.html",[0,1.365,2,1.429,3,0.069,4,0.08,5,0.074,6,3.245,8,0.179,9,0.918,13,2.376,14,2.655,15,1.771,21,2.428,24,0.504,25,0.007,26,0.776,27,2.523,28,5.137,32,0.404,43,3.505,51,2.295,69,0.443,70,3.332,71,2.718,72,2.784,74,1.529,75,2.718,76,1.099,79,4.244,81,0.309,82,1.643,83,0.528,85,0.08,87,0.004,88,0.004,426,3.384,427,6.3,455,4.255,526,3.287,827,4.912,833,2.522,857,4.131,858,3.699,879,3.413,882,1.685,887,1.643,1336,3.018,1337,5.708,1338,6.418,1339,5.708,1340,5.708,1341,5.241,1342,6.418,1343,3.696,1344,3.696,1345,4.821,1346,5.708,1347,3.696,1348,5.42,1349,3.696,1350,4.821,1351,4.821,1352,3.696,1353,3.696,1354,4.821,1355,3.696,1356,3.696,1357,3.696,1358,3.696,1359,5.42,1360,3.696,1361,5.708,1362,6.287,1363,2.656,1364,5.241,1365,3.696]],["title/classes/DuplicateEmailException.html",[81,0.267,1102,3.368]],["body/classes/DuplicateEmailException.html",[3,0.123,4,0.144,5,0.134,25,0.007,32,0.31,69,0.458,81,0.378,85,0.144,87,0.006,88,0.006,120,3.71,122,1.5,210,1.165,727,4.526,749,4.529,980,0.913,1099,4.488,1100,5.77,1102,5.77,1366,4.82,1367,5.902,1368,3.661,1369,6.636,1370,6.636,1371,5.058,1372,5.058]],["title/classes/DuplicateUsernameException.html",[81,0.267,1097,3.368]],["body/classes/DuplicateUsernameException.html",[3,0.123,4,0.144,5,0.134,25,0.007,32,0.31,69,0.458,81,0.378,85,0.144,87,0.006,88,0.006,120,3.71,122,1.5,210,1.165,727,4.526,749,4.529,980,0.913,1097,5.77,1099,4.488,1100,5.77,1366,4.82,1368,3.661,1371,5.058,1372,5.058,1373,5.902,1374,6.636,1375,6.636]],["title/modules/EntitiesToMoveModule.html",[149,1.367,324,3.368]],["body/modules/EntitiesToMoveModule.html",[0,1.145,1,3.772,3,0.084,4,0.099,5,0.092,6,1.683,11,2.962,25,0.007,34,3.398,69,0.666,77,3.103,81,0.259,85,0.099,87,0.004,88,0.004,91,2.128,122,1.028,149,1.833,151,2.46,164,2.73,165,2.73,279,3.103,280,1.926,324,4.515,343,4.044,363,6.34,415,3.196,418,3.772,420,3.103,421,3.772,423,3.294,424,3.398,426,3.923,428,4.288,429,3.635,431,3.772,433,3.103,434,3.923,436,3.772,438,3.512,439,3.512,441,3.772,443,3.635,445,3.923,447,3.106,449,3.923,451,3.268,452,4.093,454,3.465,455,3.398,457,3.635,459,3.923,462,4.044,528,2.73,861,2.839,862,3.713,872,3.465,875,3.268,876,3.713,878,3.713,943,4.044,977,3.465,978,3.713,979,3.713,1363,3.268,1376,4.547,1377,4.044,1378,4.044,1379,4.044,1380,4.547,1381,4.547,1382,4.044]],["title/classes/ErrorCustomEvent.html",[81,0.267,1283,2.619]],["body/classes/ErrorCustomEvent.html",[3,0.106,4,0.123,5,0.114,8,0.276,9,1.043,24,0.458,25,0.007,26,1.285,32,0.397,81,0.324,83,0.381,85,0.123,87,0.005,88,0.005,110,0.708,111,0.624,139,1.766,176,4.465,178,5.024,210,0.767,703,2.578,745,3.49,902,3.411,903,4.108,904,2.732,980,0.782,1283,4.074,1291,7.156,1383,7.167,1384,5.053,1385,5.682,1386,5.682,1387,5.682,1388,5.682]],["title/classes/ErrorCustomEventHandler.html",[81,0.267,174,2.926]],["body/classes/ErrorCustomEventHandler.html",[3,0.075,4,0.087,5,0.081,8,0.194,9,0.823,24,0.436,25,0.007,26,1.051,32,0.378,38,1.698,53,3.925,55,1.453,69,0.559,81,0.229,83,0.451,85,0.087,87,0.004,88,0.004,99,1.324,110,0.716,111,0.632,113,0.907,138,1.453,139,1.718,158,3.038,170,1.148,171,1.74,174,3.591,176,4.24,177,4.47,191,1.829,210,0.541,224,3.407,227,1.453,239,4.198,246,2.882,250,1.74,332,3.591,346,5.278,364,1.883,745,1.74,980,0.552,996,4.589,1008,2.504,1019,3.747,1021,1.659,1023,5.98,1024,5.98,1025,5.98,1026,4.832,1030,3.925,1032,3.274,1034,3.274,1046,2.882,1049,5.114,1050,3.566,1051,5.114,1052,3.566,1053,3.274,1054,3.566,1055,4.695,1059,2.613,1095,3.056,1158,1.877,1166,3.89,1167,3.328,1170,3.328,1172,2.241,1173,2.32,1283,4.105,1333,2.882,1383,6.805,1389,3.056,1390,4.383,1391,2.882,1392,3.274,1393,4.01,1394,4.01,1395,4.01,1396,4.01,1397,3.274,1398,3.566,1399,3.566,1400,3.056,1401,4.01,1402,3.056,1403,4.01,1404,3.274,1405,4.01,1406,3.056]],["title/classes/ErrorExceptionFilter.html",[81,0.267,1407,3.826]],["body/classes/ErrorExceptionFilter.html",[3,0.104,4,0.122,5,0.113,8,0.272,24,0.302,25,0.007,32,0.262,46,4.024,69,0.498,81,0.319,83,0.376,85,0.122,87,0.005,88,0.005,99,1.662,110,0.698,111,0.615,113,1.266,120,4.467,122,1.266,227,2.03,250,3.662,315,4.508,332,4.508,364,2.364,579,3.905,609,3.362,726,4.268,727,3.785,744,4.295,756,4.268,980,0.771,1135,4.98,1221,7.107,1407,5.895,1408,6.421,1409,4.98,1410,7.991,1411,7.22,1412,8.442,1413,5.6,1414,7.22,1415,5.6,1416,5.6,1417,5.6,1418,5.6,1419,5.6,1420,5.6,1421,5.6,1422,5.6,1423,5.6,1424,5.6]],["title/injectables/ErrorLoggingMiddleware.html",[207,1.393,352,3.571]],["body/injectables/ErrorLoggingMiddleware.html",[3,0.075,4,0.087,5,0.081,8,0.195,9,0.824,24,0.396,25,0.007,32,0.314,69,0.576,81,0.229,83,0.386,85,0.087,87,0.004,88,0.004,99,1.326,100,2.001,110,0.717,111,0.633,113,0.909,122,0.909,138,1.456,139,1.389,144,1.29,149,1.172,158,3.041,171,1.743,191,1.832,207,1.712,208,1.787,210,0.542,224,2.546,225,1.29,227,1.456,239,4.203,246,2.888,250,3.189,296,3.529,315,4.59,346,5.283,352,4.389,364,1.316,365,2.618,366,2.742,367,5.311,368,2.742,369,2.742,370,4.702,371,3.281,372,3.281,373,2.888,579,3.976,603,2.888,604,5.13,609,2.412,633,2.044,742,2.107,744,2.044,745,2.498,987,4.139,1008,2.509,1019,2.618,1026,4.837,1035,5.283,1042,3.062,1046,4.139,1059,2.618,1138,3.574,1389,3.062,1390,4.389,1391,2.888,1397,3.281,1398,3.574,1400,3.062,1402,3.062,1404,3.281,1406,3.062,1425,6.538,1426,3.062,1427,4.389,1428,5.759,1429,4.702,1430,7.351,1431,4.018,1432,4.702,1433,4.389,1434,3.062,1435,3.281,1436,3.281,1437,3.281,1438,3.281,1439,3.281,1440,4.702,1441,3.281,1442,3.281,1443,3.281,1444,3.281,1445,3.281,1446,3.281,1447,3.574,1448,3.574,1449,3.574,1450,3.574,1451,3.574,1452,3.574,1453,3.574,1454,3.281,1455,3.281,1456,3.281,1457,3.281,1458,3.281]],["title/classes/GetAllMailQuery.html",[81,0.267,219,3.368]],["body/classes/GetAllMailQuery.html",[3,0.135,4,0.158,5,0.146,25,0.006,81,0.414,85,0.158,87,0.006,88,0.006,92,2.631,93,3.805,219,6.086,980,0.999,1459,6.456,1460,6.456]],["title/classes/GetAllMailQueryHandler.html",[81,0.267,185,3.571]],["body/classes/GetAllMailQueryHandler.html",[3,0.092,4,0.108,5,0.1,8,0.24,24,0.359,25,0.007,32,0.311,69,0.597,81,0.282,83,0.447,85,0.108,87,0.005,88,0.005,92,2.727,93,4.218,99,1.533,100,2.237,110,0.83,111,0.732,113,1.12,114,1.944,122,1.12,144,1.591,168,2.521,170,1.419,185,5.076,187,6.133,210,0.669,219,5.783,221,4.787,222,4.406,223,4.406,224,1.874,225,1.591,227,1.796,364,2.181,365,3.228,366,3.381,367,3.381,368,3.381,369,3.381,633,2.521,663,4.045,727,2.597,980,0.682,1021,2.049,1027,3.203,1028,3.776,1029,5.492,1031,5.076,1033,4.045,1043,3.381,1171,3.561,1280,5.924,1281,5.924,1282,4.045,1285,4.406,1286,4.406,1299,4.406,1300,4.406,1461,6.693,1462,4.903,1463,4.546,1464,3.228,1465,3.228,1466,3.381,1467,4.954,1468,4.406,1469,4.406,1470,4.406,1471,4.954,1472,4.954,1473,4.954]],["title/classes/GetUserByEmailQuery.html",[81,0.267,1474,3.571]],["body/classes/GetUserByEmailQuery.html",[3,0.119,4,0.139,5,0.129,8,0.311,9,1.125,22,2.347,24,0.424,25,0.007,26,1.269,32,0.367,81,0.366,83,0.43,85,0.139,87,0.006,88,0.006,110,0.799,111,0.705,139,1.608,210,0.866,559,3.584,703,2.17,980,0.883,1090,3.265,1474,5.995,1475,5.805,1476,5.707,1477,6.416,1478,6.416,1479,6.416]],["title/classes/GetUserByEmailQueryHandler.html",[81,0.267,1480,3.571]],["body/classes/GetUserByEmailQueryHandler.html",[3,0.095,4,0.111,5,0.103,8,0.248,13,1.892,15,1.41,21,1.933,22,2.248,24,0.367,25,0.007,32,0.318,64,1.641,69,0.586,76,1.52,81,0.291,83,0.456,85,0.111,87,0.005,88,0.005,99,1.566,100,2.273,110,0.847,111,0.747,113,1.156,114,1.985,144,1.641,170,1.464,210,0.918,224,1.933,225,1.641,280,2.165,364,2.227,464,2.68,465,4.272,488,3.566,491,2.68,493,2.68,559,2.749,561,2.392,564,2.765,633,2.601,742,2.68,744,2.601,745,2.95,980,0.703,1021,2.114,1027,3.27,1030,3.489,1096,2.765,1332,3.192,1462,4.98,1463,4.642,1464,3.33,1465,3.33,1466,3.489,1474,6.21,1480,5.183,1481,5.217,1482,6.653,1483,5.111,1484,3.673,1485,5.111,1486,3.673,1487,4.174,1488,3.673]],["title/classes/GetUserByUsernameQuery.html",[81,0.267,1489,3.571]],["body/classes/GetUserByUsernameQuery.html",[3,0.119,4,0.139,5,0.129,8,0.311,9,1.125,22,2.347,24,0.424,25,0.007,26,1.269,32,0.367,81,0.366,83,0.43,85,0.139,87,0.006,88,0.006,110,0.799,111,0.705,139,1.608,210,0.866,557,3.668,703,2.17,980,0.883,1090,3.265,1475,5.805,1489,5.995,1490,5.707,1491,4.89,1492,6.416,1493,6.416]],["title/classes/GetUserByUsernameQueryHandler.html",[81,0.267,1494,3.571]],["body/classes/GetUserByUsernameQueryHandler.html",[3,0.095,4,0.111,5,0.103,8,0.248,13,1.892,15,1.41,21,1.933,22,2.248,24,0.367,25,0.007,32,0.318,64,1.641,69,0.586,76,1.52,81,0.291,83,0.456,85,0.111,87,0.005,88,0.005,99,1.566,100,2.273,110,0.847,111,0.747,113,1.156,114,1.985,144,1.641,170,1.464,210,0.918,224,1.933,225,1.641,280,2.165,364,2.227,464,2.68,465,4.272,488,3.566,491,2.68,493,2.68,557,2.813,561,2.392,564,2.765,633,2.601,742,2.68,744,2.601,745,2.95,980,0.703,1021,2.114,1027,3.27,1030,3.489,1096,2.765,1332,3.192,1462,4.98,1463,4.642,1464,3.33,1465,3.33,1466,3.489,1481,5.217,1484,3.673,1486,3.673,1487,4.174,1488,3.673,1489,6.21,1494,5.183,1495,6.653,1496,5.111,1497,4.546]],["title/classes/GetUserHandler.html",[81,0.267,1498,3.571]],["body/classes/GetUserHandler.html",[3,0.092,4,0.108,5,0.1,8,0.24,15,1.367,22,1.367,24,0.359,25,0.007,32,0.311,64,1.591,69,0.61,76,1.473,81,0.282,83,0.447,85,0.108,87,0.005,88,0.005,99,1.533,100,2.237,110,0.83,111,0.732,113,1.12,114,1.944,144,2.139,170,1.419,210,0.899,224,1.874,225,2.139,227,1.796,250,2.149,280,2.098,364,2.181,464,2.597,465,4.218,488,3.492,491,2.597,493,2.597,733,5.492,735,4.045,980,0.682,1027,3.203,1096,2.68,1462,4.903,1463,4.546,1464,3.228,1465,3.228,1466,3.381,1481,5.136,1484,3.561,1498,5.076,1499,4.406,1500,4.954,1501,4.954,1502,4.159,1503,3.776,1504,6.133,1505,4.954,1506,4.954,1507,4.954,1508,5.924,1509,4.954,1510,4.954,1511,4.954,1512,4.954]],["title/classes/GetUserIfRefreshTokenMatchesHandler.html",[81,0.267,1513,3.571]],["body/classes/GetUserIfRefreshTokenMatchesHandler.html",[3,0.086,4,0.101,5,0.093,8,0.225,15,1.756,22,2.396,24,0.343,25,0.007,32,0.297,64,1.488,69,0.599,76,1.378,81,0.264,83,0.427,85,0.101,87,0.005,88,0.005,99,1.465,100,2.162,110,0.793,111,0.699,113,1.048,114,1.857,144,1.488,170,1.327,175,2.59,176,2.358,177,2.429,210,0.859,224,2.407,225,2.044,250,2.761,280,1.962,364,2.084,464,2.429,465,4.103,488,3.337,491,2.429,492,4.344,493,2.429,557,1.917,559,1.873,571,3.569,596,3.982,742,2.429,744,2.358,745,2.761,980,0.638,1027,3.06,1096,2.507,1276,5.024,1283,2.59,1301,2.894,1326,3.33,1462,4.737,1463,4.344,1464,3.019,1465,3.019,1466,3.163,1481,4.962,1486,3.33,1508,4.122,1513,5.541,1514,4.122,1515,4.634,1516,5.625,1517,4.634,1518,4.122,1519,4.634,1520,4.122,1521,3.532,1522,6.365,1523,4.634,1524,4.634]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[81,0.267,1516,3.368]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[3,0.109,4,0.127,5,0.118,8,0.284,9,1.063,22,2.368,24,0.44,25,0.007,26,1.331,32,0.381,81,0.334,83,0.393,85,0.127,87,0.005,88,0.005,110,0.729,111,0.643,139,1.71,210,0.79,571,3.914,596,4.366,703,2.444,715,4.378,980,0.806,1090,2.978,1475,5.857,1516,5.338,1525,5.206,1526,6.168,1527,5.206,1528,5.854,1529,7.428]],["title/classes/GetUserLoginHandler.html",[81,0.267,688,3.368]],["body/classes/GetUserLoginHandler.html",[3,0.07,4,0.082,5,0.076,8,0.183,13,2.041,14,2.28,15,1.521,21,2.085,22,2.097,24,0.351,25,0.007,26,1.135,32,0.304,64,1.215,69,0.591,76,1.125,81,0.216,83,0.436,85,0.082,87,0.004,88,0.004,99,1.269,100,2.358,110,0.81,111,0.715,113,1.246,114,2.086,120,2.114,122,0.855,144,2.089,170,1.083,210,0.744,224,2.874,225,2.44,227,1.998,250,2.391,280,1.602,364,1.805,464,1.983,465,3.747,488,2.89,491,1.983,492,3.763,493,1.983,557,2.691,559,2.629,561,2.58,564,2.982,633,3.637,681,4.501,682,3.089,688,3.962,723,3.089,727,1.983,736,5.137,737,3.364,742,1.983,744,1.925,745,2.822,746,4.903,747,4.903,748,4.501,749,3.763,980,0.521,1027,2.651,1096,2.046,1165,2.271,1276,4.738,1301,3.442,1462,4.238,1463,3.763,1464,2.464,1465,2.464,1466,2.582,1481,4.878,1486,3.962,1487,4.501,1488,3.962,1497,4.903,1520,4.903,1530,3.364,1531,5.513,1532,3.783,1533,3.783,1534,5.513,1535,7.148,1536,3.783,1537,2.718,1538,3.364,1539,3.783,1540,7.932,1541,5.513,1542,5.513,1543,5.513,1544,3.783]],["title/classes/GetUserLoginQuery.html",[81,0.267,736,3.368]],["body/classes/GetUserLoginQuery.html",[3,0.111,4,0.13,5,0.121,8,0.291,9,1.079,22,2.389,24,0.445,25,0.007,26,1.338,32,0.386,81,0.342,83,0.402,85,0.13,87,0.005,88,0.005,110,0.747,111,0.659,139,1.721,210,0.81,557,3.582,703,2.462,723,7.286,736,5.421,980,0.826,1090,3.052,1475,5.91,1491,4.572,1545,5.335,1546,5.999,1547,7.544]],["title/classes/GetUserQuery.html",[81,0.267,733,3.198]],["body/classes/GetUserQuery.html",[3,0.119,4,0.139,5,0.129,8,0.311,9,1.125,24,0.424,25,0.007,26,1.269,32,0.367,81,0.366,83,0.43,85,0.139,87,0.006,88,0.006,110,0.799,111,0.935,139,1.608,210,0.866,703,2.17,715,4.383,733,5.368,980,0.883,1090,3.265,1185,4.611,1316,4.007,1475,5.805,1548,5.707,1549,6.416,1550,6.416]],["title/entities/GroupEntity.html",[0,1.18,429,2.711]],["body/entities/GroupEntity.html",[0,1.335,2,1.386,3,0.067,4,0.078,5,0.072,6,3.179,8,0.174,9,0.902,13,2.335,14,2.609,15,1.74,21,2.385,24,0.455,25,0.007,26,0.997,27,2.463,30,2.075,32,0.394,37,4.221,38,3.771,39,4.032,40,4.621,43,3.076,51,2.245,69,0.513,70,2.245,71,2.671,72,2.736,74,1.483,75,2.671,76,1.066,81,0.302,82,1.595,83,0.467,85,0.078,87,0.004,88,0.004,424,3.769,429,3.068,431,4.183,433,2.448,438,2.005,439,4.501,524,3.454,528,3.183,536,4.755,797,3.183,800,4.539,801,3.618,813,4.715,818,4.539,821,3.454,859,3.786,860,3.938,875,2.577,879,3.022,887,1.595,909,5.15,952,3.19,958,5.31,1120,3.618,1151,4.04,1551,3.19,1552,6.307,1553,6.307,1554,6.307,1555,5.301,1556,5.301,1557,3.586,1558,5.301,1559,3.586,1560,3.586,1561,3.586,1562,3.586,1563,5.301,1564,3.586,1565,3.586,1566,3.586,1567,5.301,1568,3.586,1569,3.586,1570,3.586]],["title/entities/GroupMembershipEntity.html",[0,1.18,431,2.813]],["body/entities/GroupMembershipEntity.html",[0,1.493,2,1.617,3,0.078,4,0.091,5,0.084,6,3.191,8,0.203,9,0.985,13,2.548,14,2.847,15,1.899,21,2.603,24,0.455,25,0.007,26,0.848,27,2.462,32,0.394,35,3.206,38,2.51,39,4.332,40,4.185,43,3.243,51,2.51,55,2.148,69,0.517,70,1.772,71,2.915,72,2.986,73,3.608,74,1.73,75,2.915,76,1.244,81,0.238,83,0.281,85,0.091,87,0.004,88,0.004,296,2.193,415,4.175,423,2.193,429,4.749,431,3.558,432,6.196,517,4.946,528,4.494,530,3.721,807,4.517,808,4.517,879,3.56,882,1.908,887,1.86,899,3.721,977,3.188,1571,3.721,1572,6.883,1573,5.927,1574,4.183,1575,4.183,1576,4.183,1577,5.927,1578,4.183,1579,4.183,1580,5.245,1581,4.183,1582,4.183,1583,4.183,1584,4.183]],["title/controllers/HealthCheckController.html",[89,2.316,1585,3.571]],["body/controllers/HealthCheckController.html",[3,0.094,4,0.11,5,0.102,8,0.246,25,0.007,27,1.48,32,0.237,69,0.584,81,0.289,85,0.11,87,0.005,88,0.005,89,2.507,91,2.374,96,3.645,97,3.421,99,1.557,113,1.147,114,1.974,119,3.645,122,1.147,127,3.461,128,2.659,138,1.838,144,1.628,266,3.865,291,6.017,292,3.782,295,5.156,296,2.659,302,6.017,305,3.865,306,4.51,308,3.865,309,4.141,310,4.51,312,4.51,316,3.044,317,4.141,340,5.156,1192,5.196,1193,4.408,1195,6.488,1204,3.461,1205,4.141,1206,4.141,1585,5.156,1586,4.51,1587,9.376,1588,5.071,1589,8.123,1590,5.071,1591,8.123,1592,3.645,1593,4.51,1594,4.51,1595,5.071,1596,5.071,1597,5.071]],["title/modules/HealthCheckModule.html",[149,1.367,325,3.368]],["body/modules/HealthCheckModule.html",[3,0.105,4,0.123,5,0.114,25,0.007,55,2.053,69,0.62,81,0.323,85,0.123,87,0.005,88,0.005,91,3.405,122,1.281,149,2.123,151,3.064,152,3.935,160,4.367,161,3.401,162,3.401,164,4.367,165,3.401,169,4.739,170,1.622,178,4.542,325,6.449,340,4.317,363,6.923,1192,6.125,1193,3.691,1195,5.228,1203,4.317,1382,5.038,1585,6.124,1592,4.071,1593,5.038,1594,5.038,1598,5.038,1599,5.038,1600,5.665,1601,7.274,1602,5.665,1603,5.544,1604,5.665]],["title/classes/HealthCheckQuery.html",[81,0.267,1201,3.368]],["body/classes/HealthCheckQuery.html",[3,0.135,4,0.158,5,0.147,25,0.006,81,0.415,85,0.158,87,0.006,88,0.006,980,1.003,1193,4.747,1201,6.099,1605,6.48,1606,6.48]],["title/classes/HealthCheckQueryHandler.html",[81,0.267,1603,3.571]],["body/classes/HealthCheckQueryHandler.html",[3,0.083,4,0.097,5,0.09,8,0.216,24,0.241,25,0.007,32,0.29,69,0.532,81,0.254,83,0.299,85,0.097,87,0.004,88,0.004,99,1.428,100,2.119,110,0.556,111,0.49,113,1.009,114,2.445,144,1.433,170,1.278,210,0.837,224,3.061,225,1.433,227,1.618,364,2.031,694,4.457,756,3.401,980,0.614,1021,1.846,1027,3.703,1033,3.644,1193,4.644,1195,3.208,1201,3.208,1203,5.87,1204,4.233,1205,3.644,1206,3.644,1276,4.973,1427,3.401,1462,4.644,1465,2.908,1592,3.208,1603,4.727,1607,6.339,1608,4.463,1609,8.378,1610,8.593,1611,8.593,1612,8.593,1613,4.463,1614,4.463,1615,4.463,1616,4.463,1617,4.463,1618,4.463,1619,6.202,1620,6.202,1621,6.202,1622,4.463,1623,4.463,1624,4.463,1625,7.702,1626,6.202,1627,4.463,1628,4.463,1629,4.463,1630,3.969,1631,4.463,1632,4.463,1633,4.463,1634,3.969,1635,3.969,1636,4.463,1637,4.463,1638,4.463,1639,4.463]],["title/classes/HealthCheckResponse.html",[81,0.267,1204,3.198]],["body/classes/HealthCheckResponse.html",[3,0.117,4,0.137,5,0.127,8,0.306,9,1.114,24,0.42,25,0.007,32,0.364,69,0.436,81,0.36,83,0.423,85,0.137,87,0.006,88,0.006,110,0.786,111,0.694,139,1.596,210,0.852,703,2.149,980,0.869,1090,3.211,1193,5.502,1204,5.314,1592,4.536,1640,7.51,1641,5.614,1642,8.817,1643,6.312,1644,9.056,1645,6.312,1646,6.312]],["title/classes/InvalidParameterEntityException.html",[81,0.267,1104,3.368]],["body/classes/InvalidParameterEntityException.html",[3,0.106,4,0.124,5,0.115,24,0.394,25,0.007,32,0.266,69,0.504,81,0.416,82,2.534,83,0.382,85,0.124,87,0.005,88,0.005,110,0.91,111,0.626,120,3.185,122,1.288,144,2.345,210,0.769,250,2.472,316,3.421,538,3.558,727,4.224,749,4.983,980,0.784,1099,4.081,1104,5.248,1105,4.983,1106,4.983,1366,4.383,1368,3.33,1647,4.653,1648,7.302,1649,8.785,1650,5.698,1651,5.698,1652,6.494,1653,5.068,1654,3.713,1655,4.343,1656,5.698,1657,5.698,1658,5.698,1659,5.698,1660,5.698]],["title/classes/InvalidPasswordException.html",[81,0.267,1661,3.571]],["body/classes/InvalidPasswordException.html",[3,0.118,4,0.138,5,0.128,25,0.007,32,0.297,69,0.439,81,0.362,85,0.138,87,0.006,88,0.006,120,3.551,122,1.436,210,1.143,561,3.659,727,4.44,749,4.336,827,3.967,980,0.874,1099,4.37,1105,5.336,1366,4.693,1368,3.565,1654,4.139,1655,4.842,1661,5.958,1662,5.651,1663,6.353,1664,6.353,1665,6.353,1666,6.353,1667,8.469,1668,6.353,1669,7.818,1670,6.353]],["title/entities/InvoicesEntity.html",[0,1.18,434,2.926]],["body/entities/InvoicesEntity.html",[0,0.618,2,0.949,3,0.046,4,0.053,5,0.049,6,3.251,8,0.119,9,0.71,13,1.838,14,2.053,15,1.37,21,1.877,24,0.514,25,0.007,26,1.256,27,2.544,28,5.664,29,6.593,30,5.006,31,6.15,32,0.407,35,1.327,37,2.072,38,1.039,43,2.636,51,1.674,55,0.889,69,0.343,70,3.597,71,2.102,72,2.153,73,2.072,74,1.015,75,2.102,76,0.73,79,4.982,80,5.893,81,0.225,82,1.091,83,0.557,85,0.053,86,5.74,87,0.003,88,0.003,111,0.434,292,3.488,316,1.473,434,2.468,455,3.608,550,3.568,770,4.415,827,4.828,846,2.698,879,2.893,882,1.119,887,1.091,1337,4.415,1345,3.516,1346,2.183,1362,5.932,1363,1.764,1364,2.004,1671,2.183,1672,6.241,1673,4.964,1674,4.964,1675,4.964,1676,4.964,1677,4.964,1678,6.241,1679,4.964,1680,4.964,1681,4.964,1682,4.964,1683,2.454,1684,3.953,1685,2.454,1686,3.953,1687,2.454,1688,3.953,1689,2.454,1690,3.953,1691,2.454,1692,3.953,1693,2.454,1694,3.953,1695,2.454,1696,2.454,1697,2.454,1698,2.454,1699,2.454,1700,6.241,1701,2.454,1702,2.454,1703,2.454,1704,3.953,1705,2.454,1706,2.454,1707,2.454,1708,3.953,1709,4.964,1710,2.454,1711,3.953,1712,2.454,1713,3.953,1714,2.454,1715,2.454,1716,3.953,1717,2.454,1718,3.516,1719,2.454,1720,2.454,1721,2.454,1722,2.454,1723,2.454,1724,2.454,1725,2.454,1726,2.454]],["title/classes/IsTestEnvironmentPipe.html",[81,0.267,397,3.571]],["body/classes/IsTestEnvironmentPipe.html",[3,0.109,4,0.127,5,0.118,8,0.284,24,0.316,25,0.007,32,0.273,69,0.404,81,0.334,83,0.393,85,0.127,87,0.005,88,0.005,99,1.71,110,0.729,111,0.643,113,1.323,120,3.272,122,1.323,144,1.88,227,2.122,364,2.432,365,3.814,366,3.995,367,3.995,368,3.995,369,3.995,381,5.316,397,5.661,398,6.065,633,2.978,727,3.069,980,0.806,1158,3.477,1217,5.206,1468,5.206,1469,5.206,1470,5.206,1727,5.206,1728,8.159,1729,7.428,1730,7.428,1731,8.857,1732,7.257,1733,8.582,1734,5.854,1735,5.854,1736,5.854]],["title/entities/JoinedConversation.html",[0,1.18,436,2.813]],["body/entities/JoinedConversation.html",[0,1.554,2,1.713,3,0.082,4,0.096,5,0.089,6,3.238,8,0.215,9,1.016,13,2.629,14,2.937,15,1.96,21,2.686,24,0.462,25,0.007,26,1.099,27,2.503,32,0.401,35,3.339,43,3.304,51,2.614,69,0.49,70,3.007,71,3.007,72,3.081,73,3.723,74,1.833,75,3.007,76,1.318,81,0.253,83,0.297,85,0.096,87,0.004,88,0.004,424,4.154,436,3.705,437,6.287,438,2.478,447,4.133,524,5.26,534,3.942,544,4.627,861,2.768,879,3.627,882,2.021,887,1.971,958,5.412,1737,3.942,1738,7.101,1739,4.432,1740,4.432,1741,4.432,1742,4.432,1743,4.432,1744,4.432,1745,4.432,1746,4.432,1747,4.432,1748,4.432,1749,4.432]],["title/injectables/JwtAuthenticationGuard.html",[207,1.393,1750,3.826]],["body/injectables/JwtAuthenticationGuard.html",[3,0.129,4,0.151,5,0.14,25,0.007,55,2.518,69,0.57,81,0.396,85,0.151,87,0.006,88,0.006,122,1.57,207,2.453,208,3.088,675,4.337,1368,3.168,1750,6.738,1751,5.672,1752,6.178,1753,5.672,1754,6.178]],["title/injectables/JwtRefreshGuard.html",[207,1.393,610,3.368]],["body/injectables/JwtRefreshGuard.html",[3,0.128,4,0.149,5,0.138,25,0.007,55,2.491,69,0.566,81,0.392,85,0.149,87,0.006,88,0.006,122,1.554,207,2.438,208,3.056,571,3.739,596,3.496,610,5.892,675,4.291,1368,3.134,1751,5.611,1753,5.611,1754,6.112,1755,6.112]],["title/injectables/JwtRefreshTokenStrategy.html",[207,1.393,669,3.368]],["body/injectables/JwtRefreshTokenStrategy.html",[3,0.089,4,0.104,5,0.097,8,0.233,24,0.351,25,0.007,26,0.686,32,0.304,38,2.031,69,0.615,81,0.273,83,0.437,85,0.104,87,0.005,88,0.005,99,1.5,100,2.2,110,0.812,111,0.716,113,1.084,114,1.901,122,1.084,138,1.738,139,0.906,144,2.092,159,4.632,193,3.446,207,1.937,208,2.132,210,0.647,225,1.54,250,2.08,571,3.621,576,3.272,579,4.738,595,4.068,596,2.439,607,4.264,608,3.915,609,2.878,669,4.682,675,2.994,681,5.32,682,3.915,728,5.419,729,3.915,730,3.915,750,6.042,759,4.264,766,3.915,1368,2.187,1526,3.446,1654,3.124,1756,6.582,1757,4.264,1758,4.795,1759,4.795,1760,6.515,1761,4.795,1762,3.915,1763,4.264,1764,3.915,1765,3.654,1766,4.965,1767,3.915,1768,4.264,1769,4.264,1770,5.795,1771,5.32,1772,4.264,1773,4.795,1774,4.795]],["title/injectables/JwtStrategy.html",[207,1.393,670,3.368]],["body/injectables/JwtStrategy.html",[3,0.093,4,0.109,5,0.101,8,0.244,15,1.388,24,0.363,25,0.007,26,0.72,32,0.314,64,1.616,69,0.622,76,1.496,78,2.638,81,0.287,83,0.452,85,0.109,87,0.005,88,0.005,99,1.549,100,2.255,110,0.838,111,0.74,113,1.138,114,1.964,122,1.138,139,0.951,144,2.161,207,2.001,208,2.237,210,0.908,224,1.903,225,1.616,280,2.131,464,2.638,465,4.245,488,3.528,491,2.638,493,2.638,579,4.102,595,4.203,609,3.021,670,4.837,675,3.142,697,4.475,728,5.526,729,4.109,730,4.109,750,4.109,766,4.109,1368,2.295,1484,3.616,1654,3.278,1762,4.109,1763,4.475,1764,4.109,1765,3.835,1766,3.835,1767,4.109,1768,4.475,1769,4.475,1770,4.475,1771,4.109,1772,4.475,1775,4.475,1776,5.032,1777,6.73,1778,5.032]],["title/injectables/LocalAuthenticationGuard.html",[207,1.393,605,3.571]],["body/injectables/LocalAuthenticationGuard.html",[3,0.13,4,0.152,5,0.141,25,0.007,69,0.572,81,0.399,85,0.152,87,0.006,88,0.006,122,1.582,207,2.464,208,3.111,605,6.315,675,4.369,1368,3.191,1753,5.713,1779,6.223,1780,6.996]],["title/injectables/LocalStrategy.html",[207,1.393,671,3.368]],["body/injectables/LocalStrategy.html",[3,0.102,4,0.119,5,0.11,8,0.265,24,0.383,25,0.007,26,1.272,32,0.332,64,1.757,69,0.599,78,2.869,81,0.312,83,0.477,85,0.119,87,0.005,88,0.005,99,1.637,100,2.35,110,0.886,111,0.782,113,1.237,114,2.076,122,1.237,138,1.984,144,1.757,207,2.115,208,2.433,210,0.739,561,3.917,595,4.442,601,5.452,602,4.469,671,5.113,675,3.417,708,5.113,1368,2.496,1654,3.566,1762,4.469,1764,4.469,1765,4.171,1767,4.469,1781,7.03,1782,4.868,1783,5.473,1784,5.473,1785,7.114,1786,7.114,1787,5.473,1788,4.868,1789,5.473,1790,5.473]],["title/classes/LoggingTypeEnum.html",[81,0.267,1008,2.926]],["body/classes/LoggingTypeEnum.html",[3,0.107,4,0.125,5,0.116,8,0.28,9,1.053,24,0.437,25,0.007,26,1.159,32,0.379,55,2.937,81,0.329,85,0.125,87,0.005,88,0.005,92,3.093,139,1.77,315,5.505,579,4.769,745,3.825,980,0.794,1008,4.594,1158,3.792,1391,6.134,1791,4.708,1792,8.331,1793,5.766,1794,5.766,1795,5.766]],["title/classes/LoginOfUserEvent.html",[81,0.267,1537,3.368]],["body/classes/LoginOfUserEvent.html",[3,0.101,4,0.118,5,0.11,8,0.265,9,1.016,22,2.307,24,0.451,25,0.007,26,1.356,32,0.391,55,2.574,81,0.311,83,0.366,85,0.118,87,0.005,88,0.005,110,0.68,111,0.6,139,1.752,149,2.529,210,0.958,249,3.67,557,3.458,703,2.559,708,5.103,980,0.751,1154,3.922,1156,4.159,1158,3.324,1161,4.159,1328,4.456,1329,4.456,1491,4.159,1537,5.103,1796,7.708]],["title/classes/LoginOfUserEventHandler.html",[81,0.267,1797,3.571]],["body/classes/LoginOfUserEventHandler.html",[3,0.099,4,0.115,5,0.107,8,0.257,22,1.465,24,0.376,25,0.007,32,0.326,69,0.593,81,0.303,83,0.468,85,0.115,87,0.005,88,0.005,97,2.146,99,1.605,100,2.315,110,0.869,111,0.766,113,1.2,114,2.035,118,2.484,122,1.2,138,1.924,139,1.003,149,1.549,158,3.647,168,2.7,170,1.52,171,2.302,191,2.42,210,0.716,225,1.704,249,2.248,364,2.283,557,2.195,980,0.73,1021,2.195,1029,3.623,1043,3.623,1165,4.965,1166,4.506,1167,4.035,1168,3.314,1170,4.035,1172,2.967,1173,3.071,1176,3.314,1177,3.458,1178,3.458,1332,3.314,1333,3.815,1537,5.944,1538,4.721,1797,5.314,1798,6.926,1799,5.308,1800,5.308,1801,5.308]],["title/classes/MailDto.html",[81,0.267,258,3.368]],["body/classes/MailDto.html",[3,0.103,4,0.121,5,0.112,8,0.27,9,1.029,24,0.454,25,0.007,26,1.278,27,2.325,32,0.394,69,0.497,79,4.318,81,0.41,82,2.475,83,0.374,85,0.121,87,0.005,88,0.005,92,3.161,110,0.694,111,0.958,128,2.919,210,0.751,258,5.17,538,4.976,559,3.221,869,4.909,902,3.367,903,4.082,904,2.677,980,0.766,994,6.096,1802,4.952,1803,6.073,1804,5.567,1805,5.567,1806,5.567,1807,5.567,1808,5.567]],["title/classes/MailLandingPageDto.html",[81,0.267,221,3.368]],["body/classes/MailLandingPageDto.html",[3,0.109,4,0.127,5,0.118,8,0.284,9,1.063,15,2.368,24,0.44,25,0.007,26,1.331,32,0.381,81,0.334,83,0.393,85,0.127,87,0.005,88,0.005,92,3.111,93,4.878,110,0.729,111,0.643,112,4.791,139,1.71,210,0.79,221,5.338,703,2.444,980,0.806,1090,2.978,1809,7.633,1810,5.206,1811,5.854,1812,5.854,1813,7.428]],["title/classes/MailResponse.html",[81,0.267,129,3.368]],["body/classes/MailResponse.html",[3,0.118,4,0.137,5,0.128,8,0.307,9,1.116,24,0.421,25,0.007,26,1.116,32,0.365,81,0.361,83,0.425,85,0.137,87,0.006,88,0.006,92,3.065,93,4.433,110,0.789,111,0.696,112,4.574,129,5.607,139,1.598,210,0.855,703,2.333,902,3.652,903,4.131,980,0.872,1814,5.632,1815,6.332,1816,6.332,1817,6.332]],["title/entities/MediaEntity.html",[0,1.18,439,2.619]],["body/entities/MediaEntity.html",[0,1.251,2,1.271,3,0.061,4,0.071,5,0.066,6,3.24,8,0.159,9,0.857,13,2.217,14,2.477,15,1.652,21,2.265,24,0.466,25,0.007,26,0.955,27,2.525,32,0.404,34,4.618,39,5.116,40,4.942,43,2.978,51,2.104,69,0.495,70,2.536,71,2.536,72,2.598,74,1.36,75,2.536,76,0.978,77,2.244,81,0.187,83,0.221,85,0.071,87,0.004,88,0.004,415,3.834,423,1.724,429,4.527,439,2.777,447,4.221,528,4.006,536,2.244,703,1.652,821,5.098,860,5.03,861,2.053,879,3.269,882,1.499,887,1.462,977,2.506,1818,2.924,1819,5.988,1820,5.988,1821,5.988,1822,5.988,1823,5.988,1824,5.326,1825,5.988,1826,5.988,1827,4.968,1828,3.288,1829,4.968,1830,3.288,1831,4.968,1832,3.288,1833,3.288,1834,3.288,1835,4.968,1836,3.288,1837,4.968,1838,3.288,1839,3.288,1840,3.288,1841,4.968,1842,3.288,1843,4.968,1844,3.288,1845,3.288]],["title/entities/MessageEntity.html",[0,1.18,441,2.813]],["body/entities/MessageEntity.html",[0,1.552,2,1.709,3,0.082,4,0.096,5,0.089,6,3.236,8,0.214,9,1.015,13,2.626,14,2.934,15,1.957,21,2.683,24,0.462,25,0.007,26,1.098,27,2.501,32,0.4,35,3.333,39,3.566,40,3.445,43,3.301,51,2.61,69,0.49,70,3.004,71,3.004,72,3.077,73,3.718,74,1.829,75,3.004,76,1.315,81,0.252,83,0.297,85,0.096,87,0.004,88,0.004,295,5.406,415,4.25,423,2.318,424,4.15,438,2.472,441,3.7,524,5.256,538,2.761,703,2.305,879,3.624,882,2.017,887,1.966,1846,3.933,1847,6.308,1848,6.162,1849,4.422,1850,4.422,1851,6.162,1852,4.422,1853,4.422,1854,4.422,1855,4.422,1856,4.422]],["title/classes/NoUserTraceException.html",[81,0.267,1857,3.826]],["body/classes/NoUserTraceException.html",[3,0.122,4,0.143,5,0.133,22,2.375,25,0.007,32,0.308,69,0.455,81,0.376,85,0.143,87,0.006,88,0.006,210,1.162,748,5.382,980,0.907,1099,4.469,1106,4.499,1366,4.8,1368,3.646,1857,6.529,1858,7.111,1859,5.862,1860,8.607,1861,6.591,1862,6.591,1863,6.591,1864,6.591]],["title/entities/NotificationEntity.html",[0,1.18,457,2.711]],["body/entities/NotificationEntity.html",[0,1.163,2,1.155,3,0.056,4,0.065,5,0.06,6,3.175,8,0.145,9,0.808,13,2.09,14,2.335,15,1.558,21,2.135,22,1.558,24,0.507,25,0.007,26,1.118,27,2.471,28,4.334,29,5.531,30,4.2,31,3.771,32,0.396,35,3.053,37,4.296,38,3.47,39,4.2,40,4.057,43,2.868,44,2.658,45,3.771,46,5.216,48,2.658,49,3.771,51,1.956,53,4.334,55,2.302,61,2.658,62,3.771,64,2.33,69,0.501,70,3.073,71,1.956,72,2.003,73,3.329,74,1.236,75,1.956,76,0.889,78,1.567,79,3.389,80,4.302,81,0.263,82,1.329,83,0.524,85,0.065,86,4.84,87,0.003,88,0.003,292,3.837,296,1.567,424,3.926,438,1.67,447,3.588,457,2.672,524,3.678,544,3.678,552,2.039,818,3.009,828,2.44,846,4.334,861,1.866,879,3.148,882,1.363,887,1.329,1019,1.947,1803,5.232,1865,2.658,1866,5.645,1867,6.865,1868,4.618,1869,2.988,1870,2.988,1871,2.988,1872,2.988,1873,2.988,1874,4.618,1875,2.988,1876,2.988,1877,4.618,1878,2.988,1879,2.988,1880,6.106,1881,2.988,1882,2.988,1883,4.618,1884,2.988,1885,2.988,1886,2.988]],["title/entities/OccupationEntity.html",[0,1.18,443,2.711]],["body/entities/OccupationEntity.html",[0,1.07,2,1.642,3,0.079,4,0.092,5,0.086,6,3.257,8,0.206,9,0.993,13,2.569,14,2.871,15,1.915,21,2.625,24,0.467,25,0.007,26,1.078,27,2.525,32,0.404,34,4.461,37,2.227,38,2.537,43,3.259,51,2.537,69,0.52,70,2.537,71,2.939,72,3.011,74,1.757,75,2.939,76,1.263,77,2.899,81,0.242,83,0.466,85,0.092,87,0.004,88,0.004,415,4.196,423,2.227,443,3.467,447,4.077,793,3.237,818,3.903,833,4.737,858,5.144,861,2.652,879,3.578,882,1.937,887,1.889,1120,4.089,1887,3.778,1888,6.173,1889,6.173,1890,6.173,1891,5.991,1892,4.248,1893,5.991,1894,4.248,1895,4.248,1896,4.248,1897,4.248,1898,4.248,1899,5.991,1900,4.248,1901,4.248,1902,4.248]],["title/entities/PlanEntity.html",[0,1.18,445,2.926]],["body/entities/PlanEntity.html",[0,1.406,2,1.488,3,0.072,4,0.084,5,0.078,6,3.274,8,0.187,9,0.94,13,2.433,14,2.718,15,1.813,21,2.485,24,0.506,25,0.007,26,1.142,27,2.547,28,5.223,29,5.493,30,4.171,32,0.408,43,3.154,51,2.365,69,0.386,70,3.38,71,2.783,72,2.85,74,1.593,75,2.783,76,1.145,81,0.219,83,0.593,85,0.084,86,5.493,87,0.004,88,0.004,292,4.277,445,3.487,455,4.317,542,3.144,797,2.312,827,4.983,859,3.353,879,3.462,882,1.756,887,1.712,1341,5.365,1363,2.767,1364,4.56,1903,3.424,1904,6.571,1905,7.652,1906,7.652,1907,3.85,1908,3.85,1909,3.85,1910,5.584,1911,7.208,1912,3.85,1913,3.85,1914,3.85,1915,3.85,1916,3.85,1917,5.584,1918,3.85,1919,3.85]],["title/entities/ProfileEntity.html",[0,1.18,447,2.316]],["body/entities/ProfileEntity.html",[0,0.985,2,0.936,3,0.045,4,0.053,5,0.049,6,3.135,8,0.117,9,0.704,11,1.577,13,1.821,14,2.034,15,1.357,21,1.86,22,1.71,24,0.451,25,0.007,26,0.808,27,2.444,32,0.391,34,3.585,35,1.309,38,3.586,39,4.992,40,4.733,43,2.619,51,1.656,64,1.813,69,0.518,70,2.083,71,2.083,72,2.133,73,2.049,74,1.001,75,2.083,76,0.72,77,1.652,78,1.269,81,0.138,83,0.468,85,0.053,87,0.003,88,0.003,111,0.948,296,2.96,415,3.548,418,3.39,420,1.652,423,1.269,436,3.979,438,1.353,439,3.898,443,3.267,447,1.932,457,3.267,517,4.763,536,3.854,540,4.61,544,3.204,552,2.668,781,4.016,797,3.72,800,5.621,801,5.779,821,2.547,833,2.668,857,3.748,858,3.356,859,3.979,860,3.071,872,1.845,875,1.739,879,2.875,882,1.104,887,1.076,909,4.016,913,4.374,920,3.477,937,3.477,958,4.303,961,4.016,978,1.976,979,1.976,1889,4.374,1920,2.153,1921,4.918,1922,4.918,1923,4.918,1924,4.918,1925,4.918,1926,2.42,1927,3.909,1928,3.909,1929,2.42,1930,2.42,1931,2.42,1932,2.42,1933,3.909,1934,2.42,1935,3.909,1936,2.42,1937,3.909,1938,3.909,1939,5.646,1940,2.42,1941,3.909,1942,2.42,1943,3.909,1944,2.42,1945,2.42,1946,3.909,1947,3.909,1948,2.42,1949,2.42,1950,3.909,1951,2.42,1952,2.42,1953,3.909,1954,2.42,1955,2.42]],["title/entities/ReferralCodeEntity.html",[0,1.18,459,2.926]],["body/entities/ReferralCodeEntity.html",[0,0.877,2,1.346,3,0.065,4,0.076,5,0.07,6,3.101,8,0.169,9,0.742,13,2.295,15,1.711,21,2.345,22,1.895,24,0.486,25,0.007,26,0.983,27,2.392,30,2.016,32,0.383,37,3.601,38,2.909,43,3.369,46,3.728,51,1.475,64,2.69,69,0.507,70,2.625,71,2.197,73,3.25,74,1.441,75,2.197,76,1.036,78,1.826,80,3.954,81,0.296,82,1.549,85,0.076,87,0.004,88,0.004,128,1.826,317,4.236,455,4.165,459,3.239,460,5.717,550,4.455,563,4.455,782,4.724,818,3.38,860,3.239,871,3.954,994,5.717,1000,6.287,1120,2.377,1149,4.614,1336,2.844,1363,2.503,1956,5.062,1957,6.199,1958,6.199,1959,5.188,1960,5.188,1961,4.236,1962,4.614,1963,3.483,1964,3.483,1965,3.483,1966,3.483,1967,3.483,1968,6.869,1969,3.483,1970,3.483,1971,3.483,1972,5.188,1973,5.188,1974,5.188,1975,5.188,1976,3.483,1977,3.483,1978,3.483,1979,5.188,1980,3.483,1981,3.483,1982,3.483,1983,3.483,1984,3.483,1985,3.483,1986,5.188,1987,3.483,1988,5.188,1989,3.483,1990,3.483,1991,3.483]],["title/classes/RegisterCommand.html",[81,0.267,731,3.368]],["body/classes/RegisterCommand.html",[3,0.108,4,0.126,5,0.117,8,0.281,9,1.057,24,0.461,25,0.007,26,1.368,32,0.4,81,0.331,83,0.389,85,0.126,87,0.005,88,0.005,110,0.723,111,0.637,139,1.772,210,0.783,557,3.538,559,3.57,561,4.134,703,2.563,731,5.308,980,0.798,1090,2.951,1491,4.421,1992,5.159,1993,5.801,1994,8.125]],["title/classes/RegisterEvent.html",[81,0.267,1995,3.368]],["body/classes/RegisterEvent.html",[3,0.122,4,0.142,5,0.132,8,0.317,9,1.139,24,0.429,25,0.007,26,1.277,32,0.372,81,0.373,83,0.439,85,0.142,87,0.006,88,0.006,110,0.816,111,0.719,139,1.622,210,0.884,703,2.197,715,4.414,980,0.901,1090,3.331,1316,4.088,1995,5.723,1996,5.823,1997,6.547,1998,6.547]],["title/classes/RegisterEventHandler.html",[81,0.267,691,3.571]],["body/classes/RegisterEventHandler.html",[3,0.103,4,0.121,5,0.112,8,0.269,9,1.027,15,1.981,22,1.981,24,0.299,25,0.007,32,0.335,55,2.012,69,0.581,81,0.316,83,0.372,85,0.121,87,0.005,88,0.005,99,1.653,110,0.692,111,0.61,113,1.255,122,1.255,170,1.59,227,2.602,364,2.351,691,5.472,693,6.498,980,0.764,1021,2.296,1158,2.598,1166,4.605,1167,4.155,1170,4.155,1172,3.103,1173,3.212,1179,4.9,1213,4.9,1215,4.937,1332,3.466,1333,3.99,1995,6.047,1999,7.078,2000,7.958,2001,7.18,2002,5.551,2003,4.937,2004,5.551,2005,5.551,2006,6.386,2007,5.551]],["title/classes/RegisterHandler.html",[81,0.267,683,3.571]],["body/classes/RegisterHandler.html",[3,0.059,4,0.069,5,0.064,8,0.154,9,0.694,24,0.381,25,0.007,26,1.169,32,0.348,53,3.31,64,1.557,69,0.6,76,0.947,78,1.67,81,0.276,82,1.416,83,0.474,85,0.069,87,0.003,88,0.003,99,1.116,100,2.43,110,0.927,111,0.776,113,1.484,114,2.172,144,2.39,170,0.912,175,1.78,176,1.62,177,1.67,210,0.654,224,3.323,225,2.39,227,2.698,250,2.548,280,1.349,364,1.588,464,1.67,465,3.442,488,2.542,491,1.67,492,3.31,493,1.67,557,2.716,559,2.654,561,2.749,563,2.289,595,1.989,633,3.34,683,3.696,731,4.719,830,2.174,980,0.438,1022,3.526,1027,2.332,1036,2.911,1038,1.843,1039,1.912,1097,3.485,1098,5.839,1099,3.67,1100,3.485,1101,2.833,1102,3.485,1103,2.833,1104,2.289,1105,3.31,1106,2.174,1107,2.833,1113,4.313,1115,3.96,1116,2.833,1117,2.601,1118,2.833,1129,2.833,1276,4.478,1283,1.78,1301,4.412,1371,3.696,1372,3.696,1655,3.696,1661,3.696,1995,2.289,2003,2.833,2008,2.833,2009,5.873,2010,4.85,2011,4.85,2012,4.85,2013,4.85,2014,3.185,2015,4.85,2016,3.185,2017,4.85,2018,3.185,2019,4.85,2020,3.185,2021,3.185,2022,3.185,2023,3.185,2024,3.185,2025,3.185,2026,4.85,2027,3.185,2028,3.185,2029,3.185,2030,6.566,2031,6.566,2032,3.185,2033,3.185,2034,2.833,2035,3.185,2036,3.185,2037,3.185,2038,3.185,2039,4.85,2040,4.85,2041,3.185,2042,3.185,2043,3.185]],["title/classes/RemoveRefreshTokenCommand.html",[81,0.267,2044,3.368]],["body/classes/RemoveRefreshTokenCommand.html",[3,0.119,4,0.139,5,0.129,8,0.311,9,1.125,24,0.424,25,0.007,26,1.269,32,0.367,81,0.366,83,0.43,85,0.139,87,0.006,88,0.006,110,0.799,111,0.705,139,1.608,210,0.866,571,3.879,703,2.17,715,4.383,980,0.883,1090,3.265,1316,4.007,2044,5.653,2045,7.565,2046,5.239,2047,5.707,2048,5.707]],["title/classes/RemoveRefreshTokenCommandHandler.html",[81,0.267,2049,3.571]],["body/classes/RemoveRefreshTokenCommandHandler.html",[3,0.093,4,0.109,5,0.101,8,0.244,24,0.363,25,0.007,32,0.314,64,1.616,69,0.6,76,1.496,81,0.287,83,0.452,85,0.109,87,0.005,88,0.005,99,1.549,100,2.255,110,0.838,111,0.74,113,1.138,114,1.964,170,1.441,175,2.813,176,2.56,177,2.638,210,0.908,224,2.546,225,1.616,280,2.131,296,2.638,364,2.204,464,2.638,465,4.245,488,3.528,491,2.638,493,2.638,571,3.693,742,2.638,744,2.56,745,2.92,980,0.693,1021,2.081,1022,4.553,1027,3.236,1036,4.04,1038,2.912,1039,3.021,1096,2.722,1171,3.616,1276,5.132,1283,2.813,1301,3.142,1326,3.616,1521,3.835,2044,5.819,2049,5.78,2050,6.745,2051,5.819,2052,5.032,2053,5.032,2054,5.032,2055,4.109]],["title/classes/RemoveRefreshTokenEvent.html",[81,0.267,2056,3.571]],["body/classes/RemoveRefreshTokenEvent.html",[3,0.099,4,0.116,5,0.108,8,0.26,9,1.003,22,1.935,24,0.447,25,0.007,26,1.352,32,0.388,55,2.541,81,0.305,83,0.359,85,0.116,87,0.005,88,0.005,110,0.667,111,0.588,139,1.746,149,2.513,210,0.946,249,3.647,571,4.106,596,3.567,703,2.549,715,4.101,980,0.737,1158,3.281,1316,3.342,2056,5.343,2057,7.66,2058,4.37,2059,4.76,2060,5.725,2061,4.76,2062,4.76,2063,4.76]],["title/classes/RemoveRefreshTokenEventHandler.html",[81,0.267,2064,3.571]],["body/classes/RemoveRefreshTokenEventHandler.html",[3,0.101,4,0.118,5,0.11,8,0.264,15,1.502,24,0.382,25,0.007,32,0.331,69,0.544,81,0.31,83,0.476,85,0.118,87,0.005,88,0.005,97,2.2,99,1.631,110,0.883,111,0.779,113,1.23,118,2.547,138,1.973,139,1.029,149,1.588,158,3.672,170,1.558,171,2.361,191,2.482,210,0.734,249,2.305,332,4.426,364,2.321,571,3.949,596,2.769,980,0.749,1021,2.251,1166,4.561,1167,4.101,1168,3.398,1169,3.714,1170,4.101,1172,3.042,1173,3.149,1176,3.398,1177,3.546,1178,3.546,1179,3.714,1332,3.398,2056,6.364,2064,5.402,2065,7.011,2066,6.364,2067,5.442,2068,5.442,2069,5.442]],["title/injectables/RequestLoggingMiddleware.html",[207,1.393,347,3.571]],["body/injectables/RequestLoggingMiddleware.html",[3,0.074,4,0.086,5,0.08,8,0.192,9,0.817,24,0.36,25,0.007,32,0.312,69,0.587,81,0.226,83,0.383,85,0.086,87,0.004,88,0.004,99,1.314,110,0.711,111,0.627,113,0.897,122,0.897,138,1.439,139,1.381,158,3.024,171,1.722,191,1.81,207,1.697,208,1.765,210,0.536,224,2.528,227,1.439,239,4.174,246,2.852,250,3.359,296,4.06,315,4.564,332,3.564,346,5.566,347,4.35,364,1.3,365,2.586,366,2.709,367,5.285,368,2.709,369,2.709,373,4.804,579,3.954,603,2.852,604,5.094,609,2.383,987,4.102,992,4.35,996,2.709,1008,2.478,1019,3.719,1026,4.804,1035,5.253,1042,3.025,1046,4.102,1048,3.241,1055,3.241,1056,3.53,1059,2.586,1389,3.025,1390,4.35,1391,2.852,1392,3.241,1397,3.241,1399,3.53,1400,3.025,1402,3.025,1406,3.025,1426,3.025,1427,4.35,1429,4.661,1432,4.661,1433,4.35,1434,3.025,1435,3.241,1436,3.241,1437,3.241,1438,4.661,1439,3.241,1440,4.661,1441,3.241,1442,3.241,1443,3.241,1444,3.241,1445,3.241,1446,3.241,1447,3.53,1454,3.241,1455,3.241,1456,3.241,1457,4.661,1458,3.241,1771,3.241,2070,6.501,2071,5.708,2072,3.969,2073,3.53,2074,3.969,2075,5.077,2076,3.53,2077,3.53,2078,3.969,2079,3.969,2080,3.969,2081,3.969]],["title/interfaces/RequestUser.html",[576,3.198,2082,3.368]],["body/interfaces/RequestUser.html",[3,0.123,4,0.144,5,0.134,8,0.322,9,1.149,22,2.475,24,0.358,25,0.007,64,2.88,69,0.554,78,3.479,85,0.144,87,0.006,88,0.006,576,5.48,579,4.669,609,3.984,1368,3.661,2082,4.769,2083,5.419,2084,5.902,2085,5.902]],["title/injectables/ResponseLoggingMiddleware.html",[207,1.393,350,3.571]],["body/injectables/ResponseLoggingMiddleware.html",[3,0.076,4,0.089,5,0.082,8,0.198,9,0.834,24,0.399,25,0.007,32,0.317,69,0.562,81,0.233,83,0.391,85,0.089,87,0.004,88,0.004,99,1.342,100,2.02,110,0.726,111,0.641,113,0.924,122,0.924,138,1.481,139,1.4,144,1.312,149,1.192,158,3.064,171,1.773,191,1.863,207,1.733,208,1.817,210,0.551,224,2.57,225,1.312,227,1.481,239,4.242,246,2.937,250,3.397,296,4.106,315,4.625,346,4.883,350,4.442,364,1.338,365,2.662,366,2.789,367,5.345,368,2.789,369,2.789,370,4.759,371,3.336,372,4.759,373,5.324,579,4.007,603,2.937,604,5.178,609,2.453,987,4.189,992,4.442,1026,4.883,1035,5.324,1042,3.114,1046,2.937,1048,3.336,1059,2.662,1389,3.114,1390,4.442,1400,3.114,1402,3.114,1404,3.336,1406,3.114,1426,3.114,1427,4.442,1429,4.759,1432,4.759,1433,4.442,1434,3.114,1435,3.336,1436,3.336,1437,3.336,1438,3.336,1439,3.336,1440,4.759,1441,3.336,1442,3.336,1443,3.336,1444,3.336,1445,3.336,1446,3.336,1448,3.634,1449,3.634,1450,3.634,1451,3.634,1452,3.634,1453,3.634,1454,3.336,1455,3.336,1456,3.336,1457,3.336,1458,3.336,2073,3.634,2075,5.184,2076,3.634,2077,3.634,2086,6.588,2087,5.828,2088,4.086]],["title/classes/RoleGroupMembershipEnum.html",[81,0.267,1580,3.571]],["body/classes/RoleGroupMembershipEnum.html",[3,0.106,4,0.124,5,0.115,6,3.146,8,0.276,9,1.045,24,0.434,25,0.007,26,1.153,32,0.376,55,2.92,81,0.325,85,0.124,87,0.005,88,0.005,139,1.767,528,5.101,782,6.695,980,0.784,1158,3.771,1580,5.565,1792,8.313,2089,6.938,2090,5.068,2091,7.813,2092,8.785,2093,5.698,2094,5.698,2095,5.698]],["title/classes/SendMailCommand.html",[81,0.267,285,3.368]],["body/classes/SendMailCommand.html",[3,0.102,4,0.119,5,0.111,8,0.266,9,1.02,24,0.452,25,0.007,26,1.273,32,0.391,81,0.313,83,0.368,85,0.119,87,0.005,88,0.005,92,3.147,110,0.684,111,0.954,139,1.754,210,0.741,285,5.122,296,4.392,538,4.942,559,3.199,703,2.561,902,3.336,903,4.064,904,2.639,980,0.755,1272,4.183,1273,4.881,1274,4.881,1803,6.032,2096,7.722,2097,4.881,2098,4.881]],["title/classes/SendMailCommandHandler.html",[81,0.267,274,3.571]],["body/classes/SendMailCommandHandler.html",[3,0.098,4,0.115,5,0.106,8,0.256,24,0.375,25,0.007,32,0.325,69,0.592,81,0.301,83,0.466,85,0.115,87,0.005,88,0.005,92,2.815,99,1.599,100,2.309,110,0.866,111,0.764,113,1.193,114,2.027,122,1.193,139,0.998,168,2.686,170,1.512,181,3.296,184,3.439,210,0.712,224,2.628,227,1.913,274,5.295,285,5.931,364,2.275,559,2.808,980,0.727,1022,4.662,1027,3.341,1028,4.023,1029,5.632,1031,5.295,1036,4.171,1038,4.02,1039,3.169,1043,3.603,1045,4.695,1272,4.023,1276,5.193,1290,4.695,2034,4.695,2097,4.695,2098,4.695,2099,6.907,2100,4.993,2101,4.695,2102,5.279,2103,5.279,2104,5.279]],["title/classes/SendMailEvent.html",[81,0.267,2100,3.368]],["body/classes/SendMailEvent.html",[3,0.091,4,0.106,5,0.099,8,0.238,9,0.946,24,0.465,25,0.007,26,1.313,32,0.403,55,2.398,81,0.28,83,0.329,85,0.106,87,0.005,88,0.005,92,3.194,97,2.674,110,0.611,111,0.919,112,4.335,139,1.792,149,2.184,210,0.662,249,3.17,538,4.674,559,3.026,703,2.617,902,3.096,903,3.916,904,2.358,980,0.675,1158,3.096,1304,4.004,1309,4.362,1310,4.362,1803,5.705,2100,4.754,2105,7.837,2106,4.904,2107,4.904,2108,4.904,2109,5.884,2110,4.904]],["title/classes/SendMailEventHandler.html",[81,0.267,276,3.571]],["body/classes/SendMailEventHandler.html",[3,0.101,4,0.118,5,0.11,8,0.265,24,0.383,25,0.007,32,0.332,69,0.545,81,0.311,83,0.476,85,0.118,87,0.005,88,0.005,92,2.861,97,2.206,99,1.634,100,2.347,110,0.885,111,0.78,112,2.952,113,1.234,114,2.072,118,2.554,138,1.978,139,1.031,149,1.592,158,3.675,170,1.563,171,2.367,184,5.446,191,2.489,210,0.737,225,1.752,249,2.311,276,5.412,364,2.325,980,0.751,1021,2.257,1166,4.567,1167,4.109,1168,3.408,1169,3.725,1170,4.109,1172,3.05,1173,3.158,1176,3.408,1177,3.556,1178,3.556,1332,3.408,2100,6.008,2101,4.854,2111,7.02,2112,5.457,2113,5.457,2114,5.457]],["title/classes/SetCurrentRefreshTokenCommand.html",[81,0.267,2115,3.368]],["body/classes/SetCurrentRefreshTokenCommand.html",[3,0.11,4,0.129,5,0.119,8,0.287,9,1.071,24,0.442,25,0.007,26,1.334,32,0.383,81,0.338,83,0.398,85,0.129,87,0.005,88,0.005,110,0.738,111,0.651,139,1.716,210,0.8,571,3.931,703,2.453,715,4.394,980,0.815,1090,3.015,1526,6.195,1527,5.27,2046,4.838,2047,5.27,2048,6.657,2115,5.38,2116,7.667,2117,5.616]],["title/classes/SetCurrentRefreshTokenCommandHandler.html",[81,0.267,2118,3.571]],["body/classes/SetCurrentRefreshTokenCommandHandler.html",[3,0.09,4,0.106,5,0.098,8,0.236,24,0.355,25,0.007,32,0.307,64,1.563,69,0.607,76,1.447,81,0.277,83,0.442,85,0.106,87,0.005,88,0.005,99,1.515,100,2.217,110,0.82,111,0.723,113,1.1,114,1.92,170,1.394,175,2.721,176,2.476,177,2.552,210,0.888,224,2.489,225,2.113,250,2.111,280,2.061,364,2.155,464,2.552,465,4.188,488,3.45,491,2.552,492,4.492,493,2.552,563,3.498,571,3.643,742,2.552,744,2.476,745,2.855,980,0.67,1021,2.013,1022,4.477,1027,3.164,1036,3.951,1038,2.816,1039,2.922,1094,3.974,1096,2.633,1276,5.089,1283,2.721,1301,3.039,1326,3.498,1333,3.498,1521,5.016,2051,5.741,2055,3.974,2115,5.741,2117,5.205,2118,5.683,2119,6.632,2120,4.867,2121,4.867,2122,4.867]],["title/classes/SetCurrentRefreshTokenEvent.html",[81,0.267,2123,3.571]],["body/classes/SetCurrentRefreshTokenEvent.html",[3,0.092,4,0.108,5,0.1,8,0.24,9,0.953,22,2.22,24,0.453,25,0.007,26,1.364,32,0.392,55,2.414,81,0.282,83,0.332,85,0.108,87,0.005,88,0.005,110,0.617,111,0.544,139,1.766,149,2.348,210,0.899,249,3.556,571,4.095,596,3.389,703,2.578,715,4.15,800,4.34,980,0.682,1155,4.406,1158,3.118,1526,6.034,2058,4.045,2059,4.406,2061,4.406,2062,4.406,2063,4.406,2117,5.633,2123,5.076,2124,7.69,2125,4.954]],["title/classes/SetCurrentRefreshTokenEventHandler.html",[81,0.267,2126,3.571]],["body/classes/SetCurrentRefreshTokenEventHandler.html",[3,0.1,4,0.117,5,0.108,8,0.261,15,1.485,24,0.379,25,0.007,32,0.329,69,0.541,81,0.307,83,0.472,85,0.117,87,0.005,88,0.005,97,2.175,99,1.62,110,0.877,111,0.773,113,1.217,118,2.519,138,1.951,139,1.017,149,1.57,158,3.661,170,1.541,171,2.334,191,2.454,210,0.726,249,2.279,332,4.394,364,2.304,571,3.935,596,2.738,800,3.506,980,0.741,1021,2.226,1166,4.537,1167,4.072,1168,3.36,1169,3.673,1170,4.072,1172,3.008,1173,3.114,1176,3.36,1177,3.506,1178,3.506,1179,3.673,1332,3.36,2066,6.337,2117,5.417,2123,6.337,2126,5.363,2127,6.973,2128,5.382,2129,5.382]],["title/classes/SignInDto.html",[81,0.267,2130,3.826]],["body/classes/SignInDto.html",[3,0.117,4,0.137,5,0.127,8,0.306,9,1.114,24,0.42,25,0.007,26,1.261,27,2.272,32,0.364,69,0.436,79,5.293,81,0.444,82,2.806,85,0.137,87,0.006,88,0.006,557,3.493,561,3.952,871,4.81,980,0.869,1961,5.154,2130,6.358,2131,6.895,2132,5.614,2133,5.614,2134,6.312,2135,6.312,2136,5.614,2137,5.614]],["title/classes/SignUpDto.html",[81,0.267,590,3.368]],["body/classes/SignUpDto.html",[3,0.111,4,0.13,5,0.121,8,0.291,9,1.079,24,0.445,25,0.007,26,1.303,27,2.408,32,0.386,69,0.414,79,5.356,81,0.43,82,2.667,85,0.13,87,0.005,88,0.005,557,3.413,559,3.336,561,3.862,590,5.421,869,5.149,871,4.572,980,0.826,1961,4.898,2131,7.07,2133,5.335,2136,5.335,2137,5.335,2138,5.335,2139,5.335,2140,5.999,2141,5.999,2142,5.999]],["title/entities/SocialNetworkEntity.html",[0,1.18,449,2.926]],["body/entities/SocialNetworkEntity.html",[0,1.908,2,1.451,3,0.07,4,0.081,5,0.076,6,3.162,8,0.182,9,0.927,13,2.636,14,2.946,15,2.09,21,2.693,24,0.451,25,0.007,26,1.273,27,2.443,32,0.391,43,3.515,51,2.321,69,0.378,70,3.459,71,2.742,72,2.809,74,1.553,75,2.742,76,1.116,81,0.312,83,0.548,85,0.081,87,0.004,88,0.004,292,3.064,415,4.024,423,1.968,449,4.044,450,6.138,546,3.065,797,2.253,859,3.291,878,7.087,879,3.431,882,1.712,887,1.669,1888,5.759,2143,3.338,2144,6.476,2145,8.679,2146,7.574,2147,7.574,2148,5.482,2149,3.753,2150,3.753,2151,3.753,2152,3.753,2153,3.753,2154,3.753,2155,3.753,2156,3.753,2157,3.753,2158,3.338,2159,3.753,2160,8.168,2161,3.753,2162,2.697,2163,3.753]],["title/entities/StripEventEntity.html",[0,1.18,452,3.053]],["body/entities/StripEventEntity.html",[0,1.915,2,2.348,3,0.113,4,0.132,5,0.122,6,2.815,8,0.295,9,1.187,15,2.29,24,0.327,25,0.007,26,1.088,27,1.772,32,0.284,55,2.202,69,0.419,74,3.433,76,1.806,81,0.433,83,0.51,85,0.132,87,0.005,88,0.005,452,5.667,453,5.464,548,5.402,703,2.29,879,3.298,1368,2.77,2158,5.402,2164,5.402,2165,6.074,2166,4.96,2167,6.074]],["title/entities/SubscriptionEntity.html",[0,1.18,455,2.535]],["body/entities/SubscriptionEntity.html",[0,1.159,2,1.15,3,0.055,4,0.065,5,0.06,6,3.208,8,0.144,9,0.805,13,2.083,14,2.328,15,1.89,21,2.129,22,1.89,24,0.494,25,0.007,26,0.906,27,2.5,28,4.323,32,0.4,35,2.489,37,3.798,38,3.068,43,3.583,51,1.949,55,1.078,64,2.326,69,0.5,70,3.199,71,2.383,72,2.441,73,2.951,74,1.23,75,2.383,76,0.884,78,1.559,81,0.262,82,1.323,83,0.46,85,0.065,87,0.003,88,0.003,111,0.796,292,1.663,316,1.786,426,4.523,428,2.03,434,4.523,445,4.523,455,2.489,532,5.006,542,4.596,550,2.138,703,2.487,797,1.786,833,2.03,846,3.141,858,3.141,859,2.763,879,3.142,882,1.356,887,1.323,1120,2.03,1339,5.006,1340,5.006,1350,4.093,1351,4.093,1354,4.093,1361,6.093,1377,2.645,1378,2.645,1379,2.645,2168,2.645,2169,5.628,2170,5.628,2171,5.628,2172,5.628,2173,2.974,2174,2.974,2175,4.602,2176,2.974,2177,2.974,2178,2.974,2179,4.602,2180,2.974,2181,4.602,2182,2.974,2183,2.974,2184,2.645,2185,2.974,2186,3.758,2187,4.093,2188,4.602,2189,4.602,2190,4.602,2191,4.602,2192,2.974,2193,4.602,2194,2.974,2195,2.974,2196,4.602,2197,2.974,2198,4.093,2199,2.974]],["title/classes/TimestampEntityExtendEntity.html",[81,0.267,2200,3.826]],["body/classes/TimestampEntityExtendEntity.html",[3,0.082,4,0.095,5,0.088,8,0.213,9,0.878,13,2.616,14,2.923,21,2.673,24,0.449,25,0.007,27,2.062,32,0.389,43,3.294,45,5.008,46,5.991,49,5.008,62,5.008,69,0.303,70,3.239,76,1.306,81,0.25,83,0.559,85,0.095,87,0.004,88,0.004,99,1.412,113,1.598,227,2.772,332,5.205,703,2.613,801,5.221,828,5.77,980,0.604,1368,2.797,2166,5.77,2200,5.008,2201,7.609,2202,7.609,2203,3.906,2204,7.649,2205,7.649,2206,7.649,2207,4.392,2208,4.392,2209,6.133,2210,6.133,2211,4.392,2212,4.392,2213,4.392,2214,4.392,2215,4.392,2216,7.649,2217,6.133,2218,7.067]],["title/interfaces/TokenPayload.html",[728,3.198,2082,3.368]],["body/interfaces/TokenPayload.html",[3,0.13,4,0.151,5,0.14,8,0.338,9,1.183,24,0.376,25,0.007,26,1.261,85,0.151,87,0.006,88,0.006,715,4.507,728,5.644,2082,5.01,2083,5.692,2219,6.2,2220,6.2]],["title/classes/UnauthorizedRequestException.html",[81,0.267,2221,3.826]],["body/classes/UnauthorizedRequestException.html",[3,0.124,4,0.145,5,0.134,25,0.007,32,0.311,69,0.46,81,0.38,85,0.145,87,0.006,88,0.006,120,3.722,122,1.506,210,1.167,579,3.602,727,4.532,980,0.917,1099,4.497,1366,4.83,1368,3.669,2221,6.569,2222,7.156,2223,5.923,2224,6.659,2225,6.659,2226,6.659]],["title/classes/UpdateUserCommand.html",[81,0.267,2227,3.368]],["body/classes/UpdateUserCommand.html",[3,0.111,4,0.129,5,0.12,8,0.289,9,1.075,22,2.457,24,0.444,25,0.007,26,1.236,32,0.384,69,0.412,81,0.34,83,0.4,85,0.129,87,0.005,88,0.005,110,0.743,111,0.655,139,1.719,210,0.805,401,3.884,703,2.457,715,4.271,980,0.821,1086,4.544,1088,5.302,1089,6.683,1090,3.033,1316,3.723,2227,5.4,2228,7.684,2229,6.078,2230,4.868]],["title/classes/UpdateUserCommandHandler.html",[81,0.267,2231,3.571]],["body/classes/UpdateUserCommandHandler.html",[3,0.077,4,0.089,5,0.083,8,0.2,9,0.839,15,1.137,22,1.618,24,0.368,25,0.007,32,0.347,55,1.494,64,1.883,69,0.619,76,1.225,81,0.334,82,1.832,83,0.393,85,0.089,87,0.004,88,0.004,99,1.35,100,2.03,110,0.85,111,0.644,113,0.932,114,1.711,122,0.932,144,1.323,170,1.18,175,2.303,176,2.097,177,2.16,210,0.791,224,1.559,225,2.192,227,2.695,250,2.544,280,1.745,364,1.92,464,2.16,465,3.898,488,3.074,491,2.16,493,2.16,595,3.661,633,2.983,703,1.883,742,2.16,744,2.097,745,2.961,830,2.813,980,0.567,1021,1.705,1022,4.098,1027,2.819,1036,3.52,1037,3.665,1038,2.385,1039,2.474,1093,5.573,1095,3.141,1096,2.229,1115,3.365,1117,3.365,1158,1.929,1165,2.474,1213,5.075,1276,5.128,1283,2.303,1301,3.661,1326,2.962,1484,2.962,1502,3.661,1503,3.141,2055,3.365,2227,5.344,2231,5.202,2232,6.988,2233,5.864,2234,5.864,2235,4.121,2236,4.121,2237,4.121,2238,4.121,2239,2.962,2240,3.665,2241,4.121,2242,4.121,2243,4.121,2244,4.121,2245,4.121,2246,4.121,2247,4.121]],["title/classes/UpdateUserDto.html",[81,0.267,2229,3.198]],["body/classes/UpdateUserDto.html",[3,0.112,4,0.131,5,0.122,8,0.293,9,1.084,24,0.446,25,0.007,26,1.305,27,2.21,30,3.493,32,0.387,69,0.417,79,4.968,81,0.432,82,2.684,85,0.131,87,0.005,88,0.005,111,0.832,557,3.423,559,3.345,561,3.873,869,5.169,980,0.831,1139,4.929,1147,4.929,1151,5.772,2139,5.369,2229,5.169,2248,7.718,2249,6.036,2250,6.036,2251,6.036,2252,6.036]],["title/classes/UpdateUserEvent.html",[81,0.267,2239,3.368]],["body/classes/UpdateUserEvent.html",[3,0.101,4,0.118,5,0.11,8,0.265,9,1.016,22,2.307,24,0.451,25,0.007,26,1.356,32,0.391,55,2.574,81,0.311,83,0.366,85,0.118,87,0.005,88,0.005,110,0.68,111,0.6,139,1.752,149,2.529,210,0.958,249,3.67,703,2.559,715,4.132,980,0.751,1154,3.922,1156,4.159,1158,3.324,1161,4.159,1316,3.408,1328,4.456,1329,4.456,2162,5.103,2239,5.103,2253,7.708]],["title/classes/UpdateUserEventHandler.html",[81,0.267,2254,3.571]],["body/classes/UpdateUserEventHandler.html",[3,0.103,4,0.12,5,0.111,8,0.268,15,1.523,22,1.523,24,0.386,25,0.007,32,0.334,69,0.548,81,0.315,83,0.48,85,0.12,87,0.005,88,0.005,97,2.231,99,1.647,110,0.891,111,0.786,113,1.248,118,2.584,138,2.001,139,1.043,149,1.611,158,3.686,170,1.581,171,2.394,191,2.517,210,0.745,249,2.337,332,4.467,364,2.342,980,0.76,1021,2.283,1165,5.04,1166,4.592,1167,4.139,1168,3.447,1169,3.767,1170,4.139,1171,3.967,1172,3.085,1173,3.194,1176,3.447,1177,3.596,1178,3.596,1179,3.767,2239,6.034,2240,4.909,2254,5.452,2255,7.058,2256,5.52,2257,5.52]],["title/controllers/UserController.html",[89,2.316,2258,3.571]],["body/controllers/UserController.html",[3,0.069,4,0.081,5,0.075,8,0.181,15,1.961,22,1.961,24,0.408,25,0.007,26,1.13,27,2.207,32,0.353,69,0.599,81,0.213,83,0.477,85,0.081,87,0.004,88,0.004,89,1.848,91,1.75,96,2.687,99,1.258,100,1.921,106,2.552,110,0.886,111,0.781,112,2.022,113,1.71,114,2.53,118,2.558,121,2.849,122,0.845,127,2.552,128,1.96,131,2.552,132,3.053,133,2.022,135,2.163,138,1.355,139,0.707,143,5.764,144,2.536,159,3.495,225,1.2,227,1.355,245,2.687,250,1.622,261,2.849,390,4.742,401,3.561,576,4.851,579,3.495,603,2.687,608,3.053,727,2.866,742,1.96,744,1.902,745,2.371,1108,2.552,1109,3.053,1110,2.849,1111,3.325,1134,4.463,1502,2.335,1503,2.849,2060,4.463,2162,3.928,2229,5.709,2230,3.053,2258,4.166,2259,3.325,2260,4.862,2261,6.322,2262,4.862,2263,3.325,2264,3.739,2265,3.739,2266,6.461,2267,3.739,2268,3.739,2269,3.325,2270,3.739,2271,3.739,2272,3.325,2273,3.739,2274,3.739,2275,3.739,2276,3.739,2277,3.739,2278,3.739,2279,5.466,2280,3.325,2281,3.739,2282,3.739,2283,3.739,2284,3.739,2285,3.739,2286,3.739,2287,3.739,2288,3.739,2289,3.739,2290,3.739,2291,3.739,2292,3.739,2293,3.739,2294,3.739,2295,3.739,2296,3.739,2297,3.739,2298,3.739]],["title/entities/UserEntity.html",[0,1.18,64,1.505]],["body/entities/UserEntity.html",[0,0.993,1,3.409,2,2.574,3,0.045,4,0.053,5,0.049,8,0.119,9,0.708,13,1.833,14,2.048,15,1.366,21,1.873,22,1.932,24,0.466,25,0.007,26,1.151,27,2.522,30,1.415,32,0.404,37,3.265,38,3.511,40,3.175,43,2.631,51,1.669,53,3.876,55,2.058,64,1.265,69,0.519,70,3.086,71,2.097,72,2.148,74,1.011,75,2.097,76,0.727,81,0.282,82,1.087,83,0.164,84,4.785,85,0.053,87,0.003,88,0.003,111,0.801,133,2.678,135,1.415,292,2.768,296,1.282,428,1.668,447,2.807,448,1.863,455,3.072,456,1.863,457,3.286,458,1.863,459,4.373,460,1.668,461,1.863,544,2.568,550,2.832,552,2.69,557,2.048,559,2.831,561,2.915,564,2.678,703,2.076,793,1.863,797,3.997,807,3.004,808,3.004,817,3.505,818,4.747,859,4.204,869,2.69,879,2.464,882,1.115,887,1.087,902,1.144,903,2.318,904,1.175,907,4.404,961,4.043,1120,3.379,1134,1.996,1147,1.996,1150,1.757,1151,1.863,1236,3.505,1269,3.505,1341,4.043,1368,1.115,1486,4.082,1521,3.774,1630,3.505,1654,1.593,1890,4.404,2006,3.505,2166,3.218,2184,2.174,2186,4.637,2187,5.051,2299,2.174,2300,4.951,2301,4.951,2302,4.951,2303,4.951,2304,4.951,2305,3.941,2306,2.445,2307,2.445,2308,3.941,2309,2.445,2310,2.445,2311,2.445,2312,2.445,2313,2.445,2314,2.445,2315,5.679,2316,3.941,2317,3.505,2318,3.941,2319,2.445,2320,5.051,2321,6.229,2322,2.445,2323,3.941,2324,2.445,2325,2.445,2326,3.941,2327,2.445,2328,5.051,2329,3.941,2330,2.445,2331,2.445,2332,3.941,2333,2.445,2334,2.445,2335,3.941,2336,2.445,2337,2.445,2338,2.445,2339,2.445,2340,2.174,2341,3.941]],["title/classes/UserListResponse.html",[81,0.267,1504,3.571]],["body/classes/UserListResponse.html",[3,0.114,4,0.133,5,0.123,8,0.297,9,1.094,24,0.412,25,0.007,32,0.357,69,0.423,81,0.35,83,0.411,85,0.133,87,0.005,88,0.005,110,0.764,111,0.674,210,0.828,703,2.3,980,0.844,1110,4.673,1185,4.407,1502,5.718,1504,5.829,2317,7.413,2342,6.806,2343,5.454,2344,8.335,2345,7.648,2346,7.648,2347,7.648]],["title/classes/UserLoginDto.html",[81,0.267,2348,3.826]],["body/classes/UserLoginDto.html",[3,0.105,4,0.123,5,0.114,8,0.274,9,1.039,24,0.433,25,0.007,26,1.346,27,2.119,32,0.375,69,0.39,81,0.322,83,0.379,85,0.123,87,0.005,88,0.005,110,0.704,111,0.621,128,2.961,139,1.695,210,0.762,561,4.269,703,2.474,708,6.296,980,0.777,994,5.979,2348,5.929,2349,7.532,2350,5.024,2351,7.261,2352,5.649,2353,5.649,2354,5.649,2355,5.649,2356,5.649]],["title/classes/UserLoginResponse.html",[81,0.267,615,3.368]],["body/classes/UserLoginResponse.html",[3,0.084,4,0.098,5,0.091,8,0.218,9,0.892,13,2.648,15,1.974,21,2.706,24,0.48,25,0.007,26,1.291,32,0.416,43,3.053,64,1.443,69,0.43,81,0.256,83,0.302,85,0.098,87,0.004,88,0.004,110,0.56,111,0.946,133,3.87,135,2.601,139,1.795,210,0.607,557,2.959,559,2.892,561,3.348,564,3.87,596,3.64,615,4.479,703,2.664,902,2.917,903,3.93,904,2.161,980,0.619,1150,3.23,1185,3.23,1191,3.997,2342,7.368,2357,3.997,2358,4.494,2359,4.494,2360,4.494,2361,4.494,2362,4.494,2363,4.494,2364,4.494,2365,4.494,2366,4.494]],["title/modules/UserModule.html",[149,1.367,157,3.053]],["body/modules/UserModule.html",[3,0.068,4,0.079,5,0.073,22,1.935,25,0.007,64,1.167,69,0.656,81,0.207,83,0.244,85,0.079,87,0.004,88,0.004,91,2.505,97,2.569,122,0.822,149,1.562,151,1.965,152,2.895,156,4.694,157,5.612,158,3.234,159,4.23,160,3.213,161,2.181,162,2.181,164,3.213,165,3.213,166,2.48,167,3.653,168,1.849,169,3.487,170,1.041,171,2.322,172,2.48,178,5.623,180,3.232,183,3.232,186,6.648,188,3.342,189,2.48,190,2.269,191,1.657,194,2.48,195,2.48,196,2.48,197,2.48,198,2.367,233,3.232,241,2.769,279,2.48,280,1.539,281,2.967,571,3.409,596,1.849,688,3.847,690,3.232,1038,2.103,1091,4.079,1093,4.337,1096,1.965,1163,4.079,1165,4.209,1172,2.031,1319,4.079,1330,4.079,1464,2.367,1480,4.079,1482,2.967,1494,4.079,1495,2.967,1498,4.079,1513,4.079,1797,4.079,2049,4.079,2051,3.847,2064,4.079,2066,4.079,2117,3.487,2118,4.079,2126,4.079,2231,4.079,2254,4.079,2258,4.843,2280,3.232,2367,3.633,2368,3.633,2369,3.633,2370,3.633,2371,3.633,2372,3.633,2373,3.633,2374,3.633,2375,3.633,2376,3.633,2377,3.633,2378,3.633,2379,3.633,2380,3.633,2381,3.633,2382,3.633,2383,6.355]],["title/classes/UserNotFoundException.html",[81,0.267,2384,3.826]],["body/classes/UserNotFoundException.html",[3,0.124,4,0.145,5,0.134,25,0.007,32,0.311,69,0.46,81,0.38,85,0.145,87,0.006,88,0.006,120,3.722,122,1.506,210,1.167,727,4.532,980,0.917,1099,4.497,1366,4.83,1368,3.669,1488,4.786,2384,6.569,2385,7.156,2386,5.923,2387,6.659,2388,6.659,2389,6.659]],["title/classes/UserResponse.html",[81,0.267,1502,2.926]],["body/classes/UserResponse.html",[3,0.1,4,0.117,5,0.108,8,0.261,9,1.007,15,2.163,24,0.465,25,0.007,26,1.266,32,0.403,69,0.372,81,0.307,83,0.361,85,0.117,87,0.005,88,0.005,110,0.67,111,0.948,133,4.241,135,3.114,139,1.788,210,0.726,557,3.243,559,3.169,564,4.241,703,2.61,902,3.293,903,4.143,904,2.587,980,0.741,1150,3.868,1185,3.868,1502,4.394,2390,4.786,2391,5.382,2392,5.382,2393,5.382,2394,5.382,2395,5.382]],["title/injectables/UserService.html",[159,2.535,207,1.393]],["body/injectables/UserService.html",[3,0.051,4,0.059,5,0.055,8,0.132,15,1.468,22,0.751,24,0.43,25,0.007,26,1.329,30,2.486,32,0.387,64,0.874,69,0.593,81,0.155,83,0.535,85,0.059,87,0.003,88,0.003,99,0.989,100,2.761,110,0.994,111,0.877,113,1.84,114,2.45,122,0.616,138,0.987,139,0.812,144,2.563,159,2.323,170,0.78,207,1.277,208,1.211,210,0.368,211,2.076,212,5.018,213,5.253,218,2.422,220,3.82,224,2.284,225,0.874,227,0.987,228,4.602,245,1.957,248,2.422,250,1.181,390,3.945,401,2.799,571,2.426,596,2.185,633,1.386,694,3.087,715,3.853,726,4.054,733,2.932,735,2.224,738,5.845,827,3.321,830,1.859,1084,1.957,1093,3.63,1096,1.473,1108,1.859,1109,2.224,1110,2.076,1314,1.957,1502,1.7,1503,2.076,1516,1.957,1518,2.422,1526,1.957,1956,5.366,1962,3.82,2044,1.957,2051,3.087,2060,3.507,2115,1.957,2117,1.774,2162,3.087,2227,1.957,2229,5.17,2230,2.224,2260,3.82,2261,5.37,2262,3.82,2263,3.82,2269,3.82,2272,3.82,2328,2.422,2396,2.422,2397,4.295,2398,5.319,2399,4.295,2400,4.295,2401,4.295,2402,4.295,2403,2.723,2404,2.723,2405,2.723,2406,2.723,2407,4.295,2408,2.723,2409,2.723,2410,4.295,2411,2.723,2412,4.295,2413,2.723,2414,2.723,2415,4.295,2416,2.723,2417,4.295,2418,2.723,2419,4.295,2420,2.723,2421,2.723,2422,2.723,2423,2.723,2424,2.723,2425,2.422,2426,2.723,2427,2.723,2428,2.723,2429,2.723,2430,2.723,2431,2.723,2432,2.723,2433,2.723,2434,2.723,2435,2.723,2436,4.295,2437,2.723,2438,2.723,2439,2.723,2440,2.723,2441,2.723,2442,2.723,2443,2.723]],["title/changelog.html",[2444,2.806,2445,2.806,2446,3.904]],["body/changelog.html",[0,1.953,2,2.424,25,0.006,87,0.006,88,0.006,97,2.535,241,4.779,309,5.12,381,4.086,552,4.28,563,5.574,568,5.911,595,3.916,708,4.507,1159,5.577,1956,5.12,2162,4.507,2447,5.577,2448,9.039,2449,9.039,2450,6.271,2451,9.039,2452,8.19,2453,6.271,2454,6.271,2455,6.271,2456,6.271,2457,6.271,2458,6.271,2459,6.271,2460,6.271,2461,6.271,2462,6.271,2463,6.271,2464,6.271,2465,6.271,2466,5.577,2467,5.577]],["title/contributing.html",[2444,2.806,2445,2.806,2468,3.472]],["body/contributing.html",[25,0.006,87,0.006,88,0.006,2468,6.76]],["title/coverage.html",[2469,5.704]],["body/coverage.html",[0,2.024,1,0.895,5,0.03,6,2.975,7,1.326,22,1.703,24,0.08,25,0.007,34,0.807,64,0.479,81,0.539,87,0.002,88,0.002,89,2.744,90,1.137,92,2.94,93,3.681,94,1.869,95,1.326,123,1.018,129,1.072,131,1.018,158,0.617,159,0.807,171,0.647,174,0.931,176,1.323,177,0.782,179,1.137,181,0.931,182,1.137,184,1.695,185,1.137,187,1.137,188,0.931,189,1.018,190,0.931,207,2.284,209,1.326,217,1.018,219,1.072,221,1.072,227,0.541,234,1.326,239,0.931,243,1.137,247,1.072,249,0.632,253,1.137,254,1.869,255,1.326,258,1.072,262,1.018,274,1.137,276,1.137,282,1.326,285,1.072,287,1.137,288,1.326,300,0.972,335,1.137,340,1.137,347,1.137,350,1.137,352,1.137,373,1.072,376,1.326,378,1.137,379,1.982,380,1.982,381,2.253,382,1.326,390,0.895,394,1.018,397,1.137,398,1.218,400,1.137,415,0.759,418,0.895,419,1.072,421,0.895,422,1.072,424,0.807,426,0.931,427,1.072,429,0.863,431,0.895,432,1.072,434,0.931,436,0.895,437,1.072,439,0.834,441,0.895,443,0.863,445,0.931,447,0.737,449,0.931,450,1.072,452,0.972,453,1.072,455,0.807,457,0.863,459,0.931,460,1.018,463,1.326,528,0.895,566,1.137,567,1.326,571,3.121,576,1.018,590,1.072,596,1.323,601,0.972,605,1.137,610,1.072,615,1.072,669,1.072,670,1.072,671,1.072,683,1.137,688,1.072,691,1.137,693,1.218,702,1.326,728,1.018,731,1.072,733,1.018,736,1.072,768,1.326,830,6.64,888,1.326,906,1.326,945,1.326,959,1.326,981,1.326,982,1.326,1008,0.931,1021,3.292,1059,1.695,1060,2.124,1084,1.072,1085,1.326,1086,2.636,1091,1.137,1092,1.326,1093,2.361,1097,1.072,1099,3.103,1100,1.869,1102,1.072,1104,1.072,1105,1.775,1106,1.018,1108,1.018,1139,2.124,1152,1.137,1153,1.326,1154,2.977,1163,1.137,1164,1.326,1165,2.486,1182,1.326,1183,1.326,1192,1.018,1193,3.061,1194,1.326,1195,1.072,1196,1.326,1201,1.072,1203,1.137,1204,1.018,1207,1.326,1213,1.018,1271,1.326,1272,2.636,1275,1.326,1278,1.072,1283,0.834,1303,1.326,1304,2.124,1311,1.326,1314,1.072,1315,1.326,1319,1.137,1320,1.326,1322,1.072,1327,1.326,1330,1.137,1331,1.326,1336,2.124,1366,3.332,1367,1.326,1373,1.326,1383,2.124,1384,1.326,1391,1.072,1407,1.218,1408,1.326,1409,1.326,1425,1.326,1426,2.636,1459,1.326,1460,1.326,1461,1.326,1474,1.137,1475,3.207,1476,1.326,1480,1.137,1481,3.207,1482,1.218,1489,1.137,1490,1.326,1494,1.137,1495,1.218,1498,1.137,1499,1.326,1502,0.931,1504,1.137,1513,1.137,1514,1.326,1516,1.072,1525,1.326,1530,1.326,1537,1.072,1545,1.326,1548,1.326,1551,1.326,1571,1.326,1580,1.137,1585,1.137,1586,1.326,1603,1.137,1605,1.326,1606,1.326,1607,1.326,1634,1.326,1640,1.326,1641,1.326,1647,1.218,1661,1.137,1662,1.326,1671,1.326,1727,1.326,1737,1.326,1750,1.218,1751,2.124,1752,1.326,1755,1.326,1756,1.326,1757,1.326,1775,1.326,1779,1.326,1781,1.326,1782,1.326,1791,1.218,1796,1.326,1797,1.137,1798,1.326,1802,1.326,1809,1.326,1810,1.326,1814,1.326,1818,1.326,1846,1.326,1857,1.218,1858,1.326,1859,1.326,1865,1.326,1887,1.326,1903,1.326,1920,1.326,1992,1.326,1995,1.072,1996,1.326,1999,1.326,2008,1.326,2044,1.072,2045,1.326,2046,2.124,2049,1.137,2050,1.326,2051,1.869,2056,1.137,2057,1.326,2058,2.124,2064,1.137,2065,1.326,2066,1.982,2070,1.326,2082,1.869,2084,1.326,2085,1.326,2086,1.326,2089,1.218,2090,1.326,2096,1.326,2099,1.326,2100,1.072,2105,1.326,2111,1.326,2115,1.072,2116,1.326,2117,2.698,2118,1.137,2119,1.326,2123,1.137,2124,1.326,2126,1.137,2127,1.326,2130,1.218,2131,2.124,2132,1.326,2138,1.326,2143,1.326,2164,1.326,2168,1.326,2200,1.218,2201,1.326,2202,1.326,2203,1.326,2219,1.326,2220,1.326,2221,1.218,2222,1.326,2223,1.326,2227,1.072,2228,1.326,2229,1.018,2231,1.137,2232,1.326,2239,1.072,2248,1.326,2253,1.326,2254,1.137,2255,1.326,2258,1.137,2259,1.326,2299,1.326,2342,2.124,2343,1.326,2348,1.218,2349,1.326,2350,1.326,2357,1.326,2384,1.218,2385,1.326,2386,1.326,2390,1.326,2396,1.326,2469,1.326,2470,1.326,2471,1.491,2472,1.491,2473,8.812,2474,7.68,2475,6.845,2476,8.556,2477,1.491,2478,5.551,2479,1.491,2480,7.323,2481,1.491,2482,1.326,2483,4.142,2484,1.491,2485,1.491,2486,4.698,2487,1.491,2488,1.491,2489,1.491,2490,1.326,2491,1.326,2492,1.326,2493,1.326,2494,1.326,2495,1.326,2496,1.326,2497,1.326,2498,1.491,2499,1.491]],["title/dependencies.html",[152,3.051,2500,3.472]],["body/dependencies.html",[25,0.007,76,1.665,81,0.412,82,2.49,87,0.005,88,0.005,122,1.266,128,2.936,152,3.029,168,2.849,170,1.604,280,2.371,338,4.98,492,3.822,609,4.334,675,3.496,680,4.572,1214,4.98,1282,4.572,1433,4.268,1592,4.024,1732,4.98,1765,6.09,1766,5.503,1788,6.421,2340,4.98,2501,7.991,2502,7.22,2503,5.6,2504,7.22,2505,5.6,2506,5.6,2507,5.6,2508,5.6,2509,5.6,2510,5.6,2511,7.22,2512,5.6,2513,5.6,2514,5.6,2515,5.6,2516,5.6,2517,5.6,2518,5.6,2519,5.6,2520,5.6,2521,5.6,2522,5.6,2523,5.6,2524,5.6,2525,5.6,2526,5.6,2527,5.6,2528,5.6,2529,5.6,2530,5.6,2531,5.6]],["title/miscellaneous/enumerations.html",[2532,2.438,2533,5.017]],["body/miscellaneous/enumerations.html",[3,0.092,6,3.047,8,0.158,11,3.22,22,0.901,25,0.007,83,0.219,87,0.004,88,0.004,92,2.162,110,0.407,133,2.674,316,2.967,517,3.552,546,4.036,557,1.351,559,1.32,561,1.528,703,1.364,726,3.767,745,2.885,782,2.489,787,4.396,788,4.396,851,4.396,853,4.396,855,4.396,864,4.036,866,4.396,873,4.396,896,4.396,915,4.396,996,3.373,1035,3.552,1158,4.573,1371,4.545,1372,4.545,1392,2.666,1434,2.489,1488,3.552,1655,3.767,1718,4.396,1791,5.43,1880,4.396,2089,2.666,2091,5.304,2198,4.396,2532,2.039,2533,2.904,2534,3.266,2535,4.943,2536,3.266,2537,3.266,2538,4.943,2539,3.266,2540,4.943,2541,3.266,2542,4.943,2543,5.963,2544,4.943,2545,4.943,2546,6.65,2547,4.943,2548,3.266,2549,7.516,2550,3.266,2551,3.266,2552,4.943,2553,3.266,2554,5.963,2555,4.943,2556,4.943,2557,4.943,2558,4.943,2559,3.266,2560,3.266,2561,3.266,2562,3.266,2563,3.266,2564,3.266,2565,3.266,2566,3.266,2567,3.266,2568,3.266,2569,3.266,2570,4.943,2571,4.943,2572,4.943,2573,4.943,2574,4.943,2575,3.266,2576,3.266,2577,3.266,2578,3.266,2579,4.943,2580,6.65,2581,4.943,2582,6.65,2583,4.943,2584,4.943,2585,4.943,2586,4.943,2587,3.266,2588,4.943,2589,4.943,2590,4.943,2591,3.266,2592,4.943,2593,4.943,2594,3.266,2595,4.943,2596,4.943,2597,3.266,2598,4.943,2599,4.943,2600,4.943,2601,4.943,2602,4.943,2603,5.963,2604,6.65,2605,4.943,2606,4.943,2607,4.943,2608,4.943,2609,4.943,2610,4.943]],["title/miscellaneous/functions.html",[2532,2.438,2611,5.017]],["body/miscellaneous/functions.html",[8,0.355,25,0.006,87,0.006,88,0.006,113,1.654,114,2.134,2490,6.505,2491,7.999,2532,4.567,2611,6.505,2612,7.314]],["title/index.html",[8,0.189,2444,2.806,2445,2.806]],["body/index.html",[25,0.006,87,0.006,88,0.006,97,3.428,152,4.237,292,3.563,365,4.153,387,4.858,864,5.205,2467,5.669,2470,5.669,2613,6.374,2614,6.374,2615,6.374,2616,6.374,2617,6.374,2618,6.374,2619,6.374,2620,6.374,2621,6.374,2622,6.374,2623,6.374,2624,6.374,2625,6.374,2626,6.374,2627,9.082,2628,6.374,2629,7.834,2630,6.374,2631,6.374,2632,6.374,2633,6.374,2634,6.374,2635,6.374,2636,6.374,2637,8.481,2638,6.374,2639,6.374,2640,6.374,2641,6.374,2642,7.834,2643,6.374]],["title/license.html",[2444,2.806,2445,2.806,2644,3.472]],["body/license.html",[25,0.006,87,0.006,88,0.006]],["title/modules.html",[151,3.469]],["body/modules.html",[25,0.006,87,0.006,88,0.006,150,4.658,151,3.506,156,3.891,157,4.222,269,4.658,319,4.658,323,4.658,324,4.658,325,4.658,408,4.939,1635,5.764,2645,9.487,2646,9.487,2647,9.487,2648,9.558,2649,6.481]],["title/overview.html",[2650,5.704]],["body/overview.html",[2,1.593,25,0.007,87,0.004,88,0.004,91,1.929,123,4.659,150,6.562,151,2.229,152,3.172,153,3.665,154,3.665,155,3.665,156,5.436,157,5.841,158,3.552,159,4.417,160,3.52,161,2.474,162,2.474,208,1.832,262,4.659,269,6.562,270,3.665,271,3.665,300,4.447,319,6.826,320,3.665,321,3.665,322,3.665,323,6.752,324,4.906,325,5.647,394,4.659,408,6.223,409,3.665,411,3.665,601,5.474,665,3.665,666,3.665,667,3.665,669,4.906,670,4.906,671,4.906,980,0.567,1192,4.659,1598,3.665,1599,3.665,2083,3.365,2650,3.665,2651,4.121,2652,4.121,2653,4.121,2654,4.121,2655,4.121,2656,4.121]],["title/properties.html",[9,0.807,2500,3.472]],["body/properties.html",[9,1.046,25,0.007,87,0.006,88,0.006,292,4.088,1053,5.972,1847,6.505,2447,6.505,2644,6.505,2657,7.314]],["title/todo.html",[2425,3.472,2444,2.806,2445,2.806]],["body/todo.html",[25,0.006,26,0.95,76,1.973,84,4.769,87,0.006,88,0.006,97,2.683,112,3.59,315,5.013,387,5.058,559,2.683,568,6.579,598,5.902,801,4.529,1766,5.058,2109,5.902,2186,6.556,2320,5.902,2452,8.302,2466,5.902,2658,6.636,2659,6.636,2660,6.636,2661,6.636,2662,6.636,2663,8.029,2664,8.029,2665,6.636,2666,8.029]],["title/miscellaneous/typealiases.html",[2532,2.438,2667,5.641]],["body/miscellaneous/typealiases.html",[8,0.349,24,0.388,25,0.006,87,0.006,88,0.006,1099,4.027,1105,4.917,1106,5.754,1366,4.325,1647,6.884,1652,7.499,1653,6.408,2532,4.499,2668,7.205,2669,7.205]],["title/miscellaneous/variables.html",[2532,2.438,2670,5.017]],["body/miscellaneous/variables.html",[3,0.091,8,0.238,22,1.353,24,0.404,25,0.007,26,0.702,55,2.904,81,0.28,87,0.005,88,0.005,100,1.458,114,1.431,131,4.515,133,2.653,138,1.778,139,0.927,144,2.404,159,3.578,207,1.458,225,2.124,227,1.778,250,3.247,564,2.653,579,3.578,610,3.525,635,5.042,1158,3.751,1213,4.515,1368,2.236,1654,3.195,1824,4.362,2482,4.362,2492,4.362,2493,5.884,2494,4.362,2495,5.884,2496,4.362,2497,5.884,2532,3.062,2670,4.362,2671,4.904,2672,4.904,2673,4.904,2674,4.904,2675,4.904,2676,6.615,2677,4.904,2678,4.904,2679,4.904,2680,4.904,2681,4.904,2682,4.904,2683,4.904,2684,4.904,2685,4.904,2686,4.904,2687,4.904,2688,4.904,2689,4.904,2690,4.904,2691,4.904,2692,4.904,2693,4.904,2694,4.904,2695,4.904,2696,4.904,2697,4.904,2698,4.904,2699,4.904,2700,4.904,2701,4.904,2702,4.904,2703,4.904,2704,4.904,2705,4.904,2706,4.904,2707,4.904,2708,4.904,2709,4.904,2710,4.904,2711,4.904]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":830,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":309,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"changelog.html":{}}}],["0.0.2",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":2447,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.1.13",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1639,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["0.5.1",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1771,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["1.0.0",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["1.0.35",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2489,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":563,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"changelog.html":{}}}],["10.0.2",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":1625,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["10})@column({unique",{"_index":1963,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["15",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2654,"title":{},"body":{"overview.html":{}}}],["2",{"_index":2656,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1147,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{}}}],["20)@column({unique",{"_index":2338,"title":{},"body":{"entities/UserEntity.html":{}}}],["20)@isnotempty",{"_index":2251,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["200",{"_index":291,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["2023",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2653,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":2577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["255",{"_index":86,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["255})@isnotempty()@isstring",{"_index":31,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{}}}],["3.0.8",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1570,"title":{},"body":{"entities/GroupEntity.html":{}}}],["30)@column({nullable",{"_index":1565,"title":{},"body":{"entities/GroupEntity.html":{}}}],["300",{"_index":1629,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["30000",{"_index":1624,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3001",{"_index":2382,"title":{},"body":{"modules/UserModule.html":{}}}],["300mb",{"_index":1620,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["3101",{"_index":200,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3102",{"_index":203,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["3103",{"_index":206,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["3201",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["3202",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["3600",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1665,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["4.0.1",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1300,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["404",{"_index":1297,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["4210",{"_index":1974,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["5",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1634,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["500000",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":1225,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["6",{"_index":1962,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"injectables/UserService.html":{}}}],["6.2.1",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":2652,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["79",{"_index":2655,"title":{},"body":{"overview.html":{}}}],["8.9.0",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["89f4011bb96d",{"_index":1990,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["89f4011bb96d'})@primarygeneratedcolumn('uuid",{"_index":1976,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["8e24",{"_index":1975,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["9",{"_index":2651,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["________",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["______________________________________________________",{"_index":879,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["_________________________________________________________",{"_index":2341,"title":{},"body":{"entities/UserEntity.html":{}}}],["abc123",{"_index":1960,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":2435,"title":{},"body":{"injectables/UserService.html":{}}}],["accesstokencookie",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.auth",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstokencookie.token",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["active",{"_index":2589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":2452,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["address",{"_index":84,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["address.company",{"_index":917,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["address.entity",{"_index":943,"title":{},"body":{"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["address.user",{"_index":2305,"title":{},"body":{"entities/UserEntity.html":{}}}],["addressentity",{"_index":1,"title":{"entities/AddressEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["addresses",{"_index":907,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/UserEntity.html":{}}}],["addressrepository",{"_index":486,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["admin",{"_index":2091,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["agent",{"_index":1438,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["agent']?.split('(')[1]?.split(')')[0]?.split",{"_index":2081,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["aliases",{"_index":2668,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allocated",{"_index":1627,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["alphanumeric",{"_index":2432,"title":{},"body":{"injectables/UserService.html":{}}}],["already",{"_index":1371,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"miscellaneous/enumerations.html":{}}}],["amount",{"_index":1672,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["angoston",{"_index":2620,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":2588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":97,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"controllers/HealthCheckController.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["api.log",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/api",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["api/auth/auth.module",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["api/entities",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{}}}],["api/health",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/domain/entities/user.entity",{"_index":1216,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["api/user/user.module",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["api_landing_page",{"_index":701,"title":{},"body":{"modules/AuthModule.html":{}}}],["api_log",{"_index":195,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["api_mail",{"_index":201,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["api_name",{"_index":1023,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_type",{"_index":1024,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_version",{"_index":1025,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["api_waiting_list",{"_index":204,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["apidescription",{"_index":310,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apigroup",{"_index":306,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apilandingpagecontroller",{"_index":90,"title":{"controllers/ApiLandingPageController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"coverage.html":{}}}],["apilandingpagemodule",{"_index":150,"title":{"modules/ApiLandingPageModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apilandingpageservice",{"_index":123,"title":{"injectables/ApiLandingPageService.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"coverage.html":{},"overview.html":{}}}],["apiloggerservice",{"_index":1390,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["apilogmodule",{"_index":156,"title":{"modules/ApiLogModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["apilogservice",{"_index":158,"title":{"injectables/ApiLogService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["apimailcontroller",{"_index":253,"title":{"controllers/ApiMailController.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"coverage.html":{}}}],["apimailmodule",{"_index":269,"title":{"modules/ApiMailModule.html":{}},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apimailservice",{"_index":262,"title":{"injectables/ApiMailService.html":{}},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"coverage.html":{},"overview.html":{}}}],["apiname",{"_index":305,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["apiokresponse",{"_index":125,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apioperation",{"_index":126,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apiproperty",{"_index":994,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail",{"_index":1141,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":1143,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@length(5",{"_index":1146,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional",{"_index":1145,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({enum",{"_index":997,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({example",{"_index":1959,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["apiproperty({nullable",{"_index":1006,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apiproperty({type",{"_index":1000,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["apiresponse",{"_index":302,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["apisuccess",{"_index":311,"title":{},"body":{"controllers/AppController.html":{}}}],["apisuccessexample",{"_index":313,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags",{"_index":127,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["apitags('api",{"_index":137,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["apitags('auth",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('healthcheck",{"_index":1596,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["apitags('helloworld",{"_index":303,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('mail",{"_index":265,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["apitags('user",{"_index":2283,"title":{},"body":{"controllers/UserController.html":{}}}],["apitype",{"_index":983,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["apitypeenum",{"_index":996,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["apitypeenum.wallet_share_api",{"_index":1055,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["apiversion",{"_index":308,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{}}}],["app",{"_index":395,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["app.controller",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":301,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":287,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":319,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":300,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"coverage.html":{},"overview.html":{}}}],["appteste2econtroller",{"_index":378,"title":{"controllers/AppTestE2eController.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"coverage.html":{}}}],["appteste2emodule",{"_index":408,"title":{"modules/AppTestE2eModule.html":{}},"body":{"modules/AppTestE2eModule.html":{},"modules.html":{},"overview.html":{}}}],["appteste2eservice",{"_index":394,"title":{"injectables/AppTestE2eService.html":{}},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":1733,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["argumentshost",{"_index":1412,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["arnaud",{"_index":2617,"title":{},"body":{"index.html":{}}}],["array",{"_index":808,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["async",{"_index":100,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"changelog.html":{},"todo.html":{}}}],["auth.controller",{"_index":678,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":1752,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/guards/role.guard",{"_index":132,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":2281,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":566,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication=${token",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationservice",{"_index":1785,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authenticationtoken",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":1753,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":1754,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":1780,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":323,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1847,"title":{},"body":{"entities/MessageEntity.html":{},"properties.html":{}}}],["authservice",{"_index":601,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1635,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"modules.html":{}}}],["await",{"_index":225,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["banner_url",{"_index":908,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["bannerpicture",{"_index":909,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["baseentity",{"_index":2166,"title":{},"body":{"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":492,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RegisterHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":1544,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["bcrypt.compare(query.refreshtoken",{"_index":1523,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["bcrypt.hash(command.refreshtoken",{"_index":2122,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["bcrypt.hashsync(command.password",{"_index":2035,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":562,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["before",{"_index":2318,"title":{},"body":{"entities/UserEntity.html":{}}}],["bf55",{"_index":1973,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["birthday",{"_index":769,"title":{},"body":{"entities/CardEntity.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/ErrorCustomEventHandler.html":{},"entities/NotificationEntity.html":{},"classes/RegisterHandler.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":2491,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["briand",{"_index":2615,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2648,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2645,"title":{},"body":{"modules.html":{}}}],["call",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["canactivate(context",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canceled",{"_index":2582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card",{"_index":517,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["card.entity",{"_index":423,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["card.entity.ts",{"_index":945,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"coverage.html":{}}}],["card.entity.ts:27",{"_index":956,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:37",{"_index":953,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:42",{"_index":949,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:47",{"_index":951,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:53",{"_index":954,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:56",{"_index":957,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.entity.ts:59",{"_index":955,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["card.enum",{"_index":865,"title":{},"body":{"entities/CardEntity.html":{}}}],["card.enum.ts",{"_index":2549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.owner",{"_index":1943,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card.profileswhosavedcard",{"_index":1946,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["card_id",{"_index":1954,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["cardentity",{"_index":415,"title":{"entities/CardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["cardentity.connectedcardone",{"_index":948,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.connectedcardtwo",{"_index":950,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentity.groupmemberships",{"_index":1573,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["cardentity.media",{"_index":1827,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardentity.messages",{"_index":1848,"title":{},"body":{"entities/MessageEntity.html":{}}}],["cardentity.occupations",{"_index":1891,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["cardentity.socialnetwork",{"_index":2148,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["cardentityone",{"_index":946,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardentitytwo",{"_index":947,"title":{},"body":{"entities/ConnectedCardEntity.html":{}}}],["cardpicture",{"_index":1819,"title":{},"body":{"entities/MediaEntity.html":{}}}],["cardrepository",{"_index":466,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["cards",{"_index":1888,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/SocialNetworkEntity.html":{}}}],["cascade",{"_index":40,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["case",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["catch(exception",{"_index":1411,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["catcherror",{"_index":1280,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["catcherror(err",{"_index":1288,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["category",{"_index":2568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changelog",{"_index":2446,"title":{"changelog.html":{}},"body":{}}],["characters",{"_index":1666,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["charset",{"_index":2434,"title":{},"body":{"injectables/UserService.html":{}}}],["check",{"_index":1587,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.controller",{"_index":1602,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.controller.ts",{"_index":1586,"title":{},"body":{"controllers/HealthCheckController.html":{},"coverage.html":{}}}],["check.controller.ts:27",{"_index":1590,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["check.module",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["check.module.ts",{"_index":1600,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["check.query",{"_index":1203,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check.query.ts",{"_index":1606,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check.response",{"_index":1206,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["check.response.ts",{"_index":1641,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check.response.ts:3",{"_index":1645,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.response.ts:4",{"_index":1646,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["check.service",{"_index":1594,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["check.service.ts",{"_index":1196,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check.service.ts:10",{"_index":1200,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check.service.ts:7",{"_index":1199,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["check/cqrs/handler/query/health",{"_index":1607,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["check/cqrs/query/health",{"_index":1605,"title":{},"body":{"classes/HealthCheckQuery.html":{},"coverage.html":{}}}],["check/custom",{"_index":1194,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"coverage.html":{}}}],["check/domain/response/health",{"_index":1640,"title":{},"body":{"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["check/health",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["checkhealth",{"_index":1197,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["city",{"_index":10,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["class",{"_index":81,"title":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["class.exception",{"_index":2238,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["classdesc",{"_index":2157,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["classes",{"_index":980,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["classic",{"_index":2600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cleardatabasetest",{"_index":383,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["client",{"_index":1031,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["client_address",{"_index":1684,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_name",{"_index":1686,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["client_vat_number",{"_index":1688,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientaddress",{"_index":1673,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientname",{"_index":1674,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["clientproxy",{"_index":1029,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["clientsmodule",{"_index":166,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["clientsmodule.register",{"_index":194,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["clientvatnumber",{"_index":1675,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["cluster_apilandingpagemodule",{"_index":153,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_imports",{"_index":154,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilandingpagemodule_providers",{"_index":155,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"overview.html":{}}}],["cluster_apilogmodule",{"_index":229,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_imports",{"_index":231,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apilogmodule_providers",{"_index":230,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["cluster_apimailmodule",{"_index":270,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_apimailmodule_imports",{"_index":272,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cluster_apimailmodule_providers",{"_index":271,"title":{},"body":{"modules/ApiMailModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule",{"_index":409,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_appteste2emodule_imports",{"_index":410,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["cluster_appteste2emodule_providers",{"_index":411,"title":{},"body":{"modules/AppTestE2eModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":665,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":667,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":668,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":666,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule",{"_index":1598,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_healthcheckmodule_providers",{"_index":1599,"title":{},"body":{"modules/HealthCheckModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2367,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":2369,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2368,"title":{},"body":{"modules/UserModule.html":{}}}],["cmd",{"_index":663,"title":{},"body":{"controllers/AuthController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["code",{"_index":1956,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["code.entity",{"_index":428,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["code.entity.ts",{"_index":1336,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/ReferralCodeEntity.html":{},"coverage.html":{}}}],["code.entity.ts:19",{"_index":1977,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:21",{"_index":1353,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:25",{"_index":1965,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:26",{"_index":1349,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:29",{"_index":1987,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:31",{"_index":1347,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:33",{"_index":1980,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:35",{"_index":1355,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:37",{"_index":1982,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:39",{"_index":1352,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:43",{"_index":1971,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:44",{"_index":1360,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:47",{"_index":1967,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:51",{"_index":1984,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["code.entity.ts:52",{"_index":1357,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:59",{"_index":1343,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:62",{"_index":1358,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.entity.ts:65",{"_index":1344,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["code.enum.ts",{"_index":2540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":70,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["column('text",{"_index":807,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/UserEntity.html":{}}}],["column()@length(5",{"_index":2337,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({default",{"_index":817,"title":{},"body":{"entities/CardEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":28,"title":{},"body":{"entities/AddressEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["column({nullable",{"_index":793,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":828,"title":{},"body":{"entities/CardEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["column({unique",{"_index":2184,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["command",{"_index":1038,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{}}}],["command.createuserdto",{"_index":1114,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.email",{"_index":1123,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.createuserdto.username",{"_index":1126,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["command.email",{"_index":2034,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["command.mail).pipe",{"_index":1287,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["command.user",{"_index":2245,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.userid",{"_index":2246,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["command.username",{"_index":2036,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/create",{"_index":1040,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{}}}],["command/delete",{"_index":1277,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommandHandler.html":{}}}],["command/register.command",{"_index":2021,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":2053,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["command/send",{"_index":2102,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["command/set",{"_index":2120,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["command/update",{"_index":2235,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["commandbus",{"_index":212,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":1039,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["commandhandler(createlogcommand",{"_index":1044,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["commandhandler(createusercommand",{"_index":1112,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["commandhandler(deletemailcommand",{"_index":1284,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":1323,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["commandhandler(registercommand",{"_index":2023,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":2054,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["commandhandler(sendmailcommand",{"_index":2103,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":2121,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":2241,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["communicate",{"_index":873,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["companies",{"_index":1889,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company",{"_index":11,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"miscellaneous/enumerations.html":{}}}],["company.employees",{"_index":889,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["company.entity",{"_index":77,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{}}}],["company_account",{"_index":2599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company_address",{"_index":1690,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_employee",{"_index":520,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["company_name",{"_index":1692,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["company_vat_number",{"_index":1694,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyaddress",{"_index":1676,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["companyemployee",{"_index":1927,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployee.profile",{"_index":1928,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyemployeeentity",{"_index":418,"title":{"entities/CompanyEmployeeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyemployeeentity.company",{"_index":928,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["companyemployeerepository",{"_index":468,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyentity",{"_index":34,"title":{"entities/CompanyEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MediaEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["companyentity.addresses",{"_index":36,"title":{},"body":{"entities/AddressEntity.html":{}}}],["companyentity.bannerpicture",{"_index":1829,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentity.occupations",{"_index":1893,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["companyentity.ownerprofile",{"_index":1941,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["companyentity.profilepicture",{"_index":1831,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyentitybanner",{"_index":1820,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyname",{"_index":770,"title":{},"body":{"entities/CardEntity.html":{},"entities/InvoicesEntity.html":{}}}],["companyprofilepicture",{"_index":1821,"title":{},"body":{"entities/MediaEntity.html":{}}}],["companyrepository",{"_index":467,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["companyvatnumber",{"_index":1677,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["compose",{"_index":2630,"title":{},"body":{"index.html":{}}}],["config",{"_index":681,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["configmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":2315,"title":{},"body":{"entities/UserEntity.html":{}}}],["confirming",{"_index":2663,"title":{},"body":{"todo.html":{}}}],["connect",{"_index":1269,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["connected",{"_index":862,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["connected_card",{"_index":522,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{}}}],["connectedcard",{"_index":798,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["connectedcard.cardentityone",{"_index":799,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcard.cardentitytwo",{"_index":803,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardentity",{"_index":421,"title":{"entities/ConnectedCardEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"coverage.html":{}}}],["connectedcardentity.conversation",{"_index":962,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["connectedcardone",{"_index":771,"title":{},"body":{"entities/CardEntity.html":{}}}],["connectedcardrepository",{"_index":469,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["connectedcardtwo",{"_index":772,"title":{},"body":{"entities/CardEntity.html":{}}}],["console.log('createlogcommandhandler",{"_index":1057,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["const",{"_index":250,"title":{},"body":{"injectables/ApiLogService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraintmap",{"_index":1652,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["constraints",{"_index":1657,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constraints[key",{"_index":1660,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('api_log",{"_index":1045,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(@inject('api_waiting_list",{"_index":1285,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["constructor(apiloggerservice",{"_index":1389,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["constructor(apilogservice",{"_index":1168,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["constructor(authenticationservice",{"_index":1783,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(client",{"_index":1028,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["constructor(commandbus",{"_index":211,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/UserService.html":{}}}],["constructor(createuserdto",{"_index":1087,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["constructor(deletemaildto",{"_index":1306,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["constructor(email",{"_index":1477,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["constructor(errors",{"_index":1648,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["constructor(healthcheckservice",{"_index":1608,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["constructor(heathcheck",{"_index":1643,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["constructor(id",{"_index":1811,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["constructor(jwtservice",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(login",{"_index":2351,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["constructor(module",{"_index":1155,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["constructor(partial",{"_index":902,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["constructor(private",{"_index":138,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"controllers/HealthCheckController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor(public",{"_index":1090,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/MailLandingPageDto.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["constructor(querybus",{"_index":1198,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["constructor(refreshtoken",{"_index":1527,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(userid",{"_index":1316,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserEvent.html":{}}}],["constructor(username",{"_index":1491,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":464,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["constructor(users",{"_index":2345,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":1758,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["consumer",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestloggingmiddleware",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":1664,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["content",{"_index":295,"title":{},"body":{"controllers/AppController.html":{},"entities/ConversationEntity.html":{},"controllers/HealthCheckController.html":{},"entities/MessageEntity.html":{}}}],["context.switchtohttp().getrequest",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributing",{"_index":2468,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributors",{"_index":2614,"title":{},"body":{"index.html":{}}}],["controller",{"_index":89,"title":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/auth",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api",{"_index":136,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{}}}],["controller('health",{"_index":1595,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["controller('user",{"_index":2282,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":91,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversation",{"_index":524,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{}}}],["conversation.entity",{"_index":438,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["conversation.entity.ts",{"_index":1737,"title":{},"body":{"entities/JoinedConversation.html":{},"coverage.html":{}}}],["conversation.entity.ts:21",{"_index":1743,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:24",{"_index":1746,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:32",{"_index":1745,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:36",{"_index":1740,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:43",{"_index":1741,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:46",{"_index":1747,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.entity.ts:49",{"_index":1742,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.group",{"_index":1558,"title":{},"body":{"entities/GroupEntity.html":{}}}],["conversation.joinedprofiles",{"_index":1749,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.joinedprofiles)@joincolumn",{"_index":1739,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["conversation.messages",{"_index":1851,"title":{},"body":{"entities/MessageEntity.html":{}}}],["conversationentity",{"_index":424,"title":{"entities/ConversationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"coverage.html":{}}}],["conversationentity.notifications",{"_index":1868,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["conversationrepository",{"_index":470,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["conversations",{"_index":1552,"title":{},"body":{"entities/GroupEntity.html":{}}}],["cookie",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["country",{"_index":12,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["coverage",{"_index":2469,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrs/command/create",{"_index":248,"title":{},"body":{"injectables/ApiLogService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/delete",{"_index":218,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/register.command",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["cqrs/command/remove",{"_index":2421,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/send",{"_index":286,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["cqrs/command/set",{"_index":2422,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":2423,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/event",{"_index":692,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/create",{"_index":233,"title":{},"body":{"modules/ApiLogModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/delete",{"_index":180,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/command/register.handler",{"_index":684,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/command/remove",{"_index":2376,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/send",{"_index":275,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/command/set",{"_index":2374,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/command/update",{"_index":2375,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/create",{"_index":2377,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/delete",{"_index":183,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/event/login",{"_index":2380,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/remove",{"_index":2378,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/send",{"_index":277,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["cqrs/handler/event/set",{"_index":2379,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/event/update",{"_index":2381,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/query/get",{"_index":186,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/query/health",{"_index":1604,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["cqrs/query/get",{"_index":220,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/UserService.html":{}}}],["cqrs/query/health",{"_index":1202,"title":{},"body":{"injectables/CustomHealthCheckService.html":{}}}],["cqrsmodule",{"_index":169,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["create",{"_index":1159,"title":{},"body":{"classes/CreateUserEvent.html":{},"changelog.html":{}}}],["create/address.entity",{"_index":461,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/address.entity.ts",{"_index":7,"title":{},"body":{"entities/AddressEntity.html":{},"coverage.html":{}}}],["create/address.entity.ts:17",{"_index":52,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:22",{"_index":60,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:27",{"_index":33,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:32",{"_index":59,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:37",{"_index":42,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:42",{"_index":68,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:47",{"_index":57,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:52",{"_index":58,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:55",{"_index":56,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:58",{"_index":47,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:61",{"_index":63,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:64",{"_index":50,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:67",{"_index":66,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/address.entity.ts:70",{"_index":41,"title":{},"body":{"entities/AddressEntity.html":{}}}],["create/card.entity",{"_index":416,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/card.entity.ts",{"_index":768,"title":{},"body":{"entities/CardEntity.html":{},"coverage.html":{}}}],["create/card.entity.ts:100",{"_index":804,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:103",{"_index":841,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:109",{"_index":836,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:115",{"_index":815,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:121",{"_index":823,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:127",{"_index":825,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:132",{"_index":844,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:139",{"_index":847,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:142",{"_index":856,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:145",{"_index":852,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:148",{"_index":854,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:155",{"_index":805,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:158",{"_index":848,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:161",{"_index":806,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:35",{"_index":816,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:39",{"_index":842,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:42",{"_index":819,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:46",{"_index":812,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:50",{"_index":820,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:54",{"_index":796,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:57",{"_index":839,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:61",{"_index":811,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:65",{"_index":850,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:68",{"_index":794,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:71",{"_index":826,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:75",{"_index":832,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:78",{"_index":831,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:81",{"_index":845,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:88",{"_index":838,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/card.entity.ts:94",{"_index":802,"title":{},"body":{"entities/CardEntity.html":{}}}],["create/company",{"_index":419,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/company.entity",{"_index":417,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/company.entity.ts",{"_index":906,"title":{},"body":{"entities/CompanyEntity.html":{},"coverage.html":{}}}],["create/company.entity.ts:104",{"_index":924,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:107",{"_index":940,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:110",{"_index":925,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:33",{"_index":930,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:36",{"_index":931,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:39",{"_index":939,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:42",{"_index":919,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:45",{"_index":926,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:48",{"_index":941,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:51",{"_index":916,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:54",{"_index":942,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:57",{"_index":922,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:60",{"_index":923,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:63",{"_index":936,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:66",{"_index":927,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:73",{"_index":929,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:77",{"_index":933,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:80",{"_index":935,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:86",{"_index":938,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:92",{"_index":921,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/company.entity.ts:97",{"_index":918,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["create/connected",{"_index":422,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConnectedCardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["create/conversation.entity",{"_index":425,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/conversation.entity.ts",{"_index":959,"title":{},"body":{"entities/ConversationEntity.html":{},"coverage.html":{}}}],["create/conversation.entity.ts:24",{"_index":969,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:27",{"_index":964,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:33",{"_index":963,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:36",{"_index":968,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:39",{"_index":973,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:42",{"_index":971,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:45",{"_index":975,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:52",{"_index":965,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:55",{"_index":976,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/conversation.entity.ts:58",{"_index":966,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["create/discount",{"_index":427,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"coverage.html":{}}}],["create/entities",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["create/enum/notification",{"_index":2569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/role",{"_index":2089,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["create/enum/status",{"_index":2579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/transferable",{"_index":2591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/type",{"_index":2594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/enum/who",{"_index":2603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create/group",{"_index":432,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["create/group.entity",{"_index":430,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/group.entity.ts",{"_index":1551,"title":{},"body":{"entities/GroupEntity.html":{},"coverage.html":{}}}],["create/group.entity.ts:24",{"_index":1562,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:28",{"_index":1566,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:30",{"_index":1564,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:37",{"_index":1559,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:45",{"_index":1568,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:53",{"_index":1557,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:60",{"_index":1560,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:63",{"_index":1569,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/group.entity.ts:66",{"_index":1561,"title":{},"body":{"entities/GroupEntity.html":{}}}],["create/invoices.entity",{"_index":435,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/invoices.entity.ts",{"_index":1671,"title":{},"body":{"entities/InvoicesEntity.html":{},"coverage.html":{}}}],["create/invoices.entity.ts:103",{"_index":1707,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:110",{"_index":1696,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:113",{"_index":1715,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:116",{"_index":1698,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:20",{"_index":1703,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:25",{"_index":1683,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:30",{"_index":1697,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:41",{"_index":1705,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:46",{"_index":1693,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:51",{"_index":1691,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:56",{"_index":1695,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:61",{"_index":1687,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:66",{"_index":1685,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:71",{"_index":1689,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:76",{"_index":1699,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:81",{"_index":1710,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:86",{"_index":1714,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:91",{"_index":1712,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/invoices.entity.ts:95",{"_index":1702,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["create/joined",{"_index":437,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/JoinedConversation.html":{},"coverage.html":{}}}],["create/media.entity",{"_index":440,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/media.entity.ts",{"_index":1818,"title":{},"body":{"entities/MediaEntity.html":{},"coverage.html":{}}}],["create/media.entity.ts:22",{"_index":1839,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:25",{"_index":1840,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:32",{"_index":1838,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:37",{"_index":1836,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:40",{"_index":1844,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:42",{"_index":1842,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:45",{"_index":1828,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:48",{"_index":1832,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:50",{"_index":1830,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:57",{"_index":1833,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:60",{"_index":1845,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/media.entity.ts:63",{"_index":1834,"title":{},"body":{"entities/MediaEntity.html":{}}}],["create/message.entity",{"_index":442,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/message.entity.ts",{"_index":1846,"title":{},"body":{"entities/MessageEntity.html":{},"coverage.html":{}}}],["create/message.entity.ts:20",{"_index":1855,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:23",{"_index":1850,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:30",{"_index":1849,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:33",{"_index":1852,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:40",{"_index":1853,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:43",{"_index":1856,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/message.entity.ts:46",{"_index":1854,"title":{},"body":{"entities/MessageEntity.html":{}}}],["create/notification.entity",{"_index":458,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/notification.entity.ts",{"_index":1865,"title":{},"body":{"entities/NotificationEntity.html":{},"coverage.html":{}}}],["create/notification.entity.ts:23",{"_index":1873,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:28",{"_index":1879,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:33",{"_index":1872,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:36",{"_index":1881,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:39",{"_index":1875,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:42",{"_index":1876,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:49",{"_index":1884,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:52",{"_index":1878,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:58",{"_index":1869,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:65",{"_index":1870,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:68",{"_index":1882,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/notification.entity.ts:71",{"_index":1871,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["create/occupation.entity",{"_index":444,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/occupation.entity.ts",{"_index":1887,"title":{},"body":{"entities/OccupationEntity.html":{},"coverage.html":{}}}],["create/occupation.entity.ts:21",{"_index":1897,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:24",{"_index":1898,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:31",{"_index":1900,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:34",{"_index":1894,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:37",{"_index":1892,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:44",{"_index":1895,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:47",{"_index":1901,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/occupation.entity.ts:50",{"_index":1896,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["create/plan.entity",{"_index":446,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{}}}],["create/plan.entity.ts",{"_index":1903,"title":{},"body":{"entities/PlanEntity.html":{},"coverage.html":{}}}],["create/plan.entity.ts:19",{"_index":1914,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:22",{"_index":1915,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:25",{"_index":1909,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:28",{"_index":1916,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:31",{"_index":1913,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:34",{"_index":1912,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:41",{"_index":1918,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:48",{"_index":1907,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:51",{"_index":1919,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/plan.entity.ts:54",{"_index":1908,"title":{},"body":{"entities/PlanEntity.html":{}}}],["create/profile.entity",{"_index":448,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/profile.entity.ts",{"_index":1920,"title":{},"body":{"entities/ProfileEntity.html":{},"coverage.html":{}}}],["create/profile.entity.ts:105",{"_index":1942,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:111",{"_index":1936,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:118",{"_index":1930,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:121",{"_index":1949,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:124",{"_index":1931,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:30",{"_index":1932,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:33",{"_index":1952,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:40",{"_index":1951,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:46",{"_index":1944,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:61",{"_index":1948,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:75",{"_index":1940,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:81",{"_index":1929,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:87",{"_index":1945,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:93",{"_index":1926,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/profile.entity.ts:99",{"_index":1934,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["create/referal",{"_index":460,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["create/social",{"_index":450,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["create/strip",{"_index":453,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["create/subscription.entity",{"_index":456,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["create/subscription.entity.ts",{"_index":2168,"title":{},"body":{"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["create/subscription.entity.ts:25",{"_index":2178,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:29",{"_index":2183,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:33",{"_index":2177,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:43",{"_index":2185,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:47",{"_index":2194,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:51",{"_index":2192,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:58",{"_index":2182,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:61",{"_index":2197,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:64",{"_index":2180,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:67",{"_index":2176,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:74",{"_index":2173,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:77",{"_index":2195,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["create/subscription.entity.ts:80",{"_index":2174,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["created",{"_index":1180,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["created_at",{"_index":45,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["createdatecolumn",{"_index":71,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({name",{"_index":44,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["createlog",{"_index":235,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlog(log",{"_index":238,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogcommand",{"_index":247,"title":{"classes/CreateLogCommand.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"coverage.html":{}}}],["createlogcommandhandler",{"_index":188,"title":{"classes/CreateLogCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createlogdto",{"_index":239,"title":{"classes/CreateLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["createlogdto.apiname",{"_index":1395,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.apitype",{"_index":1399,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.apiversion",{"_index":1396,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["createlogdto.body",{"_index":1446,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.error",{"_index":1404,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.headers",{"_index":1444,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.ip",{"_index":1455,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.loggingtype",{"_index":1397,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["createlogdto.method",{"_index":1400,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.os",{"_index":1454,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.platform",{"_index":1457,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responsebody",{"_index":1452,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.responseheaders",{"_index":1450,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.route",{"_index":1402,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.screensize",{"_index":1458,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogdto.status",{"_index":1448,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["createlogformethode",{"_index":236,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createlogformethode(log",{"_index":242,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["createmethodlogdto",{"_index":243,"title":{"classes/CreateMethodLogDto.html":{}},"body":{"injectables/ApiLogService.html":{},"classes/CreateMethodLogDto.html":{},"coverage.html":{}}}],["createtimestamp",{"_index":2204,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["createtypeormoptions",{"_index":1208,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["createuser",{"_index":2260,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":2284,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":2263,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createusercommand",{"_index":1084,"title":{"classes/CreateUserCommand.html":{}},"body":{"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusercommand(createuserdto",{"_index":2424,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercommandhandler",{"_index":1091,"title":{"classes/CreateUserCommandHandler.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserdto",{"_index":390,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":560,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.roles",{"_index":565,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserdto.username",{"_index":558,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["createuserevent",{"_index":1152,"title":{"classes/CreateUserEvent.html":{}},"body":{"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["createusereventhandler",{"_index":1163,"title":{"classes/CreateUserEventHandler.html":{}},"body":{"classes/CreateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["createuserresponse",{"_index":1108,"title":{"classes/CreateUserResponse.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createusertest",{"_index":384,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["createusertest(@body",{"_index":406,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["createusertest(createuserdto",{"_index":389,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{}}}],["creation",{"_index":2161,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["credentials",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{}}}],["cron",{"_index":2665,"title":{},"body":{"todo.html":{}}}],["ctx",{"_index":1415,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":1418,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1417,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["currency",{"_index":1678,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["current",{"_index":2117,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["current_timestamp",{"_index":2210,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["currenthashedrefreshtoken",{"_index":1521,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/UserEntity.html":{}}}],["custom",{"_index":1593,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{}}}],["custom.event",{"_index":177,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["custom.event.ts",{"_index":1384,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"coverage.html":{}}}],["custom.event.ts:1",{"_index":1385,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:6",{"_index":1388,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:7",{"_index":1387,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["custom.event.ts:8",{"_index":1386,"title":{},"body":{"classes/ErrorCustomEvent.html":{}}}],["customer",{"_index":2189,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["customhealthcheckservice",{"_index":1192,"title":{"injectables/CustomHealthCheckService.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["database",{"_index":387,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/DatabaseConfiguration.html":{},"index.html":{},"todo.html":{}}}],["databaseconfiguration",{"_index":335,"title":{"injectables/DatabaseConfiguration.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["date",{"_index":43,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserResponse.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["date'})@isdate",{"_index":1351,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["date().toisostring",{"_index":1423,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["date(date.now",{"_index":2216,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["date})@createdatecolumn",{"_index":1966,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["date})@updatedatecolumn",{"_index":1983,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["david",{"_index":2618,"title":{},"body":{"index.html":{}}}],["dd/mm/yyyy",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":2601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":1700,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decimal'})@isnotempty()@isnumber",{"_index":1709,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/MailDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{}}}],["default",{"_index":55,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"entities/GroupMembershipEntity.html":{},"modules/HealthCheckModule.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"entities/NotificationEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":2144,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["defined",{"_index":32,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":106,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEvent.html":{},"controllers/UserController.html":{}}}],["delete('/delete",{"_index":104,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["delete(':id",{"_index":2296,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id')@useguards(undefined",{"_index":2273,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":1335,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["deleted_at",{"_index":49,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["deletedat",{"_index":14,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn",{"_index":72,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["deletedatecolumn({name",{"_index":48,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["deletemail",{"_index":101,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemail(@body",{"_index":147,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["deletemail(mail",{"_index":103,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["deletemailcommand",{"_index":217,"title":{"classes/DeleteMailCommand.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"coverage.html":{}}}],["deletemailcommandhandler",{"_index":179,"title":{"classes/DeleteMailCommandHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailCommandHandler.html":{},"coverage.html":{}}}],["deletemaildto",{"_index":1305,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["deletemailevent",{"_index":1278,"title":{"classes/DeleteMailEvent.html":{}},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"coverage.html":{}}}],["deletemailevent(command",{"_index":1302,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["deletemaileventhandler",{"_index":182,"title":{"classes/DeleteMailEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/DeleteMailEventHandler.html":{},"coverage.html":{}}}],["deletetimestamp",{"_index":2205,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["deleteusercommand",{"_index":1314,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["deleteusercommand(id",{"_index":2443,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteusercommandhandler",{"_index":1319,"title":{"classes/DeleteUserCommandHandler.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["deleteuserevent",{"_index":1322,"title":{"classes/DeleteUserEvent.html":{}},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"coverage.html":{}}}],["deleteuserevent(command.userid",{"_index":1325,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["deleteusereventhandler",{"_index":1330,"title":{"classes/DeleteUserEventHandler.html":{}},"body":{"classes/DeleteUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["deletion",{"_index":2163,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":292,"title":{},"body":{"controllers/AppController.html":{},"entities/CompanyEntity.html":{},"controllers/HealthCheckController.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":1256,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["device",{"_index":1440,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["diffusible",{"_index":2607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dirname",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["discount",{"_index":1377,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["discount_amount",{"_index":1345,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discount_codes",{"_index":526,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/DiscountCodeEntity.html":{}}}],["discount_percentage",{"_index":1348,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["discountamount",{"_index":1337,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["discountcodeentity",{"_index":426,"title":{"entities/DiscountCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["discountcodeentity.subscriptions",{"_index":2175,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discountcoderepository",{"_index":471,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["discountcodes",{"_index":2169,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["discounted_price",{"_index":1910,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountedprice",{"_index":1904,"title":{},"body":{"entities/PlanEntity.html":{}}}],["discountpercentage",{"_index":1338,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["disk",{"_index":1631,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["diskhealthindicator",{"_index":1612,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["docker",{"_index":2629,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2470,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation:serveapplication",{"_index":2640,"title":{},"body":{"index.html":{}}}],["domain/dto/create",{"_index":245,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/dto/mail",{"_index":222,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["domain/dto/mail.dto",{"_index":264,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["domain/dto/update",{"_index":2230,"title":{},"body":{"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/entities/user.entity",{"_index":1096,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["domain/enum/api",{"_index":1020,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{}}}],["domain/enum/logging",{"_index":1018,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["domain/enum/user",{"_index":1111,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["domain/enum/verbose",{"_index":1041,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["domain/response/create",{"_index":1109,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/response/health",{"_index":1205,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["domain/response/mail.response",{"_index":130,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["domain/response/user",{"_index":1505,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["domain/response/user.response",{"_index":1503,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dotenv",{"_index":682,"title":{},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["double",{"_index":2662,"title":{},"body":{"todo.html":{}}}],["dto/sign",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["duplicate_category_name",{"_index":2567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_email",{"_index":2561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicate_username",{"_index":2560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicateemailexception",{"_index":1102,"title":{"classes/DuplicateEmailException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["duplicateusernameexception",{"_index":1097,"title":{"classes/DuplicateUsernameException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["duration",{"_index":1905,"title":{},"body":{"entities/PlanEntity.html":{}}}],["e2e",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["e2e.controller",{"_index":413,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.controller.ts",{"_index":382,"title":{},"body":{"controllers/AppTestE2eController.html":{},"coverage.html":{}}}],["e2e.controller.ts:13",{"_index":388,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.controller.ts:19",{"_index":392,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["e2e.module.ts",{"_index":412,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["e2e.service",{"_index":396,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{}}}],["e2e.service.ts",{"_index":463,"title":{},"body":{"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["e2e.service.ts:105",{"_index":490,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:30",{"_index":487,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["e2e.service.ts:78",{"_index":489,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["each",{"_index":810,"title":{},"body":{"entities/CardEntity.html":{}}}],["eb823d92",{"_index":1972,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["email",{"_index":559,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/MailDto.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["email.exception",{"_index":1103,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["email.exception.ts",{"_index":1367,"title":{},"body":{"classes/DuplicateEmailException.html":{},"coverage.html":{}}}],["email.exception.ts:3",{"_index":1369,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["email.query",{"_index":1482,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["email.query.ts",{"_index":1476,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"coverage.html":{}}}],["email.query.ts:1",{"_index":1478,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["email.query.ts:2",{"_index":1479,"title":{},"body":{"classes/GetUserByEmailQuery.html":{}}}],["emails",{"_index":773,"title":{},"body":{"entities/CardEntity.html":{}}}],["employee",{"_index":2578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employee.entity",{"_index":420,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["employee.entity.ts",{"_index":888,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"coverage.html":{}}}],["employee.entity.ts:27",{"_index":893,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:30",{"_index":897,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:37",{"_index":890,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:40",{"_index":895,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:47",{"_index":891,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:50",{"_index":898,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.entity.ts:53",{"_index":892,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum",{"_index":900,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["employee.enum.ts",{"_index":2542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["employees",{"_index":910,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["empty",{"_index":2659,"title":{},"body":{"todo.html":{}}}],["end_date",{"_index":1350,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enddate",{"_index":1339,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":1191,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/UserLoginResponse.html":{}}}],["entitiestomovemodule",{"_index":324,"title":{"modules/EntitiesToMoveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{},"coverage.html":{}}}],["entity('company_employee",{"_index":901,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["entity('invoices",{"_index":1717,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["entity('occupation",{"_index":1902,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["entity('referral_code",{"_index":1989,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["entity.exception",{"_index":1107,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["entity.exception.ts",{"_index":1647,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity.exception.ts:6",{"_index":1650,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["entity.ts",{"_index":2203,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity.ts:11",{"_index":2208,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:13",{"_index":2212,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:19",{"_index":2214,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:24",{"_index":2213,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:5",{"_index":2207,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.ts:8",{"_index":2211,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["entity.{ts,js",{"_index":1245,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["entity/timestamp.extend",{"_index":2202,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":1233,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["enum",{"_index":846,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["enum/api",{"_index":1079,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/logging",{"_index":1080,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["enum/notification",{"_index":1885,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["enum/role",{"_index":899,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/GroupMembershipEntity.html":{}}}],["enum/transferable",{"_index":877,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/type",{"_index":868,"title":{},"body":{"entities/CardEntity.html":{}}}],["enum/user",{"_index":1150,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["enum/who",{"_index":863,"title":{},"body":{"entities/CardEntity.html":{}}}],["enumerations",{"_index":2533,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.pipe",{"_index":399,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["environment.pipe.ts",{"_index":1727,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["environment.pipe.ts:5",{"_index":1734,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["environment/app",{"_index":380,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["err",{"_index":1115,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.length",{"_index":1117,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["err.message",{"_index":1294,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["err.status",{"_index":1289,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["error",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["error('error",{"_index":1136,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["error('node_env",{"_index":1270,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["error('not",{"_index":2428,"title":{},"body":{"injectables/UserService.html":{}}}],["error('response",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["error.constraints",{"_index":1658,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["error.message",{"_index":1138,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["error.message.split(':')[0",{"_index":2286,"title":{},"body":{"controllers/UserController.html":{}}}],["error.message.split(':')[1",{"_index":2287,"title":{},"body":{"controllers/UserController.html":{}}}],["error.status",{"_index":2288,"title":{},"body":{"controllers/UserController.html":{}}}],["errorcustomevent",{"_index":1283,"title":{"classes/ErrorCustomEvent.html":{}},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["errorcustomevent('auth",{"_index":2030,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["errorcustomevent('user",{"_index":1326,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["errorcustomeventhandler",{"_index":174,"title":{"classes/ErrorCustomEventHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["errorenum",{"_index":2535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorexceptionfilter",{"_index":1407,"title":{"classes/ErrorExceptionFilter.html":{}},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["errorloggingmiddleware",{"_index":352,"title":{"injectables/ErrorLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["errorloggingmiddleware).forroutes",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["errors",{"_index":1651,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["errors.map((error",{"_index":1656,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["eslint",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"index.html":{}}}],["eslint/ban",{"_index":2073,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/explicit",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["eslint/no",{"_index":1468,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["event",{"_index":1172,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["event.createuserdto.email",{"_index":1181,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event.deletemaildto.mail",{"_index":1313,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["event.email",{"_index":2114,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["event.entity",{"_index":454,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["event.entity.ts",{"_index":2164,"title":{},"body":{"entities/StripEventEntity.html":{},"coverage.html":{}}}],["event.entity.ts:16",{"_index":2165,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["event.error",{"_index":1405,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.handler",{"_index":1403,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.localisation",{"_index":1401,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["event.method",{"_index":1178,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.module",{"_index":1177,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.userid",{"_index":1179,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["event.username",{"_index":1800,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["event/create",{"_index":1174,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["event/delete",{"_index":1279,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{}}}],["event/login",{"_index":1538,"title":{},"body":{"classes/GetUserLoginHandler.html":{},"classes/LoginOfUserEventHandler.html":{}}}],["event/register.event",{"_index":2003,"title":{},"body":{"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{}}}],["event/remove",{"_index":2067,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["event/send",{"_index":2101,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{}}}],["event/set",{"_index":2128,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["event/update",{"_index":2240,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["eventbus",{"_index":1276,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["eventshandler",{"_index":1173,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["eventshandler(createuserevent",{"_index":1175,"title":{},"body":{"classes/CreateUserEventHandler.html":{}}}],["eventshandler(deletemailevent",{"_index":1312,"title":{},"body":{"classes/DeleteMailEventHandler.html":{}}}],["eventshandler(deleteuserevent",{"_index":1334,"title":{},"body":{"classes/DeleteUserEventHandler.html":{}}}],["eventshandler(errorcustomevent",{"_index":1393,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["eventshandler(loginofuserevent",{"_index":1799,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["eventshandler(registerevent",{"_index":2004,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["eventshandler(removerefreshtokenevent",{"_index":2068,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["eventshandler(sendmailevent",{"_index":2112,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["eventshandler(setcurrentrefreshtokenevent",{"_index":2129,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["eventshandler(updateuserevent",{"_index":2256,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["example",{"_index":317,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{},"entities/ReferralCodeEntity.html":{}}}],["exceed",{"_index":1633,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["exception",{"_index":1414,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":1409,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:6",{"_index":1413,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1419,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exception/duplicate",{"_index":1100,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["exception/invalid",{"_index":1105,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["exception/no",{"_index":1858,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["exception/unauthorized",{"_index":2222,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["exception/user",{"_index":2385,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":1410,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["exclude",{"_index":2321,"title":{},"body":{"entities/UserEntity.html":{}}}],["execute",{"_index":1027,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["execute(command",{"_index":1036,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["execute(query",{"_index":1463,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["executing",{"_index":1137,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["executioncontext",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1296,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["exists",{"_index":1372,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/RegisterHandler.html":{},"miscellaneous/enumerations.html":{}}}],["expired",{"_index":2583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresat",{"_index":1957,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["expiresin",{"_index":699,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":85,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":673,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":609,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":1368,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/NoUserTraceException.html":{},"interfaces/RequestUser.html":{},"entities/StripEventEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":1230,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["extractjwt",{"_index":1763,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":1769,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["failed",{"_index":2585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":818,"title":{},"body":{"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{}}}],["false})@column({type",{"_index":1969,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["false})@exclude",{"_index":2308,"title":{},"body":{"entities/UserEntity.html":{}}}],["false})@manytoone(undefined",{"_index":1981,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["feature",{"_index":2666,"title":{},"body":{"todo.html":{}}}],["features",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filename",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":2261,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":2262,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":2292,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":2269,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["firstname",{"_index":774,"title":{},"body":{"entities/CardEntity.html":{}}}],["firstvaluefrom",{"_index":1281,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["flag",{"_index":2186,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"todo.html":{}}}],["float",{"_index":1911,"title":{},"body":{"entities/PlanEntity.html":{}}}],["format",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1488,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/UserNotFoundException.html":{},"miscellaneous/enumerations.html":{}}}],["found.exception.ts",{"_index":2386,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":2387,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["france",{"_index":1725,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["function",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":2611,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":2430,"title":{},"body":{"injectables/UserService.html":{}}}],["generatecode",{"_index":2397,"title":{},"body":{"injectables/UserService.html":{}}}],["generatecode(length",{"_index":2407,"title":{},"body":{"injectables/UserService.html":{}}}],["generateuniquereferralcode",{"_index":2398,"title":{},"body":{"injectables/UserService.html":{}}}],["get('/')@httpcode(200)@healthcheck()@apiresponse({status",{"_index":1588,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["get('/actual",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/api/test/clear",{"_index":403,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["get('/getall",{"_index":140,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/getall')@apioperation({summary",{"_index":115,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["get('/refresh",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":2290,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id')@useguards(undefined",{"_index":2270,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@httpcode(200)@apiresponse({status",{"_index":290,"title":{},"body":{"controllers/AppController.html":{}}}],["get(key",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getall",{"_index":102,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{}}}],["getallmailquery",{"_index":219,"title":{"classes/GetAllMailQuery.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["getallmailqueryhandler",{"_index":185,"title":{"classes/GetAllMailQueryHandler.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["getcookieforlogout",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":289,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":2444,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuserbyemailquery",{"_index":1474,"title":{"classes/GetUserByEmailQuery.html":{}},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"coverage.html":{}}}],["getuserbyemailqueryhandler",{"_index":1480,"title":{"classes/GetUserByEmailQueryHandler.html":{}},"body":{"classes/GetUserByEmailQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserbyreferralcode",{"_index":2399,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyreferralcode(referralcode",{"_index":2410,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyreferralcodequery(referralcode",{"_index":2427,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyusernamequery",{"_index":1489,"title":{"classes/GetUserByUsernameQuery.html":{}},"body":{"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"coverage.html":{}}}],["getuserbyusernamequeryhandler",{"_index":1494,"title":{"classes/GetUserByUsernameQueryHandler.html":{}},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserfromauthtoken",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserfromauthtoken(authenticationtoken",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserhandler",{"_index":1498,"title":{"classes/GetUserHandler.html":{}},"body":{"classes/GetUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatches",{"_index":2400,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":2412,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatcheshandler",{"_index":1513,"title":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":1516,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":2438,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserloginhandler",{"_index":688,"title":{"classes/GetUserLoginHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/GetUserLoginHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserloginquery",{"_index":736,"title":{"classes/GetUserLoginQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"coverage.html":{}}}],["getuserloginquery(username",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserquery",{"_index":733,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/AuthService.html":{},"classes/GetUserHandler.html":{},"classes/GetUserQuery.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserquery(id",{"_index":2441,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery(payload.userid",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["given",{"_index":2433,"title":{},"body":{"injectables/UserService.html":{}}}],["google",{"_index":2320,"title":{},"body":{"entities/UserEntity.html":{},"todo.html":{}}}],["graph",{"_index":2649,"title":{},"body":{"modules.html":{}}}],["group",{"_index":528,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["group.bannerpicture",{"_index":1835,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group.entity",{"_index":977,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{}}}],["group.picture",{"_index":1837,"title":{},"body":{"entities/MediaEntity.html":{}}}],["group_membership",{"_index":530,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/GroupMembershipEntity.html":{}}}],["groupbannerpicture",{"_index":1822,"title":{},"body":{"entities/MediaEntity.html":{}}}],["groupentity",{"_index":429,"title":{"entities/GroupEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"coverage.html":{}}}],["groupentity.conversations",{"_index":967,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["groupentity.members",{"_index":1577,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["groupmembership",{"_index":813,"title":{},"body":{"entities/CardEntity.html":{},"entities/GroupEntity.html":{}}}],["groupmembership.card",{"_index":814,"title":{},"body":{"entities/CardEntity.html":{}}}],["groupmembership.group",{"_index":1563,"title":{},"body":{"entities/GroupEntity.html":{}}}],["groupmembershipentity",{"_index":431,"title":{"entities/GroupMembershipEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["groupmembershiprepository",{"_index":473,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["groupmemberships",{"_index":775,"title":{},"body":{"entities/CardEntity.html":{}}}],["grouppicture",{"_index":1823,"title":{},"body":{"entities/MediaEntity.html":{}}}],["grouprepository",{"_index":472,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["guards/auth.guard",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/role.guard",{"_index":613,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":1167,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handle(event",{"_index":1170,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handler",{"_index":178,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["handler.ts",{"_index":1021,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["handler.ts:10",{"_index":1333,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["handler.ts:11",{"_index":1032,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["handler.ts:12",{"_index":1034,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["handler.ts:13",{"_index":1033,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:14",{"_index":1030,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{}}}],["handler.ts:15",{"_index":2233,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:16",{"_index":2052,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{}}}],["handler.ts:17",{"_index":1094,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{}}}],["handler.ts:20",{"_index":1095,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:21",{"_index":1613,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["handler.ts:23",{"_index":1037,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["handler.ts:6",{"_index":1169,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handler.ts:8",{"_index":1332,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["handler.ts:9",{"_index":1171,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["handler/error",{"_index":176,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["handler/register.event",{"_index":693,"title":{},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["handlers",{"_index":2383,"title":{},"body":{"modules/UserModule.html":{}}}],["hashedpassword",{"_index":1535,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["headers",{"_index":984,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["health",{"_index":1195,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheck",{"_index":1591,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["healthcheckcontroller",{"_index":1585,"title":{"controllers/HealthCheckController.html":{}},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"coverage.html":{}}}],["healthcheckmodule",{"_index":325,"title":{"modules/HealthCheckModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckquery",{"_index":1201,"title":{"classes/HealthCheckQuery.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckqueryhandler",{"_index":1603,"title":{"classes/HealthCheckQueryHandler.html":{}},"body":{"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"coverage.html":{}}}],["healthcheckresponse",{"_index":1204,"title":{"classes/HealthCheckResponse.html":{}},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["healthcheckresult",{"_index":1644,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["healthcheckservice",{"_index":1609,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["healthindicatorresult",{"_index":1615,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heap",{"_index":1623,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["heathcheck",{"_index":1642,"title":{},"body":{"classes/HealthCheckResponse.html":{}}}],["hello",{"_index":293,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["helloworld",{"_index":307,"title":{},"body":{"controllers/AppController.html":{}}}],["henrie",{"_index":2619,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":1221,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":1416,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["http",{"_index":1099,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http/1.1",{"_index":298,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode",{"_index":119,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{}}}],["httpcode(200",{"_index":266,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/login",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(204)@useguards(jwtrefreshguard)@post('/logout",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":146,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["httpexception",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{}}}],["httpexception('forbidden",{"_index":1735,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpexception('mail",{"_index":1295,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["httpexception('unreachable",{"_index":1299,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["httpexception('wrong",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{}}}],["httponly",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/AuthService.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/ErrorExceptionFilter.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{}}}],["httpstatus.bad_request",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{}}}],["httpstatus.forbidden",{"_index":1736,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":1420,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":2389,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["httpstatus.unauthorized",{"_index":2226,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["icommandhandler",{"_index":1022,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["icon",{"_index":2146,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["id",{"_index":15,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"classes/MailLandingPageDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2471,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":1166,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["ignore",{"_index":304,"title":{},"body":{"controllers/AppController.html":{}}}],["implement",{"_index":2426,"title":{},"body":{"injectables/UserService.html":{}}}],["implemented",{"_index":2429,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["import",{"_index":69,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["in.dto.ts",{"_index":2132,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":2134,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":2135,"title":{},"body":{"classes/SignInDto.html":{}}}],["inactive",{"_index":2590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":2187,"title":{},"body":{"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.enum",{"_index":867,"title":{},"body":{"entities/CardEntity.html":{}}}],["information.enum.ts",{"_index":2556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["informations",{"_index":1721,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["init",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":1043,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":208,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"injectables/AppService.html":{},"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":491,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["injectrepository(addressentity",{"_index":514,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(cardentity",{"_index":494,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyemployeeentity",{"_index":496,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(companyentity",{"_index":495,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(connectedcardentity",{"_index":497,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(conversationentity",{"_index":498,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(discountcodeentity",{"_index":499,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupentity",{"_index":500,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(groupmembershipentity",{"_index":501,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(invoicesentity",{"_index":502,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(joinedconversation",{"_index":503,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(mediaentity",{"_index":504,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(messageentity",{"_index":505,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(notificationentity",{"_index":512,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(occupationentity",{"_index":506,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(planentity",{"_index":507,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(profileentity",{"_index":508,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(referralcodeentity",{"_index":513,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(socialnetworkentity",{"_index":509,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(stripevententity",{"_index":510,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(subscriptionentity",{"_index":511,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["injectrepository(userentity",{"_index":493,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["inserteduser",{"_index":2037,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["installation",{"_index":2635,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2636,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1135,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/ErrorExceptionFilter.html":{}}}],["int",{"_index":1364,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{}}}],["int'})@isnotempty()@isnumber",{"_index":1346,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["integer",{"_index":829,"title":{},"body":{"entities/CardEntity.html":{}}}],["interceptors",{"_index":2661,"title":{},"body":{"todo.html":{}}}],["interface",{"_index":2082,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["interface/request",{"_index":607,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["interface/token",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2083,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"overview.html":{}}}],["invalid",{"_index":1655,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"miscellaneous/enumerations.html":{}}}],["invalid_parameters",{"_index":2563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_password",{"_index":2562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidclassexception",{"_index":2236,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalidclassexception('parameter",{"_index":2244,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["invalidparameterentityexception",{"_index":1104,"title":{"classes/InvalidParameterEntityException.html":{}},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["invalidparameterentityexception(err",{"_index":1118,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["invalidpasswordexception",{"_index":1661,"title":{"classes/InvalidPasswordException.html":{}},"body":{"classes/InvalidPasswordException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["inversejoincolumn",{"_index":1939,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["invoice.enum.ts",{"_index":2544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invoice_number",{"_index":1704,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoicenumber",{"_index":1679,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["invoices",{"_index":532,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SubscriptionEntity.html":{}}}],["invoices.entity",{"_index":1378,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["invoicesentity",{"_index":434,"title":{"entities/InvoicesEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["invoicesentity.subscription",{"_index":2179,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["invoicesrepository",{"_index":474,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["ip",{"_index":985,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["iqueryhandler",{"_index":1462,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["is_active",{"_index":54,"title":{},"body":{"entities/AddressEntity.html":{}}}],["is_not_transferable",{"_index":2593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["is_read",{"_index":1874,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["is_transferable",{"_index":2592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isactive",{"_index":16,"title":{},"body":{"entities/AddressEntity.html":{}}}],["isdate",{"_index":1361,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["isdatestring",{"_index":1988,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["isduplicatedemail",{"_index":2010,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isduplicatedemail(email",{"_index":2015,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isduplicatedusername",{"_index":2011,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isduplicatedusername(username",{"_index":2017,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isemail",{"_index":869,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateUserDto.html":{},"classes/MailDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{}}}],["isemail()@column({unique",{"_index":2311,"title":{},"body":{"entities/UserEntity.html":{}}}],["isemail()@isnotempty",{"_index":2139,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":1805,"title":{},"body":{"classes/MailDto.html":{}}}],["isemailconfirmed",{"_index":2300,"title":{},"body":{"entities/UserEntity.html":{}}}],["isenum(statusinvoiceenum",{"_index":1720,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["isglobal",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":79,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":2133,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":1362,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/InvoicesEntity.html":{}}}],["isoptional",{"_index":1149,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/ReferralCodeEntity.html":{}}}],["isownerpro",{"_index":776,"title":{},"body":{"entities/CardEntity.html":{}}}],["isread",{"_index":1866,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["isrefreshtokenmatching",{"_index":1522,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["isregisteredwithgoogle",{"_index":2301,"title":{},"body":{"entities/UserEntity.html":{}}}],["isstring",{"_index":80,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["istestenvironmentpipe",{"_index":397,"title":{"classes/IsTestEnvironmentPipe.html":{}},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["istestenvironmentpipe())@get('/api/test/clear",{"_index":386,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["istestenvironmentpipe())@post('/api/test/create",{"_index":391,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["isurl",{"_index":870,"title":{},"body":{"entities/CardEntity.html":{}}}],["isvalidpassword",{"_index":2012,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["isvalidpassword(password",{"_index":2019,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["jest",{"_index":2632,"title":{},"body":{"index.html":{}}}],["join",{"_index":1212,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join(__dirname",{"_index":1232,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["join_new_group",{"_index":2572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joincolumn",{"_index":958,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{}}}],["joined",{"_index":978,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["joined_conversation",{"_index":534,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/JoinedConversation.html":{}}}],["joinedconversation",{"_index":436,"title":{"entities/JoinedConversation.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["joinedconversation.conversation",{"_index":970,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["joinedconversation.profile",{"_index":1933,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedconversationrepository",{"_index":475,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["joinedconversations",{"_index":1921,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["joinedprofiles",{"_index":960,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["jointable",{"_index":857,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/ProfileEntity.html":{}}}],["json",{"_index":1001,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["json.stringify(info.message",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":1766,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"todo.html":{}}}],["jwt_access_token_expiration_time",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthenticationguard",{"_index":1750,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"injectables/JwtAuthenticationGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1768,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":679,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":695,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":610,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtrefreshtokenstrategy",{"_index":669,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":670,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":2302,"title":{},"body":{"entities/UserEntity.html":{}}}],["key",{"_index":1824,"title":{},"body":{"entities/MediaEntity.html":{},"miscellaneous/variables.html":{}}}],["la",{"_index":1724,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["landing",{"_index":93,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"coverage.html":{}}}],["lastname",{"_index":777,"title":{},"body":{"entities/CardEntity.html":{}}}],["latitude",{"_index":17,"title":{},"body":{"entities/AddressEntity.html":{}}}],["length",{"_index":30,"title":{},"body":{"entities/AddressEntity.html":{},"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["length(5",{"_index":1151,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/GroupEntity.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{}}}],["length(6",{"_index":1991,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["letter",{"_index":1669,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["libraries",{"_index":2625,"title":{},"body":{"index.html":{}}}],["license",{"_index":2644,"title":{"license.html":{}},"body":{"properties.html":{}}}],["line",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["link",{"_index":1867,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["list",{"_index":1293,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["list.response",{"_index":1506,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["list.response.ts",{"_index":2343,"title":{},"body":{"classes/UserListResponse.html":{},"coverage.html":{}}}],["list.response.ts:4",{"_index":2346,"title":{},"body":{"classes/UserListResponse.html":{}}}],["literal",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["local",{"_index":1788,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":677,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":1782,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["local.strategy.ts:14",{"_index":1787,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":1784,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":605,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["localisation",{"_index":1291,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/ErrorCustomEvent.html":{}}}],["localstrategy",{"_index":671,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":241,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"changelog.html":{}}}],["log.command",{"_index":190,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["log.command.ts",{"_index":982,"title":{},"body":{"classes/CreateLogCommand.html":{},"coverage.html":{}}}],["log.command.ts:11",{"_index":995,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:14",{"_index":1009,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:17",{"_index":999,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:20",{"_index":998,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:23",{"_index":1010,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:26",{"_index":1015,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:29",{"_index":1005,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:32",{"_index":1002,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:35",{"_index":1017,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:38",{"_index":1014,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:41",{"_index":1013,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:44",{"_index":1004,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:47",{"_index":1011,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:5",{"_index":993,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:50",{"_index":1012,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:53",{"_index":1016,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.command.ts:56",{"_index":1007,"title":{},"body":{"classes/CreateLogCommand.html":{}}}],["log.dto",{"_index":246,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.dto.ts",{"_index":1060,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:1",{"_index":1081,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:11",{"_index":1062,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:14",{"_index":1069,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":1064,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:20",{"_index":1063,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:23",{"_index":1070,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:26",{"_index":1076,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:29",{"_index":1067,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:32",{"_index":1065,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:35",{"_index":1071,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:38",{"_index":1078,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:41",{"_index":1075,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:44",{"_index":1074,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:47",{"_index":1066,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:5",{"_index":1061,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:50",{"_index":1072,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:53",{"_index":1073,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:56",{"_index":1077,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:59",{"_index":1068,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:6",{"_index":1083,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.dto.ts:7",{"_index":1082,"title":{},"body":{"classes/CreateMethodLogDto.html":{}}}],["log.enum",{"_index":1042,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["log.enum.ts",{"_index":2546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.method",{"_index":251,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.module",{"_index":172,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["log.module.ts",{"_index":232,"title":{},"body":{"modules/ApiLogModule.html":{}}}],["log.service",{"_index":191,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["log.service.ts",{"_index":234,"title":{},"body":{"injectables/ApiLogService.html":{},"coverage.html":{}}}],["log.service.ts:10",{"_index":240,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:18",{"_index":244,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log.service.ts:8",{"_index":237,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["log/api",{"_index":171,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["log/cqrs/command/create",{"_index":981,"title":{},"body":{"classes/CreateLogCommand.html":{},"coverage.html":{}}}],["log/cqrs/handler/command/create",{"_index":189,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["log/domain/dto/create",{"_index":1059,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/api",{"_index":1392,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["log/domain/enum/logging",{"_index":1391,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["log/domain/enum/status",{"_index":2587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log/domain/enum/verbose",{"_index":1434,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["logged",{"_index":1801,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{}}}],["logger",{"_index":1213,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('deleteusercommandhandler",{"_index":1321,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["logger('registereventhandler",{"_index":2001,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger('updateuser",{"_index":2234,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["logger.config",{"_index":1215,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/RegisterEventHandler.html":{}}}],["logger.config.ts",{"_index":2493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error('an",{"_index":1266,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.error('node_env",{"_index":1265,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger.info('new",{"_index":2005,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logger.info('node_env",{"_index":1219,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["logger_console",{"_index":2000,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["logging",{"_index":1236,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"entities/UserEntity.html":{}}}],["logging.middleware",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["logging.middleware.ts",{"_index":1426,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["logging.middleware.ts:10",{"_index":2087,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:11",{"_index":1428,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:12",{"_index":2071,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["logging.middleware.ts:16",{"_index":1431,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["logging.middleware.ts:17",{"_index":2088,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{}}}],["logging.middleware.ts:18",{"_index":2072,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["loggingtype",{"_index":986,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["loggingtypeenum",{"_index":1008,"title":{"classes/LoggingTypeEnum.html":{}},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["loggingtypeenum.error",{"_index":1398,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{}}}],["loggingtypeenum.request",{"_index":2078,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["login",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/UserLoginDto.html":{},"changelog.html":{}}}],["login(username",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":2350,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:10",{"_index":2353,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:12",{"_index":2354,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:3",{"_index":2352,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.handler",{"_index":690,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["login.handler.ts",{"_index":1530,"title":{},"body":{"classes/GetUserLoginHandler.html":{},"coverage.html":{}}}],["login.handler.ts:13",{"_index":1532,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["login.handler.ts:20",{"_index":1533,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["login.handler.ts:54",{"_index":1536,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["login.query",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{}}}],["login.query.ts",{"_index":1545,"title":{},"body":{"classes/GetUserLoginQuery.html":{},"coverage.html":{}}}],["login.query.ts:1",{"_index":1546,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.query.ts:2",{"_index":1547,"title":{},"body":{"classes/GetUserLoginQuery.html":{}}}],["login.response",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.response.ts",{"_index":2357,"title":{},"body":{"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["login.response.ts:11",{"_index":2361,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:12",{"_index":2366,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:13",{"_index":2360,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:14",{"_index":2359,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:15",{"_index":2365,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:16",{"_index":2364,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:17",{"_index":2363,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:18",{"_index":2362,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["login.response.ts:4",{"_index":2358,"title":{},"body":{"classes/UserLoginResponse.html":{}}}],["loginofuserevent",{"_index":1537,"title":{"classes/LoginOfUserEvent.html":{}},"body":{"classes/GetUserLoginHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"coverage.html":{}}}],["loginofuserevent(userusername.id",{"_index":1543,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["loginofusereventhandler",{"_index":1797,"title":{"classes/LoginOfUserEventHandler.html":{}},"body":{"classes/LoginOfUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["logout",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":18,"title":{},"body":{"entities/AddressEntity.html":{}}}],["lowercase",{"_index":1670,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["lucas",{"_index":2621,"title":{},"body":{"index.html":{}}}],["mail",{"_index":112,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/ApiMailController.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"controllers/UserController.html":{},"todo.html":{}}}],["mail')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail')@useguards(undefined)@get()@useguards(undefined",{"_index":2267,"title":{},"body":{"controllers/UserController.html":{}}}],["mail'})@apiokresponse({type",{"_index":107,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mail.command",{"_index":181,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["mail.command.ts",{"_index":1272,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["mail.command.ts:1",{"_index":1273,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:10",{"_index":2097,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.command.ts:6",{"_index":1274,"title":{},"body":{"classes/DeleteMailCommand.html":{},"classes/SendMailCommand.html":{}}}],["mail.command.ts:8",{"_index":2098,"title":{},"body":{"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{}}}],["mail.controller",{"_index":278,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.controller.ts",{"_index":255,"title":{},"body":{"controllers/ApiMailController.html":{},"coverage.html":{}}}],["mail.controller.ts:16",{"_index":260,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["mail.event",{"_index":184,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["mail.event.ts",{"_index":1304,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{},"coverage.html":{}}}],["mail.event.ts:1",{"_index":2106,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:11",{"_index":2110,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:13",{"_index":2108,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.event.ts:3",{"_index":1307,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:5",{"_index":1308,"title":{},"body":{"classes/DeleteMailEvent.html":{}}}],["mail.event.ts:6",{"_index":1310,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:7",{"_index":1309,"title":{},"body":{"classes/DeleteMailEvent.html":{},"classes/SendMailEvent.html":{}}}],["mail.event.ts:9",{"_index":2107,"title":{},"body":{"classes/SendMailEvent.html":{}}}],["mail.module",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["mail.module.ts",{"_index":273,"title":{},"body":{"modules/ApiMailModule.html":{}}}],["mail.query",{"_index":187,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["mail.query.ts",{"_index":1460,"title":{},"body":{"classes/GetAllMailQuery.html":{},"coverage.html":{}}}],["mail.service",{"_index":263,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{}}}],["mail.service.ts",{"_index":282,"title":{},"body":{"injectables/ApiMailService.html":{},"coverage.html":{}}}],["mail.service.ts:10",{"_index":284,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail.service.ts:7",{"_index":283,"title":{},"body":{"injectables/ApiMailService.html":{}}}],["mail/api",{"_index":254,"title":{},"body":{"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["mail/cqrs/command/send",{"_index":2096,"title":{},"body":{"classes/SendMailCommand.html":{},"coverage.html":{}}}],["mail/cqrs/event/send",{"_index":2105,"title":{},"body":{"classes/SendMailEvent.html":{},"coverage.html":{}}}],["mail/cqrs/handler/command/send",{"_index":2099,"title":{},"body":{"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["mail/cqrs/handler/event/send",{"_index":2111,"title":{},"body":{"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["mail/domain/dto/mail.dto.ts",{"_index":1802,"title":{},"body":{"classes/MailDto.html":{},"coverage.html":{}}}],["mail/domain/dto/mail.dto.ts:12",{"_index":1806,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:15",{"_index":1808,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:18",{"_index":1807,"title":{},"body":{"classes/MailDto.html":{}}}],["mail/domain/dto/mail.dto.ts:4",{"_index":1804,"title":{},"body":{"classes/MailDto.html":{}}}],["mail_api",{"_index":2558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maildto",{"_index":258,"title":{"classes/MailDto.html":{}},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"classes/MailDto.html":{},"coverage.html":{}}}],["maillandingpagedto",{"_index":221,"title":{"classes/MailLandingPageDto.html":{}},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/MailLandingPageDto.html":{},"coverage.html":{}}}],["mailresponse",{"_index":129,"title":{"classes/MailResponse.html":{}},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"classes/MailResponse.html":{},"coverage.html":{}}}],["mails",{"_index":142,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mails'})@apiokresponse({type",{"_index":116,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["mailslandingpagelist",{"_index":1473,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["manytomany",{"_index":858,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytomany(undefined",{"_index":833,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone",{"_index":73,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["manytoone(undefined",{"_index":35,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["match",{"_index":1487,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["matches.handler",{"_index":2372,"title":{},"body":{"modules/UserModule.html":{}}}],["matches.handler.ts",{"_index":1514,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"coverage.html":{}}}],["matches.handler.ts:10",{"_index":1515,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["matches.handler.ts:17",{"_index":1517,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["matches.query",{"_index":1518,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/UserService.html":{}}}],["matches.query.ts",{"_index":1525,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"coverage.html":{}}}],["matches.query.ts:1",{"_index":1528,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:2",{"_index":1529,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":88,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxfiles",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":871,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":2137,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(255",{"_index":880,"title":{},"body":{"entities/CardEntity.html":{}}}],["maxsize",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":536,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.cardpicture",{"_index":822,"title":{},"body":{"entities/CardEntity.html":{}}}],["media.entity",{"_index":875,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.groupbannerpicture",{"_index":1555,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.grouppicture",{"_index":1567,"title":{},"body":{"entities/GroupEntity.html":{}}}],["media.profileentitybanner",{"_index":920,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["media.profileentityprofilepicture",{"_index":937,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["mediaentity",{"_index":439,"title":{"entities/MediaEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["mediarepository",{"_index":476,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["member",{"_index":2092,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memberof",{"_index":2158,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{}}}],["members",{"_index":1553,"title":{},"body":{"entities/GroupEntity.html":{}}}],["membership.entity",{"_index":433,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{}}}],["membership.entity.ts",{"_index":1571,"title":{},"body":{"entities/GroupMembershipEntity.html":{},"coverage.html":{}}}],["membership.entity.ts:17",{"_index":1579,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:23",{"_index":1581,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:32",{"_index":1574,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:37",{"_index":1578,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:44",{"_index":1575,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:47",{"_index":1582,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.entity.ts:50",{"_index":1576,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum",{"_index":1583,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["membership.enum.ts",{"_index":2090,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["membership.enum.ts:2",{"_index":2094,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:3",{"_index":2093,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["membership.enum.ts:4",{"_index":2095,"title":{},"body":{"classes/RoleGroupMembershipEnum.html":{}}}],["memory",{"_index":1621,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["memoryhealthindicator",{"_index":1611,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["message",{"_index":538,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"classes/InvalidParameterEntityException.html":{},"classes/MailDto.html":{},"entities/MessageEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{}}}],["message.author",{"_index":824,"title":{},"body":{"entities/CardEntity.html":{}}}],["message.conversation",{"_index":972,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["message.entity",{"_index":876,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{}}}],["messageentity",{"_index":441,"title":{"entities/MessageEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/MessageEntity.html":{},"coverage.html":{}}}],["messagepatern",{"_index":662,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern({cmd",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagerepository",{"_index":477,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["messages",{"_index":778,"title":{},"body":{"entities/CardEntity.html":{},"entities/ConversationEntity.html":{}}}],["metadata",{"_index":1732,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{},"dependencies.html":{}}}],["method",{"_index":249,"title":{},"body":{"injectables/ApiLogService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware/error",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/request",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["middleware/response",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations",{"_index":2664,"title":{},"body":{"todo.html":{}}}],["minlength",{"_index":1961,"title":{},"body":{"entities/ReferralCodeEntity.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":2136,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":2532,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{}}}],["mixin(roleguardmixin",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockedconfigservice",{"_index":2495,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedjwtservice",{"_index":2497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":149,"title":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"modules/EntitiesToMoveModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"modules/HealthCheckModule.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{}}}],["module:entities",{"_index":2159,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["modules",{"_index":151,"title":{"modules.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1619,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["move.module",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["move.module.ts",{"_index":1376,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["name",{"_index":83,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["nestjs",{"_index":2466,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/common",{"_index":122,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions",{"_index":1862,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":2237,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["nestjs/cqrs",{"_index":170,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":680,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":168,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/SendMailCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":675,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":128,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateUserDto.html":{},"controllers/HealthCheckController.html":{},"classes/MailDto.html":{},"entities/ReferralCodeEntity.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1592,"title":{},"body":{"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":280,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"modules/AuthModule.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"modules/EntitiesToMoveModule.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1432,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nestmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["network",{"_index":2145,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity",{"_index":451,"title":{},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{}}}],["network.entity.ts",{"_index":2143,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["network.entity.ts:34",{"_index":2153,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:37",{"_index":2154,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:40",{"_index":2156,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:43",{"_index":2152,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:50",{"_index":2149,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:57",{"_index":2150,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:60",{"_index":2155,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["network.entity.ts:63",{"_index":2151,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["never",{"_index":1731,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["new",{"_index":227,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_call",{"_index":2574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_group_message",{"_index":2573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new_message",{"_index":2571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newuser",{"_index":1113,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["next",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["nextfunction",{"_index":1430,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{}}}],["no_user_trace",{"_index":2564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobody",{"_index":2605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nodejs",{"_index":2626,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":2631,"title":{},"body":{"index.html":{}}}],["none",{"_index":2602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_diffusible",{"_index":2608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notes",{"_index":779,"title":{},"body":{"entities/CardEntity.html":{}}}],["notification",{"_index":552,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["notification.conversation",{"_index":974,"title":{},"body":{"entities/ConversationEntity.html":{}}}],["notification.entity",{"_index":979,"title":{},"body":{"entities/ConversationEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["notification.profile",{"_index":1935,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["notification.user",{"_index":2323,"title":{},"body":{"entities/UserEntity.html":{}}}],["notificationentity",{"_index":457,"title":{"entities/NotificationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/ConversationEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["notificationrepository",{"_index":484,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["notifications",{"_index":961,"title":{},"body":{"entities/ConversationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["notificationtypeenum",{"_index":1880,"title":{},"body":{"entities/NotificationEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.info",{"_index":1886,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["nousertraceexception",{"_index":1857,"title":{"classes/NoUserTraceException.html":{}},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["npm",{"_index":2627,"title":{},"body":{"index.html":{}}}],["null",{"_index":801,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"todo.html":{}}}],["null'})@joincolumn",{"_index":1556,"title":{},"body":{"entities/GroupEntity.html":{}}}],["null'})@jointable",{"_index":835,"title":{},"body":{"entities/CardEntity.html":{}}}],["null'})@jointable({name",{"_index":1938,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["nullable",{"_index":37,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/GroupEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":827,"title":{},"body":{"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"entities/DiscountCodeEntity.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"injectables/UserService.html":{}}}],["number(process.env.port_api_log",{"_index":199,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_mail",{"_index":202,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{}}}],["number(process.env.port_api_waiting_list",{"_index":205,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/AuthModule.html":{}}}],["numberofshares",{"_index":780,"title":{},"body":{"entities/CardEntity.html":{}}}],["object",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"miscellaneous/variables.html":{}}}],["object(log.body",{"_index":252,"title":{},"body":{"injectables/ApiLogService.html":{}}}],["object.assign(partial",{"_index":1817,"title":{},"body":{"classes/MailResponse.html":{}}}],["object.assign(this",{"_index":904,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/MailDto.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["object.keys(constraints).map(key",{"_index":1659,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["occupation",{"_index":540,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/ProfileEntity.html":{}}}],["occupation.cards",{"_index":834,"title":{},"body":{"entities/CardEntity.html":{}}}],["occupation.entity",{"_index":872,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ProfileEntity.html":{}}}],["occupation.profiles",{"_index":1937,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupation_id",{"_index":1955,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["occupationentity",{"_index":443,"title":{"entities/OccupationEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"coverage.html":{}}}],["occupationentity.companies",{"_index":944,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationentity.companies)@jointable",{"_index":932,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["occupationrepository",{"_index":478,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["occupations",{"_index":781,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["occurred",{"_index":1267,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["ok",{"_index":299,"title":{},"body":{"controllers/AppController.html":{}}}],["ondelete",{"_index":39,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{}}}],["one",{"_index":1667,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["onetomany",{"_index":859,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":797,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":860,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["onetoone(undefined",{"_index":821,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/GroupEntity.html":{},"entities/MediaEntity.html":{},"entities/ProfileEntity.html":{}}}],["only_by_company_admin",{"_index":2610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_by_company_members",{"_index":2609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_connected_users",{"_index":2604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["only_me",{"_index":2606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onupdate",{"_index":2209,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["optional",{"_index":111,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/ProfileEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["options",{"_index":197,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["organisation",{"_index":2623,"title":{},"body":{"index.html":{}}}],["os",{"_index":987,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["out",{"_index":162,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2650,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":782,"title":{},"body":{"entities/CardEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"miscellaneous/enumerations.html":{}}}],["ownercompanies",{"_index":1922,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["ownerprofile",{"_index":911,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["package",{"_index":2500,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":98,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{}}}],["page.controller",{"_index":173,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.controller.ts",{"_index":95,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"coverage.html":{}}}],["page.controller.ts:17",{"_index":117,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.controller.ts:26",{"_index":109,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["page.dto",{"_index":223,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["page.dto.ts",{"_index":1810,"title":{},"body":{"classes/MailLandingPageDto.html":{},"coverage.html":{}}}],["page.dto.ts:1",{"_index":1812,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.dto.ts:2",{"_index":1813,"title":{},"body":{"classes/MailLandingPageDto.html":{}}}],["page.module",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["page.module.ts",{"_index":163,"title":{},"body":{"modules/ApiLandingPageModule.html":{}}}],["page.service",{"_index":124,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{}}}],["page.service.ts",{"_index":209,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"coverage.html":{}}}],["page.service.ts:12",{"_index":215,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:20",{"_index":216,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page.service.ts:9",{"_index":214,"title":{},"body":{"injectables/ApiLandingPageService.html":{}}}],["page/api",{"_index":94,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["page/cqrs/command/delete",{"_index":1271,"title":{},"body":{"classes/DeleteMailCommand.html":{},"coverage.html":{}}}],["page/cqrs/event/delete",{"_index":1303,"title":{},"body":{"classes/DeleteMailEvent.html":{},"coverage.html":{}}}],["page/cqrs/handler/command/delete",{"_index":1275,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"coverage.html":{}}}],["page/cqrs/handler/event/delete",{"_index":1311,"title":{},"body":{"classes/DeleteMailEventHandler.html":{},"coverage.html":{}}}],["page/cqrs/handler/query/get",{"_index":1461,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"coverage.html":{}}}],["page/cqrs/query/get",{"_index":1459,"title":{},"body":{"classes/GetAllMailQuery.html":{},"coverage.html":{}}}],["page/domain/dto/mail",{"_index":1809,"title":{},"body":{"classes/MailLandingPageDto.html":{},"coverage.html":{}}}],["page/domain/response/mail.response.ts",{"_index":1814,"title":{},"body":{"classes/MailResponse.html":{},"coverage.html":{}}}],["page/domain/response/mail.response.ts:1",{"_index":1815,"title":{},"body":{"classes/MailResponse.html":{}}}],["page/domain/response/mail.response.ts:6",{"_index":1816,"title":{},"body":{"classes/MailResponse.html":{}}}],["param",{"_index":2278,"title":{},"body":{"controllers/UserController.html":{}}}],["parameter",{"_index":1106,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/NoUserTraceException.html":{},"classes/RegisterHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["parseint(process.env.typeorm_port_dev",{"_index":1259,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_pprod",{"_index":1241,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_prod",{"_index":1224,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["parseint(process.env.typeorm_port_test",{"_index":1250,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["partial",{"_index":903,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/ErrorCustomEvent.html":{},"classes/MailDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["passport",{"_index":1765,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":674,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1762,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1767,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":1773,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":561,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/InvalidPasswordException.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"miscellaneous/enumerations.html":{}}}],["password.exception",{"_index":2022,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["password.exception.ts",{"_index":1662,"title":{},"body":{"classes/InvalidPasswordException.html":{},"coverage.html":{}}}],["password.exception.ts:3",{"_index":1663,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["path",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorExceptionFilter.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["payload",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":2220,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["payload.userid",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["paymententity",{"_index":2167,"title":{},"body":{"entities/StripEventEntity.html":{}}}],["pending",{"_index":2580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["personalcards",{"_index":1923,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["pg",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":912,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["phones",{"_index":783,"title":{},"body":{"entities/CardEntity.html":{}}}],["picture",{"_index":1554,"title":{},"body":{"entities/GroupEntity.html":{}}}],["pipe",{"_index":1471,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["pipetransform",{"_index":1728,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["plaintextpassword",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{}}}],["plan",{"_index":542,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["plan.entity",{"_index":1379,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"entities/SubscriptionEntity.html":{}}}],["planentity",{"_index":445,"title":{"entities/PlanEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/PlanEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{}}}],["planentity.subscriptions",{"_index":2181,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["planrepository",{"_index":479,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["platform",{"_index":988,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["port",{"_index":198,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DatabaseConfiguration.html":{},"modules/UserModule.html":{}}}],["post",{"_index":261,"title":{},"body":{"controllers/ApiMailController.html":{},"controllers/AppTestE2eController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/')@httpcode(200)@useguards(undefined",{"_index":259,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["post('/api/test/create",{"_index":405,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["post('/create",{"_index":2266,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/create')@useguards(undefined",{"_index":2264,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/login",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register')@useguards(undefined",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":1220,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["postgreserrorcode",{"_index":2538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgresql",{"_index":2628,"title":{},"body":{"index.html":{}}}],["pour",{"_index":1723,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["pprod",{"_index":1238,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["prefix",{"_index":96,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/HealthCheckController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":2634,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":2316,"title":{},"body":{"entities/UserEntity.html":{}}}],["price",{"_index":1906,"title":{},"body":{"entities/PlanEntity.html":{}}}],["primarygeneratedcolumn",{"_index":74,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":51,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":224,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["process",{"_index":694,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateLogCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/UserService.html":{}}}],["process.env.api_name",{"_index":1050,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.api_version",{"_index":1052,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["process.env.jwt_access_token_expiration_time",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":700,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":697,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1217,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["process.env.typeorm_database_dev",{"_index":1262,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_pprod",{"_index":1244,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_prod",{"_index":1228,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_database_test",{"_index":1253,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_dev",{"_index":1257,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_pprod",{"_index":1239,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_prod",{"_index":1222,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_host_test",{"_index":1248,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_dev",{"_index":1263,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_pprod",{"_index":1247,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_prod",{"_index":1237,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_logging_test",{"_index":1255,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_dev",{"_index":1261,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_pprod",{"_index":1243,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_prod",{"_index":1227,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_password_test",{"_index":1252,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_dev",{"_index":1258,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_pprod",{"_index":1240,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_prod",{"_index":1223,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_port_test",{"_index":1249,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_dev",{"_index":1264,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_pprod",{"_index":1246,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_prod",{"_index":1235,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_synchronize_test",{"_index":1254,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_dev",{"_index":1260,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_pprod",{"_index":1242,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_prod",{"_index":1226,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.typeorm_username_test",{"_index":1251,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["process.env.verbose",{"_index":1435,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["process.env.verbose_error",{"_index":1394,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{}}}],["process.env.verbose_log",{"_index":1047,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["prod",{"_index":1218,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["profile",{"_index":544,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/JoinedConversation.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{}}}],["profile.companies",{"_index":894,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["profile.entity",{"_index":861,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{}}}],["profile.personalcards",{"_index":837,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.savedcard",{"_index":840,"title":{},"body":{"entities/CardEntity.html":{}}}],["profile.user",{"_index":2326,"title":{},"body":{"entities/UserEntity.html":{}}}],["profile_id",{"_index":1953,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["profileentity",{"_index":447,"title":{"entities/ProfileEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["profileentity.bannerpicture",{"_index":1841,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentity.joinedconversations",{"_index":1748,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.joinedconversations)@joincolumn",{"_index":1744,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["profileentity.notifications",{"_index":1877,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["profileentity.occupations",{"_index":1899,"title":{},"body":{"entities/OccupationEntity.html":{}}}],["profileentity.ownercompanies",{"_index":934,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["profileentity.profilepicture",{"_index":1843,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentitybanner",{"_index":1825,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profileentityprofilepicture",{"_index":1826,"title":{},"body":{"entities/MediaEntity.html":{}}}],["profilepicture",{"_index":913,"title":{},"body":{"entities/CompanyEntity.html":{},"entities/ProfileEntity.html":{}}}],["profilerepository",{"_index":480,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["profiles",{"_index":1890,"title":{},"body":{"entities/OccupationEntity.html":{},"entities/UserEntity.html":{}}}],["profileswhosavedcard",{"_index":784,"title":{},"body":{"entities/CardEntity.html":{}}}],["project",{"_index":2467,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":114,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckResponse.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["property",{"_index":2160,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["provided",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserLoginHandler.html":{},"classes/NoUserTraceException.html":{}}}],["providers",{"_index":164,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEvent.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckResponse.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":2279,"title":{},"body":{"controllers/UserController.html":{}}}],["put('')@useguards(undefined",{"_index":2276,"title":{},"body":{"controllers/UserController.html":{}}}],["query",{"_index":1464,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"modules/UserModule.html":{}}}],["query.email",{"_index":1485,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["query.userid",{"_index":1508,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["query.username",{"_index":1497,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["query/get",{"_index":1466,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["query/health",{"_index":1614,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["querybus",{"_index":213,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiMailService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/UserService.html":{}}}],["queryhandler",{"_index":1465,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/HealthCheckQueryHandler.html":{}}}],["queryhandler(getallmailquery",{"_index":1467,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["queryhandler(getuserbyemailquery",{"_index":1483,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{}}}],["queryhandler(getuserbyusernamequery",{"_index":1496,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":1519,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["queryhandler(getuserloginquery",{"_index":1539,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["queryhandler(getuserquery",{"_index":1507,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["queryhandler(healthcheckquery",{"_index":1616,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["random",{"_index":2431,"title":{},"body":{"injectables/UserService.html":{}}}],["readme.md",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"classes/HealthCheckResponse.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":1653,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"miscellaneous/typealiases.html":{}}}],["referal",{"_index":1381,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["referral",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["referral_code",{"_index":554,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcode",{"_index":2328,"title":{},"body":{"entities/UserEntity.html":{},"injectables/UserService.html":{}}}],["referralcode.owner",{"_index":2329,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcode.usedby",{"_index":2335,"title":{},"body":{"entities/UserEntity.html":{}}}],["referralcodeentity",{"_index":459,"title":{"entities/ReferralCodeEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/ReferralCodeEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["referralcoderepository",{"_index":485,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["referralcodes",{"_index":2303,"title":{},"body":{"entities/UserEntity.html":{}}}],["reflect",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["refresh(@req",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":1526,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{}}}],["refunded",{"_index":2584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regexp('^(?=.*\\\\d)(?=.*[a",{"_index":2025,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["regexvalidatepassword",{"_index":2009,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["register",{"_index":2031,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registercommand",{"_index":731,"title":{"classes/RegisterCommand.html":{}},"body":{"injectables/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["registercommand(signupdto.username",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":2006,"title":{},"body":{"classes/RegisterEventHandler.html":{},"entities/UserEntity.html":{}}}],["registerevent",{"_index":1995,"title":{"classes/RegisterEvent.html":{}},"body":{"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["registerevent(inserteduser.id",{"_index":2038,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registereventhandler",{"_index":691,"title":{"classes/RegisterEventHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["registerhandler",{"_index":683,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["rejected",{"_index":2586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":1231,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["relations",{"_index":882,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["remove",{"_index":2060,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":2297,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":2272,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removed",{"_index":2069,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{}}}],["removerefreshtoken",{"_index":2401,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":2415,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":2044,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["removerefreshtokencommand(userid",{"_index":2439,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommandhandler",{"_index":2049,"title":{"classes/RemoveRefreshTokenCommandHandler.html":{}},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["removerefreshtokenevent",{"_index":2056,"title":{"classes/RemoveRefreshTokenEvent.html":{}},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["removerefreshtokeneventhandler",{"_index":2064,"title":{"classes/RemoveRefreshTokenEventHandler.html":{}},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["repository",{"_index":465,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["req",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"controllers/UserController.html":{}}}],["req.baseurl",{"_index":1443,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.body",{"_index":1447,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["req.headers",{"_index":1445,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['screen",{"_index":2075,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.headers['user",{"_index":2079,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["req.ip",{"_index":1456,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req.method",{"_index":1442,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["req?.headers['user",{"_index":2080,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["request",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UnauthorizedRequestException.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["request.exception.ts",{"_index":2223,"title":{},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:3",{"_index":2224,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["request.res",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.res.setheader('set",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.url",{"_index":1424,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["request.user",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.headers?.authorization?.split",{"_index":1770,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["requestloggingmiddleware",{"_index":347,"title":{"injectables/RequestLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["requestuser",{"_index":576,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"interfaces/RequestUser.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["required",{"_index":1968,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["res",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.getheaders",{"_index":1451,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.locals.responsebody",{"_index":1453,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["res.statuscode",{"_index":1449,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["reset",{"_index":161,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":315,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/LoggingTypeEnum.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"todo.html":{}}}],["response.send(user",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(204",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus).json",{"_index":1421,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["responsebody",{"_index":989,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseheaders",{"_index":990,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["responseloggingmiddleware",{"_index":350,"title":{"injectables/ResponseLoggingMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["rest",{"_index":2622,"title":{},"body":{"index.html":{}}}],["results",{"_index":87,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":144,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/InvalidParameterEntityException.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserEventHandler.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"controllers/HealthCheckController.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":1572,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["role.enum",{"_index":135,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["role.enum.ts",{"_index":2552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum",{"_index":896,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rolecompanyemployeeenum.employee",{"_index":905,"title":{},"body":{"entities/CompanyEmployeeEntity.html":{}}}],["rolegroupmembershipenum",{"_index":1580,"title":{"classes/RoleGroupMembershipEnum.html":{}},"body":{"entities/GroupMembershipEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"coverage.html":{}}}],["rolegroupmembershipenum.member",{"_index":1584,"title":{},"body":{"entities/GroupMembershipEntity.html":{}}}],["roleguard",{"_index":131,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleguardmixin",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles",{"_index":564,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/CompanyEmployeeEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["roles.some(role",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":991,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["routes",{"_index":2641,"title":{},"body":{"index.html":{}}}],["rss",{"_index":1626,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["run",{"_index":2637,"title":{},"body":{"index.html":{}}}],["runtimeexception",{"_index":1860,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["rxjs",{"_index":1282,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{},"dependencies.html":{}}}],["saved",{"_index":1947,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["savedcard",{"_index":1924,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["saveduser",{"_index":1128,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.email",{"_index":1132,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.id",{"_index":1130,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.roles",{"_index":1133,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["saveduser.username",{"_index":1131,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["schema",{"_index":2643,"title":{},"body":{"index.html":{}}}],["screensize",{"_index":992,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["secret",{"_index":696,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1772,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["see",{"_index":866,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":1486,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/UserEntity.html":{}}}],["send",{"_index":2109,"title":{},"body":{"classes/SendMailEvent.html":{},"todo.html":{}}}],["sendmail",{"_index":256,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmail(@body",{"_index":267,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["sendmail(maildto",{"_index":257,"title":{},"body":{"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{}}}],["sendmailcommand",{"_index":285,"title":{"classes/SendMailCommand.html":{}},"body":{"injectables/ApiMailService.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["sendmailcommandhandler",{"_index":274,"title":{"classes/SendMailCommandHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailCommandHandler.html":{},"coverage.html":{}}}],["sendmailevent",{"_index":2100,"title":{"classes/SendMailEvent.html":{}},"body":{"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["sendmaileventhandler",{"_index":276,"title":{"classes/SendMailEventHandler.html":{}},"body":{"modules/ApiMailModule.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{}}}],["sent",{"_index":2113,"title":{},"body":{"classes/SendMailEventHandler.html":{}}}],["serialize",{"_index":2658,"title":{},"body":{"todo.html":{}}}],["serializing",{"_index":2660,"title":{},"body":{"todo.html":{}}}],["service",{"_index":1382,"title":{},"body":{"modules/EntitiesToMoveModule.html":{},"modules/HealthCheckModule.html":{}}}],["set",{"_index":800,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEntity.html":{},"injectables/DatabaseConfiguration.html":{},"entities/GroupEntity.html":{},"entities/ProfileEntity.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{}}}],["setcurrentrefreshtoken",{"_index":2402,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":2417,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":2115,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":2440,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommandhandler",{"_index":2118,"title":{"classes/SetCurrentRefreshTokenCommandHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["setcurrentrefreshtokenevent",{"_index":2123,"title":{"classes/SetCurrentRefreshTokenEvent.html":{}},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["setcurrentrefreshtokeneventhandler",{"_index":2126,"title":{"classes/SetCurrentRefreshTokenEventHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["share",{"_index":864,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["sign",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signin",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":586,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":2130,"title":{"classes/SignInDto.html":{}},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":698,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":590,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["signupdto.email",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupdto.password",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["siret",{"_index":914,"title":{},"body":{"entities/CompanyEntity.html":{}}}],["size",{"_index":2076,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["size'].tostring",{"_index":2077,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["social",{"_index":878,"title":{},"body":{"entities/CardEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{}}}],["social_network",{"_index":546,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/SocialNetworkEntity.html":{},"miscellaneous/enumerations.html":{}}}],["socialname",{"_index":785,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork",{"_index":786,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetwork.cards",{"_index":843,"title":{},"body":{"entities/CardEntity.html":{}}}],["socialnetworkentity",{"_index":449,"title":{"entities/SocialNetworkEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/SocialNetworkEntity.html":{},"coverage.html":{}}}],["socialnetworkrepository",{"_index":481,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["socketid",{"_index":1738,"title":{},"body":{"entities/JoinedConversation.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"modules/EntitiesToMoveModule.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["space",{"_index":1636,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["src/.../api",{"_index":2534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.service.mock.ts",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errorenum.ts",{"_index":2536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../invalid",{"_index":2669,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../jwt.service.mock.ts",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notification",{"_index":2537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres",{"_index":2539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":2541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.guard.ts",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status",{"_index":2543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transferable",{"_index":2548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type",{"_index":2550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":2551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../verbose",{"_index":2553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../who",{"_index":2554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/api",{"_index":92,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"modules/ApiLandingPageModule.html":{},"injectables/ApiLandingPageService.html":{},"modules/ApiLogModule.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"modules/ApiMailModule.html":{},"injectables/ApiMailService.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/GetAllMailQuery.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/LoggingTypeEnum.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/api/auth/auth.controller.ts:23",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:30",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:49",{"_index":582,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:58",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:64",{"_index":585,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:78",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":672,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/api/auth/auth.service.ts:13",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:16",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:20",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:28",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:40",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:53",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/auth.service.ts:57",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":1992,"title":{},"body":{"classes/RegisterCommand.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":1993,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:2",{"_index":1994,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/event",{"_index":1999,"title":{},"body":{"classes/RegisterEventHandler.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/event/register.event.ts",{"_index":1996,"title":{},"body":{"classes/RegisterEvent.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:1",{"_index":1997,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/event/register.event.ts:2",{"_index":1998,"title":{},"body":{"classes/RegisterEvent.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts",{"_index":2008,"title":{},"body":{"classes/RegisterHandler.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:17",{"_index":2013,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:27",{"_index":2014,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:56",{"_index":2018,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:62",{"_index":2016,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/command/register.handler.ts:68",{"_index":2020,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":2575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":2131,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":1779,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["src/api/auth/guards/jwt",{"_index":1751,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["src/api/auth/guards/role.guard.ts",{"_index":2482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api/auth/interface/request",{"_index":2084,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["src/api/auth/interface/token",{"_index":2219,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt",{"_index":1756,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":1775,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:11",{"_index":1776,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:26",{"_index":1778,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":1781,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/api/entities",{"_index":6,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RoleGroupMembershipEnum.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/api/health",{"_index":1193,"title":{},"body":{"injectables/CustomHealthCheckService.html":{},"controllers/HealthCheckController.html":{},"modules/HealthCheckModule.html":{},"classes/HealthCheckQuery.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/create",{"_index":1085,"title":{},"body":{"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":1315,"title":{},"body":{"classes/DeleteUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":2045,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/set",{"_index":2116,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/update",{"_index":2228,"title":{},"body":{"classes/UpdateUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/create",{"_index":1153,"title":{},"body":{"classes/CreateUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/delete",{"_index":1327,"title":{},"body":{"classes/DeleteUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/login",{"_index":1796,"title":{},"body":{"classes/LoginOfUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/remove",{"_index":2057,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/set",{"_index":2124,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/event/update",{"_index":2253,"title":{},"body":{"classes/UpdateUserEvent.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/create",{"_index":1092,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/delete",{"_index":1320,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/remove",{"_index":2050,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/set",{"_index":2119,"title":{},"body":{"classes/SetCurrentRefreshTokenCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/command/update",{"_index":2232,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/create",{"_index":1164,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/delete",{"_index":1331,"title":{},"body":{"classes/DeleteUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/login",{"_index":1798,"title":{},"body":{"classes/LoginOfUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/remove",{"_index":2065,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/set",{"_index":2127,"title":{},"body":{"classes/SetCurrentRefreshTokenEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/event/update",{"_index":2255,"title":{},"body":{"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/query/get",{"_index":1481,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/query/get",{"_index":1475,"title":{},"body":{"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/create",{"_index":400,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/update",{"_index":2248,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/user",{"_index":2349,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity",{"_index":402,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":2299,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity.ts:100",{"_index":2324,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:105",{"_index":2306,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:111",{"_index":2307,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:114",{"_index":2334,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:117",{"_index":2310,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:34",{"_index":2313,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:38",{"_index":2312,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:43",{"_index":2339,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:51",{"_index":2325,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:59",{"_index":2314,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:66",{"_index":2309,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:69",{"_index":2322,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:76",{"_index":2319,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:79",{"_index":2331,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:86",{"_index":2327,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:89",{"_index":2333,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:92",{"_index":2330,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/entities/user.entity.ts:95",{"_index":2336,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/api/user/domain/enum/user",{"_index":2597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/create",{"_index":1182,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user",{"_index":2342,"title":{},"body":{"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":2390,"title":{},"body":{"classes/UserResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts:10",{"_index":2393,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:11",{"_index":2394,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:12",{"_index":2395,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:13",{"_index":2392,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":2391,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.controller.ts",{"_index":2259,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/api/user/user.controller.ts:19",{"_index":2265,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:37",{"_index":2268,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:43",{"_index":2271,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:49",{"_index":2277,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:56",{"_index":2274,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.module.ts",{"_index":2370,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":2396,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/api/user/user.service.ts:18",{"_index":2403,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:21",{"_index":2404,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:26",{"_index":2411,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:32",{"_index":2408,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:42",{"_index":2409,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:50",{"_index":2413,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:54",{"_index":2416,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:58",{"_index":2418,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:62",{"_index":2405,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:66",{"_index":2406,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:70",{"_index":2420,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:74",{"_index":2414,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app.controller.ts",{"_index":288,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:31",{"_index":297,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":414,"title":{},"body":{"modules/AppTestE2eModule.html":{}}}],["src/app.module.ts",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:46",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":376,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":377,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":2490,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/error",{"_index":1425,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/request",{"_index":2070,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{},"coverage.html":{}}}],["src/middleware/response",{"_index":2086,"title":{},"body":{"injectables/ResponseLoggingMiddleware.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts",{"_index":1207,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"coverage.html":{}}}],["src/util/config/database.configuration.ts:31",{"_index":1209,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["src/util/config/winston",{"_index":2492,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/exception/custom",{"_index":1366,"title":{},"body":{"classes/DuplicateEmailException.html":{},"classes/DuplicateUsernameException.html":{},"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"classes/NoUserTraceException.html":{},"classes/UnauthorizedRequestException.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/util/exception/error",{"_index":1383,"title":{},"body":{"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"coverage.html":{}}}],["src/util/exception/errorenum.ts",{"_index":2559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/util/filter/error",{"_index":1408,"title":{},"body":{"classes/ErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/util/global/extend",{"_index":2201,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["src/util/mocks/config.service.mock.ts",{"_index":2494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/mocks/jwt.service.mock.ts",{"_index":2496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/pipe/is",{"_index":398,"title":{},"body":{"controllers/AppTestE2eController.html":{},"classes/IsTestEnvironmentPipe.html":{},"coverage.html":{}}}],["ssl",{"_index":1229,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["start_date",{"_index":1354,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["startdate",{"_index":1340,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/SubscriptionEntity.html":{}}}],["started",{"_index":2445,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starttest",{"_index":2638,"title":{},"body":{"index.html":{}}}],["state",{"_index":19,"title":{},"body":{"entities/AddressEntity.html":{}}}],["statements",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1792,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"classes/RoleGroupMembershipEnum.html":{}}}],["status",{"_index":316,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"controllers/HealthCheckController.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1422,"title":{},"body":{"classes/ErrorExceptionFilter.html":{}}}],["statusinvoiceenum",{"_index":1718,"title":{},"body":{"entities/InvoicesEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statusinvoiceenum.pending",{"_index":1719,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["statuslogenum",{"_index":2545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum",{"_index":2198,"title":{},"body":{"entities/SubscriptionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["statussubscriptionenum.active",{"_index":2199,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["storage",{"_index":1632,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["strategy",{"_index":1764,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":685,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":687,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":676,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":20,"title":{},"body":{"entities/AddressEntity.html":{}}}],["string",{"_index":26,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserResponse.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strip",{"_index":1380,"title":{},"body":{"modules/EntitiesToMoveModule.html":{}}}],["strip_event",{"_index":548,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/StripEventEntity.html":{}}}],["stripcustomerid",{"_index":2170,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripe",{"_index":2188,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["stripevententity",{"_index":452,"title":{"entities/StripEventEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"modules/EntitiesToMoveModule.html":{},"entities/StripEventEntity.html":{},"coverage.html":{}}}],["stripeventrepository",{"_index":482,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscription",{"_index":550,"title":{},"body":{"injectables/AppTestE2eService.html":{},"entities/InvoicesEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["subscription.entity",{"_index":1363,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{}}}],["subscription.enum.ts",{"_index":2547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscription.user",{"_index":2332,"title":{},"body":{"entities/UserEntity.html":{}}}],["subscriptionentity",{"_index":455,"title":{"entities/SubscriptionEntity.html":{}},"body":{"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"entities/DiscountCodeEntity.html":{},"modules/EntitiesToMoveModule.html":{},"entities/InvoicesEntity.html":{},"entities/PlanEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["subscriptionentity.discountcodes",{"_index":1365,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.discountcodes)@jointable",{"_index":1356,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["subscriptionentity.invoices",{"_index":1726,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.invoices)@validatenested",{"_index":1706,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["subscriptionentity.plan",{"_index":1917,"title":{},"body":{"entities/PlanEntity.html":{}}}],["subscriptionrepository",{"_index":483,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["subscriptions",{"_index":1341,"title":{},"body":{"entities/DiscountCodeEntity.html":{},"entities/PlanEntity.html":{},"entities/UserEntity.html":{}}}],["success",{"_index":314,"title":{},"body":{"controllers/AppController.html":{}}}],["summary",{"_index":141,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["super",{"_index":1654,"title":{},"body":{"classes/InvalidParameterEntityException.html":{},"classes/InvalidPasswordException.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["super('email",{"_index":1370,"title":{},"body":{"classes/DuplicateEmailException.html":{}}}],["super('unauthorized",{"_index":2225,"title":{},"body":{"classes/UnauthorizedRequestException.html":{}}}],["super('user",{"_index":2388,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super('username",{"_index":1375,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["super(`invalid",{"_index":1863,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["super.canactivate(context",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super_admin",{"_index":2598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supertest",{"_index":2633,"title":{},"body":{"index.html":{}}}],["supplémentaires",{"_index":1722,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["support",{"_index":2646,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2647,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1234,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["table",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["tax_rate",{"_index":1708,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["taxrate",{"_index":1680,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["tcp",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["terminusmodule",{"_index":1601,"title":{},"body":{"modules/HealthCheckModule.html":{}}}],["test",{"_index":381,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/IsTestEnvironmentPipe.html":{},"changelog.html":{},"coverage.html":{}}}],["test/test",{"_index":379,"title":{},"body":{"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"coverage.html":{}}}],["testapi",{"_index":2639,"title":{},"body":{"index.html":{}}}],["text",{"_index":1003,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{}}}],["text/html",{"_index":312,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthCheckController.html":{}}}],["then((mailslandingpagelist",{"_index":1472,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{}}}],["thibaud",{"_index":2616,"title":{},"body":{"index.html":{}}}],["this.addressrepository.query('delete",{"_index":555,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.api_name",{"_index":1049,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_type",{"_index":1054,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.api_version",{"_index":1051,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{}}}],["this.apilandingpageservice.deletemail(mail",{"_index":148,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apilandingpageservice.getall",{"_index":145,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["this.apiloggerservice.createlog(createlogdto",{"_index":1406,"title":{},"body":{"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.apilogservice.createlogformethode",{"_index":1176,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UpdateUserEventHandler.html":{}}}],["this.apimailservice.sendmail(maildto",{"_index":268,"title":{},"body":{"controllers/ApiMailController.html":{}}}],["this.appservice.cleardatabasetest",{"_index":404,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.createusertest(createuserdto",{"_index":407,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["this.appservice.gethello",{"_index":318,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authenticationservice.login(login",{"_index":1790,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(request.user.id",{"_index":661,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getuserfromauthtoken(data",{"_index":664,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cardrepository.query('delete",{"_index":516,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.client.emit('create",{"_index":1058,"title":{},"body":{"classes/CreateLogCommandHandler.html":{}}}],["this.client.emit('send",{"_index":2104,"title":{},"body":{"classes/SendMailCommandHandler.html":{}}}],["this.client.send",{"_index":1286,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/GetAllMailQueryHandler.html":{}}}],["this.commandbus.execute",{"_index":226,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"injectables/ApiMailService.html":{}}}],["this.commandbus.execute(new",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.companyemployeerepository.query('delete",{"_index":519,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.companyrepository.query('delete",{"_index":518,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.connectedcardrepository.query('delete",{"_index":521,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.conversationrepository.query('delete",{"_index":523,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.createdat",{"_index":2215,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.customhealthcheckservice.checkhealth",{"_index":1597,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["this.deletedat",{"_index":2218,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.discountcoderepository.query('delete",{"_index":525,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.diskhealthindicator.checkstorage('disk",{"_index":1637,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.eventbus.publish",{"_index":1290,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/SendMailCommandHandler.html":{}}}],["this.eventbus.publish(new",{"_index":1301,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.generatecode(number(process.env.length_referral_code",{"_index":2436,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getuserbyreferralcode(code",{"_index":2437,"title":{},"body":{"injectables/UserService.html":{}}}],["this.groupmembershiprepository.query('delete",{"_index":529,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.grouprepository.query('delete",{"_index":527,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.healthcheckservice.check",{"_index":1617,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.invoicesrepository.query('delete",{"_index":531,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.isduplicatedemail(command.email",{"_index":2032,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isduplicatedusername(command.username",{"_index":2029,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.isvalidpassword(command.password",{"_index":2033,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.joinedconversationrepository.query('delete",{"_index":533,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.jwtservice.sign(payload",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(authenticationtoken",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error('invalid",{"_index":2243,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["this.logger_console.log('new",{"_index":2007,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["this.login",{"_index":2355,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.mediarepository.query('delete",{"_index":535,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.memoryhealthindicator.checkheap('memory",{"_index":1622,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.memoryhealthindicator.checkrss('memory",{"_index":1628,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.messagerepository.query('delete",{"_index":537,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.notificationrepository.query('delete",{"_index":551,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.occupationrepository.query('delete",{"_index":539,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.password",{"_index":2356,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["this.planrepository.query('delete",{"_index":541,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.profilerepository.query('delete",{"_index":543,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.querybus.execute(new",{"_index":228,"title":{},"body":{"injectables/ApiLandingPageService.html":{},"injectables/AuthService.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/UserService.html":{}}}],["this.referralcoderepository.query('delete",{"_index":553,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.regexvalidatepassword",{"_index":2024,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.regexvalidatepassword.test(password",{"_index":2043,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.socialnetworkrepository.query('delete",{"_index":545,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.stripeventrepository.query('delete",{"_index":547,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.subscriptionrepository.query('delete",{"_index":549,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":1618,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["this.updatedat",{"_index":2217,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["this.userlist",{"_index":2347,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository.delete(command.userid",{"_index":1324,"title":{},"body":{"classes/DeleteUserCommandHandler.html":{}}}],["this.userrepository.find().then(userlist",{"_index":1509,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["this.userrepository.find().then(users",{"_index":2039,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.userrepository.findby",{"_index":1122,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["this.userrepository.findone",{"_index":1520,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":1484,"title":{},"body":{"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userrepository.query('delete",{"_index":515,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save",{"_index":556,"title":{},"body":{"injectables/AppTestE2eService.html":{}}}],["this.userrepository.save(newuser",{"_index":1129,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":2055,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":2285,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":2289,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":2293,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(user.id",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.userservice.getuserifrefreshtokenmatches(refreshtoken",{"_index":1774,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":2298,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.setcurrentrefreshtoken(refreshtokencookie.token",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.update(user.id",{"_index":2295,"title":{},"body":{"controllers/UserController.html":{}}}],["this.verbose",{"_index":1046,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["this.verifypassword(query.plaintextpassword",{"_index":1541,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["thresholdpercent",{"_index":1638,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["throw",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"entities/AddressEntity.html":{},"classes/ErrorExceptionFilter.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["timestampentityextendentity",{"_index":2200,"title":{"classes/TimestampEntityExtendEntity.html":{}},"body":{"classes/TimestampEntityExtendEntity.html":{},"coverage.html":{}}}],["timestamps",{"_index":887,"title":{},"body":{"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["title",{"_index":1803,"title":{},"body":{"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"classes/SendMailCommand.html":{},"classes/SendMailEvent.html":{}}}],["todo",{"_index":2425,"title":{"todo.html":{}},"body":{"injectables/UserService.html":{}}}],["token",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["token.command",{"_index":2051,"title":{},"body":{"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["token.command.ts",{"_index":2046,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["token.command.ts:1",{"_index":2047,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":2048,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.event",{"_index":2066,"title":{},"body":{"classes/RemoveRefreshTokenEventHandler.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["token.event.ts",{"_index":2058,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"coverage.html":{}}}],["token.event.ts:1",{"_index":2059,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:3",{"_index":2063,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:4",{"_index":2062,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:5",{"_index":2061,"title":{},"body":{"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.event.ts:6",{"_index":2125,"title":{},"body":{"classes/SetCurrentRefreshTokenEvent.html":{}}}],["token.guard",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.guard.ts",{"_index":1755,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["token.strategy",{"_index":686,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":1757,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:12",{"_index":1759,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:25",{"_index":1761,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":728,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["total_amount",{"_index":1711,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["total_tax",{"_index":1713,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totalamount",{"_index":1681,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["totaltax",{"_index":1682,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["trace",{"_index":1864,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["trace.exception.ts",{"_index":1859,"title":{},"body":{"classes/NoUserTraceException.html":{},"coverage.html":{}}}],["trace.exception.ts:3",{"_index":1861,"title":{},"body":{"classes/NoUserTraceException.html":{}}}],["transferablestatuscardenum",{"_index":787,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transferablestatuscardenum.is_transferable",{"_index":881,"title":{},"body":{"entities/CardEntity.html":{}}}],["transform",{"_index":1729,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transform(value",{"_index":1730,"title":{},"body":{"classes/IsTestEnvironmentPipe.html":{}}}],["transformer",{"_index":2340,"title":{},"body":{"entities/UserEntity.html":{},"dependencies.html":{}}}],["transport",{"_index":167,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["transport.tcp",{"_index":196,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["transports",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trial_end_date",{"_index":2190,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trial_start_date",{"_index":2193,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialenddate",{"_index":2171,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["trialstartdate",{"_index":2172,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true",{"_index":38,"title":{},"body":{"entities/AddressEntity.html":{},"modules/AppModule.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogDto.html":{},"injectables/DatabaseConfiguration.html":{},"classes/ErrorCustomEventHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["true})@isdate",{"_index":2191,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["true})@isnumber",{"_index":1701,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["true})@isoptional()@isdatestring",{"_index":1970,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@isstring()@length(6",{"_index":1964,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["true})@joincolumn",{"_index":952,"title":{},"body":{"entities/ConnectedCardEntity.html":{},"entities/GroupEntity.html":{}}}],["true})@maxlength(255",{"_index":795,"title":{},"body":{"entities/CardEntity.html":{}}}],["try",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{}}}],["trying",{"_index":1268,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["type",{"_index":24,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/ApiLandingPageController.html":{},"injectables/ApiLandingPageService.html":{},"injectables/ApiLogService.html":{},"controllers/ApiMailController.html":{},"injectables/ApiMailService.html":{},"modules/AppModule.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/CreateMethodLogDto.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/CustomHealthCheckService.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteMailCommand.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/ErrorCustomEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/GetUserQuery.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"classes/HealthCheckQueryHandler.html":{},"classes/HealthCheckResponse.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/IsTestEnvironmentPipe.html":{},"entities/JoinedConversation.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/MailDto.html":{},"classes/MailLandingPageDto.html":{},"classes/MailResponse.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterCommand.html":{},"classes/RegisterEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"interfaces/RequestUser.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailCommand.html":{},"classes/SendMailCommandHandler.html":{},"classes/SendMailEvent.html":{},"classes/SendMailEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserListResponse.html":{},"classes/UserLoginDto.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1019,"title":{},"body":{"classes/CreateLogCommand.html":{},"classes/CreateLogCommandHandler.html":{},"classes/CreateLogDto.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/NotificationEntity.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["type.enum.ts",{"_index":1791,"title":{},"body":{"classes/LoggingTypeEnum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["type.enum.ts:2",{"_index":1794,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:3",{"_index":1795,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["type.enum.ts:4",{"_index":1793,"title":{},"body":{"classes/LoggingTypeEnum.html":{}}}],["typealiases",{"_index":2667,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeofcardenum",{"_index":788,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["typeofcardenum.social_network",{"_index":883,"title":{},"body":{"entities/CardEntity.html":{}}}],["typeorm",{"_index":76,"title":{},"body":{"entities/AddressEntity.html":{},"injectables/AppTestE2eService.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"injectables/JwtStrategy.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/SocialNetworkEntity.html":{},"entities/StripEventEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"todo.html":{}}}],["typeormhealthindicator",{"_index":1610,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{}}}],["typeormmodule",{"_index":279,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/EntitiesToMoveModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":462,"title":{},"body":{"modules/AppTestE2eModule.html":{},"modules/EntitiesToMoveModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":281,"title":{},"body":{"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1210,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["typeormoptionsfactory",{"_index":1211,"title":{},"body":{"injectables/DatabaseConfiguration.html":{}}}],["types",{"_index":2074,"title":{},"body":{"injectables/RequestLoggingMiddleware.html":{}}}],["types,@typescript",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["types/passport",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["types/useragent",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"injectables/ErrorLoggingMiddleware.html":{},"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua",{"_index":1436,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.device.tostring",{"_index":1441,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ua.os.tostring",{"_index":1439,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["ui",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedrequestexception",{"_index":2221,"title":{"classes/UnauthorizedRequestException.html":{}},"body":{"classes/UnauthorizedRequestException.html":{},"coverage.html":{}}}],["undefined",{"_index":296,"title":{},"body":{"controllers/AppController.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"injectables/ErrorLoggingMiddleware.html":{},"entities/GroupMembershipEntity.html":{},"controllers/HealthCheckController.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"classes/SendMailCommand.html":{},"entities/UserEntity.html":{}}}],["undefined})@isemail",{"_index":809,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@isurl",{"_index":849,"title":{},"body":{"entities/CardEntity.html":{}}}],["undefined})@useguards(undefined",{"_index":108,"title":{},"body":{"controllers/ApiLandingPageController.html":{}}}],["unique",{"_index":1120,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"entities/GroupEntity.html":{},"entities/OccupationEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["uniqueviolation",{"_index":2576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"classes/ErrorExceptionFilter.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["unlicensed",{"_index":2657,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":1298,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["unused",{"_index":1469,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["up.dto",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["up.dto.ts",{"_index":2138,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["up.dto.ts:14",{"_index":2141,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":2142,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":2140,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":2162,"title":{},"body":{"entities/SocialNetworkEntity.html":{},"classes/UpdateUserEvent.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["update(@req",{"_index":2294,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":2419,"title":{},"body":{"injectables/UserService.html":{}}}],["update(request",{"_index":2275,"title":{},"body":{"controllers/UserController.html":{}}}],["updated",{"_index":2257,"title":{},"body":{"classes/UpdateUserEventHandler.html":{}}}],["updated_at",{"_index":62,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{},"classes/TimestampEntityExtendEntity.html":{}}}],["updatedat",{"_index":21,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserLoginHandler.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"classes/TimestampEntityExtendEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{}}}],["updatedatecolumn",{"_index":75,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"entities/CompanyEmployeeEntity.html":{},"entities/CompanyEntity.html":{},"entities/ConnectedCardEntity.html":{},"entities/ConversationEntity.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"entities/GroupMembershipEntity.html":{},"entities/InvoicesEntity.html":{},"entities/JoinedConversation.html":{},"entities/MediaEntity.html":{},"entities/MessageEntity.html":{},"entities/NotificationEntity.html":{},"entities/OccupationEntity.html":{},"entities/PlanEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"entities/SocialNetworkEntity.html":{},"entities/SubscriptionEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn({name",{"_index":61,"title":{},"body":{"entities/AddressEntity.html":{},"entities/NotificationEntity.html":{}}}],["updatetimestamp",{"_index":2206,"title":{},"body":{"classes/TimestampEntityExtendEntity.html":{}}}],["updateusercommand",{"_index":2227,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateusercommand(id",{"_index":2442,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusercommandhandler",{"_index":2231,"title":{"classes/UpdateUserCommandHandler.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":2229,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserevent",{"_index":2239,"title":{"classes/UpdateUserEvent.html":{}},"body":{"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"coverage.html":{}}}],["updateuserevent(command.userid",{"_index":2247,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["updateusereventhandler",{"_index":2254,"title":{"classes/UpdateUserEventHandler.html":{}},"body":{"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["uppercase",{"_index":1668,"title":{},"body":{"classes/InvalidPasswordException.html":{}}}],["url",{"_index":2147,"title":{},"body":{"entities/SocialNetworkEntity.html":{}}}],["urls",{"_index":789,"title":{},"body":{"entities/CardEntity.html":{}}}],["usage_limit",{"_index":1359,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["usagelimit",{"_index":1342,"title":{},"body":{"entities/DiscountCodeEntity.html":{}}}],["use",{"_index":1427,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"classes/HealthCheckQueryHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["use(req",{"_index":1429,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["useclass",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1630,"title":{},"body":{"classes/HealthCheckQueryHandler.html":{},"entities/UserEntity.html":{}}}],["usedby",{"_index":1958,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["usedreferralcodes",{"_index":2304,"title":{},"body":{"entities/UserEntity.html":{}}}],["useguards",{"_index":121,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/actual",{"_index":577,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('/refresh",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthenticationguard",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(roleguard([userroleenum.admin",{"_index":143,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(roleguard([userroleenum.public",{"_index":2291,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes",{"_index":393,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["usepipes(new",{"_index":385,"title":{},"body":{"controllers/AppTestE2eController.html":{}}}],["user",{"_index":22,"title":{},"body":{"entities/AddressEntity.html":{},"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserEvent.html":{},"classes/CreateUserEventHandler.html":{},"classes/DeleteMailEventHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserByEmailQuery.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/NoUserTraceException.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"interfaces/RequestUser.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"classes/UpdateUserEventHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.command",{"_index":1093,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.command.ts",{"_index":1086,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/UpdateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:1",{"_index":1317,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":1318,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":1088,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.command.ts:4",{"_index":1089,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["user.controller",{"_index":2371,"title":{},"body":{"modules/UserModule.html":{}}}],["user.currenthashedrefreshtoken",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.dto",{"_index":401,"title":{},"body":{"controllers/AppTestE2eController.html":{},"injectables/AppTestE2eService.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserEvent.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":1139,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":2252,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":2250,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:13",{"_index":1148,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":1144,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":1140,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":2249,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1142,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":2042,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["user.event",{"_index":1165,"title":{},"body":{"classes/CreateUserEventHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEventHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEventHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["user.event.ts",{"_index":1154,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/UpdateUserEvent.html":{},"coverage.html":{}}}],["user.event.ts:1",{"_index":1328,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:3",{"_index":1156,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:4",{"_index":1329,"title":{},"body":{"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:5",{"_index":1161,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteUserEvent.html":{},"classes/LoginOfUserEvent.html":{},"classes/UpdateUserEvent.html":{}}}],["user.event.ts:6",{"_index":1160,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:7",{"_index":1162,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.event.ts:8",{"_index":1157,"title":{},"body":{"classes/CreateUserEvent.html":{}}}],["user.handler",{"_index":2373,"title":{},"body":{"modules/UserModule.html":{}}}],["user.handler.ts",{"_index":1499,"title":{},"body":{"classes/GetUserHandler.html":{},"coverage.html":{}}}],["user.handler.ts:10",{"_index":1500,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["user.handler.ts:16",{"_index":1501,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["user.id",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.interface",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{}}}],["user.interface.ts",{"_index":2085,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["user.jwttoken",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.password",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.profiles",{"_index":1950,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["user.query",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserHandler.html":{},"injectables/UserService.html":{}}}],["user.query.ts",{"_index":1548,"title":{},"body":{"classes/GetUserQuery.html":{},"coverage.html":{}}}],["user.query.ts:1",{"_index":1549,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":1550,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.referralcodes",{"_index":1979,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.response",{"_index":1110,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"injectables/UserService.html":{}}}],["user.response.ts",{"_index":1183,"title":{},"body":{"classes/CreateUserResponse.html":{},"coverage.html":{}}}],["user.response.ts:11",{"_index":1188,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:12",{"_index":1190,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:13",{"_index":1187,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:14",{"_index":1186,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:15",{"_index":1189,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.response.ts:4",{"_index":1184,"title":{},"body":{"classes/CreateUserResponse.html":{}}}],["user.service",{"_index":2280,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.usedreferralcodes",{"_index":1986,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["user.username",{"_index":2041,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["user/cqrs/handler/query/get",{"_index":689,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/cqrs/query/get",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/domain/entities/user.entity",{"_index":78,"title":{},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"interfaces/RequestUser.html":{},"entities/SubscriptionEntity.html":{}}}],["user/domain/enum/user",{"_index":134,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{}}}],["user/domain/response/user",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/user.module",{"_index":192,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{}}}],["user/user.service",{"_index":193,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user?.currenthashedrefreshtoken",{"_index":1524,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["user_not_found",{"_index":2566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":1433,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"dependencies.html":{}}}],["useragent.parse(req.headers['user",{"_index":1437,"title":{},"body":{"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["usercontroller",{"_index":2258,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentity",{"_index":64,"title":{"entities/UserEntity.html":{}},"body":{"entities/AddressEntity.html":{},"modules/ApiMailModule.html":{},"controllers/AppTestE2eController.html":{},"modules/AppTestE2eModule.html":{},"injectables/AppTestE2eService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/NotificationEntity.html":{},"entities/ProfileEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"interfaces/RequestUser.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity.addresses",{"_index":65,"title":{},"body":{"entities/AddressEntity.html":{}}}],["userentity.notifications",{"_index":1883,"title":{},"body":{"entities/NotificationEntity.html":{}}}],["userentity.subscriptions",{"_index":2196,"title":{},"body":{"entities/SubscriptionEntity.html":{}}}],["userentity})@manytoone(undefined",{"_index":1978,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userentity})@onetoone(undefined",{"_index":1985,"title":{},"body":{"entities/ReferralCodeEntity.html":{}}}],["userfromdb",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userfromdb?.roles.includes(role",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserEvent.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RegisterEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserEvent.html":{},"injectables/UserService.html":{}}}],["userlist",{"_index":2344,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach(user",{"_index":1510,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlistresponse",{"_index":1504,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserHandler.html":{},"classes/UserListResponse.html":{},"coverage.html":{}}}],["userlistresponse.userlist",{"_index":1512,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlistresponse.userlist.push(new",{"_index":1511,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlogindto",{"_index":2348,"title":{"classes/UserLoginDto.html":{}},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userloginresponse",{"_index":615,"title":{"classes/UserLoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":157,"title":{"modules/UserModule.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":557,"title":{},"body":{"injectables/AppTestE2eService.html":{},"injectables/AuthService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"injectables/DatabaseConfiguration.html":{},"classes/GetUserByUsernameQuery.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"classes/GetUserLoginQuery.html":{},"classes/LoginOfUserEvent.html":{},"classes/LoginOfUserEventHandler.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["username.exception",{"_index":1101,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["username.exception.ts",{"_index":1373,"title":{},"body":{"classes/DuplicateUsernameException.html":{},"coverage.html":{}}}],["username.exception.ts:3",{"_index":1374,"title":{},"body":{"classes/DuplicateUsernameException.html":{}}}],["username.query",{"_index":1495,"title":{},"body":{"classes/GetUserByUsernameQueryHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["username.query.ts",{"_index":1490,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{},"coverage.html":{}}}],["username.query.ts:1",{"_index":1492,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["username.query.ts:2",{"_index":1493,"title":{},"body":{"classes/GetUserByUsernameQuery.html":{}}}],["usernamefield",{"_index":1789,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernameprofile",{"_index":1925,"title":{},"body":{"entities/ProfileEntity.html":{}}}],["usernotfoundexception",{"_index":2384,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["userrepository",{"_index":488,"title":{},"body":{"injectables/AppTestE2eService.html":{},"classes/CreateUserCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserByEmailQueryHandler.html":{},"classes/GetUserByUsernameQueryHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserLoginHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["userresponse",{"_index":1502,"title":{"classes/UserResponse.html":{}},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userroleenum",{"_index":133,"title":{},"body":{"controllers/ApiLandingPageController.html":{},"controllers/ApiMailController.html":{},"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserResponse.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userroleenum.public",{"_index":1134,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{}}}],["users",{"_index":2317,"title":{},"body":{"entities/UserEntity.html":{},"classes/UserListResponse.html":{}}}],["users.some(user",{"_index":2040,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["usersenderid",{"_index":2565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userservice",{"_index":159,"title":{"injectables/UserService.html":{}},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiMailModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["useruniqueemail",{"_index":1121,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueemail.length",{"_index":1124,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueusername",{"_index":1125,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["useruniqueusername.length",{"_index":1127,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["userusername",{"_index":1540,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["userusername.password",{"_index":1542,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["util/config/database.configuration",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["util/config/winston",{"_index":2002,"title":{},"body":{"classes/RegisterEventHandler.html":{}}}],["util/exception/custom",{"_index":1098,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["util/exception/error",{"_index":175,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AuthModule.html":{},"classes/DeleteMailCommandHandler.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenCommandHandler.html":{},"classes/SetCurrentRefreshTokenCommandHandler.html":{},"classes/UpdateUserCommandHandler.html":{}}}],["v_0.0.4",{"_index":2642,"title":{},"body":{"index.html":{}}}],["v_card",{"_index":2596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validate",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserCommandHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserCommandHandler.html":{},"changelog.html":{}}}],["validate(login",{"_index":1786,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(newuser",{"_index":1116,"title":{},"body":{"classes/CreateUserCommandHandler.html":{},"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":1777,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":1760,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validate(updateusercommand",{"_index":2242,"title":{},"body":{"classes/UpdateUserCommandHandler.html":{}}}],["validated",{"_index":2581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["validatenested",{"_index":1716,"title":{},"body":{"entities/InvoicesEntity.html":{}}}],["validatetoken",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{}}}],["validatetoken(data",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationerror",{"_index":1649,"title":{},"body":{"classes/InvalidParameterEntityException.html":{}}}],["validator",{"_index":82,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CardEntity.html":{},"classes/CreateUserCommandHandler.html":{},"classes/CreateUserDto.html":{},"entities/DiscountCodeEntity.html":{},"entities/GroupEntity.html":{},"classes/InvalidParameterEntityException.html":{},"entities/InvoicesEntity.html":{},"classes/MailDto.html":{},"entities/NotificationEntity.html":{},"entities/ReferralCodeEntity.html":{},"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"entities/SubscriptionEntity.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["value",{"_index":1158,"title":{},"body":{"classes/CreateUserEvent.html":{},"classes/DeleteMailEvent.html":{},"classes/DeleteUserCommandHandler.html":{},"classes/DeleteUserEvent.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/IsTestEnvironmentPipe.html":{},"classes/LoggingTypeEnum.html":{},"classes/LoginOfUserEvent.html":{},"classes/RegisterEventHandler.html":{},"classes/RemoveRefreshTokenEvent.html":{},"classes/RoleGroupMembershipEnum.html":{},"classes/SendMailEvent.html":{},"classes/SetCurrentRefreshTokenEvent.html":{},"classes/UpdateUserCommandHandler.html":{},"classes/UpdateUserEvent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":29,"title":{},"body":{"entities/AddressEntity.html":{},"entities/InvoicesEntity.html":{},"entities/NotificationEntity.html":{},"entities/PlanEntity.html":{}}}],["variable",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2670,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1470,"title":{},"body":{"classes/GetAllMailQueryHandler.html":{},"classes/IsTestEnvironmentPipe.html":{}}}],["verbose",{"_index":1026,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verboselogenum",{"_index":1035,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/ErrorLoggingMiddleware.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{},"miscellaneous/enumerations.html":{}}}],["verboselogenum.debug",{"_index":1056,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{}}}],["verboselogenum.none",{"_index":1048,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"injectables/ResponseLoggingMiddleware.html":{}}}],["verification",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["verify",{"_index":1119,"title":{},"body":{"classes/CreateUserCommandHandler.html":{}}}],["verifypassword",{"_index":1531,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["verifypassword(plaintextpassword",{"_index":1534,"title":{},"body":{"classes/GetUserLoginHandler.html":{}}}],["version",{"_index":1053,"title":{},"body":{"classes/CreateLogCommandHandler.html":{},"classes/ErrorCustomEventHandler.html":{},"properties.html":{}}}],["void",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorCustomEventHandler.html":{},"classes/ErrorExceptionFilter.html":{},"classes/RemoveRefreshTokenEventHandler.html":{},"injectables/RequestLoggingMiddleware.html":{},"classes/SetCurrentRefreshTokenEventHandler.html":{},"classes/TimestampEntityExtendEntity.html":{},"classes/UpdateUserEventHandler.html":{}}}],["waiting",{"_index":1292,"title":{},"body":{"classes/DeleteMailCommandHandler.html":{}}}],["wallet",{"_index":2613,"title":{},"body":{"index.html":{}}}],["wallet_share",{"_index":2595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_share_api",{"_index":2557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletshare",{"_index":1589,"title":{},"body":{"controllers/HealthCheckController.html":{}}}],["walletshareorg",{"_index":2624,"title":{},"body":{"index.html":{}}}],["warning",{"_index":2570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["website",{"_index":915,"title":{},"body":{"entities/CompanyEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum",{"_index":853,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocancommunicatewithenum.all",{"_index":886,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenum",{"_index":851,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocanseecardinformationenum.all",{"_index":885,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocanseecardinformationenums",{"_index":790,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansendmessagesenums",{"_index":791,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenum",{"_index":855,"title":{},"body":{"entities/CardEntity.html":{},"miscellaneous/enumerations.html":{}}}],["whocansharecardenum.diffusible",{"_index":884,"title":{},"body":{"entities/CardEntity.html":{}}}],["whocansharecardenums",{"_index":792,"title":{},"body":{"entities/CardEntity.html":{}}}],["winston",{"_index":1214,"title":{},"body":{"injectables/DatabaseConfiguration.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["with.enum",{"_index":874,"title":{},"body":{"entities/CardEntity.html":{}}}],["with.enum.ts",{"_index":2555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["world",{"_index":294,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["ws",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1185,"title":{},"body":{"classes/CreateUserResponse.html":{},"classes/GetUserQuery.html":{},"classes/UserListResponse.html":{},"classes/UserLoginResponse.html":{},"classes/UserResponse.html":{}}}],["z])(?=.*[a",{"_index":2026,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["z]).{4",{"_index":2028,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["za",{"_index":2027,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["zip_code",{"_index":67,"title":{},"body":{"entities/AddressEntity.html":{},"entities/CompanyEntity.html":{}}}],["zipcode",{"_index":23,"title":{},"body":{"entities/AddressEntity.html":{}}}],["zoom",{"_index":160,"title":{},"body":{"modules/ApiLandingPageModule.html":{},"modules/ApiLogModule.html":{},"modules/ApiMailModule.html":{},"modules/AppModule.html":{},"modules/AppTestE2eModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/AddressEntity.html":{"url":"entities/AddressEntity.html","title":"entity - AddressEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AddressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/address.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                company\n                            \n                            \n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                latitude\n                            \n                            \n                                longitude\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'city', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, companyEntity => companyEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'country', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_active', type: 'boolean', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'latitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'longitude', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'state', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'street', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.addresses, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'zip_code', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/address.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@Entity({ name: 'address' })\nexport class AddressEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'street', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  street: string;\n\n  @Column({ name: 'city', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  city: string;\n\n  @Column({ name: 'state', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  state: string;\n\n  @Column({ name: 'country', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  country: string;\n\n  @Column({ name: 'zip_code', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  zipCode: string;\n\n  @Column({ name: 'latitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  latitude: string;\n\n  @Column({ name: 'longitude', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  longitude: string;\n\n  @Column({ name: 'is_active', type: 'boolean', default: true })\n  isActive: boolean;\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => CompanyEntity, companyEntity => companyEntity.addresses, { nullable: true, onDelete: 'CASCADE' })\n  company: CompanyEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiLandingPageController.html":{"url":"controllers/ApiLandingPageController.html","title":"controller - ApiLandingPageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiLandingPageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-landing-page\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete-mail')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Delete mail'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')@ApiOperation({summary: 'Get all mails'})@ApiOkResponse({type: undefined})@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiOkResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { MailResponse } from './domain/response/mail.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\n\n@Controller('api-landing-page')\n@ApiTags('api-landing-page')\nexport class ApiLandingPageController {\n  constructor(private readonly apiLandingPageService: ApiLandingPageService) {}\n\n  @Get('/getAll')\n  @ApiOperation({ summary: 'Get all mails' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async getAll(): Promise {\n    return this.apiLandingPageService.getAll();\n  }\n\n  @Delete('/delete-mail')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Delete mail' })\n  @ApiOkResponse({ type: [MailResponse] })\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async deleteMail(@Body() mail: string): Promise {\n    return this.apiLandingPageService.deleteMail(mail);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLandingPageModule.html":{"url":"modules/ApiLandingPageModule.html","title":"module - ApiLandingPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLandingPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLandingPageService\n                        \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiLandingPageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLandingPageController } from './api-landing-page.controller';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { DeleteMailCommandHandler } from './cqrs/handler/command/delete-mail.command-handler';\nimport { DeleteMailEventHandler } from './cqrs/handler/event/delete-mail.event-handler';\nimport { GetAllMailQueryHandler } from './cqrs/handler/query/get-all-mail.query-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiLandingPageService } from './api-landing-page.service';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_WAITING_LIST',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiLandingPageController],\n  providers: [\n    ApiLandingPageService,\n    ApiLogService,\n    UserService,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n    DeleteMailCommandHandler,\n    DeleteMailEventHandler,\n    GetAllMailQueryHandler,\n  ],\n})\nexport class ApiLandingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLandingPageService.html":{"url":"injectables/ApiLandingPageService.html","title":"injectable - ApiLandingPageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLandingPageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/api-landing-page.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteMail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/api-landing-page.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/api-landing-page.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from './cqrs/command/delete-mail.command';\nimport { MailResponse } from './domain/response/mail.response';\nimport { GetAllMailQuery } from './cqrs/query/get-all-mail.query';\nimport { MailLandingPageDto } from './domain/dto/mail-landing-page.dto';\n\n@Injectable()\nexport class ApiLandingPageService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async deleteMail(mail: string): Promise {\n    await this.commandBus.execute(\n      new DeleteMailCommand({\n        mail: mail,\n      }),\n    );\n  }\n\n  async getAll(): Promise {\n    return await this.queryBus.execute(new GetAllMailQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiLogModule.html":{"url":"modules/ApiLogModule.html","title":"module - ApiLogModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiLogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLogModule\n\n\n\ncluster_ApiLogModule_providers\n\n\n\ncluster_ApiLogModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-log/api-log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ApiLogService } from './api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CreateLogCommandHandler } from './cqrs/handler/command/create-log.command-handler';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  controllers: [],\n  providers: [ApiLogService, ErrorCustomEventHandler, CreateLogCommandHandler],\n})\nexport class ApiLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLogService.html":{"url":"injectables/ApiLogService.html","title":"injectable - ApiLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/api-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                createLogForMethode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/api-log.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLog(log: CreateLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLogForMethode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogForMethode(log: CreateMethodLogDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/api-log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    log\n                                    \n                                                CreateMethodLogDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLogDto } from './domain/dto/create-log.dto';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateLogCommand } from './cqrs/command/create-log.command';\nimport { CreateMethodLogDto } from './domain/dto/create-method-log.dto';\n\n@Injectable()\nexport class ApiLogService {\n  constructor(private readonly commandBus: CommandBus) {}\n  async createLog(log: CreateLogDto): Promise {\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...log,\n      }),\n    );\n  }\n\n  async createLogForMethode(log: CreateMethodLogDto): Promise {\n    const createLogDto: CreateLogDto = new CreateLogDto({\n      method: log.method,\n      module: log.module,\n      body: Object(log.body),\n    });\n    await this.commandBus.execute(\n      new CreateLogCommand({\n        ...createLogDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiMailController.html":{"url":"controllers/ApiMailController.html","title":"controller - ApiMailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiMailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@HttpCode(200)@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/api-mail/api-mail.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post, UseGuards } from '@nestjs/common';\nimport { ApiMailService } from './api-mail.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Controller('api-mail')\n@ApiTags('Mail')\nexport class ApiMailController {\n  constructor(private readonly apiMailService: ApiMailService) {}\n\n  @Post('/')\n  @HttpCode(200)\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async sendMail(@Body() mailDto: MailDto): Promise {\n    await this.apiMailService.sendMail(mailDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiMailModule.html":{"url":"modules/ApiMailModule.html","title":"module - ApiMailModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiMailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_ApiMailModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\n\n\nUserService\n\nUserService\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/api-mail/api-mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            ApiMailService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiMailController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { SendMailCommandHandler } from './cqrs/handler/command/send-mail.command';\nimport { SendMailEventHandler } from './cqrs/handler/event/send-mail.event-handler';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\nimport { ApiMailController } from './api-mail.controller';\nimport { ApiMailService } from './api-mail.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { UserModule } from '../user/user.module';\nimport { UserService } from '../user/user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n    ]),\n    CqrsModule,\n    ApiLogModule,\n    UserModule,\n  ],\n  controllers: [ApiMailController],\n  providers: [\n    ApiLogService,\n    ApiMailService,\n    UserService,\n    ErrorCustomEventHandler,\n    SendMailCommandHandler,\n    SendMailEventHandler,\n    CreateLogCommandHandler,\n  ],\n})\nexport class ApiMailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiMailService.html":{"url":"injectables/ApiMailService.html","title":"injectable - ApiMailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiMailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/api-mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/api-mail.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(mailDto: MailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/api-mail.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailDto\n                                    \n                                                MailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { SendMailCommand } from './cqrs/command/send-mail.command';\nimport { MailDto } from './domain/dto/mail.dto';\n\n@Injectable()\nexport class ApiMailService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async sendMail(mailDto: MailDto): Promise {\n    await this.commandBus.execute(\n      new SendMailCommand({\n        ...mailDto,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(200)@ApiResponse({status: 200, description: 'Hello World!', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:31\n                \n            \n\n\n            \n                \n                       HTTP/1.1 200 OK\n   Hello World!\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags('HelloWorld')\nexport class AppController {\n  /**\n   * @ignore\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @api {get} / Hello World\n   * @apiName GetHello\n   * @apiGroup HelloWorld\n   * @apiVersion 0.0.1\n   * @apiDescription Hello World!\n   * @apiSuccess {String} text/html Hello World!\n   * @apiSuccessExample {text/html} Success-Response:\n   *    HTTP/1.1 200 OK\n   *    Hello World!\n   */\n  @Get()\n  @HttpCode(200)\n  @ApiResponse({\n    status: 200,\n    description: 'Hello World!',\n    content: { 'text/html': { example: 'Hello World!' } },\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLandingPageModule\n                        \n                        \n                            ApiLogModule\n                        \n                        \n                            ApiMailModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            EntitiesToMoveModule\n                        \n                        \n                            HealthCheckModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseConfiguration } from './util/config/database.configuration';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigModule } from '@nestjs/config';\nimport HealthCheckModule from './api/health-check/health-check.module';\nimport { EntitiesToMoveModule } from './api/entities-to-create/entities-to-move.module';\nimport { UserModule } from './api/user/user.module';\nimport { ApiLogModule } from './api/api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RequestLoggingMiddleware } from './middleware/request-logging.middleware';\nimport { ResponseLoggingMiddleware } from './middleware/response-logging.middleware';\nimport { ErrorLoggingMiddleware } from './middleware/error-logging.middleware';\nimport { ApiLogService } from './api/api-log/api-log.service';\nimport { AuthModule } from './api/auth/auth.module';\nimport { ApiMailModule } from './api/api-mail/api-mail.module';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { ApiLandingPageModule } from \"./api/api-landing-page/api-landing-page.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConfiguration,\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: 3201 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: 3202 } },\n    ]),\n    // ________ Module ________\n    HealthCheckModule,\n    UserModule,\n    ApiLogModule,\n    AuthModule,\n    EntitiesToMoveModule,\n    ApiMailModule,\n    CqrsModule,\n    ApiLandingPageModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiLogService],\n})\nexport class AppModule implements NestModule {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestLoggingMiddleware, ResponseLoggingMiddleware, ErrorLoggingMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppTestE2eController.html":{"url":"controllers/AppTestE2eController.html","title":"controller - AppTestE2eController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppTestE2eController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDatabaseTest\n                            \n                            \n                                createUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \nclearDatabaseTest()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Get('/api/test/clear-database-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserTest\n                        \n                    \n                \n            \n            \n                \ncreateUserTest(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new IsTestEnvironmentPipe())@Post('/api/test/create-user-test')\n                \n            \n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UsePipes } from '@nestjs/common';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { IsTestEnvironmentPipe } from '../../src/util/pipe/is-test-environment.pipe';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\n\n@Controller()\nexport class AppTestE2eController {\n  constructor(private readonly appService: AppTestE2eService) {}\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Get('/api/test/clear-database-test')\n  clearDatabaseTest(): Promise {\n    return this.appService.clearDatabaseTest();\n  }\n\n  @UsePipes(new IsTestEnvironmentPipe())\n  @Post('/api/test/create-user-test')\n  createUserTest(@Body() createUserDto: CreateUserDto): Promise {\n    return this.appService.createUserTest(createUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppTestE2eModule.html":{"url":"modules/AppTestE2eModule.html","title":"module - AppTestE2eModule","body":"\n                   \n\n\n\n\n    Modules\n    AppTestE2eModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_imports\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppTestE2eService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppTestE2eController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppTestE2eController } from './app-test-e2e.controller';\nimport { AppTestE2eService } from './app-test-e2e.service';\nimport { AppModule } from '../../src/app.module';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../src/api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\n\n@Module({\n  imports: [\n    AppModule,\n    TypeOrmModule.forFeature([\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      UserEntity,\n      NotificationEntity,\n      ReferralCodeEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [AppTestE2eController],\n  providers: [AppTestE2eService],\n})\nexport class AppTestE2eModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppTestE2eService.html":{"url":"injectables/AppTestE2eService.html","title":"injectable - AppTestE2eService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppTestE2eService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/test-environment/app-test-e2e.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabaseTest\n                            \n                            \n                                    Async\n                                createUserTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, cardRepository: Repository, companyRepository: Repository, companyEmployeeRepository: Repository, connectedCardRepository: Repository, conversationRepository: Repository, discountCodeRepository: Repository, groupRepository: Repository, groupMembershipRepository: Repository, invoicesRepository: Repository, joinedConversationRepository: Repository, mediaRepository: Repository, messageRepository: Repository, occupationRepository: Repository, planRepository: Repository, profileRepository: Repository, socialNetworkRepository: Repository, stripEventRepository: Repository, subscriptionRepository: Repository, notificationRepository: Repository, referralCodeRepository: Repository, addressRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in test/test-environment/app-test-e2e.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyEmployeeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connectedCardRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discountCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupMembershipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoicesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinedConversationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        occupationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        planRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socialNetworkRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripEventRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referralCodeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearDatabaseTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearDatabaseTest()\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserTest\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserTest(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in test/test-environment/app-test-e2e.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AddressEntity } from '../../src/api/entities-to-create/address.entity';\nimport StripEventEntity from '../../src/api/entities-to-create/strip-event.entity';\nimport { ReferralCodeEntity } from '../../src/api/entities-to-create/referal-code.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinedConversation } from '../../src/api/entities-to-create/joined-conversation.entity';\nimport { SocialNetworkEntity } from '../../src/api/entities-to-create/social-network.entity';\nimport { SubscriptionEntity } from '../../src/api/entities-to-create/subscription.entity';\nimport { GroupMembershipEntity } from '../../src/api/entities-to-create/group-membership.entity';\nimport { CardEntity } from '../../src/api/entities-to-create/card.entity';\nimport { UserEntity } from '../../src/api/user/domain/entities/user.entity';\nimport { ProfileEntity } from '../../src/api/entities-to-create/profile.entity';\nimport { DiscountCodeEntity } from '../../src/api/entities-to-create/discount-code.entity';\nimport { MessageEntity } from '../../src/api/entities-to-create/message.entity';\nimport { GroupEntity } from '../../src/api/entities-to-create/group.entity';\nimport CompanyEntity from '../../src/api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../src/api/entities-to-create/company-employee.entity';\nimport { PlanEntity } from '../../src/api/entities-to-create/plan.entity';\nimport { ConversationEntity } from '../../src/api/entities-to-create/conversation.entity';\nimport { InvoicesEntity } from '../../src/api/entities-to-create/invoices.entity';\nimport { NotificationEntity } from '../../src/api/entities-to-create/notification.entity';\nimport { ConnectedCardEntity } from '../../src/api/entities-to-create/connected-card.entity';\nimport { MediaEntity } from '../../src/api/entities-to-create/media.entity';\nimport { OccupationEntity } from '../../src/api/entities-to-create/occupation.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../../src/api/user/domain/dto/create-user.dto';\nimport * as bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class AppTestE2eService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(CardEntity)\n    private readonly cardRepository: Repository,\n    @InjectRepository(CompanyEntity)\n    private readonly companyRepository: Repository,\n    @InjectRepository(CompanyEmployeeEntity)\n    private readonly companyEmployeeRepository: Repository,\n    @InjectRepository(ConnectedCardEntity)\n    private readonly connectedCardRepository: Repository,\n    @InjectRepository(ConversationEntity)\n    private readonly conversationRepository: Repository,\n    @InjectRepository(DiscountCodeEntity)\n    private readonly discountCodeRepository: Repository,\n    @InjectRepository(GroupEntity)\n    private readonly groupRepository: Repository,\n    @InjectRepository(GroupMembershipEntity)\n    private readonly groupMembershipRepository: Repository,\n    @InjectRepository(InvoicesEntity)\n    private readonly invoicesRepository: Repository,\n    @InjectRepository(JoinedConversation)\n    private readonly joinedConversationRepository: Repository,\n    @InjectRepository(MediaEntity)\n    private readonly mediaRepository: Repository,\n    @InjectRepository(MessageEntity)\n    private readonly messageRepository: Repository,\n    @InjectRepository(OccupationEntity)\n    private readonly occupationRepository: Repository,\n    @InjectRepository(PlanEntity)\n    private readonly planRepository: Repository,\n    @InjectRepository(ProfileEntity)\n    private readonly profileRepository: Repository,\n    @InjectRepository(SocialNetworkEntity)\n    private readonly socialNetworkRepository: Repository,\n    @InjectRepository(StripEventEntity)\n    private readonly stripEventRepository: Repository,\n    @InjectRepository(SubscriptionEntity)\n    private readonly subscriptionRepository: Repository,\n    @InjectRepository(NotificationEntity)\n    private readonly notificationRepository: Repository,\n    @InjectRepository(ReferralCodeEntity)\n    private readonly referralCodeRepository: Repository,\n    @InjectRepository(AddressEntity)\n    private readonly addressRepository: Repository,\n  ) {}\n\n  async clearDatabaseTest(): Promise {\n    await this.userRepository.query('DELETE FROM \"user\";');\n    await this.cardRepository.query('DELETE FROM \"card\";');\n    await this.companyRepository.query('DELETE FROM \"company\";');\n    await this.companyEmployeeRepository.query('DELETE FROM \"company_employee\";');\n    await this.connectedCardRepository.query('DELETE FROM \"connected_card\";');\n    await this.conversationRepository.query('DELETE FROM \"conversation\";');\n    await this.discountCodeRepository.query('DELETE FROM \"discount_codes\";');\n    await this.groupRepository.query('DELETE FROM \"group\";');\n    await this.groupMembershipRepository.query('DELETE FROM \"group_membership\";');\n    await this.invoicesRepository.query('DELETE FROM \"invoices\";');\n    await this.joinedConversationRepository.query('DELETE FROM \"joined_conversation\";');\n    await this.mediaRepository.query('DELETE FROM \"media\";');\n    await this.messageRepository.query('DELETE FROM \"message\";');\n    await this.occupationRepository.query('DELETE FROM \"occupation\";');\n    await this.planRepository.query('DELETE FROM \"plan\";');\n    await this.profileRepository.query('DELETE FROM \"profile\";');\n    await this.socialNetworkRepository.query('DELETE FROM \"social_network\";');\n    await this.stripEventRepository.query('DELETE FROM \"strip_event\";');\n    await this.subscriptionRepository.query('DELETE FROM \"subscription\";');\n    await this.notificationRepository.query('DELETE FROM \"notification\";');\n    await this.referralCodeRepository.query('DELETE FROM \"referral_code\";');\n    await this.addressRepository.query('DELETE FROM \"address\";');\n\n    return;\n  }\n\n  async createUserTest(createUserDto: CreateUserDto): Promise {\n    return await this.userRepository.save({\n      username: createUserDto.username,\n      email: createUserDto.email,\n      password: bcrypt.hashSync(createUserDto.password, 10),\n      roles: createUserDto.roles,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@UseGuards(JwtRefreshGuard)@Post('/logout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('/refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: 'validate-token'})\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport { Body, Controller, Get, HttpCode, Post, Req, Res, UseGuards } from '@nestjs/common';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRoleEnum } from '../user/domain/enum/user-role.enum';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\n\n@Controller('/auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly userService: UserService, private readonly authService: AuthService) {}\n\n  @Post('/register')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    return await this.authService.signup(signUpDto);\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/login')\n  async signIn(@Req() request: RequestUser, @Res() response: Response): Promise {\n    const { user } = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(user.id);\n    await this.userService.setCurrentRefreshToken(refreshTokenCookie.token, user.id);\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', [accessTokenCookie.auth, refreshTokenCookie.cookie]);\n    user.currentHashedRefreshToken = refreshTokenCookie.token;\n    user.jwtToken = accessTokenCookie.token;\n    user.password = '';\n    return response.send(user);\n  }\n\n  @HttpCode(204)\n  @UseGuards(JwtRefreshGuard)\n  @Post('/logout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response): Promise {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(204);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('/actual')\n  authenticate(@Req() request: RequestUser): UserEntity {\n    return request.user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh')\n  refresh(@Req() request: RequestUser): UserEntity {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(request.user.id);\n\n    if (!request.res) {\n      throw new Error('Response object missing');\n    }\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie.token);\n    return request.user;\n  }\n\n  // MessagePatern\n\n  @MessagePattern({ cmd: 'validate-token' })\n  async validateToken(data: string): Promise {\n    return await this.authService.getUserFromAuthToken(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nApiLogService\n\nApiLogService\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/command/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from '../user/user.service';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { GetUserLoginHandler } from '../user/cqrs/handler/query/get-user-login.handler';\nimport { RegisterEventHandler } from './cqrs/event-handler/register.event-handler';\nimport { ErrorCustomEventHandler } from '../../util/exception/error-handler/error-custom.event-handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport * as process from 'process';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    ClientsModule.register([\n      { name: 'API_LOG', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_LOG) || 3101 } },\n      { name: 'API_MAIL', transport: Transport.TCP, options: { port: Number(process.env.PORT_API_MAIL) || 3102 } },\n      {\n        name: 'API_LANDING_PAGE',\n        transport: Transport.TCP,\n        options: { port: Number(process.env.PORT_API_WAITING_LIST) || 3103 },\n      },\n    ]),\n    PassportModule,\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    ApiLogService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    GetUserLoginHandler,\n    RegisterEventHandler,\n    ErrorCustomEventHandler,\n    CreateLogCommandHandler,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                getUserFromAuthToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserFromAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFromAuthToken(authenticationToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authenticationToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\nimport { UserLoginResponse } from '../user/domain/response/user-login.response';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\nimport { GetUserLoginQuery } from '../user/cqrs/query/get-user-login.query';\n\n@Injectable()\nexport class AuthService {\n  constructor(private jwtService: JwtService, private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async signup(signUpDto: SignUpDto) {\n    return this.commandBus.execute(new RegisterCommand(signUpDto.username, signUpDto.email, signUpDto.password));\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      return await this.queryBus.execute(new GetUserLoginQuery(username, plainTextPassword));\n    } catch (error) {\n      throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  public getCookieWithJwtToken(userId: string): { token: string; auth: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    });\n    return {\n      token: token,\n      auth: `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`,\n    };\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string): { cookie: string; token: string } {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut(): string[] {\n    return ['Authentication=; HttpOnly; Path=/; Max-Age=0', 'Refresh=; HttpOnly; Path=/; Max-Age=0'];\n  }\n\n  async getUserFromAuthToken(authenticationToken: string): Promise {\n    const payload: TokenPayload = this.jwtService.verify(authenticationToken, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n    });\n    if (payload.userId) {\n      return this.queryBus.execute(new GetUserQuery(payload.userId));\n    }\n    throw new HttpException('Wrong token provided', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CardEntity.html":{"url":"entities/CardEntity.html","title":"entity - CardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                companyName\n                            \n                            \n                                connectedCardOne\n                            \n                            \n                                connectedCardTwo\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                emails\n                            \n                            \n                                    Optional\n                                firstname\n                            \n                            \n                                groupMemberships\n                            \n                            \n                                id\n                            \n                            \n                                isOwnerPro\n                            \n                            \n                                    Optional\n                                lastname\n                            \n                            \n                                media\n                            \n                            \n                                    Optional\n                                messages\n                            \n                            \n                                    Optional\n                                notes\n                            \n                            \n                                numberOfShares\n                            \n                            \n                                    Optional\n                                occupation\n                            \n                            \n                                occupations\n                            \n                            \n                                owner\n                            \n                            \n                                phones\n                            \n                            \n                                profilesWhoSavedCard\n                            \n                            \n                                    Optional\n                                socialName\n                            \n                            \n                                socialNetwork\n                            \n                            \n                                transferableStatusCardEnum\n                            \n                            \n                                typeOfCardEnum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                urls\n                            \n                            \n                                whoCanSeeCardInformationEnums\n                            \n                            \n                                whoCanSendMessagesEnums\n                            \n                            \n                                whoCanShareCardEnums\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCardTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectedCardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, connectedCard => connectedCard.cardEntityTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsEmail({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupMemberships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.card, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnerPro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.CardPicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.author, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfShares\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer', default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.cards, {onDelete: 'SET NULL'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.personalCards)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilesWhoSavedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profile => profile.savedCard)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@MaxLength(255)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socialNetwork\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SocialNetworkEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, socialNetwork => socialNetwork.cards, {onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferableStatusCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferableStatusCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeOfCardEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeOfCardEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TypeOfCardEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        urls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})@IsUrl({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSeeCardInformationEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanSeeCardInformationEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanSendMessagesEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanCommunicateWithEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whoCanShareCardEnums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WhoCanShareCardEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/card.entity.ts:142\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { WhoCanShareCardEnum } from './enum/who-can-share-card.enum';\nimport { WhoCanSeeCardInformationEnum } from './enum/who-can-see-card-information.enum';\nimport { TypeOfCardEnum } from './enum/type-of-card.enum';\nimport { IsEmail, IsUrl, MaxLength } from 'class-validator';\nimport { OccupationEntity } from './occupation.entity';\nimport { WhoCanCommunicateWithEnum } from './enum/who-can-communicate-with.enum';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { MessageEntity } from './message.entity';\nimport { TransferableStatusCardEnum } from './enum/transferable-status-card.enum';\nimport { SocialNetworkEntity } from './social-network.entity';\n\n@Entity({ name: 'card' })\nexport class CardEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  socialName?: string;\n\n  @Column({ default: false })\n  isOwnerPro: boolean;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  firstname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  lastname?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  companyName?: string;\n\n  @Column('text', { array: true, default: [] })\n  phones: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsEmail({}, { each: true })\n  emails: string[];\n\n  @Column('text', { array: true, default: [] })\n  @IsUrl({}, { each: true })\n  urls?: string[];\n\n  @Column({ nullable: true })\n  birthday?: Date;\n\n  @Column('text', { nullable: true })\n  notes?: string;\n\n  @Column({ nullable: true })\n  @MaxLength(255)\n  occupation?: string;\n\n  @Column({ type: 'integer', default: 0 })\n  numberOfShares: number;\n\n  @Column('text', { array: true, default: [TransferableStatusCardEnum.IS_TRANSFERABLE] })\n  transferableStatusCardEnum: TransferableStatusCardEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profile => profile.personalCards)\n  owner: ProfileEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardOne: ConnectedCardEntity[];\n\n  @OneToMany(() => ConnectedCardEntity, connectedCard => connectedCard.cardEntityTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  connectedCardTwo: ConnectedCardEntity[];\n\n  @ManyToMany(() => ProfileEntity, profile => profile.savedCard)\n  profilesWhoSavedCard: ProfileEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.cards, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.card, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  groupMemberships: GroupMembershipEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.CardPicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  media: MediaEntity;\n\n  @OneToMany(() => MessageEntity, message => message.author, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  messages?: MessageEntity[];\n\n  @ManyToOne(() => SocialNetworkEntity, socialNetwork => socialNetwork.cards, {\n    onDelete: 'SET NULL',\n  })\n  socialNetwork: SocialNetworkEntity;\n\n  // ______________________________________________________\n  // Enum\n  // ______________________________________________________\n\n  @Column({ type: 'enum', enum: TypeOfCardEnum, default: TypeOfCardEnum.SOCIAL_NETWORK })\n  typeOfCardEnum: TypeOfCardEnum;\n\n  @Column('text', { array: true, default: [WhoCanShareCardEnum.DIFFUSIBLE] })\n  whoCanShareCardEnums: WhoCanShareCardEnum[];\n\n  @Column('text', { array: true, default: [WhoCanSeeCardInformationEnum.ALL] })\n  whoCanSeeCardInformationEnums: WhoCanSeeCardInformationEnum[];\n\n  @Column('text', { array: true, default: [WhoCanCommunicateWithEnum.ALL] })\n  whoCanSendMessagesEnums: WhoCanCommunicateWithEnum[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEmployeeEntity.html":{"url":"entities/CompanyEmployeeEntity.html","title":"entity - CompanyEmployeeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEmployeeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company-employee.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                roles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, company => company.employees)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profile => profile.companies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleCompanyEmployeeEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company-employee.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { RoleCompanyEmployeeEnum } from './enum/role-company-employee.enum';\n\n@Entity('company_employee')\nexport class CompanyEmployeeEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column('text', { array: true, default: [RoleCompanyEmployeeEnum.EMPLOYEE] })\n  roles: RoleCompanyEmployeeEnum[];\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CompanyEntity, company => company.employees)\n  company: CompanyEntity;\n\n  @ManyToOne(() => ProfileEntity, profile => profile.companies)\n  profile: ProfileEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CompanyEntity.html":{"url":"entities/CompanyEntity.html","title":"entity - CompanyEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CompanyEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/company.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                addresses\n                            \n                            \n                                    Optional\n                                banner_url\n                            \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                city\n                            \n                            \n                                    Optional\n                                country\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                employees\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                occupations\n                            \n                            \n                                ownerProfile\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                siret\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                website\n                            \n                            \n                                    Optional\n                                zip_code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.company, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        employees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployeeEntity => companyEmployeeEntity.company)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupationEntity => occupationEntity.companies)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ownerProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.ownerCompanies)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        zip_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/company.entity.ts:54\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { MediaEntity } from './media.entity';\nimport { AddressEntity } from './address.entity';\n\n@Entity({ name: 'company' })\nexport default class CompanyEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: true })\n  name?: string;\n\n  @Column({ nullable: true })\n  siret?: string;\n\n  @Column({ nullable: true })\n  banner_url?: string;\n\n  @Column({ nullable: true })\n  description?: string;\n\n  @Column({ nullable: true })\n  website?: string;\n\n  @Column({ nullable: true })\n  address?: string;\n\n  @Column({ nullable: true })\n  zip_code?: string;\n\n  @Column({ nullable: true })\n  city?: string;\n\n  @Column({ nullable: true })\n  country?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  email?: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployeeEntity => companyEmployeeEntity.company)\n  employees: CompanyEmployeeEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupationEntity => occupationEntity.companies)\n  @JoinTable()\n  occupations: OccupationEntity[];\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.ownerCompanies)\n  ownerProfile: ProfileEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => AddressEntity, address => address.company, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConnectedCardEntity.html":{"url":"entities/ConnectedCardEntity.html","title":"entity - ConnectedCardEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConnectedCardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/connected-card.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardEntityOne\n                            \n                            \n                                cardEntityTwo\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardOne, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cardEntityTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.connectedCardTwo, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, conversation => conversation, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/connected-card.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'connected_card' })\nexport class ConnectedCardEntity {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => ConversationEntity, conversation => conversation, {\n    cascade: true,\n  })\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardOne, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityOne: CardEntity;\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.connectedCardTwo, {\n    onDelete: 'CASCADE',\n  })\n  cardEntityTwo: CardEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ConversationEntity.html":{"url":"entities/ConversationEntity.html","title":"entity - ConversationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ConversationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectedCard\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                joinedProfiles\n                            \n                            \n                                messages\n                            \n                            \n                                notifications\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConnectedCardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, connectedCardEntity => connectedCardEntity.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupEntity => groupEntity.conversations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedProfiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.conversation)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, message => message.conversation, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.conversation, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/conversation.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { GroupEntity } from './group.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MessageEntity } from './message.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'conversation' })\nexport class ConversationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n  @OneToOne(() => ConnectedCardEntity, connectedCardEntity => connectedCardEntity.conversation)\n  connectedCard: ConnectedCardEntity;\n\n  @OneToMany(() => GroupEntity, groupEntity => groupEntity.conversations)\n  group: GroupEntity[];\n\n  @OneToMany(() => MessageEntity, message => message.conversation, {})\n  messages: MessageEntity[];\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.conversation)\n  joinedProfiles: JoinedConversation[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.conversation, { nullable: true })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommand.html":{"url":"classes/CreateLogCommand.html","title":"class - CreateLogCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/command/create-log.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                method\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/command/create-log.command.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { LoggingTypeEnum } from '../../domain/enum/logging-type.enum';\nimport { ApiTypeEnum } from '../../domain/enum/api-type.enum';\n\nexport class CreateLogCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method: string;\n\n  @ApiProperty()\n  route: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogCommandHandler.html":{"url":"classes/CreateLogCommandHandler.html","title":"class - CreateLogCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                verbose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verbose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateLogCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-log/cqrs/handler/command/create-log.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateLogCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateLogCommand } from '../../command/create-log.command';\nimport { VerboseLogEnum } from '../../../domain/enum/verbose-log.enum';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport * as process from 'process';\nimport { ApiTypeEnum } from '../../../domain/enum/api-type.enum';\n\n@CommandHandler(CreateLogCommand)\nexport class CreateLogCommandHandler implements ICommandHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum;\n  private readonly verbose: VerboseLogEnum;\n\n  constructor(@Inject('API_LOG') private client: ClientProxy) {\n    this.verbose = (process.env.VERBOSE_LOG as VerboseLogEnum) || VerboseLogEnum.NONE;\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.API_TYPE = ApiTypeEnum.WALLET_SHARE_API;\n  }\n\n  async execute(command: CreateLogCommand): Promise {\n    if (this.verbose === VerboseLogEnum.NONE) return;\n    if (this.verbose === VerboseLogEnum.DEBUG) console.log('CreateLogCommandHandler: ', command);\n    this.client.emit('create-log', command);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                apiType\n                            \n                            \n                                apiVersion\n                            \n                            \n                                    Optional\n                                body\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                headers\n                            \n                            \n                                    Optional\n                                ip\n                            \n                            \n                                loggingType\n                            \n                            \n                                    Optional\n                                method\n                            \n                            \n                                    Optional\n                                module\n                            \n                            \n                                    Optional\n                                os\n                            \n                            \n                                    Optional\n                                platform\n                            \n                            \n                                    Optional\n                                responseBody\n                            \n                            \n                                    Optional\n                                responseHeaders\n                            \n                            \n                                    Optional\n                                route\n                            \n                            \n                                    Optional\n                                screenSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ApiTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggingTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        platform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        responseHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        screenSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-log.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { ApiTypeEnum } from '../enum/api-type.enum';\nimport { LoggingTypeEnum } from '../enum/logging-type.enum';\n\nexport class CreateLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @ApiProperty()\n  apiName: string;\n\n  @ApiProperty()\n  loggingType: LoggingTypeEnum;\n\n  @ApiProperty()\n  apiVersion: string;\n\n  @ApiProperty({ enum: ApiTypeEnum })\n  apiType: ApiTypeEnum;\n\n  @ApiProperty()\n  method?: string;\n\n  @ApiProperty()\n  route?: string;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  headers?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  body?: object;\n\n  @ApiProperty()\n  module?: string;\n\n  @ApiProperty({ nullable: true })\n  status?: number;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseHeaders?: object;\n\n  @ApiProperty({ type: 'json', nullable: true })\n  responseBody?: object;\n\n  @ApiProperty({ type: 'text', nullable: true })\n  error?: string;\n\n  @ApiProperty({ nullable: true })\n  os?: string;\n\n  @ApiProperty({ nullable: true })\n  platform?: string;\n\n  @ApiProperty({ nullable: true })\n  screenSize?: string;\n\n  @ApiProperty({ nullable: true })\n  ip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMethodLogDto.html":{"url":"classes/CreateMethodLogDto.html","title":"class - CreateMethodLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMethodLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/dto/create-method-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                method\n                            \n                            \n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/dto/create-method-log.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMethodLogDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n  module: string;\n  method: string;\n  body: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/create-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/create-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserCommand {\n  constructor(public readonly createUserDto: CreateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommandHandler.html":{"url":"classes/CreateUserCommandHandler.html","title":"class - CreateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/create-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(UserEntity)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/create-user.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { CreateUserCommand } from '../../command/create-user.command';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { validate } from 'class-validator';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport { DuplicateEmailException } from '../../../../../util/exception/custom-http-exception/duplicate-email.exception';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { CreateUserResponse } from '../../../domain/response/create-user.response';\nimport { UserRoleEnum } from '../../../domain/enum/user-role.enum';\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    public readonly userRepository: Repository,\n  ) {}\n\n  async execute(command: CreateUserCommand): Promise {\n    try {\n      const newUser: UserEntity = new UserEntity({ ...command.createUserDto });\n\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        throw new InvalidParameterEntityException(err);\n      }\n\n      // verify that email is unique\n      const userUniqueEmail = await this.userRepository.findBy({ email: command.createUserDto.email });\n      if (userUniqueEmail.length > 0) {\n        throw new DuplicateEmailException();\n      }\n\n      // verify that username is unique\n      const userUniqueUsername = await this.userRepository.findBy({ username: command.createUserDto.username });\n      if (userUniqueUsername.length > 0) {\n        throw new DuplicateUsernameException();\n      }\n\n      const savedUser: UserEntity = await this.userRepository.save(newUser);\n\n      return new CreateUserResponse({\n        id: savedUser.id,\n        username: savedUser.username,\n        email: savedUser.email,\n        roles: savedUser.roles || [UserRoleEnum.PUBLIC],\n      });\n    } catch (error) {\n      if (\n        error instanceof InvalidParameterEntityException ||\n        error instanceof DuplicateEmailException ||\n        error instanceof DuplicateUsernameException\n      ) {\n        throw error;\n      }\n      throw new Error('Error executing CreateUserCommand: ' + error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(5, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, Length } from 'class-validator';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Length(5, 20)\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsOptional()\n  roles?: UserRoleEnum[];\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEvent.html":{"url":"classes/CreateUserEvent.html","title":"class - CreateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/create-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createUserDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(module: string, method: string, userId: string, createUserDto: CreateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserDto\n                                                  \n                                                        \n                                                                        CreateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/create-user.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from '../../domain/dto/create-user.dto';\n\nexport class CreateUserEvent {\n  constructor(\n    public readonly module: string = 'user',\n    public readonly method: string = 'create-user',\n    public readonly userId: string,\n    public readonly createUserDto: CreateUserDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserEventHandler.html":{"url":"classes/CreateUserEventHandler.html","title":"class - CreateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/create-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: CreateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/create-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CreateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CreateUserEvent } from '../../event/create-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(CreateUserEvent)\nexport class CreateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: CreateUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' created with email: ' + event.createUserDto.email,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserResponse.html":{"url":"classes/CreateUserResponse.html","title":"class - CreateUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/create-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/create-user.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/create-user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\nimport { UserEntity } from '../entities/user.entity';\n\nexport class CreateUserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username: string;\n  public readonly email: string;\n  public readonly createdAt: Date;\n  public readonly roles: UserRoleEnum[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomHealthCheckService.html":{"url":"injectables/CustomHealthCheckService.html","title":"injectable - CustomHealthCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomHealthCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/custom-health-check.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/custom-health-check.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHealth\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHealth()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/custom-health-check.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { QueryBus } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from './cqrs/query/health-check.query';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n@Injectable()\nexport class CustomHealthCheckService {\n  constructor(private readonly queryBus: QueryBus) {}\n\n  async checkHealth(): Promise {\n    return await this.queryBus.execute(new HealthCheckQuery());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfiguration.html":{"url":"injectables/DatabaseConfiguration.html","title":"injectable - DatabaseConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/config/database.configuration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/util/config/database.configuration.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { join } from 'path';\nimport { Injectable } from '@nestjs/common';\nimport * as process from 'process';\nimport { logger } from './winston-logger.config';\nimport { CardEntity } from '../../api/entities-to-create/card.entity';\nimport CompanyEntity from '../../api/entities-to-create/company.entity';\nimport { CompanyEmployeeEntity } from '../../api/entities-to-create/company-employee.entity';\nimport { ConnectedCardEntity } from '../../api/entities-to-create/connected-card.entity';\nimport { ConversationEntity } from '../../api/entities-to-create/conversation.entity';\nimport { DiscountCodeEntity } from '../../api/entities-to-create/discount-code.entity';\nimport { GroupEntity } from '../../api/entities-to-create/group.entity';\nimport { GroupMembershipEntity } from '../../api/entities-to-create/group-membership.entity';\nimport { InvoicesEntity } from '../../api/entities-to-create/invoices.entity';\nimport { JoinedConversation } from '../../api/entities-to-create/joined-conversation.entity';\nimport { MediaEntity } from '../../api/entities-to-create/media.entity';\nimport { MessageEntity } from '../../api/entities-to-create/message.entity';\nimport { OccupationEntity } from '../../api/entities-to-create/occupation.entity';\nimport { PlanEntity } from '../../api/entities-to-create/plan.entity';\nimport { ProfileEntity } from '../../api/entities-to-create/profile.entity';\nimport { SocialNetworkEntity } from '../../api/entities-to-create/social-network.entity';\nimport StripEventEntity from '../../api/entities-to-create/strip-event.entity';\nimport { SubscriptionEntity } from '../../api/entities-to-create/subscription.entity';\nimport { UserEntity } from '../../api/user/domain/entities/user.entity';\nimport { ReferralCodeEntity } from '../../api/entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../api/entities-to-create/notification.entity';\nimport { AddressEntity } from '../../api/entities-to-create/address.entity';\n\n@Injectable()\nexport class DatabaseConfiguration implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    try {\n      if (process.env.NODE_ENV === 'prod') {\n        logger.info('NODE_ENV is prod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PROD,\n          port: process.env.TYPEORM_PORT_PROD ? parseInt(process.env.TYPEORM_PORT_PROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PROD,\n          password: process.env.TYPEORM_PASSWORD_PROD,\n          database: process.env.TYPEORM_DATABASE_PROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**/*.entity{.ts,.js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'pprod') {\n        logger.info('NODE_ENV is pprod');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_PPROD,\n          port: process.env.TYPEORM_PORT_PPROD ? parseInt(process.env.TYPEORM_PORT_PPROD) : 5432,\n          username: process.env.TYPEORM_USERNAME_PPROD,\n          password: process.env.TYPEORM_PASSWORD_PPROD,\n          database: process.env.TYPEORM_DATABASE_PPROD,\n          ssl: true,\n          extra: {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          },\n          entities: [join(__dirname, '**', '*.entity.{ts,js}')],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_PPROD === 'true',\n          logging: process.env.TYPEORM_LOGGING_PPROD === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'test') {\n        logger.info('NODE_ENV is test');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_TEST,\n          port: process.env.TYPEORM_PORT_TEST ? parseInt(process.env.TYPEORM_PORT_TEST) : 5432,\n          username: process.env.TYPEORM_USERNAME_TEST,\n          password: process.env.TYPEORM_PASSWORD_TEST,\n          database: process.env.TYPEORM_DATABASE_TEST,\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_TEST === 'true',\n          logging: process.env.TYPEORM_LOGGING_TEST === 'true',\n        };\n      } else if (process.env.NODE_ENV === 'dev') {\n        logger.info('NODE_ENV is dev');\n        return {\n          type: 'postgres',\n          host: process.env.TYPEORM_HOST_DEV,\n          port: process.env.TYPEORM_PORT_DEV ? parseInt(process.env.TYPEORM_PORT_DEV) : 5432,\n          username: process.env.TYPEORM_USERNAME_DEV,\n          password: process.env.TYPEORM_PASSWORD_DEV,\n          database: process.env.TYPEORM_DATABASE_DEV,\n          logging: process.env.TYPEORM_LOGGING_DEV === 'true',\n          synchronize: process.env.TYPEORM_SYNCHRONIZE_DEV === 'true',\n          entities: [\n            CardEntity,\n            CompanyEntity,\n            CompanyEmployeeEntity,\n            ConnectedCardEntity,\n            ConversationEntity,\n            DiscountCodeEntity,\n            GroupEntity,\n            GroupMembershipEntity,\n            InvoicesEntity,\n            JoinedConversation,\n            MediaEntity,\n            MessageEntity,\n            OccupationEntity,\n            PlanEntity,\n            ProfileEntity,\n            SocialNetworkEntity,\n            StripEventEntity,\n            SubscriptionEntity,\n            UserEntity,\n            NotificationEntity,\n            ReferralCodeEntity,\n            AddressEntity,\n          ],\n        };\n      } else {\n        logger.error('NODE_ENV is not set');\n        return {};\n      }\n    } catch (error) {\n      logger.error('An error occurred while trying to connect to the database: ', error);\n      throw new Error('NODE_ENV is not set');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommand.html":{"url":"classes/DeleteMailCommand.html","title":"class - DeleteMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/command/delete-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailCommandHandler.html":{"url":"classes/DeleteMailCommandHandler.html","title":"class - DeleteMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteMailCommand } from '../../command/delete-mail.command';\nimport { HttpException, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { ErrorCustomEventHandler } from '../../../../../util/exception/error-handler/error-custom.event-handler';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteMailCommand)\nexport class DeleteMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy, private readonly eventBus: EventBus) {}\n\n  async execute(command: DeleteMailCommand): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'delete' }, command.mail).pipe(\n        catchError(err => {\n          if (err.status === 'error') {\n            this.eventBus.publish(\n              new ErrorCustomEvent({\n                handler: 'DeleteMailCommandHandler',\n                localisation: 'api-waiting-list',\n                error: err.message,\n              }),\n            );\n            throw new HttpException('Mail does not exist', 404);\n          }\n          this.eventBus.publish(\n            new ErrorCustomEvent({\n              handler: 'DeleteMailCommandHandler',\n              localisation: 'api-waiting-list',\n              error: 'unreachable',\n            }),\n          );\n          throw new HttpException('unreachable', 401);\n        }),\n      ),\n    ).then(() => {\n      this.eventBus.publish(new DeleteMailEvent(command));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEvent.html":{"url":"classes/DeleteMailEvent.html","title":"class - DeleteMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deleteMailDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteMailDto: DeleteMailCommand, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteMailDto\n                                                  \n                                                        \n                                                                        DeleteMailCommand\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deleteMailDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeleteMailCommand\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-landing-page'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/cqrs/event/delete-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DeleteMailCommand } from '../command/delete-mail.command';\n\nexport class DeleteMailEvent {\n  constructor(\n    public readonly deleteMailDto: DeleteMailCommand,\n    public readonly module: string = 'api-landing-page',\n    public readonly method: string = 'delete-mail',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMailEventHandler.html":{"url":"classes/DeleteMailEventHandler.html","title":"class - DeleteMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteMailEvent } from '../../event/delete-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteMailEvent)\nexport class DeleteMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  async handle(event: DeleteMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: 'api-landing-page',\n      method: 'delete-mail',\n      body: 'delete user with mail : ' + event.deleteMailDto.mail,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommandHandler.html":{"url":"classes/DeleteUserCommandHandler.html","title":"class - DeleteUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('DeleteUserCommandHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/delete-user.command-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteUserCommand } from '../../command/delete-user.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserCommandHandler implements ICommandHandler {\n  logger = new Logger('DeleteUserCommandHandler');\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    try {\n      await this.userRepository.delete(command.userId);\n      this.eventBus.publish(new DeleteUserEvent(command.userId));\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'DeleteUserCommandHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEvent.html":{"url":"classes/DeleteUserEvent.html","title":"class - DeleteUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/delete-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'delete-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/delete-user.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserEvent {\n  constructor(\n    public readonly userId: string,\n    public readonly module: string = 'user',\n    public readonly method: string = 'delete-user',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserEventHandler.html":{"url":"classes/DeleteUserEventHandler.html","title":"class - DeleteUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: DeleteUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/delete-user.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                DeleteUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { DeleteUserEvent } from '../../event/delete-user.event';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(DeleteUserEvent)\nexport class DeleteUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: DeleteUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' deleted',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DiscountCodeEntity.html":{"url":"entities/DiscountCodeEntity.html","title":"entity - DiscountCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DiscountCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/discount-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountAmount\n                            \n                            \n                                discountPercentage\n                            \n                            \n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                startDate\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usageLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_percentage', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, subscriptionEntity => subscriptionEntity.discountCodes)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usageLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'usage_limit', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/discount-code.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate, IsNotEmpty, IsNumber } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'discount_codes' })\nexport class DiscountCodeEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'discount_percentage', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountPercentage: number;\n\n  @Column({ name: 'discount_amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  discountAmount: number;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  endDate: Date;\n\n  @Column({ name: 'usage_limit', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  usageLimit: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.discountCodes)\n  @JoinTable()\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateEmailException.html":{"url":"classes/DuplicateEmailException.html","title":"class - DuplicateEmailException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateEmailException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-email.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-email.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateEmailException extends HttpException {\n  constructor() {\n    super('Email already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateUsernameException.html":{"url":"classes/DuplicateUsernameException.html","title":"class - DuplicateUsernameException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateUsernameException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/duplicate-username.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/duplicate-username.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class DuplicateUsernameException extends HttpException {\n  constructor() {\n    super('Username already exists', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntitiesToMoveModule.html":{"url":"modules/EntitiesToMoveModule.html","title":"module - EntitiesToMoveModule","body":"\n                   \n\n\n\n\n    Modules\n    EntitiesToMoveModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/entities-to-create/entities-to-move.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { ConnectedCardEntity } from './connected-card.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\nimport { GroupEntity } from './group.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { MessageEntity } from './message.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { PlanEntity } from './plan.entity';\nimport { ProfileEntity } from './profile.entity';\nimport { SocialNetworkEntity } from './social-network.entity';\nimport StripEventEntity from './strip-event.entity';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { ReferralCodeEntity } from './referal-code.entity';\nimport { NotificationEntity } from './notification.entity';\nimport { AddressEntity } from './address.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      // ________ Entity ________\n      CardEntity,\n      CompanyEntity,\n      CompanyEmployeeEntity,\n      ConnectedCardEntity,\n      ConversationEntity,\n      DiscountCodeEntity,\n      GroupEntity,\n      GroupMembershipEntity,\n      InvoicesEntity,\n      JoinedConversation,\n      MediaEntity,\n      MessageEntity,\n      OccupationEntity,\n      PlanEntity,\n      ProfileEntity,\n      SocialNetworkEntity,\n      StripEventEntity,\n      SubscriptionEntity,\n      ReferralCodeEntity,\n      NotificationEntity,\n      AddressEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [\n    // ________ Service ________\n  ],\n})\nexport class EntitiesToMoveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEvent.html":{"url":"classes/ErrorCustomEvent.html","title":"class - ErrorCustomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                handler\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        handler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorCustomEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly localisation: string;\n  public readonly handler: string;\n  public readonly error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCustomEventHandler.html":{"url":"classes/ErrorCustomEventHandler.html","title":"class - ErrorCustomEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCustomEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/error-handler/error-custom.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_NAME\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_TYPE\n                            \n                            \n                                    Private\n                                    Readonly\n                                API_VERSION\n                            \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiTypeEnum\n\n                    \n                \n                \n                    \n                        Default value : ApiTypeEnum.WALLET_SHARE_API\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/util/exception/error-handler/error-custom.event-handler.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorCustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/exception/error-handler/error-custom.event-handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorCustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { ErrorCustomEvent } from './error-custom.event';\nimport { CreateLogDto } from '../../../api/api-log/domain/dto/create-log.dto';\nimport { LoggingTypeEnum } from '../../../api/api-log/domain/enum/logging-type.enum';\nimport { ApiLogService } from '../../../api/api-log/api-log.service';\nimport { ApiTypeEnum } from '../../../api/api-log/domain/enum/api-type.enum';\n\n@EventsHandler(ErrorCustomEvent)\nexport class ErrorCustomEventHandler implements IEventHandler {\n  private readonly API_NAME: string;\n  private readonly API_VERSION: string;\n  private readonly API_TYPE: ApiTypeEnum = ApiTypeEnum.WALLET_SHARE_API;\n\n  private readonly VERBOSE: boolean;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.API_NAME = process.env.API_NAME || 'NO-NAME';\n    this.API_VERSION = process.env.API_VERSION || 'NO-VERSION';\n    this.VERBOSE = process.env.VERBOSE_ERROR === 'true';\n  }\n  handle(event: ErrorCustomEvent): void {\n    const createLogDto = new CreateLogDto({});\n    createLogDto.apiName = this.API_NAME;\n    createLogDto.apiVersion = this.API_VERSION;\n    createLogDto.loggingType = LoggingTypeEnum.ERROR;\n    createLogDto.apiType = this.API_TYPE;\n    createLogDto.method = event.localisation;\n    createLogDto.route = event.handler;\n    createLogDto.error = event.error;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorExceptionFilter.html":{"url":"classes/ErrorExceptionFilter.html","title":"class - ErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/filter/error-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/util/filter/error-exception.filter.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class ErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(httpStatus).json({\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorLoggingMiddleware.html":{"url":"injectables/ErrorLoggingMiddleware.html","title":"injectable - ErrorLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/error-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/error-logging.middleware.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/error-logging.middleware.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport * as useragent from 'useragent';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ErrorLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = process.env.VERBOSE as VerboseLogEnum;\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: NextFunction) {\n    try {\n      await next();\n    } catch (error) {\n      const ua = useragent.parse(req.headers['user-agent']);\n\n      const os = ua.os.toString();\n      const device = ua.device.toString();\n\n      const createLogDto = new CreateLogDto({});\n      createLogDto.loggingType = LoggingTypeEnum.ERROR;\n      createLogDto.method = req.method;\n      createLogDto.route = req.baseUrl;\n      createLogDto.headers = req.headers || undefined;\n      createLogDto.body = this.VERBOSE ? req.body : undefined;\n      createLogDto.status = res.statusCode;\n      createLogDto.responseHeaders = res.getHeaders();\n      createLogDto.responseBody = res.locals.responseBody;\n      createLogDto.error = error.message;\n      createLogDto.os = os;\n      createLogDto.ip = req.ip;\n      createLogDto.platform = device;\n      createLogDto.screenSize = undefined;\n\n      this.apiLoggerService.createLog(createLogDto);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQuery.html":{"url":"classes/GetAllMailQuery.html","title":"class - GetAllMailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetAllMailQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllMailQueryHandler.html":{"url":"classes/GetAllMailQueryHandler.html","title":"class - GetAllMailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllMailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetAllMailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetAllMailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetAllMailQuery } from '../../query/get-all-mail.query';\nimport { HttpException, Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { MailLandingPageDto } from '../../../domain/dto/mail-landing-page.dto';\n\n@QueryHandler(GetAllMailQuery)\nexport class GetAllMailQueryHandler implements IQueryHandler {\n  constructor(@Inject('API_WAITING_LIST') private client: ClientProxy) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async execute(query: GetAllMailQuery): Promise {\n    return await firstValueFrom(\n      this.client.send({ cmd: 'get-all' }, '').pipe(\n        catchError(() => {\n          throw new HttpException('unreachable', 401);\n        }),\n      ),\n    ).then((mailsLandingPageList: MailLandingPageDto[]) => mailsLandingPageList);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQuery.html":{"url":"classes/GetUserByEmailQuery.html","title":"class - GetUserByEmailQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-email.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-email.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByEmailQuery {\n  constructor(public readonly email: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByEmailQueryHandler.html":{"url":"classes/GetUserByEmailQueryHandler.html","title":"class - GetUserByEmailQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByEmailQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByEmailQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByEmailQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../domain/entities/user.entity';\nimport { GetUserByEmailQuery } from '../../query/get-user-by-email.query';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\n\n@QueryHandler(GetUserByEmailQuery)\nexport class GetUserByEmailQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByEmailQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ email: query.email }],\n        select: ['id', 'email', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQuery.html":{"url":"classes/GetUserByUsernameQuery.html","title":"class - GetUserByUsernameQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-by-username.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-by-username.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserByUsernameQuery {\n  constructor(public readonly username: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserByUsernameQueryHandler.html":{"url":"classes/GetUserByUsernameQueryHandler.html","title":"class - GetUserByUsernameQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserByUsernameQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserByUsernameQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserByUsernameQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { GetUserByUsernameQuery } from '../../query/get-user-by-username.query';\n\n@QueryHandler(GetUserByUsernameQuery)\nexport class GetUserByUsernameQueryHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserByUsernameQuery): Promise {\n    try {\n      return await this.userRepository.findOneOrFail({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'roles', 'createdAt', 'updatedAt'],\n      });\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserHandler.html":{"url":"classes/GetUserHandler.html","title":"class - GetUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user.handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { UserResponse } from '../../../domain/response/user.response';\nimport { UserListResponse } from '../../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery): Promise {\n    if (query.userId) {\n      return {\n        ...(await this.userRepository.findOneOrFail({\n          where: [{ id: query.userId }],\n        })),\n      };\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then(userList => {\n      userList.forEach(user => {\n        userListResponse.userList.push(new UserResponse({ ...user }));\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesHandler.html","title":"class - GetUserIfRefreshTokenMatchesHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne({\n        select: ['id', 'username', 'email', 'currentHashedRefreshToken'],\n        where: {\n          id: query.userId,\n        },\n      });\n\n      const isRefreshTokenMatching = await bcrypt.compare(query.refreshToken, user?.currentHashedRefreshToken || '');\n\n      if (isRefreshTokenMatching && user) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'GetUserIfRefreshTokenMatchesHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginHandler.html":{"url":"classes/GetUserLoginHandler.html","title":"class - GetUserLoginHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/query/get-user-login.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/query/get-user-login.handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserLoginQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserLoginQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/query/get-user-login.handler.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserLoginQuery } from '../../query/get-user-login.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { config } from 'dotenv';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\n\nconfig();\n@QueryHandler(GetUserLoginQuery)\nexport class GetUserLoginHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserLoginQuery): Promise {\n    try {\n      const userUsername = await this.userRepository.findOne({\n        where: [{ username: query.username }],\n        select: ['id', 'username', 'password', 'email', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n      });\n\n      if (userUsername) {\n        if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n          throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n        }\n        this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n\n        return userUsername;\n      } else {\n        const userUsername = await this.userRepository.findOne({\n          where: [{ email: query.username }],\n          select: ['id', 'username', 'password', 'email', 'roles', 'createdAt', 'updatedAt', 'deletedAt'],\n        });\n        if (userUsername) {\n          if (!(await this.verifyPassword(query.plainTextPassword, userUsername.password))) {\n            throw new HttpException('Wrong credentials provided', HttpStatus.BAD_REQUEST);\n          }\n          this.eventBus.publish(new LoginOfUserEvent(userUsername.id));\n          return userUsername;\n        } else {\n          throw 'Error: no match found';\n        }\n      }\n    } catch (error) {\n      throw 'Error: no match found';\n    }\n  }\n\n  private async verifyPassword(plainTextPassword: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserLoginQuery.html":{"url":"classes/GetUserLoginQuery.html","title":"class - GetUserLoginQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserLoginQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-login.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                plainTextPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainTextPassword: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainTextPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        plainTextPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-login.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserLoginQuery {\n  constructor(public readonly username: string, public readonly plainTextPassword: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupEntity.html":{"url":"entities/GroupEntity.html","title":"entity - GroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerPicture\n                            \n                            \n                                conversations\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                picture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupBannerPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, conversation => conversation.group, {nullable: false, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupMembershipEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, groupMembership => groupMembership.group, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 30)@Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.groupPicture, {cascade: true, nullable: true, onDelete: 'SET NULL'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Length } from 'class-validator';\nimport { ConversationEntity } from './conversation.entity';\nimport { MediaEntity } from './media.entity';\nimport { GroupMembershipEntity } from './group-membership.entity';\n\n@Entity({ name: 'group' })\nexport class GroupEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Length(5, 30)\n  @Column({ nullable: false, unique: true })\n  name: string;\n  @OneToMany(() => GroupMembershipEntity, groupMembership => groupMembership.group, { cascade: true })\n  members: GroupMembershipEntity[];\n\n  @OneToMany(() => ConversationEntity, conversation => conversation.group, {\n    nullable: false,\n    cascade: true,\n  })\n  @JoinColumn()\n  conversations: ConversationEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.groupPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  picture: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.groupBannerPicture, {\n    cascade: true,\n    nullable: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinColumn()\n  bannerPicture: MediaEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GroupMembershipEntity.html":{"url":"entities/GroupMembershipEntity.html","title":"entity - GroupMembershipEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GroupMembershipEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/group-membership.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                group\n                            \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.groupMemberships, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, groupEntity => groupEntity.members, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleGroupMembershipEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/group-membership.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\nimport { GroupEntity } from './group.entity';\nimport { RoleGroupMembershipEnum } from './enum/role-group-membership.enum';\n\n@Entity({ name: 'group_membership' })\nexport class GroupMembershipEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @Column('text', { array: true, default: [RoleGroupMembershipEnum.MEMBER] })\n  role: RoleGroupMembershipEnum;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.groupMemberships, {\n    onDelete: 'CASCADE',\n  })\n  card: CardEntity;\n\n  @ManyToOne(() => GroupEntity, groupEntity => groupEntity.members, {\n    onDelete: 'CASCADE',\n  })\n  group: GroupEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckController.html":{"url":"controllers/HealthCheckController.html","title":"controller - HealthCheckController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/health-check.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health-check\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@HttpCode(200)@HealthCheck()@ApiResponse({status: 200, description: 'Health Check for API WalletShare', content: undefined})\n                \n            \n\n            \n                \n                    Defined in src/api/health-check/health-check.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { HealthCheck } from '@nestjs/terminus';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckResponse } from './domain/response/health-check.response';\n\n/**\n * @api {get} /health-check Health Check\n * @apiName HealthCheck\n * @apiGroup HealthCheck\n * @apiVersion 0.0.1\n * @apiDescription Health Check for API WalletShare\n */\n@Controller('health-check')\n@ApiTags('HealthCheck')\nexport class HealthCheckController {\n  constructor(private customHealthCheckService: CustomHealthCheckService) {}\n\n  @Get('/')\n  @HttpCode(200)\n  @HealthCheck()\n  @ApiResponse({\n    status: 200,\n    description: 'Health Check for API WalletShare',\n    content: { 'text/html': { example: 'Health Check for API WalletShare' } },\n  })\n  check(): Promise {\n    return this.customHealthCheckService.checkHealth();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckModule.html":{"url":"modules/HealthCheckModule.html","title":"module - HealthCheckModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/health-check/health-check.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomHealthCheckService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthCheckController } from './health-check.controller';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CustomHealthCheckService } from './custom-health-check.service';\nimport { HealthCheckQueryHandler } from './cqrs/handler/query/health-check.query-handler';\n\n@Module({\n  imports: [TerminusModule, CqrsModule],\n  controllers: [HealthCheckController],\n  providers: [\n    // ________ Service ________\n    CustomHealthCheckService,\n    // ________ Handler ________\n    HealthCheckQueryHandler,\n  ],\n})\nexport default class HealthCheckModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQuery.html":{"url":"classes/HealthCheckQuery.html","title":"class - HealthCheckQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/query/health-check.query.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class HealthCheckQuery {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckQueryHandler.html":{"url":"classes/HealthCheckQueryHandler.html","title":"class - HealthCheckQueryHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckQueryHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(healthCheckService: HealthCheckService, typeOrmHealthIndicator: TypeOrmHealthIndicator, memoryHealthIndicator: MemoryHealthIndicator, diskHealthIndicator: DiskHealthIndicator, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        healthCheckService\n                                                  \n                                                        \n                                                                    HealthCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeOrmHealthIndicator\n                                                  \n                                                        \n                                                                    TypeOrmHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memoryHealthIndicator\n                                                  \n                                                        \n                                                                    MemoryHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diskHealthIndicator\n                                                  \n                                                        \n                                                                    DiskHealthIndicator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/api/health-check/cqrs/handler/query/health-check.query-handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { HealthCheckQuery } from '../../query/health-check.query';\nimport { HealthCheckResponse } from '../../../domain/response/health-check.response';\nimport {\n  DiskHealthIndicator,\n  HealthCheckService,\n  HealthIndicatorResult,\n  MemoryHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n@QueryHandler(HealthCheckQuery)\nexport class HealthCheckQueryHandler implements IQueryHandler {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n    private memoryHealthIndicator: MemoryHealthIndicator,\n    private diskHealthIndicator: DiskHealthIndicator,\n    private eventBus: EventBus,\n  ) {}\n  async execute(): Promise {\n    return new HealthCheckResponse(\n      await this.healthCheckService.check([\n        (): Promise => this.typeOrmHealthIndicator.pingCheck('database'),\n        // the process should not use more than 300MB memory\n        (): Promise => this.memoryHealthIndicator.checkHeap('memory heap', 30000 * 1024 * 1024),\n        // The process should not have more than 300MB RSS memory allocated\n        (): Promise => this.memoryHealthIndicator.checkRSS('memory RSS', 300 * 1024 * 1024),\n        // the used disk storage should not exceed the 50% of the available space\n        (): Promise =>\n          this.diskHealthIndicator.checkStorage('disk health', {\n            thresholdPercent: 0.5,\n            path: '/',\n          }),\n      ]),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthCheckResponse.html":{"url":"classes/HealthCheckResponse.html","title":"class - HealthCheckResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthCheckResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/health-check/domain/response/health-check.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                heathCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(heathCheck: HealthCheckResult)\n                    \n                \n                        \n                            \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        heathCheck\n                                                  \n                                                        \n                                                                    HealthCheckResult\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        heathCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HealthCheckResult\n\n                    \n                \n                    \n                        \n                                Defined in src/api/health-check/domain/response/health-check.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckResult } from '@nestjs/terminus';\n\nexport class HealthCheckResponse {\n  constructor(public readonly heathCheck: HealthCheckResult) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidParameterEntityException.html":{"url":"classes/InvalidParameterEntityException.html","title":"class - InvalidParameterEntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidParameterEntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError } from 'class-validator';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\ntype ConstraintMap = Record;\n\nexport class InvalidParameterEntityException extends HttpException {\n  constructor(errors: ValidationError[]) {\n    super(\n      {\n        status: HttpStatus.BAD_REQUEST,\n        message:\n          'Invalid parameters: ' +\n          errors.map((error: ValidationError) => {\n            const constraints = error.constraints as ConstraintMap;\n            return Object.keys(constraints).map(key => {\n              return constraints[key] || '';\n            });\n          }),\n      },\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidPasswordException.html":{"url":"classes/InvalidPasswordException.html","title":"class - InvalidPasswordException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidPasswordException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/invalid-password.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/invalid-password.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class InvalidPasswordException extends HttpException {\n  constructor() {\n    super(\n      'Invalid password. Password must contain at least 4 characters, at least one uppercase letter, one lowercase letter and one number',\n      HttpStatus.BAD_REQUEST,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoicesEntity.html":{"url":"entities/InvoicesEntity.html","title":"entity - InvoicesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoicesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/invoices.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                clientAddress\n                            \n                            \n                                clientName\n                            \n                            \n                                clientVatNumber\n                            \n                            \n                                companyAddress\n                            \n                            \n                                companyName\n                            \n                            \n                                companyVatNumber\n                            \n                            \n                                createdAt\n                            \n                            \n                                currency\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                discountAmount\n                            \n                            \n                                id\n                            \n                            \n                                invoiceNumber\n                            \n                            \n                                subscription\n                            \n                            \n                                taxRate\n                            \n                            \n                                totalAmount\n                            \n                            \n                                totalTax\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'amount', type: 'int'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clientVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_address', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_name', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyVatNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'company_vat_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'currency', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        discountAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discount_amount', type: 'decimal', nullable: true})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoiceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'invoice_number', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, subscriptionEntity => subscriptionEntity.invoices)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taxRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'tax_rate', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_amount', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalTax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'total_tax', type: 'decimal'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/invoices.entity.ts:113\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsNotEmpty, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity('invoices')\nexport class InvoicesEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'amount', type: 'int' })\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @Column({ name: 'currency', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  currency: string;\n\n  // @Column({ type: 'enum', enum: StatusInvoiceEnum, default: StatusInvoiceEnum.PENDING })\n  // @IsEnum(StatusInvoiceEnum)\n  // status: StatusInvoiceEnum;\n\n  // Informations supplémentaires pour la France\n\n  @Column({ name: 'invoice_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  invoiceNumber: string;\n\n  @Column({ name: 'company_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyName: string;\n\n  @Column({ name: 'company_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyAddress: string;\n\n  @Column({ name: 'company_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  companyVatNumber: string;\n\n  @Column({ name: 'client_name', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientName: string;\n\n  @Column({ name: 'client_address', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientAddress: string;\n\n  @Column({ name: 'client_vat_number', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  clientVatNumber: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ name: 'tax_rate', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  taxRate: number;\n\n  @Column({ name: 'total_tax', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalTax: number;\n\n  @Column({ name: 'total_amount', type: 'decimal' })\n  @IsNotEmpty()\n  @IsNumber()\n  totalAmount: number;\n\n  @Column({ name: 'discount_amount', type: 'decimal', nullable: true })\n  @IsNumber()\n  discountAmount?: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.invoices)\n  @ValidateNested()\n  subscription: SubscriptionEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTestEnvironmentPipe.html":{"url":"classes/IsTestEnvironmentPipe.html","title":"class - IsTestEnvironmentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTestEnvironmentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/pipe/is-test-environment.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: never, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/util/pipe/is-test-environment.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            never\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, HttpException, HttpStatus, PipeTransform } from '@nestjs/common';\n\nexport class IsTestEnvironmentPipe implements PipeTransform {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  transform(value: never, metadata: ArgumentMetadata): never {\n    if (process.env.NODE_ENV === 'test') {\n      return value;\n    }\n    throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/JoinedConversation.html":{"url":"entities/JoinedConversation.html","title":"entity - JoinedConversation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  JoinedConversation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/joined-conversation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                profile\n                            \n                            \n                                socketId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.joinedProfiles)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.joinedConversations)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/joined-conversation.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\n\n@Entity({ name: 'joined_conversation' })\nexport class JoinedConversation {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  socketId: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.joinedConversations)\n  @JoinColumn()\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.joinedProfiles)\n  @JoinColumn()\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { RequestUser } from '../interface/request-user.interface';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh-token') {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload): Promise {\n    const refreshToken = request?.headers?.authorization?.split(' ')[1];\n    return await this.userService.getUserIfRefreshTokenMatches(refreshToken || '', payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request): string => {\n          return request?.headers?.authorization?.split(' ')[1] || '';\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    return await this.userRepository.findOneOrFail({\n      where: [{ id: payload.userId }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(login: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'login',\n    });\n  }\n  async validate(login: string, password: string): Promise {\n    return this.authenticationService.login(login, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggingTypeEnum.html":{"url":"classes/LoggingTypeEnum.html","title":"class - LoggingTypeEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggingTypeEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-log/domain/enum/logging-type.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ERROR\n                            \n                            \n                                    Static\n                                    Readonly\n                                REQUEST\n                            \n                            \n                                    Static\n                                    Readonly\n                                RESPONSE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'REQUEST'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RESPONSE'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-log/domain/enum/logging-type.enum.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoggingTypeEnum {\n  static readonly REQUEST = 'REQUEST';\n  static readonly RESPONSE = 'RESPONSE';\n  static readonly ERROR = 'ERROR';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEvent.html":{"url":"classes/LoginOfUserEvent.html","title":"class - LoginOfUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/login-of-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'login-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/login-of-user.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOfUserEvent {\n  constructor(\n    public readonly username: string,\n    public readonly module: string = 'user',\n    public readonly method: string = 'login-user',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOfUserEventHandler.html":{"url":"classes/LoginOfUserEventHandler.html","title":"class - LoginOfUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOfUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: LoginOfUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/login-of-user.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                LoginOfUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { LoginOfUserEvent } from '../../event/login-of-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(LoginOfUserEvent)\nexport class LoginOfUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: LoginOfUserEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with username: ' + event.username + ' logged in',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailDto.html":{"url":"classes/MailDto.html","title":"class - MailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/domain/dto/mail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/domain/dto/mail.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailDto {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  title?: string;\n\n  @ApiProperty()\n  message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailLandingPageDto.html":{"url":"classes/MailLandingPageDto.html","title":"class - MailLandingPageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailLandingPageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, mail: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailLandingPageDto {\n  constructor(public readonly id: string, public readonly mail: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailResponse.html":{"url":"classes/MailResponse.html","title":"class - MailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-landing-page/domain/response/mail.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                mail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-landing-page/domain/response/mail.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailResponse {\n  constructor(partial: Partial) {\n    Object.assign(partial);\n  }\n\n  public readonly mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardPicture\n                            \n                            \n                                companyEntityBanner\n                            \n                            \n                                companyProfilePicture\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                groupBannerPicture\n                            \n                            \n                                groupPicture\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                profileEntityBanner\n                            \n                            \n                                profileEntityProfilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CardPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, cardEntity => cardEntity.media, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, companyEntity => companyEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, group => group.picture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityBanner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.bannerPicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileEntityProfilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profileEntity => profileEntity.profilePicture, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/media.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProfileEntity } from './profile.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { GroupEntity } from './group.entity';\nimport { CardEntity } from './card.entity';\nimport CompanyEntity from './company.entity';\n\n@Entity({ name: 'media' })\nexport class MediaEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public key: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToOne(() => GroupEntity, group => group.picture, { onDelete: 'CASCADE' })\n  groupPicture: GroupEntity;\n\n  @OneToOne(() => GroupEntity, group => group.bannerPicture, {\n    onDelete: 'CASCADE',\n  })\n  groupBannerPicture: GroupEntity;\n\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.profilePicture, { onDelete: 'CASCADE' })\n  profileEntityProfilePicture: ProfileEntity;\n  @OneToOne(() => ProfileEntity, profileEntity => profileEntity.bannerPicture, { onDelete: 'CASCADE' })\n  profileEntityBanner: ProfileEntity;\n\n  @OneToOne(() => CardEntity, cardEntity => cardEntity.media, { onDelete: 'CASCADE' })\n  CardPicture: CardEntity;\n\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.profilePicture, { onDelete: 'CASCADE' })\n  companyProfilePicture: CompanyEntity;\n  @OneToOne(() => CompanyEntity, companyEntity => companyEntity.bannerPicture, { onDelete: 'CASCADE' })\n  companyEntityBanner: CompanyEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MessageEntity.html":{"url":"entities/MessageEntity.html","title":"entity - MessageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MessageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/message.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, cardEntity => cardEntity.messages, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversation => conversation.messages)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/message.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ConversationEntity } from './conversation.entity';\nimport { CardEntity } from './card.entity';\n\n@Entity({ name: 'message' })\nexport class MessageEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  public content: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => CardEntity, cardEntity => cardEntity.messages, { onDelete: 'CASCADE' })\n  public author: CardEntity;\n\n  @ManyToOne(() => ConversationEntity, conversation => conversation.messages)\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUserTraceException.html":{"url":"classes/NoUserTraceException.html","title":"class - NoUserTraceException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUserTraceException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/no-user-trace.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    RuntimeException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/no-user-trace.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RuntimeException } from '@nestjs/core/errors/exceptions';\n\nexport class NoUserTraceException extends RuntimeException {\n  constructor() {\n    super(`Invalid parameter: No user trace provided`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/NotificationEntity.html":{"url":"entities/NotificationEntity.html","title":"entity - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/notification.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conversation\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isRead\n                            \n                            \n                                link\n                            \n                            \n                                profile\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        conversation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConversationEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, conversationEntity => conversationEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'is_read', type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'link', type: 'varchar', length: 255, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, profileEntity => profileEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'title', type: 'varchar', length: 255})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.notifications, {nullable: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/notification.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { NotificationTypeEnum } from './enum/notification-type.enum';\nimport { ProfileEntity } from './profile.entity';\nimport { ConversationEntity } from './conversation.entity';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity({ name: 'notification' })\nexport class NotificationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'title', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @Column({ type: 'enum', enum: NotificationTypeEnum, default: NotificationTypeEnum.INFO })\n  type: NotificationTypeEnum;\n\n  @Column({ name: 'is_read', type: 'boolean', default: false })\n  isRead: boolean;\n\n  @Column({ name: 'link', type: 'varchar', length: 255, nullable: true })\n  link: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  user: UserEntity;\n\n  @ManyToOne(() => ProfileEntity, profileEntity => profileEntity.notifications, { nullable: true, onDelete: 'CASCADE' })\n  profile: ProfileEntity;\n\n  @ManyToOne(() => ConversationEntity, conversationEntity => conversationEntity.notifications, {\n    nullable: true,\n    onDelete: 'CASCADE',\n  })\n  conversation: ConversationEntity;\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn({ name: 'created_at', type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp' })\n  updatedAt: Date;\n\n  @DeleteDateColumn({ name: 'deleted_at', type: 'timestamp', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/OccupationEntity.html":{"url":"entities/OccupationEntity.html","title":"entity - OccupationEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  OccupationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/occupation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                profiles\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, cardEntity => cardEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, companyEntity => companyEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, profileEntity => profileEntity.occupations)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/occupation.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport CompanyEntity from './company.entity';\nimport { CardEntity } from './card.entity';\nimport { ProfileEntity } from './profile.entity';\n\n@Entity('occupation')\nexport class OccupationEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ nullable: false, unique: true })\n  name: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToMany(() => ProfileEntity, profileEntity => profileEntity.occupations)\n  profiles: ProfileEntity[];\n\n  @ManyToMany(() => CompanyEntity, companyEntity => companyEntity.occupations)\n  companies: CompanyEntity[];\n\n  @ManyToMany(() => CardEntity, cardEntity => cardEntity.occupations)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlanEntity.html":{"url":"entities/PlanEntity.html","title":"entity - PlanEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlanEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/plan.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                discountedPrice\n                            \n                            \n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'description', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountedPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'discounted_price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'duration', type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'price', type: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptionEntity => subscriptionEntity.plan)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/plan.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\n\n@Entity({ name: 'plan' })\nexport class PlanEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'description', type: 'varchar', length: 255 })\n  description: string;\n\n  @Column({ name: 'price', type: 'float' })\n  price: number;\n\n  @Column({ name: 'duration', type: 'int' })\n  duration: number;\n\n  @Column({ name: 'discounted_price', type: 'float' })\n  discountedPrice: number;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => SubscriptionEntity, subscriptionEntity => subscriptionEntity.plan)\n  subscriptions: SubscriptionEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProfileEntity.html":{"url":"entities/ProfileEntity.html","title":"entity - ProfileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bannerPicture\n                            \n                            \n                                    Optional\n                                companies\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                joinedConversations\n                            \n                            \n                                notifications\n                            \n                            \n                                    Optional\n                                occupations\n                            \n                            \n                                    Optional\n                                ownerCompanies\n                            \n                            \n                                    Optional\n                                personalCards\n                            \n                            \n                                    Optional\n                                profilePicture\n                            \n                            \n                                    Optional\n                                savedCard\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                usernameProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bannerPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityBanner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        companies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEmployeeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEmployee => companyEmployee.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        joinedConversations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JoinedConversation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, joinedConversation => joinedConversation.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.profile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        occupations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OccupationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, occupation => occupation.profiles, {onDelete: 'SET NULL'})@JoinTable({name: 'profile-occupation', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ownerCompanies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, companyEntity => companyEntity.ownerProfile, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        personalCards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, card => card.owner, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, media => media.profileEntityProfilePicture, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        savedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, card => card.profilesWhoSavedCard, {cascade: true, onDelete: 'SET NULL'})@JoinTable({name: 'saved-card', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.profiles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { CardEntity } from './card.entity';\nimport { OccupationEntity } from './occupation.entity';\nimport { CompanyEmployeeEntity } from './company-employee.entity';\nimport { MediaEntity } from './media.entity';\nimport { JoinedConversation } from './joined-conversation.entity';\nimport CompanyEntity from './company.entity';\nimport { NotificationEntity } from './notification.entity';\n\n@Entity({ name: 'profile' })\nexport class ProfileEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  usernameProfile: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => UserEntity, user => user.profiles)\n  user?: UserEntity;\n\n  @OneToMany(() => CardEntity, card => card.owner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  personalCards?: CardEntity[];\n\n  @ManyToMany(() => CardEntity, card => card.profilesWhoSavedCard, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'saved-card',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'card_id',\n    },\n  })\n  savedCard?: CardEntity[];\n\n  @ManyToMany(() => OccupationEntity, occupation => occupation.profiles, {\n    onDelete: 'SET NULL',\n  })\n  @JoinTable({\n    name: 'profile-occupation',\n    joinColumn: {\n      name: 'profile_id',\n    },\n    inverseJoinColumn: {\n      name: 'occupation_id',\n    },\n  })\n  occupations?: OccupationEntity[];\n\n  @OneToMany(() => CompanyEmployeeEntity, companyEmployee => companyEmployee.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  companies?: CompanyEmployeeEntity[];\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityProfilePicture, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  profilePicture?: MediaEntity;\n\n  @OneToOne(() => MediaEntity, media => media.profileEntityBanner, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  bannerPicture?: MediaEntity;\n\n  @OneToMany(() => JoinedConversation, joinedConversation => joinedConversation.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  joinedConversations?: JoinedConversation[];\n\n  @OneToMany(() => CompanyEntity, companyEntity => companyEntity.ownerProfile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  ownerCompanies?: CompanyEntity[];\n\n  @OneToMany(() => NotificationEntity, notification => notification.profile, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  notifications: NotificationEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReferralCodeEntity.html":{"url":"entities/ReferralCodeEntity.html","title":"entity - ReferralCodeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReferralCodeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/referal-code.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                createdAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                subscription\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ABC123', minLength: 6, maxLength: 10})@Column({unique: true})@IsString()@Length(6, 10)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, required: false})@Column({type: 'timestamp', nullable: true})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eb823d92-bf55-4210-8e24-89f4011bb96d'})@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@ManyToOne(undefined, user => user.referralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SubscriptionEntity, required: false})@ManyToOne(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date})@UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => UserEntity})@OneToOne(undefined, user => user.usedReferralCodes)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/referal-code.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsOptional, IsString, Length } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { SubscriptionEntity } from './subscription.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\n\n@Entity('referral_code')\nexport class ReferralCodeEntity {\n  @ApiProperty({ example: 'eb823d92-bf55-4210-8e24-89f4011bb96d' })\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty({ example: 'ABC123', minLength: 6, maxLength: 10 })\n  @Column({ unique: true })\n  @IsString()\n  @Length(6, 10)\n  code: string;\n\n  @ApiProperty({ type: () => UserEntity })\n  @OneToOne(() => UserEntity, user => user.usedReferralCodes)\n  usedBy: UserEntity;\n\n  @ApiProperty({ type: () => UserEntity })\n  @ManyToOne(() => UserEntity, user => user.referralCodes)\n  owner: UserEntity;\n\n  @ApiProperty({ type: () => SubscriptionEntity, required: false })\n  @ManyToOne(() => SubscriptionEntity, { nullable: true })\n  subscription: SubscriptionEntity;\n\n  @ApiProperty({ type: () => Date, required: false })\n  @Column({ type: 'timestamp', nullable: true })\n  @IsOptional()\n  @IsDateString()\n  expiresAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @ApiProperty({ type: () => Date })\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(public readonly username: string, public readonly email: string, public readonly password: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEvent.html":{"url":"classes/RegisterEvent.html","title":"class - RegisterEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event/register.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/event/register.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event/register.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterEvent {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterEventHandler.html":{"url":"classes/RegisterEventHandler.html","title":"class - RegisterEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/event-handler/register.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterEventHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RegisterEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/event-handler/register.event-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RegisterEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\nimport { RegisterEvent } from '../event/register.event';\n\n@EventsHandler(RegisterEvent)\nexport class RegisterEventHandler implements IEventHandler {\n  logger_console = new Logger('RegisterEventHandler');\n\n  handle(event: RegisterEvent): any {\n    logger.info('New user have registered  with id ' + event.userId);\n\n    this.logger_console.log('New user have registered with id ' + event.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/command/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                regexValidatePassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedEmail\n                            \n                            \n                                    Private\n                                    Async\n                                isDuplicatedUsername\n                            \n                            \n                                    Private\n                                isValidPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        regexValidatePassword\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/command/register.handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        isDuplicatedUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDuplicatedUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/command/register.handler.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../../command/register.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { validate } from 'class-validator';\nimport { RegisterEvent } from '../../event/register.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { InvalidParameterEntityException } from '../../../../../util/exception/custom-http-exception/invalid-parameter-entity.exception';\nimport { InvalidPasswordException } from '../../../../../util/exception/custom-http-exception/invalid-password.exception';\nimport { DuplicateEmailException } from '../../../../../util/exception/custom-http-exception/duplicate-email.exception';\nimport { DuplicateUsernameException } from '../../../../../util/exception/custom-http-exception/duplicate-username.exception';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  private regexValidatePassword;\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {\n    this.regexValidatePassword = new RegExp('^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,}$');\n  }\n\n  async execute(command: RegisterCommand): Promise {\n    if (await this.isDuplicatedUsername(command.username)) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Username already exists'));\n      throw new DuplicateUsernameException();\n    }\n    if (await this.isDuplicatedEmail(command.email)) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Email already exists'));\n      throw new DuplicateEmailException();\n    }\n\n    if (this.isValidPassword(command.password)) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Invalid password'));\n      throw new InvalidPasswordException();\n    }\n    const newUser = new UserEntity({\n      email: command.email,\n      password: bcrypt.hashSync(command.password, 10),\n      username: command.username,\n    });\n    const err = await validate(newUser);\n    if (err.length > 0) {\n      this.eventBus.publish(new ErrorCustomEvent('auth', 'Register', 'Invalid parameters :' + err));\n      throw new InvalidParameterEntityException(err);\n    }\n    const insertedUser = await this.userRepository.save(newUser);\n    this.eventBus.publish(new RegisterEvent(insertedUser.id));\n    return newUser;\n  }\n\n  private async isDuplicatedUsername(username: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.username === username);\n    });\n  }\n\n  private async isDuplicatedEmail(email: string): Promise {\n    return await this.userRepository.find().then(users => {\n      return users.some(user => user.email === email);\n    });\n  }\n\n  private isValidPassword(password: string): boolean {\n    return !this.regexValidatePassword.test(password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommandHandler.html":{"url":"classes/RemoveRefreshTokenCommandHandler.html","title":"class - RemoveRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: undefined,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'RemoveRefreshTokenCommandHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEvent.html":{"url":"classes/RemoveRefreshTokenEvent.html","title":"class - RemoveRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/remove-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'remove-refresh-token'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/remove-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenEvent {\n  constructor(\n    public readonly userId: string,\n    public readonly module: string = 'user',\n    public readonly method: string = 'remove-refresh-token',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenEventHandler.html":{"url":"classes/RemoveRefreshTokenEventHandler.html","title":"class - RemoveRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenEvent } from '../../event/remove-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(RemoveRefreshTokenEvent)\nexport class RemoveRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: RemoveRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' removed',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestLoggingMiddleware.html":{"url":"injectables/RequestLoggingMiddleware.html","title":"injectable - RequestLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/request-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/request-logging.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/request-logging.middleware.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiTypeEnum } from '../api/api-log/domain/enum/api-type.enum';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { LoggingTypeEnum } from '../api/api-log/domain/enum/logging-type.enum';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class RequestLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  use(req: Request, res: Response, next: Function): void {\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.loggingType = LoggingTypeEnum.REQUEST;\n    createLogDto.apiType = ApiTypeEnum.WALLET_SHARE_API;\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = this.VERBOSE == VerboseLogEnum.DEBUG ? req.body : undefined;\n    createLogDto.platform = device;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = req.headers['user-agent']\n      ? req?.headers['user-agent']?.split('(')[1]?.split(')')[0]?.split('; ')[1]\n      : undefined;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { UserEntity } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseLoggingMiddleware.html":{"url":"injectables/ResponseLoggingMiddleware.html","title":"injectable - ResponseLoggingMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseLoggingMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/response-logging.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                VERBOSE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLoggerService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLoggerService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/response-logging.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        VERBOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VerboseLogEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/middleware/response-logging.middleware.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport * as useragent from 'useragent';\nimport { Request, Response } from 'express';\nimport { CreateLogDto } from '../api/api-log/domain/dto/create-log.dto';\nimport { ApiLogService } from '../api/api-log/api-log.service';\nimport { VerboseLogEnum } from '../api/api-log/domain/enum/verbose-log.enum';\n\n@Injectable()\nexport class ResponseLoggingMiddleware implements NestMiddleware {\n  private readonly VERBOSE: VerboseLogEnum;\n\n  constructor(private readonly apiLoggerService: ApiLogService) {\n    this.VERBOSE = (process.env.VERBOSE as VerboseLogEnum) || VerboseLogEnum.NONE;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types,@typescript-eslint/explicit-module-boundary-types,@typescript-eslint/explicit-function-return-type\n  async use(req: Request, res: Response, next: Function) {\n    await next();\n    const ua = useragent.parse(req.headers['user-agent']);\n\n    const os = ua.os.toString();\n    const device = ua.device.toString();\n    const screenSize = req.headers['screen-size'] === undefined ? undefined : req.headers['screen-size'].toString();\n\n    const createLogDto = new CreateLogDto({});\n    createLogDto.method = req.method;\n    createLogDto.route = req.baseUrl;\n    createLogDto.headers = req.headers || undefined;\n    createLogDto.body = undefined;\n    createLogDto.status = res.statusCode;\n    createLogDto.responseHeaders = res.getHeaders();\n    createLogDto.responseBody = res.locals.responseBody;\n    createLogDto.error = undefined;\n    createLogDto.os = os;\n    createLogDto.ip = req.ip;\n    createLogDto.platform = device;\n    createLogDto.screenSize = screenSize;\n\n    this.apiLoggerService.createLog(createLogDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleGroupMembershipEnum.html":{"url":"classes/RoleGroupMembershipEnum.html","title":"class - RoleGroupMembershipEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleGroupMembershipEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/enum/role-group-membership.enum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MEMBER\n                            \n                            \n                                    Static\n                                    Readonly\n                                OWNER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ADMIN'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MEMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'MEMBER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        OWNER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OWNER'\n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/enum/role-group-membership.enum.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleGroupMembershipEnum {\n  static readonly MEMBER = 'MEMBER';\n  static readonly ADMIN = 'ADMIN';\n  static readonly OWNER = 'OWNER';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommand.html":{"url":"classes/SendMailCommand.html","title":"class - SendMailCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/command/send-mail.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/command/send-mail.command.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailCommand {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly email: string;\n\n  public readonly title?: string | undefined;\n\n  public readonly message?: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailCommandHandler.html":{"url":"classes/SendMailCommandHandler.html","title":"class - SendMailCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SendMailCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/command/send-mail.command.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SendMailCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { SendMailCommand } from '../../command/send-mail.command';\n\n@CommandHandler(SendMailCommand)\nexport class SendMailCommandHandler implements ICommandHandler {\n  constructor(@Inject('API_LOG') private client: ClientProxy, private readonly eventBus: EventBus) {}\n  async execute(command: SendMailCommand): Promise {\n    this.client.emit('send-email', command);\n    this.eventBus.publish(\n      new SendMailEvent({\n        email: command.email,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEvent.html":{"url":"classes/SendMailEvent.html","title":"class - SendMailEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/event/send-mail.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'send-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-mail'\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/api-mail/cqrs/event/send-mail.event.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailEvent {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  public readonly module: string = 'api-mail';\n  public readonly method: string = 'send-mail';\n\n  public readonly email: string;\n\n  public readonly title?: string;\n\n  public readonly message?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailEventHandler.html":{"url":"classes/SendMailEventHandler.html","title":"class - SendMailEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(event: SendMailEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SendMailEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SendMailEvent } from '../../event/send-mail.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SendMailEvent)\nexport class SendMailEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  async handle(event: SendMailEvent): Promise {\n    await this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Mail sent to: ' + event.email,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(public readonly refreshToken: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommandHandler.html":{"url":"classes/SetCurrentRefreshTokenCommandHandler.html","title":"class - SetCurrentRefreshTokenCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenCommandHandler implements ICommandHandler {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(command.refreshToken, 10);\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'SetCurrentRefreshTokenCommandHandler', error));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEvent.html":{"url":"classes/SetCurrentRefreshTokenEvent.html","title":"class - SetCurrentRefreshTokenEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/set-current-refresh-token.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(module: string, method: string, refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'set-refresh-token-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/set-current-refresh-token.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenEvent {\n  constructor(\n    public readonly module: string = 'user',\n    public readonly method: string = 'set-refresh-token-user',\n    public readonly refreshToken: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenEventHandler.html":{"url":"classes/SetCurrentRefreshTokenEventHandler.html","title":"class - SetCurrentRefreshTokenEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: SetCurrentRefreshTokenEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                SetCurrentRefreshTokenEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenEvent } from '../../event/set-current-refresh-token.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(SetCurrentRefreshTokenEvent)\nexport class SetCurrentRefreshTokenEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n  handle(event: SetCurrentRefreshTokenEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'Refresh token with id: ' + event.userId + ' set',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SocialNetworkEntity.html":{"url":"entities/SocialNetworkEntity.html","title":"entity - SocialNetworkEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SocialNetworkEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/social-network.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                define the social network entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, cardEntity => cardEntity.socialNetwork)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/social-network.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { CardEntity } from './card.entity';\n\n/**\n * @description\n * define the social network entity\n * @class\n * @classdesc define the social network entity\n * @memberof module:entities\n * @name SocialNetworkEntity\n * @property {string} id - the id of the social network\n * @property {string} name - the name of the social network\n * @property {string} url - the url of the social network\n * @property {string} icon - the icon of the social network\n * @property {Date} createdAt - the date of creation of the social network\n * @property {Date} updatedAt - the date of update of the social network\n * @property {Date} deletedAt - the date of deletion of the social network\n */\n@Entity({ name: 'social_network' })\nexport class SocialNetworkEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  url: string;\n\n  @Column()\n  icon: string;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @OneToMany(() => CardEntity, cardEntity => cardEntity.socialNetwork)\n  cards: CardEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StripEventEntity.html":{"url":"entities/StripEventEntity.html","title":"entity - StripEventEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StripEventEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/strip-event.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/strip-event.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * @name StripEventEntity\n * @class StripEventEntity\n * @extends {BaseEntity}\n * @memberof PaymentEntity\n */\n@Entity({ name: 'strip_event' })\nexport default class StripEventEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn()\n  public id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SubscriptionEntity.html":{"url":"entities/SubscriptionEntity.html","title":"entity - SubscriptionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriptionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/entities-to-create/subscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                discountCodes\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                startDate\n                            \n                            \n                                    Public\n                                    Optional\n                                stripCustomerId\n                            \n                            \n                                    Public\n                                    Optional\n                                trialEndDate\n                            \n                            \n                                    Public\n                                    Optional\n                                trialStartDate\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discountCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DiscountCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, discountCodeEntity => discountCodeEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'end_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoicesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoicesEntity => invoicesEntity.subscription)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        plan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PlanEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, planEntity => planEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'start_date', type: 'date'})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stripCustomerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:43\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has a stripe customer id.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialEndDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_end_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        trialStartDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'trial_start_date', type: 'date', nullable: true})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userEntity => userEntity.subscriptions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/entities-to-create/subscription.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsDate } from 'class-validator';\nimport { PlanEntity } from './plan.entity';\nimport { UserEntity } from '../user/domain/entities/user.entity';\nimport { InvoicesEntity } from './invoices.entity';\nimport { DiscountCodeEntity } from './discount-code.entity';\n\n@Entity({ name: 'subscription' })\nexport class SubscriptionEntity {\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ name: 'start_date', type: 'date' })\n  @IsDate()\n  public startDate: Date;\n\n  @Column({ name: 'end_date', type: 'date' })\n  @IsDate()\n  public endDate: Date;\n\n  // @Column({ type: 'enum', enum: StatusSubscriptionEnum, default: StatusSubscriptionEnum.ACTIVE })\n  // public status: StatusSubscriptionEnum;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has a stripe customer id.\n   */\n  @Column({ unique: true, nullable: true })\n  public stripCustomerId?: string;\n\n  @Column({ name: 'trial_start_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialStartDate?: Date;\n\n  @Column({ name: 'trial_end_date', type: 'date', nullable: true })\n  @IsDate()\n  public trialEndDate?: Date;\n\n  // ______________________________________________________\n  // Relations\n  // ______________________________________________________\n\n  @ManyToOne(() => PlanEntity, planEntity => planEntity.subscriptions)\n  public plan: PlanEntity;\n\n  @ManyToOne(() => UserEntity, userEntity => userEntity.subscriptions)\n  user: UserEntity;\n\n  @OneToMany(() => InvoicesEntity, invoicesEntity => invoicesEntity.subscription)\n  invoices: InvoicesEntity[];\n\n  @ManyToMany(() => DiscountCodeEntity, discountCodeEntity => discountCodeEntity.subscriptions)\n  discountCodes: DiscountCodeEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntityExtendEntity.html":{"url":"classes/TimestampEntityExtendEntity.html","title":"class - TimestampEntityExtendEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntityExtendEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/global/extend-entity/timestamp.extend-entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                deletedAt\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTimestamp\n                            \n                            \n                                    Public\n                                deleteTimestamp\n                            \n                            \n                                    Public\n                                updateTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'deleted_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTimestamp\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in src/util/global/extend-entity/timestamp.extend-entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column } from 'typeorm';\n\nexport class TimestampEntityExtendEntity extends BaseEntity {\n  @Column({ type: 'timestamp', name: 'created_at' })\n  public createdAt: Date;\n\n  @Column({ type: 'timestamp', name: 'updated_at', onUpdate: 'CURRENT_TIMESTAMP' })\n  public updatedAt: Date;\n\n  @Column({ type: 'timestamp', name: 'deleted_at' })\n  public deletedAt: Date | null;\n\n  public createTimestamp(): void {\n    this.createdAt = new Date(Date.now());\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public updateTimestamp(): void {\n    this.updatedAt = new Date(Date.now());\n    this.deletedAt = null;\n  }\n\n  public deleteTimestamp(): void {\n    this.deletedAt = new Date(Date.now());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedRequestException.html":{"url":"classes/UnauthorizedRequestException.html","title":"class - UnauthorizedRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/unauthorized-request.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnauthorizedRequestException extends HttpException {\n  constructor() {\n    super('Unauthorized request', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(public readonly userId: string, public readonly user: UpdateUserDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommandHandler.html":{"url":"classes/UpdateUserCommandHandler.html","title":"class - UpdateUserCommandHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommandHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/command/update-user.command-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                eventBus\n                            \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        eventBus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventBus\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('UpdateUser')\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/command/update-user.command-handler.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../../command/update-user.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from '../../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ErrorCustomEvent } from '../../../../../util/exception/error-handler/error-custom.event';\nimport { UserResponse } from '../../../domain/response/user.response';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserCommandHandler implements ICommandHandler {\n  logger = new Logger('UpdateUser');\n\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n    public eventBus: EventBus,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      const err = await validate(UpdateUserCommand);\n      if (err.length > 0) {\n        this.logger.error('Invalid parameters');\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: UserEntity = await this.userRepository.findOneOrFail({\n        where: [{ id: command.userId }],\n      });\n      this.eventBus.publish(new UpdateUserEvent(command.userId));\n      return new UserResponse({ ...user });\n    } catch (error) {\n      this.eventBus.publish(new ErrorCustomEvent('user', 'UpdateUserCommandHandler', error));\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEvent.html":{"url":"classes/UpdateUserEvent.html","title":"class - UpdateUserEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/event/update-user.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                method\n                            \n                            \n                                    Public\n                                    Readonly\n                                module\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, module: string, method: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'update-user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/event/update-user.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateUserEvent {\n  constructor(\n    public readonly userId: string,\n    public readonly module: string = 'user',\n    public readonly method: string = 'update-user',\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserEventHandler.html":{"url":"classes/UpdateUserEventHandler.html","title":"class - UpdateUserEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/event/update-user.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiLogService: ApiLogService)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiLogService\n                                                  \n                                                        \n                                                                        ApiLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: UpdateUserEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/event/update-user.event-handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateUserEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { UpdateUserEvent } from '../../event/update-user.event';\nimport { ApiLogService } from '../../../../api-log/api-log.service';\n\n@EventsHandler(UpdateUserEvent)\nexport class UpdateUserEventHandler implements IEventHandler {\n  constructor(private readonly apiLogService: ApiLogService) {}\n\n  handle(event: UpdateUserEvent): void {\n    this.apiLogService.createLogForMethode({\n      module: event.module,\n      method: event.method,\n      body: 'User with id: ' + event.userId + ' updated',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create-user-from-mail')@UseGuards(undefined)@Get()@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(request: RequestUser, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpException, Param, Post, Put, Req, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UserResponse } from './domain/response/user.response';\nimport { RoleGuard } from '../auth/guards/role.guard';\nimport { UserRoleEnum } from './domain/enum/user-role.enum';\n\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('/create')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  async createUser(@Body() createUserDto: CreateUserDto): Promise {\n    try {\n      return await this.userService.createUser(createUserDto);\n    } catch (error) {\n      return new HttpException(\n        {\n          type: error.message.split(':')[0],\n          error: error.message.split(':')[1],\n        },\n        error.status,\n      );\n    }\n  }\n\n  @Post('/create-user-from-mail')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  @Get()\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN]))\n  findAll(): Promise {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @UseGuards(RoleGuard([UserRoleEnum.PUBLIC]))\n  findOne(@Param('id') id: string): Promise {\n    return this.userService.findOne(id);\n  }\n\n  @Put('')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  update(@Req() request: RequestUser, @Body() updateUserDto: UpdateUserDto): Promise {\n    const { user } = request;\n    return this.userService.update(user.id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(RoleGuard([UserRoleEnum.ADMIN, UserRoleEnum.PUBLIC]))\n  remove(@Param('id') id: string): Promise {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                deletedAt\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isEmailConfirmed\n                            \n                            \n                                    Public\n                                isRegisteredWithGoogle\n                            \n                            \n                                    Public\n                                    Optional\n                                jwtToken\n                            \n                            \n                                notifications\n                            \n                            \n                                password\n                            \n                            \n                                profiles\n                            \n                            \n                                referralCodes\n                            \n                            \n                                roles\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updatedAt\n                            \n                            \n                                usedReferralCodes\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:59\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has confirmed their email address.\nThis is used to prevent users from logging in before they have confirmed their email address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:76\n                        \n                    \n\n            \n                \n                    This is a flag to indicate if the user has registered with google.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        jwtToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, notification => notification.user, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: true, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:51\n                        \n                    \n\n            \n                \n                    Password is nullable because user can connect with Google\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, profile => profile.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        referralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.owner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {array: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriptionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscription => subscription.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usedReferralCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferralCodeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, referralCode => referralCode.usedBy)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Length(5, 20)@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsEmail, Length } from 'class-validator';\nimport { Exclude } from 'class-transformer';\nimport { ProfileEntity } from '../../../entities-to-create/profile.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\nimport { SubscriptionEntity } from '../../../entities-to-create/subscription.entity';\nimport { ReferralCodeEntity } from '../../../entities-to-create/referal-code.entity';\nimport { NotificationEntity } from '../../../entities-to-create/notification.entity';\nimport { AddressEntity } from '../../../entities-to-create/address.entity';\n\n@Entity({ name: 'user' })\nexport class UserEntity extends BaseEntity {\n  constructor(partial?: Partial) {\n    super();\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  // ______________________________________________________\n  // Properties\n  // ______________________________________________________\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @IsEmail()\n  @Column({ unique: true })\n  email?: string;\n\n  @Column()\n  @Length(5, 20)\n  @Column({ unique: true })\n  username?: string;\n\n  /**\n   * @description\n   * Password is nullable because user can connect with Google\n   */\n  @Column({ unique: false, nullable: true, select: false })\n  @Exclude()\n  password: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has confirmed their email address.\n   * This is used to prevent users from logging in before they have confirmed their email address.\n   */\n  @Column({ default: false })\n  isEmailConfirmed: boolean;\n\n  @Column({\n    nullable: true,\n    select: false,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @Exclude()\n  public jwtToken?: string;\n\n  /**\n   * @description\n   * This is a flag to indicate if the user has registered with google.\n   */\n  @Column({ default: false })\n  public isRegisteredWithGoogle: boolean;\n\n  @Column('text', { array: true, default: [UserRoleEnum.PUBLIC] })\n  roles: UserRoleEnum[];\n\n  // _________________________________________________________\n  // Relations\n  // _________________________________________________________\n\n  @OneToMany(() => ProfileEntity, profile => profile.user)\n  profiles: ProfileEntity[];\n\n  @OneToMany(() => SubscriptionEntity, subscription => subscription.user)\n  subscriptions: SubscriptionEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.owner)\n  referralCodes: ReferralCodeEntity[];\n\n  @OneToMany(() => ReferralCodeEntity, referralCode => referralCode.usedBy)\n  usedReferralCodes: ReferralCodeEntity;\n\n  @OneToMany(() => NotificationEntity, notification => notification.user, {\n    cascade: true,\n  })\n  notifications: NotificationEntity[];\n\n  @OneToMany(() => AddressEntity, address => address.user, {\n    cascade: true,\n  })\n  addresses: AddressEntity[];\n\n  // ______________________________________________________\n  // Timestamps\n  // ______________________________________________________\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                login\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserLoginDto {\n  constructor(login: string, password: string) {\n    this.login = login;\n    this.password = password;\n  }\n\n  @ApiProperty()\n  public readonly login: string;\n  @ApiProperty()\n  public readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponse.html":{"url":"classes/UserLoginResponse.html","title":"class - UserLoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-login.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-login.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-login.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../entities/user.entity';\nimport { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserLoginResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly username?: string;\n  public readonly email?: string;\n  public readonly createdAt: Date;\n  public readonly updatedAt: Date;\n  public token: string;\n  public readonly roles: UserRoleEnum[];\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nApiLogModule\n\nApiLogModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiLogService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiLogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserEntity } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { CreateUserCommandHandler } from './cqrs/handler/command/create-user.command-handler';\nimport { GetUserByEmailQueryHandler } from './cqrs/handler/query/get-user-by-email.query-handler';\nimport { GetUserByUsernameQueryHandler } from './cqrs/handler/query/get-user-by-username.query-handler';\nimport { GetUserLoginHandler } from './cqrs/handler/query/get-user-login.handler';\nimport { GetUserIfRefreshTokenMatchesHandler } from './cqrs/handler/query/get-user-if-refresh-token-matches.handler';\nimport { GetUserHandler } from './cqrs/handler/query/get-user.handler';\nimport { ApiLogModule } from '../api-log/api-log.module';\nimport { ApiLogService } from '../api-log/api-log.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { SetCurrentRefreshTokenCommandHandler } from './cqrs/handler/command/set-current-refresh-token.command-handler';\nimport { UpdateUserCommandHandler } from './cqrs/handler/command/update-user.command-handler';\nimport { RemoveRefreshTokenCommandHandler } from './cqrs/handler/command/remove-refresh-token.command-handler';\nimport { CreateUserEventHandler } from './cqrs/handler/event/create-user.event-handler';\nimport { DeleteUserEventHandler } from './cqrs/handler/event/delete-user.event-handler';\nimport { RemoveRefreshTokenEventHandler } from './cqrs/handler/event/remove-refresh-token.event-handler';\nimport { SetCurrentRefreshTokenEventHandler } from './cqrs/handler/event/set-current-refresh-token.event-handler';\nimport { LoginOfUserEventHandler } from './cqrs/handler/event/login-of-user.event-handler';\nimport { UpdateUserEventHandler } from './cqrs/handler/event/update-user.event-handler';\nimport { DeleteUserCommandHandler } from './cqrs/handler/command/delete-user.command-handler';\nimport { CreateLogCommandHandler } from '../api-log/cqrs/handler/command/create-log.command-handler';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    CqrsModule,\n    ApiLogModule,\n    ClientsModule.register([{ name: 'API_LOG', transport: Transport.TCP, options: { port: 3001 } }]),\n  ],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    // log\n    ApiLogService,\n    CreateLogCommandHandler,\n    // Command handlers\n    CreateUserCommandHandler,\n    RemoveRefreshTokenCommandHandler,\n    SetCurrentRefreshTokenCommandHandler,\n    UpdateUserCommandHandler,\n    DeleteUserCommandHandler,\n    // Query handlers\n    GetUserByUsernameQueryHandler,\n    GetUserByEmailQueryHandler,\n    GetUserLoginHandler,\n    GetUserIfRefreshTokenMatchesHandler,\n    GetUserHandler,\n    // Event handlers\n    CreateUserEventHandler,\n    DeleteUserEventHandler,\n    RemoveRefreshTokenEventHandler,\n    SetCurrentRefreshTokenEventHandler,\n    LoginOfUserEventHandler,\n    UpdateUserEventHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/exception/custom-http-exception/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/exception/custom-http-exception/user-not-found.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UserNotFoundException extends HttpException {\n  constructor() {\n    super('User not found', HttpStatus.NOT_FOUND);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                roles\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEnum[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserRoleEnum } from '../enum/user-role.enum';\n\nexport class UserResponse {\n  constructor(partial?: Partial) {\n    if (partial) {\n      Object.assign(this, partial);\n    }\n  }\n\n  public readonly id: string;\n  public readonly roles: UserRoleEnum[];\n  public readonly username?: string;\n  public readonly email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                generateCode\n                            \n                            \n                                    Async\n                                generateUniqueReferralCode\n                            \n                            \n                                    Async\n                                getUserByReferralCode\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCode(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUniqueReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUniqueReferralCode()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByReferralCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByReferralCode(referralCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referralCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserCommand } from './cqrs/command/create-user.command';\nimport { CreateUserDto } from './domain/dto/create-user.dto';\nimport { CreateUserResponse } from './domain/response/create-user.response';\nimport { UserEntity } from './domain/entities/user.entity';\nimport * as process from 'process';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { UserResponse } from './domain/response/user.response';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly commandBus: CommandBus, private readonly queryBus: QueryBus) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    return this.commandBus.execute(new CreateUserCommand(createUserDto));\n  }\n\n  //TODO: Implement this\n  async getUserByReferralCode(referralCode: string): Promise {\n    // return this.queryBus.execute(new GetUserByReferralCodeQuery(referralCode));\n    throw new Error('Not implemented');\n  }\n\n  // Generate a random alphanumeric code of a given length\n  private generateCode(length: number): string {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let code = '';\n    for (let i = 0; i  {\n    let code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    while (await this.getUserByReferralCode(code)) {\n      code = this.generateCode(Number(process.env.LENGTH_REFERRAL_CODE) || 6);\n    }\n    return code;\n  }\n\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string) {\n    return this.queryBus.execute(new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId));\n  }\n\n  async removeRefreshToken(userId: string) {\n    return this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  async setCurrentRefreshToken(token: string, userId: string) {\n    return this.commandBus.execute(new SetCurrentRefreshTokenCommand(token, userId));\n  }\n\n  async findAll(): Promise {\n    return this.queryBus.execute(new GetUserQuery());\n  }\n\n  async findOne(id: string): Promise {\n    return this.queryBus.execute(new GetUserQuery(id));\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    return this.commandBus.execute(new UpdateUserCommand(id, updateUserDto));\n  }\n\n  async remove(id: string): Promise {\n    return this.commandBus.execute(new DeleteUserCommand(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.5 - 2023-03-15\nFeatures\n\nadd auth verification\nadd tcp validate-login\nadd e2e auth test\n\n0.0.4 - 2023-03-10\nFeatures\n\nadd referral code entity\nadd notification entity\nupdate README.md\n\n0.0.3 - 2023-03-10\nFeatures\n\nadd call to api-log\n\n0.0.2 - 2023-03-08\nFeatures\n\ncreate of all entities\n\n0.0.1 - 2023-03-04\nFeatures\n\nall packages: init nestJs project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nNO CONTRIBUTING\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/api-landing-page/api-landing-page.controller.ts\n            \n            controller\n            ApiLandingPageController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/api-landing-page.service.ts\n            \n            injectable\n            ApiLandingPageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/command/delete-mail.command.ts\n            \n            class\n            DeleteMailCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/event/delete-mail.event.ts\n            \n            class\n            DeleteMailEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/handler/command/delete-mail.command-handler.ts\n            \n            class\n            DeleteMailCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/handler/event/delete-mail.event-handler.ts\n            \n            class\n            DeleteMailEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/handler/query/get-all-mail.query-handler.ts\n            \n            class\n            GetAllMailQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/cqrs/query/get-all-mail.query.ts\n            \n            class\n            GetAllMailQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/domain/dto/mail-landing-page.dto.ts\n            \n            class\n            MailLandingPageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-landing-page/domain/response/mail.response.ts\n            \n            class\n            MailResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-log/api-log.service.ts\n            \n            injectable\n            ApiLogService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-log/cqrs/command/create-log.command.ts\n            \n            class\n            CreateLogCommand\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/api/api-log/cqrs/handler/command/create-log.command-handler.ts\n            \n            class\n            CreateLogCommandHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/dto/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/dto/create-method-log.dto.ts\n            \n            class\n            CreateMethodLogDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/api-log/domain/enum/logging-type.enum.ts\n            \n            class\n            LoggingTypeEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/api-mail/api-mail.controller.ts\n            \n            controller\n            ApiMailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/api-mail/api-mail.service.ts\n            \n            injectable\n            ApiMailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/command/send-mail.command.ts\n            \n            class\n            SendMailCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/event/send-mail.event.ts\n            \n            class\n            SendMailEvent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/handler/command/send-mail.command.ts\n            \n            class\n            SendMailCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-mail/cqrs/handler/event/send-mail.event-handler.ts\n            \n            class\n            SendMailEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/api-mail/domain/dto/mail.dto.ts\n            \n            class\n            MailDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/command/register.command.ts\n            \n            class\n            RegisterCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/event-handler/register.event-handler.ts\n            \n            class\n            RegisterEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/event/register.event.ts\n            \n            class\n            RegisterEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/handler/command/register.handler.ts\n            \n            class\n            RegisterHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/guards/auth.guard.ts\n            \n            injectable\n            LocalAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-refresh-token.guard.ts\n            \n            injectable\n            JwtRefreshGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/role.guard.ts\n            \n            variable\n            RoleGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/interface/request-user.interface.ts\n            \n            interface\n            RequestUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/interface/token-payload.interface.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt-refresh-token.strategy.ts\n            \n            injectable\n            JwtRefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/passport-local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/address.entity.ts\n            \n            entity\n            AddressEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/card.entity.ts\n            \n            entity\n            CardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company-employee.entity.ts\n            \n            entity\n            CompanyEmployeeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/company.entity.ts\n            \n            entity\n            CompanyEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/connected-card.entity.ts\n            \n            entity\n            ConnectedCardEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/conversation.entity.ts\n            \n            entity\n            ConversationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/discount-code.entity.ts\n            \n            entity\n            DiscountCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/enum/role-group-membership.enum.ts\n            \n            class\n            RoleGroupMembershipEnum\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group-membership.entity.ts\n            \n            entity\n            GroupMembershipEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/group.entity.ts\n            \n            entity\n            GroupEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/invoices.entity.ts\n            \n            entity\n            InvoicesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/joined-conversation.entity.ts\n            \n            entity\n            JoinedConversation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/media.entity.ts\n            \n            entity\n            MediaEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/message.entity.ts\n            \n            entity\n            MessageEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/notification.entity.ts\n            \n            entity\n            NotificationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/occupation.entity.ts\n            \n            entity\n            OccupationEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/plan.entity.ts\n            \n            entity\n            PlanEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/profile.entity.ts\n            \n            entity\n            ProfileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/referal-code.entity.ts\n            \n            entity\n            ReferralCodeEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/social-network.entity.ts\n            \n            entity\n            SocialNetworkEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/strip-event.entity.ts\n            \n            entity\n            StripEventEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/entities-to-create/subscription.entity.ts\n            \n            entity\n            SubscriptionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/handler/query/health-check.query-handler.ts\n            \n            class\n            HealthCheckQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/cqrs/query/health-check.query.ts\n            \n            class\n            HealthCheckQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/health-check/custom-health-check.service.ts\n            \n            injectable\n            CustomHealthCheckService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/domain/response/health-check.response.ts\n            \n            class\n            HealthCheckResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/health-check/health-check.controller.ts\n            \n            controller\n            HealthCheckController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/create-user.command.ts\n            \n            class\n            CreateUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/delete-user.command.ts\n            \n            class\n            DeleteUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/remove-refresh-token.command.ts\n            \n            class\n            RemoveRefreshTokenCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/set-current-refresh-token.command.ts\n            \n            class\n            SetCurrentRefreshTokenCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/update-user.command.ts\n            \n            class\n            UpdateUserCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/create-user.event.ts\n            \n            class\n            CreateUserEvent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/delete-user.event.ts\n            \n            class\n            DeleteUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/login-of-user.event.ts\n            \n            class\n            LoginOfUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/remove-refresh-token.event.ts\n            \n            class\n            RemoveRefreshTokenEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/set-current-refresh-token.event.ts\n            \n            class\n            SetCurrentRefreshTokenEvent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/event/update-user.event.ts\n            \n            class\n            UpdateUserEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/create-user.command-handler.ts\n            \n            class\n            CreateUserCommandHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/delete-user.command-handler.ts\n            \n            class\n            DeleteUserCommandHandler\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/remove-refresh-token.command-handler.ts\n            \n            class\n            RemoveRefreshTokenCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/set-current-refresh-token.command-handler.ts\n            \n            class\n            SetCurrentRefreshTokenCommandHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/command/update-user.command-handler.ts\n            \n            class\n            UpdateUserCommandHandler\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/create-user.event-handler.ts\n            \n            class\n            CreateUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/delete-user.event-handler.ts\n            \n            class\n            DeleteUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/login-of-user.event-handler.ts\n            \n            class\n            LoginOfUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/remove-refresh-token.event-handler.ts\n            \n            class\n            RemoveRefreshTokenEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/set-current-refresh-token.event-handler.ts\n            \n            class\n            SetCurrentRefreshTokenEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/event/update-user.event-handler.ts\n            \n            class\n            UpdateUserEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-by-email.query-handler.ts\n            \n            class\n            GetUserByEmailQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-by-username.query-handler.ts\n            \n            class\n            GetUserByUsernameQueryHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-if-refresh-token-matches.handler.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user-login.handler.ts\n            \n            class\n            GetUserLoginHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/query/get-user.handler.ts\n            \n            class\n            GetUserHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-by-email.query.ts\n            \n            class\n            GetUserByEmailQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-by-username.query.ts\n            \n            class\n            GetUserByUsernameQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-login.query.ts\n            \n            class\n            GetUserLoginQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user.query.ts\n            \n            class\n            GetUserQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/user-login.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/create-user.response.ts\n            \n            class\n            CreateUserResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user-list.response.ts\n            \n            class\n            UserListResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user-login.response.ts\n            \n            class\n            UserLoginResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user.response.ts\n            \n            class\n            UserResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/error-logging.middleware.ts\n            \n            injectable\n            ErrorLoggingMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/middleware/request-logging.middleware.ts\n            \n            injectable\n            RequestLoggingMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/middleware/response-logging.middleware.ts\n            \n            injectable\n            ResponseLoggingMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/util/config/database.configuration.ts\n            \n            injectable\n            DatabaseConfiguration\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/config/winston-logger.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-email.exception.ts\n            \n            class\n            DuplicateEmailException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/duplicate-username.exception.ts\n            \n            class\n            DuplicateUsernameException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n            \n            class\n            InvalidParameterEntityException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/invalid-password.exception.ts\n            \n            class\n            InvalidPasswordException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/no-user-trace.exception.ts\n            \n            class\n            NoUserTraceException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/unauthorized-request.exception.ts\n            \n            class\n            UnauthorizedRequestException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/custom-http-exception/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event-handler.ts\n            \n            class\n            ErrorCustomEventHandler\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/exception/error-handler/error-custom.event.ts\n            \n            class\n            ErrorCustomEvent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/util/filter/error-exception.filter.ts\n            \n            class\n            ErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/global/extend-entity/timestamp.extend-entity.ts\n            \n            class\n            TimestampEntityExtendEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/util/mocks/config.service.mock.ts\n            \n            variable\n            mockedConfigService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/jwt.service.mock.ts\n            \n            variable\n            mockedJwtService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/pipe/is-test-environment.pipe.ts\n            \n            class\n            IsTestEnvironmentPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.controller.ts\n            \n            controller\n            AppTestE2eController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                test/test-environment/app-test-e2e.service.ts\n            \n            injectable\n            AppTestE2eService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/cqrs : ^9.0.3\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/microservices : ^9.3.9\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/terminus : ^9.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/passport-jwt : ^3.0.8\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/useragent : ^2.3.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            useragent : ^2.3.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiTypeEnum   (src/.../api-type.enum.ts)\n                        \n                        \n                            ErrorEnum   (src/.../ErrorEnum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../notification-type.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            RoleCompanyEmployeeEnum   (src/.../role-company-employee.enum.ts)\n                        \n                        \n                            StatusInvoiceEnum   (src/.../status-invoice.enum.ts)\n                        \n                        \n                            StatusLogEnum   (src/.../status-log.enum.ts)\n                        \n                        \n                            StatusSubscriptionEnum   (src/.../status-subscription.enum.ts)\n                        \n                        \n                            TransferableStatusCardEnum   (src/.../transferable-status-card.enum.ts)\n                        \n                        \n                            TypeOfCardEnum   (src/.../type-of-card.enum.ts)\n                        \n                        \n                            UserRoleEnum   (src/.../user-role.enum.ts)\n                        \n                        \n                            VerboseLogEnum   (src/.../verbose-log.enum.ts)\n                        \n                        \n                            WhoCanCommunicateWithEnum   (src/.../who-can-communicate-with.enum.ts)\n                        \n                        \n                            WhoCanSeeCardInformationEnum   (src/.../who-can-see-card-information.enum.ts)\n                        \n                        \n                            WhoCanShareCardEnum   (src/.../who-can-share-card.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/api-log/domain/enum/api-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiTypeEnum\n                    \n                \n                        \n                            \n                                 WALLET_SHARE_API\n                            \n                        \n                        \n                            \n                                Value : wallet_share_api\n                            \n                        \n                        \n                            \n                                 MAIL_API\n                            \n                        \n                        \n                            \n                                Value : mail_api\n                            \n                        \n            \n        \n\n    src/util/exception/ErrorEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorEnum\n                    \n                \n                        \n                            \n                                 DUPLICATE_USERNAME\n                            \n                        \n                        \n                            \n                                Value : Username already exists\n                            \n                        \n                        \n                            \n                                 DUPLICATE_EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 INVALID_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 INVALID_PARAMETERS\n                            \n                        \n                        \n                            \n                                Value : Invalid parameters\n                            \n                        \n                        \n                            \n                                 NO_USER_TRACE\n                            \n                        \n                        \n                            \n                                Value : UserSenderId not found\n                            \n                        \n                        \n                            \n                                 USER_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : User not found\n                            \n                        \n                        \n                            \n                                 DUPLICATE_CATEGORY_NAME\n                            \n                        \n                        \n                            \n                                Value : Category name already exists\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_MESSAGE\n                            \n                        \n                        \n                            \n                                 JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                Value : JOIN_NEW_GROUP\n                            \n                        \n                        \n                            \n                                 NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : NEW_GROUP_MESSAGE\n                            \n                        \n                        \n                            \n                                 NEW_CALL\n                            \n                        \n                        \n                            \n                                Value : NEW_CALL\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/role-company-employee.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleCompanyEmployeeEnum\n                    \n                \n                        \n                            \n                                 OWNER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-invoice.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusInvoiceEnum\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 VALIDATED\n                            \n                        \n                        \n                            \n                                Value : VALIDATED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 EXPIRED\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 REFUNDED\n                            \n                        \n                        \n                            \n                                Value : REFUNDED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/status-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusLogEnum\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n                        \n                            \n                                 ANONYMOUS\n                            \n                        \n                        \n                            \n                                Value : ANONYMOUS\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/status-subscription.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSubscriptionEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/transferable-status-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TransferableStatusCardEnum\n                    \n                \n                        \n                            \n                                 IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                 IS_NOT_TRANSFERABLE\n                            \n                        \n                        \n                            \n                                Value : IS_NOT_TRANSFERABLE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/type-of-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeOfCardEnum\n                    \n                \n                        \n                            \n                                 SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                Value : SOCIAL_NETWORK\n                            \n                        \n                        \n                            \n                                 WEBSITE\n                            \n                        \n                        \n                            \n                                Value : WEBSITE\n                            \n                        \n                        \n                            \n                                 WALLET_SHARE\n                            \n                        \n                        \n                            \n                                Value : WALLET_SHARE\n                            \n                        \n                        \n                            \n                                 V_CARD\n                            \n                        \n                        \n                            \n                                Value : V_CARD\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRoleEnum\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : PUBLIC\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 COMPANY_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : COMPANY_ACCOUNT\n                            \n                        \n            \n        \n\n    src/api/api-log/domain/enum/verbose-log.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        VerboseLogEnum\n                    \n                \n                        \n                            \n                                 CLASSIC\n                            \n                        \n                        \n                            \n                                Value : CLASSIC\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-communicate-with.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanCommunicateWithEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 NOBODY\n                            \n                        \n                        \n                            \n                                Value : NOBODY\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-see-card-information.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanSeeCardInformationEnum\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                Value : ONLY_CONNECTED_USERS\n                            \n                        \n                        \n                            \n                                 ONLY_ME\n                            \n                        \n                        \n                            \n                                Value : ONLY_ME\n                            \n                        \n            \n        \n\n    src/api/entities-to-create/enum/who-can-share-card.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        WhoCanShareCardEnum\n                    \n                \n                        \n                            \n                                 DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                Value : NOT_DIFFUSIBLE\n                            \n                        \n                        \n                            \n                                 ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                Value : ONlY_BY_COMPANY_MEMBERS\n                            \n                        \n                        \n                            \n                                 ONLY_BY_COMPANY_ADMIN\n                            \n                        \n                        \n                            \n                                Value : ONLY_BY_COMPANY_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApi Wallet Share\n\n\nContributors\n\nBRIAND Thibaud\nARNAUD David-henrie\nANGOSTON Lucas\n\nDescription\nThis project is a REST API for the organisation WalletShareOrg.\nDependencies libraries\n\nNodeJS\nNPM\nPostgreSQL\nDocker\nDocker Compose\nNodemon\nJest\nSupertest\nESLint\nPrettier\n\nInstallation\nnpm installRun\nnpm run startTest\nnpm run testAPI Documentation\nnpm run documentation:serveApplication Dependencies\n\n\nAPI Routes V_0.0.4\n\n\nDatabase Schema V_0.0.4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiLandingPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiLogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiMailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppTestE2eModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntitiesToMoveModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiLandingPageModule\n\n\n\ncluster_ApiLandingPageModule_imports\n\n\n\ncluster_ApiLandingPageModule_providers\n\n\n\ncluster_ApiMailModule\n\n\n\ncluster_ApiMailModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppTestE2eModule\n\n\n\ncluster_AppTestE2eModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthCheckModule\n\n\n\ncluster_HealthCheckModule_providers\n\n\n\n\nApiLogModule\n\nApiLogModule\n\nApiLogModule -->\n\nApiLogModule->ApiLogModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nApiLogModule->UserModule\n\n\n\n\n\nApiLandingPageModule\n\nApiLandingPageModule\n\nApiLandingPageModule -->\n\nApiLogModule->ApiLandingPageModule\n\n\n\n\n\nApiMailModule\n\nApiMailModule\n\nApiMailModule -->\n\nApiLogModule->ApiMailModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nApiLogModule->AuthModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiLogModule->AppModule\n\n\n\nApiLandingPageModule -->\n\nUserModule->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserModule->ApiMailModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nApiLandingPageModule->AppModule\n\n\n\n\n\nApiLandingPageService\n\nApiLandingPageService\n\nApiLandingPageModule -->\n\nApiLandingPageService->ApiLandingPageModule\n\n\n\n\n\nApiLogService\n\nApiLogService\n\nApiLogModule -->\n\nApiLogService->ApiLogModule\n\n\n\nUserModule -->\n\nApiLogService->UserModule\n\n\n\nApiLandingPageModule -->\n\nApiLogService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nApiLogService->ApiMailModule\n\n\n\nAuthModule -->\n\nApiLogService->AuthModule\n\n\n\nAppModule -->\n\nApiLogService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nApiLandingPageModule -->\n\nUserService->ApiLandingPageModule\n\n\n\nApiMailModule -->\n\nUserService->ApiMailModule\n\n\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nAppModule -->\n\nApiMailModule->AppModule\n\n\n\n\n\nApiMailService\n\nApiMailService\n\nApiMailModule -->\n\nApiMailService->ApiMailModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEntitiesToMoveModule\n\nEntitiesToMoveModule\n\nAppModule -->\n\nEntitiesToMoveModule->AppModule\n\n\n\n\n\nHealthCheckModule\n\nHealthCheckModule\n\nAppModule -->\n\nHealthCheckModule->AppModule\n\n\n\n\n\nAppTestE2eModule\n\nAppTestE2eModule\n\nAppTestE2eModule -->\n\nAppModule->AppTestE2eModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAppTestE2eService\n\nAppTestE2eService\n\nAppTestE2eModule -->\n\nAppTestE2eService->AppTestE2eModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCustomHealthCheckService\n\nCustomHealthCheckService\n\nHealthCheckModule -->\n\nCustomHealthCheckService->HealthCheckModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    79 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.5\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n Serialize response to send empty string when data is null api-nestjs-serializing-response-interceptors\n add auth jwt\n add double auth\n add auth with Google \n add confirming mail confirming-email-address\n add database migrations and cron typeorm-migrations\n add flag feature flag-feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConstraintMap   (src/.../invalid-parameter-entity.exception.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/exception/custom-http-exception/invalid-parameter-entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ConstraintMap\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            mockedConfigService   (src/.../config.service.mock.ts)\n                        \n                        \n                            mockedJwtService   (src/.../jwt.service.mock.ts)\n                        \n                        \n                            RoleGuard   (src/.../role.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      info => `[${info.level.toUpperCase()}] - ${info.timestamp} - WS : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/config.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  get(key: string) {\n    switch (key) {\n      case 'JWT_ACCESS_TOKEN_EXPIRATION_TIME':\n        return '3600';\n    }\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/jwt.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedJwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  sign: () => '',\n}\n                    \n                \n\n\n        \n    \n\n    src/api/auth/guards/role.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (roles: UserRoleEnum[]): Type => {\n  @Injectable()\n  class RoleGuardMixin extends JwtRefreshGuard {\n    constructor(private readonly userService: UserService) {\n      super();\n    }\n    async canActivate(context: ExecutionContext): Promise {\n      await super.canActivate(context);\n\n      const request = context.switchToHttp().getRequest();\n      const { user } = request;\n      const userFromDb = await this.userService.findOne(user.id);\n      return roles.some(role => userFromDb?.roles.includes(role));\n    }\n  }\n  return mixin(RoleGuardMixin);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
